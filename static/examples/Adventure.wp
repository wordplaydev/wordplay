Adventure
=== start/en
•State(action•"" description•"" options•[State] won•?)

stand: State('stand up' "You can't stand, you're tied down." [] ⊥)
cut: State('cut yourself free'  "You've cut yourself free." [] ⊤)
throw: State('throw' "You threw the knife" [stand] ⊥)
pickup: State('pickup' 'You have a knife.' [ cut throw ] ⊥)
roll: State('roll over' 'There is a knife next to you.' [ pickup stand ] ⊥)
start: State("start" "You awaken in a dark, cold room that smells of mold." [ roll stand ] ⊥)

key: Key()

¶start at the state state, and if the key changes, either go to start if there are no options, stay if the key isn't valid, or choose the option.¶ 
state•State: 
  start … ∆ key …
    state.won ? start
  		state.options.length() = 0 ? start 
  ~((key = '1') | (key = '2')) ? state 
state.options[key → #]

options: 
  state.won ? [ Phrase(`*You're free!*`) ] 
  (state.options.length() = 0) ? [ Phrase(`*start over*`) ] 
    state.options.translate(ƒ(option•State index•#) Phrase(`\index\. *\option.action\*` size: 2m name: option.action duration: 1s entering: Pose(opacity: 0%)))


Stage(
  [
		Group(
			Stack()
			[
        Phrase(state.description duration: 0.5s name: state.action entering: Pose(offset: Place(0m 2m)))
        :options
      ]
    )
  ] 
  background: Color(0 0 0°) 
  color: Color(100% 0 0°)
  face: "Permanent Marker"
)