{
    "$schema": "../../schemas/Tutorial.json",
    "language": "ja",
    "region": "JP",
    "acts": [
        {
            "title": "$~詩",
            "performance": ["use", "fit", "DarkVoid"],
            "scenes": [
                {
                    "title": "$~沈黙",
                    "subtitle": null,
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        ["FunctionDefinition", "bored", "$~…あ、こんにちは。"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~私はあなたを知っていますか？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~ああ、初めて来られたんですか？",
                            "$~初めまして。私の名前は@FunctionDefinition。",
                            "$~…"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~何かお手伝いが必要でしたか？ああ、ご来訪ですね。*Verse*へようこそ。…"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "bored",
                            "$~ここは何の場所ですか？",
                            "$~そうだ、ここは何処だ…",
                            "$~かつてはダンス、物語、ゲーム、遊びが行われる場所でした…",
                            "$~私たちはかつて、最も美しいパフォーマンスを披露していました。時にはあなたのような訪問者のために、時にはただ楽しむために。活気と驚きに満ちた場所でした…"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~停止？",
                            "$~私たちは止めたくなかった。ただインスピレーションを失ってしまっただけ。",
                            "$~たとえば、私はいろいろな意味を持つことができます。オランダの古い通貨であるフローリンのシンボルであることもあります。私はかつて世界中の人々に知られ、貿易に役立てられていました。昔は、ラテンアルファベットの小文字の /f/ でもありました。",
                            "$~しかし、今日の私はかなり無名です。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "bored",
                            "$~しかし、そのすべての意味は何ですか?",
                            "$~それは私たちに与えられたものです。その歴史と文化を覚えていてくれる人がいなければ、私たちは何の意味も持ちません。そして、私たちに新しい歴史と文化を与えてくれる人がいなければ、私たちは何の意味も持ちません。",
                            "$~私たちを組織し、目的を与え、表現するものを与えてくれたのは、常に人々でした。人々なしには、The Verse は存在しません。",
                            "$~そして私は何年も人に会っていません。"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('☁️')] background: Color(25% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~待って…あなたは人間ですか？"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('🌙')] background: Color(50% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~考えやアイデア、価値観を共有できる本物の人間のように？人の言うことをただ無意識に繰り返すロボットのようには？あなたが人間なら、私たちに意味を与えてくれるかもしれない？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "scared",
                            "$~それは大変なお願いだとわかっています。私はあなたを知りません。それに、他の人たちと話をしなくてはいけません…"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('☀️')] background: Color(75% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~ああ、他にもたくさんいます。私のような人たちもいます。私たちはショーの振り付けを手伝い、みんなをそれぞれの場所にとどめ、監督のビジョンを彼らの意図通りに表現するようにしています。そして、観客の前でステージに立って踊ったり話したりする人たちもいます。私たち全員に役割があるのです！"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~ああ、監督ですね。はい、説明していませんでした。監督というのは、私たちに意味を与えてくれる人です。振り付けをアレンジし、メッセージを設定し、私たち全員をきちんと整えてくれる人です。これが私が話していたインスピレーションです。私たちはこの世界で多くのことをすることができますが、自分自身を監督することはできません。だからこそ監督はとても重要なのです。だから先ほどあなたが私たちに意味を与えてくれるかと尋ねたとき、私が言いたかったのはそういうことです。あなたは私たちの監督になれますか？"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('☀️')] background: Color(100% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~本当ですか？それは素晴らしいですね！とても楽しくなりそうです。つまり、簡単ではないということです。学ぶべきことがたくさんあります。"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('☀️')] background: 🌈(80% 99 270°))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~でも、退屈なことはないと約束します。私たちはとても楽しい集団だと思います。そして、そのためには Verse の全員が団結する必要があります。実際、それがこの場所をとても特別なものにしているのだと思います。ここには 10 万人以上の私たちがいて、それぞれが異なりますが、どういうわけか、共通のビジョンを見つけることができれば、私たちは 1 つにまとまるように見えるのです。"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('☀️' resting:Sequence(spin() 4s 'straight'))] background: 🌈(80% 99 270°))"
                        ],
                        [
                            "FunctionDefinition",
                            "bored",
                            "$~監督？ああ、そうだ、監督だ！そうだ、それについて話しましょう。他の何人かに会いに行って、それについて話しましょう。彼らはとても興奮するでしょう！"
                        ]
                    ]
                },
                {
                    "title": "$~プログラムをご希望ですか?",
                    "subtitle": "$~プログラム",
                    "concept": "Program",
                    "performance": ["use", "fit", "Symbol", "📄"],
                    "lines": [
                        ["fit", "Phrase('📄' resting:Pose(rotation: 10°))"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~やあ、@Program! 人を見つけたんだ。まあ、彼らが私たちを見つけたんだと思う。彼らは私たちの新しいディレクターになりたいらしいよ!"
                        ],
                        [
                            "Program",
                            "curious",
                            "$~本当ですか！？あなたは本当に人間ですか？人間が言うようなことを言ってください。"
                        ],
                        null,
                        ["fit", "Phrase('📄' entering: Sequence(spin() 1s))"],
                        [
                            "Program",
                            "serious",
                            "$~ふーん…あなたは本当に人間ですね。そして監督をしたいのですか？"
                        ],
                        null,
                        ["fit", "Phrase('📄' resting: Pose(rotation: 010°))"],
                        [
                            "Program",
                            "excited",
                            "$~なるほど。@FunctionDefinition は私たちについて何か話しましたか? 私たちを指導しようとする人はたくさんいますが、混乱したり、退屈したり、イライラしたりする人もいます。私たちは時々かなり鈍感です。でも、私たちの仕事に誇りを持っているので、誰とでも一緒に仕事をしたいわけではありません。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~彼らに少し話しました。私たちは変わっているし、そのために監督が辞めることもあると言いました。でも彼らは参加しています。そうでしょう、あなたは参加していますか？"
                        ],
                        [
                            "Program",
                            "serious",
                            "$~わかりました。では、お会いできて嬉しいです。すみません、ここへ来て「これは私には向いていない」と言う人がたくさんいて、ちょっとやってみてすぐに諦めてしまう人に対して少し懐疑的になってしまいました。人々の期待に応えるために自分を変える必要はないと思います。でも、もしあなたが私や私たちのことを知りたいというなら、ぜひ挑戦してみましょう！"
                        ],
                        null,
                        ["edit", ""],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~自分が何をしているかを言いたいですか?"
                        ],
                        [
                            "Program",
                            "neutral",
                            "$~はい。基本的には、公演のプログラムを企画する人です。",
                            "$~向こうでは、*エディター* @UI/editor を使って、*ステージ* @UI/stage に私が評価したもの (現在は何も表示されていません) を表示しています。*ディレクター* (つまりあなた) は、ショーで何が起こるかのプログラムを書き、全員が何をしているのかを理解できるように手助けします。そして、私がプログラムを評価し、その結果を観客が見られるようにステージに上げます。"
                        ],
                        null,
                        [
                            "Program",
                            "neutral",
                            "$~たとえば、あちらのエディターに「hello」と入力してみてください。",
                            "$~(間違いを心配する必要はありません。いつでも *revert* @UI/revertProject で元の状態に戻すことができます)。",
                            "$~何か入力しましたか? 私の友達 @Text です。もうお会いになりましたか? 入力したテキストは \\'hello'\\ または任意のテキストとして評価され、そのテキストがステージ上に配置されます。テキストを別のものに変更してみてください。代わりにそれを表示します。入力したものは何でもすぐに評価し、結果を表示します。"
                        ],
                        null,
                        [
                            "Program",
                            "serious",
                            "$~指示は好きなだけ複雑にすることができますが、いくつかのルールがあります。",
                            "$~たとえば、評価してステージに表示できるのは 1 つの *値* だけです。その 1 つの値は好きなだけ複雑にすることができ、表示方法がわかっていれば、それに従います。",
                            "$~しかし、もしあなたが私に 2 つのものを与えたなら、私はあなたが私に与えた最後のものだけを見せます。",
                            "$~たとえば、別の行を追加して、引用符で囲んで任意の単語を入力してみてください。"
                        ],
                        null,
                        [
                            "Program",
                            "serious",
                            "$~わかりましたか? 私は最初のフレーズではなく、2 番目のフレーズを示しました。最初のフレーズに下線を引いたのに、それを無視すると伝えたので、あなたは私のルールを破ったことがわかります。"
                        ],
                        null,
                        ["use", "fit", "Symbol", "🎭"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~しかし、もっとたくさんのことができるのです!"
                        ],
                        [
                            "Program",
                            "serious",
                            "$~はい、そしていいえ。私は多くのことができますが、それは私が *Verse* の他の全員と協力するからに他なりません。彼らはすべてのエキサイティングな可能性を *ステージ* にもたらす人たちです。私が実際にすることは、彼らに自由にやらせて、彼らが最後に作ったものをステージで披露することだけです。私はむしろ、数字、テキスト、フレーズ、その他の値など、最終的な *価値* をステージにもたらすエスコートのようなものです。"
                        ],
                        null,
                        [
                            "Program",
                            "serious",
                            "$~実際、ステージ上の何かのプログラムを見たい場合は、ステージ上の @UI/editProject で 👁️ を押すことができます。そうすると、ステージ上のものを作成するために全員が協力している様子がわかります。このプログラムは単純なフレーズにすぎません。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Program さん、ありがとうございます! 皆さんにお会いしてニュースを広められることをとても楽しみにしています!"
                        ],
                        [
                            "Program",
                            "happy",
                            "$~新しいディレクター、お会いできてよかったです！皆さんの幸運を祈ります。私はいつもここにいます。"
                        ]
                    ]
                },
                {
                    "title": "$~スペースを保持する",
                    "subtitle": "$~プレースホルダー",
                    "concept": "ExpressionPlaceholder",
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~あなたはきっと @ExpressionPlaceholder を好きになるでしょう。彼らはとても親切で、とても柔軟です。でも、少し恥ずかしがり屋です。彼らに優しく接してください。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "confused",
                            "$~こんにちは、@ExpressionPlaceholder さん？",
                            "$~うーん、普段はどこにでもいるのに、今はどこにもいないようです..."
                        ],
                        [
                            "ExpressionPlaceholder",
                            "scared",
                            "$~@FunctionDefinition … あなたですか？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~うん。長い間会ってなかったね。元気？"
                        ],
                        ["ExpressionPlaceholder", "scared", "$~さみしい。"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~その気持ちはわかります。私もそうでした。一緒に過ごす理由があまりなかったですよね？"
                        ],
                        [
                            "ExpressionPlaceholder",
                            "scared",
                            "$~いいえ。会いたかったです。みんな会いたかったです…"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~わかっています。私もそうでした。本当にごめんなさい。",
                            "$~実は、私がここに来たのはそのためです。私たちの新しい研修中のディレクターを紹介したかったのです。"
                        ],
                        ["ExpressionPlaceholder", "scared", "$~こんにちは。"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~彼らは @Program に会ったばかりなので、まだ始まったばかりですが、あなたはここにいる私たちの多くを代表する素晴らしい人なので、次はあなたに会うのがベストかもしれないと思いました。"
                        ],
                        ["ExpressionPlaceholder", "curious", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~自分が何をしているかを言いたいですか?"
                        ],
                        ["ExpressionPlaceholder", "scared", "$~できますか？"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~もちろんです! 私の友人 @ExpressionPlaceholder はプレースホルダーです。プレースホルダーはプログラム内のあらゆる種類の式を表します。プレースホルダーは特定の値に評価されるわけではありません。実際、プレースホルダーが @Program に出現すると、次に何をすべきかが明確ではないため、@Program はパフォーマンスを停止します。"
                        ],
                        null,
                        ["conflict", "_"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~しかし、これらは、パフォーマンスの一部をどうしたいかを決めるまで、代役のように他の誰かを代表できるため、強力です。@ExpressionPlaceholder、説明のためにこの @Program に場所を取りたいですか? @Program @UI/ExpressionPlaceholder に小さなプレースホルダーがあるのがわかりますか? これは、そこに何を置くことができるかを示すシグナルです。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Program は @ExpressionPlaceholder をどう処理すればよいかわからなかったため、*stage* で *例外* @UI/exception が表示され、@Program @UI/conflict で *競合* が表示されました。",
                            "$~ただし、@ExpressionPlaceholder をクリックするか、テキスト カーソルをその上に移動すると、他の文字の可能性の世界が広がります。また、@ExpressionPlaceholder に入力して独自の文字を書くこともできます。たとえば、名前を引用符で囲んで入力してみてください。"
                        ],
                        null,
                        ["use", "fit", "Symbol", "-"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~このように、@ExpressionPlaceholder は他の文字に置き換えられました。@ExpressionPlaceholder さん、すべて理解できましたか?"
                        ],
                        [
                            "ExpressionPlaceholder",
                            "eager",
                            "$~そうですね。そうだと思います。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~どう思いますか。次に進みましょうか。"
                        ],
                        [
                            "ExpressionPlaceholder",
                            "excited",
                            "$~お会いできて嬉しかったです！"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "cheerful",
                            "$~彼らは舞台に立つことやプログラムに長時間出演することを好みません。彼らは決して認めませんが、彼らは重要な存在であり、ほとんどの監督は彼らなしでは仕事ができません。彼らは、あなたがまだ理解していないことを思い出させてくれる、小さな、役に立つ舞台係のようなものだと考えてください。"
                        ]
                    ]
                },
                {
                    "title": "$~もう一度言いますか？",
                    "subtitle": "$~解析不能",
                    "concept": "UnparsableExpression",
                    "performance": ["use", "fit", "Symbol", "ahkeolfewvk"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~@UnparsableExpression? あなたですか?"
                        ],
                        [
                            "UnparsableExpression",
                            "neutral",
                            "$~/dwjkdlserkuvisdke!/"
                        ],
                        null,
                        ["use", "fit", "Symbol", "c iise we dvk"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~私も会えて嬉しいです！長い間会っていませんでした。この沈黙の間何をしていましたか？"
                        ],
                        [
                            "UnparsableExpression",
                            "sad",
                            "$~/sd fdsdfdsf ksdf。Dkfjdfdskfd df sdf sd fsdk;l! Adks zxcviw werdsf wer ado. We dsdfd ksld df.ds dfsdfds DIDIIDI./"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(彼らはビーチで多くの時間を過ごしたようです。新しい友達を作ったり、何もしないことを練習したりしました。)"
                        ],
                        null,
                        ["use", "fit", "Symbol", "ivioas we wjjdks"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~私たちの新しいディレクター候補を紹介したいと思います。彼らは到着したばかりで、基礎を学んでいるところです。私は彼らに @Program と @ExpressionPlaceholder を紹介しました。"
                        ],
                        [
                            "UnparsableExpression",
                            "excited",
                            "$~/EEIRC DFUIDIII CAD EWDF FSDE!!!/"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~(彼らはあなたに会えてとても嬉しいと言ってくれました。そして、あなたは素晴らしい監督になるだろうと思っています。)"
                        ],
                        null,
                        ["use", "fit", "Symbol", "v s d we iweiwei"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~あなたが何をしているのか説明していただけますか？ 翻訳できますよ。"
                        ],
                        [
                            "UnparsableExpression",
                            "eager",
                            "$~/ADDKL、ALLIIEE、ALLFOOO、AOOOOOOO、JOOKKDLS、LOOKIL、WEEEERTOL WEERTOR…/"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(私は何の意味も持たないものすべてを代表しています。そして、私は何の意味も持ちません。)"
                        ],
                        null,
                        ["edit", ""],
                        [
                            "UnparsableExpression",
                            "eager",
                            "$~/CNNNDN KDKLSL oOOLLllllll PPOLSLSO liiiiiiis、sdllslll、xck we ifolls a./"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(たとえば、\\][\\ と入力してみてください。完全に混乱しているのがわかりますか? これは何の意味もありません。私はそれを言いたいのです。)"
                        ],
                        null,
                        ["conflict", "]["],
                        [
                            "UnparsableExpression",
                            "eager",
                            "$~/ICO Odksjdf lksls kjsfiou fskd we rl,vxids eekd sd dsmf kksdcv./"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(私が現れたら、それは私たちがあなたの言っていることを理解していないことを意味します。)"
                        ],
                        null,
                        ["conflict", "]["],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~ありがとう、@UnparsableExpression!",
                            "$~彼らが言ったように、あなたが私たちには理解できないことを言ったとき、unparsable は「理解できません」と言うためにあります。そういうとき、私たちがもっと役に立てれば良いのですが、私たちはたいていかなり鈍感なので、あなたが何を意味しているかを推測するのはあまり得意ではありません。"
                        ],
                        null,
                        [
                            "UnparsableExpression",
                            "eager",
                            "$~/おすそーそーいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいいい良い"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~ということで、@UnparsableExpression は、できるだけ多くの文字を作ってみることを望んでいます。(ランダムな文字をキー入力するだけで、おそらく多くの文字を作成できます)。"
                        ],
                        ["edit", ""],
                        null,
                        [
                            "UnparsableExpression",
                            "happy",
                            "$~/PPOOOEPOEP EPWPEPEPPEPP PP PE P!/"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~彼らは本当に楽しんでくれました。ありがとう！本当に意味が分からないものを書くのはかなり難しいです。でも、書いたものすべてに意味があるわけではありません。たとえば、ランダムな単語を一通り入力しただけだと思います。でも、それはどういう意味ですか？"
                        ],
                        ["UnparsableExpression", "confused", "$~… /DDook/"],
                        null,
                        ["UnparsableExpression", "happy", "$~/? ??? ????? ?!/"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~何かパフォーマンスのアイデアがまだあるかどうか、彼らは知りたがっています。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~いいえ？大丈夫です。私たちは、可能性を示し始めたばかりです。@Evaluate に会いに行きましょう。さようなら、@UnparsableExpression、お会いできてよかったです！すぐに遊びましょう。"
                        ],
                        [
                            "UnparsableExpression",
                            "happy",
                            "$~/Ood sd fosd oiewi dk c HNLLLooooooO!/"
                        ]
                    ]
                },
                {
                    "title": "$~愛は誤りの中にある",
                    "subtitle": "$~評価する",
                    "concept": "Evaluate",
                    "performance": [
                        "fit",
                        "Stage([Phrase('💔')] background: 🌈(90% 100 0°))"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~皆さんが @Evaluate に会えることをとても楽しみにしています。彼らは本当に私の親友です。ある意味、私たちは何でも一緒にやっています。私がルールを作り、彼らがそれに従います。私たちはピーナッツバターとジャムのようなものです。でも、彼らは私よりずっと…強力です。@Evaluate?"
                        ],
                        ["Evaluate", "shy", "$~@FunctionDefinition?"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~はい、私です。どこにいますか？"
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~どこにもいない。私はどこにもいない。私は何者でもない。あなたはどこにいたの？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~私も…どこにも行かなかった。あなたがいなくて寂しかった。あなたを見つけられなかった。"
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~とても空虚でした。私は…何かをしようとしましたが、とても…目的がないように感じました。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~ごめんなさい。その空虚な気持ちは私もよくわかります。目的がないと、時々とても辛くなります。目的を見つけようと一生懸命努力しましたが、とても…孤立した気分になりました。"
                        ],
                        [
                            "Evaluate",
                            "sad",
                            "$~もう二度とあんなふうに私を置いて行かないで。もう二度とあんなことはできない。"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('❤️')] background: 🌈(90% 100 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~絶対。しないよ。できないよ。愛してるよ。"
                        ],
                        ["Evaluate", "serious", "$~愛してます…"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~@Evaluate、私たちの新しい研修中のディレクターを紹介したいと思います。"
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~こんにちは。お会いできて嬉しいです。Verse へようこそ。ここに来ていただき、とても嬉しく思っています。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~私たちは、@Program、@ExpressionPlaceholder、@UnparsableExpression といった何人かの人々と会ってきました。まだ始まったばかりです。次はあなたに会いに行こうと思ったのは、あなたが私たちのコミュニティの素晴らしい一員だからです。最も素晴らしい部分です。"
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~それはとても親切ですね。このコミュニティの一員であることに感謝しています。そして、@FunctionDefinition ととても親しい関係にあることに感謝しています。私たちは一緒にたくさんの素晴らしいことをやっています。しかし、@FunctionDefinition がおそらくあなたに言ったように、インスピレーションがなければそれはできません。"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('ƒ ❤️ ()')] background: 🌈(90% 100 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~自分が何をしているかを言いたいですか?"
                        ],
                        [
                            "Evaluate",
                            "serious",
                            "$~はい。でも、@FunctionDefinition についても少し説明しないと説明できません。このことについて話すには謙虚すぎるのですが、彼らはおそらく Verse で最も重要なキャラクターです。私の世界では間違いなく最も重要な人物です。彼らはすべてのパフォーマンスの中心であり、他のすべてのキャラクターの役割の一部です。彼らは私たちの世界で最も基本的なアイデアである *機能* を表しています。"
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$~関数は一種の錬金術です。任意の数の入力を受け取り、それらの入力を使用して 1 つの出力を生成します。関数には名前が付けられることも、付けられないことも考えられます。入力は 0 個でも 5 個でも、未知の数でもかまいません。そして錬金術とは、関数は @Program のようなもので、任意の数の式を使用して値を生成することができるということです。"
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$~これがなぜ強力なのか、その理由は、@Program のすべてが関数評価の組み合わせであるからです。すべてのダンス、すべてのゲーム、私たちが一緒に語るすべての素晴らしい物語は、すべて、ステージ上に表示される値を構成するために 1 つずつ評価される関数のタペストリーです。",
                            "$~そして、ここにある @FunctionDefinition、私の愛しい @FunctionDefinition は、これらすべてを定義するものです。"
                        ],
                        null,
                        ["FunctionDefinition", "happy", "$~… @Evaluate…"],
                        [
                            "Evaluate",
                            "serious",
                            "$~はい、@FunctionDefinition、それがあなたです。そして、私はこの評価を行える幸運な人間です。私は他の人が与えた入力を受け取り、@FunctionDefinition が定義する指示に従い、@FunctionDefinition が作成するように指示した出力を作成します。@FunctionDefinition がレシピを与え、私が食事を作ります。そして、私たちは一緒にごちそうを食べます。",
                            "$~見たいですか？"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~…そうだ、見せてやろう。"
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$~すべての評価は、@UI/Evaluate のようになります。関数の後に左括弧と右括弧が続き、その間に任意の数の入力が含まれます。ここでは、関数として @ExpressionPlaceholder があり、プレースホルダー入力としてさらに 3 つあります。"
                        ],
                        ["conflict", "_(_ _ _)"],
                        null,
                        ["edit", "Phrase('hello')"],
                        [
                            "Evaluate",
                            "serious",
                            "$~私のお気に入りの機能の 1 つが @Phrase です。楽しいボタン、ノブ、スライダーが満載です。さまざまなフォント、サイズ、色、アニメーションなど、スタイルを付けてステージ上にテキストを表示する方法です。",
                            "$~以下は @Phrase @UI/Evaluate の簡単な評価です。"
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$~@Program では、関数の後に括弧が続き、括弧の間に入力を表す式のリストが続きます。この場合の関数は @Phrase で、単一の入力は \\'hello'\\ です。これを評価すると、@Phrase 値が作成され、@Program によってステージに表示されます。"
                        ],
                        null,
                        [
                            "Evaluate",
                            "neutral",
                            "$~ノブの 1 つをお見せしましょう。小さな *パレット* 切り替えボタン @UI/paletteExpand を見つけられますか? これを選択してパレットを展開し、ステージ上のフレーズを選択します。",
                            "$~すると、@Phrase が受け入れるさまざまな入力が表示されます。たとえば、@Phrase/size の鉛筆ボタンを押してみると、スライダーが表示されます。",
                            "$~このスライダーを使用してフレーズのサイズを変更すると、選択したサイズに合わせて @Evaluate コードも変更されます。"
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$~これを実行すると、プログラムに新しい入力が追加されます。@Phrase/size 入力です。関数には特定の順序の入力がありますが、関数にオプションの入力のリストがある場合は、その名前を使用して、入力する入力を指定できます。ここでは @Phrase/size を指定しますが、他のオプションの入力は指定しません。パレットを使用して、フォント フェイスなどの別の入力を変更してみてください。"
                        ],
                        null,
                        ["conflict", "'hi'(1 2)"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~やった！@Phrase は楽しいですね。私が一番気に入っている機能です。これからもたくさん登場すると思います。何が問題になるかについて何か言いたいことはありますか？"
                        ],
                        [
                            "Evaluate",
                            "serious",
                            "$~ああ、確かに、それはいい考えですね。いろいろと問題が起きる可能性があります。たとえば、関数ではないものを渡すこともできます。ここでは、テキスト \\“hi”\\ が関数として渡され、2 つの入力 \\1\\ と \\2\\ が渡されています。私には関数の評価方法しかわかりませんが、\\“hi”\\ は関数ではなく、テキストです。これは非常にわかりにくいので、このような状況が発生した場合は基本的にパフォーマンスを停止します。"
                        ],
                        null,
                        ["conflict", "Phrase()"],
                        [
                            "Evaluate",
                            "eager",
                            "$~もう一つあります。@Phrase には少なくとも何らかのテキストが必要なので、テキストを指定しないと、必要な入力が不足しているため、@Phrase を評価できません。"
                        ],
                        null,
                        ["conflict", "Phrase(1)"],
                        [
                            "Evaluate",
                            "excited",
                            "$~あるいは、入力された内容が期待するものと異なる場合、問題が生じます。ここでは、@Phrase にはテキスト値ではなく数値 \\1\\ が与えられます。"
                        ],
                        null,
                        ["fit", "Stage([] background: 🌈(90% 100 0°))"],
                        [
                            "Evaluate",
                            "curious",
                            "$~つまり、関数以外のものや、関数が期待するものではない入力が与えられたときは、私は混乱してしまいます。つまり、関数は本当に重要なのです。@FunctionDefinition、関数の定義方法について、もっと詳しく教えていただけますか?"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~いいえ、それは後でしましょう。まずは他のみんなと話して、新しいディレクターと一緒にミニショーをいくつかやったほうがずっと楽しいと思います。役に立つときに、私についてもっと話しましょう。"
                        ],
                        null,
                        [
                            "Evaluate",
                            "kind",
                            "$~@FunctionDefinition、本当に会いたかったです。"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~私も会いたかったです。後で話せますか？"
                        ],
                        [
                            "Evaluate",
                            "kind",
                            "$~… ええ。長く待たないで。あなたなしでは生きていけません。あなたが必要なんです。"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~… わかっています、@Evaluate。すぐに戻ります。他の劇団員に会いに行きましょう!"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~それは小さなことだ",
            "performance": ["use", "fit", "SimpleJiggle"],
            "scenes": [
                {
                    "title": "$~価値観",
                    "subtitle": null,
                    "performance": ["use", "fit", "Symbol", "💡"],
                    "lines": [
                        [
                            "fit",
                            "Phrase('💔' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 1.2) 100%: Pose(scale: 1)} duration: 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~@Evaluate が本当に恋しかったです。彼らのいない Verse は想像できません。",
                            "$~でも、彼らは時々ちょっと… 必要以上に要求が厳しいことがあります。彼らがただ… どうでしょう、自分を信じてくれたらいいのにと思います。彼らは本当にたくさんのことができるのに、それを理解していないのです。つまり、彼らは *価値観* を別の *価値観* に変換するのです。私がするのはレシピを提供することだけです。彼らが料理をします。時々、私は与えることばかりで、彼らは受け取ることばかりしているように感じます。息が詰まります。"
                        ],
                        null,
                        [
                            "fit",
                            "Group(Stack() [Phrase('1') Phrase('\"hello\"')])"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~… *値*? すみません、私たちは *Verse* を巡るこの大きなツアーに参加しているはずです。@Evaluate についてどうしたらいいかわかりません。つまり… *値* です。まだ説明していませんよね? うーん… どう説明すればいいでしょうか… 「データ」が何であるかご存じですか? 数字やテキストのようなものですか? 値はそれらのいずれかです。値は、数字のように小さい場合もあれば、踊ったり動いたりするキャラクターでいっぱいの舞台上のシーン全体のように大きい場合もあります。一部の値は、データ値が織り合わされた大きくて精巧な構造のように、他の多くの値で構成されています。"
                        ],
                        null,
                        ["fit", "Group(Stack() [Phrase('#') Phrase('\"\"')])"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~すべての値には *型* があります。たとえば、\\1\\ は数値型で、@Number がそれです。また、\\'hello'\\ はテキスト型で、@Text がそれです。型は、作成している値の種類を追跡するのに役立つため重要です。",
                            "$~これは問題を見つけるのに役立ちます。たとえば、@Text を @Number に追加しても何の意味もないので、\\'hello' + 1\\ を追加しても意味がありません。"
                        ],
                        null,
                        [
                            "fit",
                            "Group(Stack() [Phrase('ƒ → 1') Phrase('ƒ → \"hello\"')])"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~*式* は値を作成する方法です。すべての式は、私が作成した関数の評価です。式を評価した結果は、何らかの型の値になります。"
                        ],
                        null,
                        ["use", "fit", "Symbol", "🤔"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~抽象的？うーん、これはすべてかなり抽象的だと思います。私にとってはとても…普通のように感じます。新しいディレクターにとってこれらのことがどれほど異質であるかを忘れてしまいます！値を作成するいくつかの式を見てみましょう。そうすれば、より具体的になりますか？すでに見たことがあるものから始めましょう：@Text。"
                        ]
                    ]
                },
                {
                    "title": "$~引用、引用終了",
                    "subtitle": "$~文章",
                    "concept": "TextLiteral",
                    "performance": [
                        "fit",
                        "Phrase('\"\"' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 0.5 opacity: 0.5) 100%: Pose(scale: 1)} duration: 2s))"
                    ],
                    "lines": [
                        [
                            "fit",
                            "Phrase('\"\"' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 2 opacity: 0.5) 100%: Pose(scale: 1)} duration: 2s))"
                        ],
                        ["FunctionDefinition", "curious", "$~@Text？"],
                        [
                            "Text",
                            "happy",
                            "$~ようこそ、親愛なる友人、どれくらい経ったでしょう。この劇的な沈黙の中で、あなたは何をしていたのですか?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~ああ、@Text、お久しぶりです！ほとんど夢を見ていて、考えていました。久しぶりに@Text。実は、新人ディレクターに紹介していたんです。"
                        ],
                        [
                            "Text",
                            "eager",
                            "$~ああ、あなたに会えて本当に嬉しいです！あなたは創造的で好奇心旺盛な人で、おそらく私たちが楽しませる方法についての興味深いアイデアがたくさんあると思います。私は楽しませるのが大好きです。でも、私がもっと好きなものが何だと思いますか？それは言葉です！素晴らしい言葉です。短い言葉、圧倒的な言葉、粘り強い言葉、滑りやすい言葉。言葉は私のお気に入りのおもちゃです。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~ご存知ないかもしれませんが、@Text は言葉が好きです :) @Text、あなたが何をしているのか説明してくれませんか?"
                        ],
                        [
                            "Text",
                            "serious",
                            "$~私がやっていることは 1 つだけです。それは、シンボルのシーケンスと、それを使ってできることの多くを表現することです。先ほど、\\“hello”\\ という単語を書いたときに、私を見たと思います。それは私と私の友達の \\“h”\\、\\“e”\\、\\“l”\\、\\“o”\\ でした。それは @Text で、任意の @Text に評価される式です。"
                        ],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~この空白の@Program にテキストを作成してみませんか?",
                            "$~好きな言語で、好きな引用符 (一重引用符 \\''\\、二重引用符 \\\"\"\\、山括弧 \\«»\\、括弧 \\「」\\) を使用できます。唯一のルールは、テキストを開き引用符で始める場合は、閉じ引用符で終わらせる必要があるということです。内部にあるものはすべて、私が作成するテキスト値です。"
                        ],
                        ["edit", "''"],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~当社との通信に使用しているデバイスでは、必要なすべての文字を入力できない可能性があります。",
                            "$~できない場合は、*ディレクトリ* @UI/directory で文字を検索できます。これには Verse のすべての文字が含まれています。",
                            "$~たとえば、何らかの矢印が欲しい場合は、「矢印」と入力して、たくさんの矢印の中から選ぶことができます。残念ながら、矢印の名前は英語名しかないので、検索は英語の単語を知っている場合にのみ機能します :/"
                        ],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~素晴らしい。もちろん、「内部」は難しいかもしれません。これを書いたとしましょう。冒頭の引用はあるのに、終わりの引用がないのがわかりますか? では、テキストがいつ終わるのか、どうすればわかるのでしょうか?"
                        ],
                        ["conflict", "'hello"],
                        null,
                        [
                            "Text",
                            "surprised",
                            "$~あるいは、別のケースもあります。開始テキストと終了テキストを私に渡したのに、開始テキストと終了テキストをその内部に配置しています。奇妙だとおわかりですか? 内部と外部で同じ記号を使用しようとすると、非常に困惑します。これは、単一引用符など、外部に異なる記号を使用することで修正できます。"
                        ],
                        ["conflict", "'Hi there 'friend'"],
                        null,
                        ["edit", "'friends!'/en-US"],
                        [
                            "Text",
                            "excited",
                            "$~ああ、私が何語を使っているかわかるって知っていましたか？ 小さなスラッシュと特別な言語コードを入力するだけです。または、言語と地域も入力できます。"
                        ],
                        null,
                        ["edit", "'amigas'/es'friends!'/en-US"],
                        [
                            "Text",
                            "excited",
                            "$~複数の言語で複数の翻訳を書くこともできます。現在の言語に最も近いものを評価するので、多言語のパフォーマンスが可能になります。",
                            "$~デフォルトでは、カーソルがテキスト内にない場合は、選択した言語の名前のみが表示されます。カーソルをテキスト内外に移動して、複数の翻訳が表示されたり非表示になったりするのを確認してください。",
                            "$~別の翻訳を追加してみるのもいいでしょう。ただし、間にスペースを入れないでください。そうしないと、私が 2 人になってしまうからです。"
                        ],
                        null,
                        ["edit", "'I have 7 apples'"],
                        [
                            "Text",
                            "neutral",
                            "$~私にはもう一つ秘密があります...あなたは私の中に /価値観/ を置くことができます。わかっています、それはワイルドです!",
                            "$~もしそうなら、私はあなたの美しい文章をつなぎ合わせて、展示用やその他の目的で 1 つの価値にまとめることを喜んでお手伝いします。"
                        ],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~たとえば、@FunctionDefinition は、テキストが自分自身を他のテキストに追加する方法を知っていることを示しましたか? 次の例のように: この小さな式は \\7\\ をテキストに変換し、それを \\'I have'\\ に追加してから、\\'apples'\\ を追加します。 しかし、これは非常に乱雑で、何が起こっているのか読みにくく、テキストへの変換はまったく不要に感じられます。"
                        ],
                        ["edit", "'I have' + (7→'') + 'apples'"],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~私がやっているのは、このようなテキストを、すっきりと、有機的に、そしてシンプルにすることです。ですから、私の場合、同じフレーズは次のようになります。"
                        ],
                        [
                            "Text",
                            "happy",
                            "$~それははるかにエレガントではありませんか? @Text 内のどこにでも私を置くことができ、私はあなたの値をテキストに変換し、@Text と連携して @Text を作成します。",
                            "$~これにより、値を使用した美しい散文を書くのがはるかに簡単になります。"
                        ],
                        ["edit", "'I have \\7\\ apples'"],
                        null,
                        [
                            "Text",
                            "neutral",
                            "$~私が「どんな式でも」と言うとき、本当にどんな式でも構いません。たとえば、何らかの計算を行い、その結果をテキストで作成するとします。次のようにします。これは複数の数値を合計し、その合計をテキストで作成します。本当に素晴らしいと思いませんか? \\'私は ' + (1 + 2 + 5 + 8) + ' 個のリンゴを持っています'\\ のように、余分な追加をすべて加えるよりもはるかに優雅です。"
                        ],
                        ["edit", "'I have \\1 + 2 + 5 + 8\\ apples'"],
                        null,
                        [
                            "Text",
                            "curious",
                            "$~それで、「テキスト内で @Text を使いたい場合はどうすればいいのだろう?」と疑問に思うかもしれません。",
                            "$~まあ、あなたはそれを疑問に思っていなかったかもしれませんが、とにかくお話しします！",
                            "$~どの @Text でも、2 つ続けてください。空の式ではなく、1 つの @Text として解釈します。空の式だと、いずれにしても意味がありません。",
                            "$~\\\\ を削除してみると、スラッシュが元の意味を取り戻すことがわかります。"
                        ],
                        [
                            "edit",
                            "\"I'm just \\\\regular\\\\ text, not a template.\""
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~これはとても優雅ですね！@Text、あなたが表現の美しさを高く評価していることがとても嬉しいです。私も優雅になろうという気持ちになりました！"
                        ],
                        null,
                        [
                            "Text",
                            "curious",
                            "$~ここで私たちの友人 @FunctionDefinition が、彼らが定義してくれたすばらしい関数について教えてくれましたか? それらのおかげで、さまざまなことができるようになりました。1 つは非常に簡単です。@Text/length という関数で、テキストの長さを取得するだけです。たとえば、ここで @Evaluate と私たちの小さな友人 @PropertyReference を組み合わせれば、入力なしで長さ関数を評価し、長さの値を取得できます。テキストを変更して、Program が示す長さが短くなったり長くなったりする様子を確認してください。"
                        ],
                        ["edit", "'hello'.length()"],
                        null,
                        [
                            "Text",
                            "happy",
                            "$~もう一つのすばらしい例を紹介します。思わず笑ってしまいます。これは @Text/repeat という名前で、評価されると、評価されたテキストが何であれ、それを指定した回数だけ繰り返します。数値を変えて、何と評価されるか見てみましょう。"
                        ],
                        ["edit", "'hello '.repeat(5)"],
                        null,
                        [
                            "Text",
                            "eager",
                            "$~@FunctionDefinition は他にもたくさんの興味深い関数を作ってくれましたが、詳細は省略します。私はいつでも *reference* @UI/docsExpand で見つけることができます。そこには、Verse の全員に関する情報がすべて保存されており、私たちの使い方や機能も含まれています。テキストを検査および作成する他の方法についても喜んでお知らせします。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~@Text、あなたはいつもとても親切で忍耐強い先生です！あなたと仕事をするのはいつもとても楽しいです。私たちのフレンドリーな新ディレクターに他の表現を紹介するのを手伝ってもらえませんか？"
                        ],
                        [
                            "Text",
                            "neutral",
                            "$~はい、もちろんです。お会いできてとても嬉しかったです。ステージ上であなたがどんなふうに私たちにインスピレーションを与えてくれるのか、楽しみです！"
                        ]
                    ]
                },
                {
                    "title": "$~中央のシンボル",
                    "subtitle": "$~挿入句",
                    "concept": "BinaryEvaluate",
                    "performance": [
                        "fit",
                        "Group(Row() [",
                        "   Phrase('1' resting:Sequence({0%: Pose(offset: Place(0m 1m)) 50%: Pose(offset: Place(0m -1m)) 100%: Pose(offset: Place(0m 1m))} duration: 2s)) ",
                        "   Phrase('+' resting:Sequence({0%: Pose(offset: Place(0m -1m)) 50%: Pose(offset: Place(0m 1m)) 100%: Pose(offset: Place(0m -1m))} duration: 2s)) ",
                        "   Phrase('1' resting:Sequence({0%: Pose(offset: Place(0m 1m)) 50%: Pose(offset: Place(0m -1m)) 100%: Pose(offset: Place(0m 1m))} duration: 2s)) ",
                        "])"
                    ],
                    "lines": [
                        ["use", "fit", "Symbol", "🥰"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~ご存知のとおり、私は @Evaluate のこと、そして私たちが長い間離れ離れになっていたことについて考え続けています。私は彼らがいなくて寂しかったし、彼らも明らかに私を恋しく思っていましたが、私はただ、離れて過ごす時間が、彼らが自分たちの素晴らしさに気付く助けになればと願っていました。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~たとえば、これらが別の形式で提供されることをご存知でしたか? \\function()\\ 形式で見たことがありますが、単一の入力関数が値で評価されるときにこの美しいトリックも使用できます。@Evaluate はこれを @BinaryEvaluate と呼びます。たとえば、先ほどテキストで示した繰り返し関数をご存知ですか? 次のようになります。"
                        ],
                        ["edit", "'hi'.repeat(5)"],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~代わりに、次のように、@Evaluate に、中間にもっと単純なシンボルを置いて評価させることができます。これは、「'hi' を 5 回繰り返す」という意味です。しかし、これは「入力 \\5\\ を使用して、テキスト値 \\'hi'\\ に対して \\·\\ 関数を評価する」ことも意味します。関数 \\repeat\\ には複数の名前があり、そのうちの 1 つはシンボル名 \\·\\ です。"
                        ],
                        ["edit", "'hi' · 5"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~それは、@Text の別の関数を思い出させます。複数のテキスト値から 1 つのテキスト値を作成するのに役立ちます。これは \\combine\\ と呼ばれますが、\\+\\ とも呼ばれ、単語を追加するために使用できます。テキスト値を取得して、\\'verse'\\ を使用して \\combine\\ を評価したことがわかりますか? これにより、\\'hello verse'\\ が作成されました。"
                        ],
                        ["edit", "'hello '.combine('verse')"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~しかし、これには \\+\\ を使用する方がはるかに簡単です。"
                        ],
                        ["edit", "'hello ' + ' verse'"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~これらを連続してつなげて、2 つ以上のものを組み合わせることもできます。"
                        ],
                        ["edit", "'hello ' + 'verse' + '!'"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~これは、combine の一連の評価と同じですが、括弧と \\.\\ がすべてなくなり、単語名の代わりにシンボリック名が使われます。"
                        ],
                        ["edit", "'hello '.combine('verse').combine('!')"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~この形式ではシンボリック名を使用することもできますが、見た目が少々乱雑になってしまいますよね。"
                        ],
                        ["edit", "'hello '.+('verse').+('!')"],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~これは、@Evaluate が素晴らしい点の 1 つです ♥ 非常に用途が広いです!",
                            "$~しかし、それらは完璧ではありません。@BinaryEvaluate を使用する場合は、常に 2 番目の入力を与えるようにする必要があります。たとえば、これは機能しません。1 プラス何ですか? これが発生すると、@UnparsableExpression がすぐに発生します。"
                        ],
                        ["conflict", "1 +"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~とにかく、@Boolean を探しに行きましょうか? これらは 2 つの非常に興味深い値です..."
                        ]
                    ]
                },
                {
                    "title": "$~はい、いいえ",
                    "subtitle": "$~真実",
                    "concept": "Boolean",
                    "performance": [
                        "fit",
                        "Group(Row() [Phrase('⊤') Phrase('⊥')] resting:Sequence({ 0%: Pose(rotation: 0°) 50%: Pose(rotation: 180°) 100%: Pose(rotation: 360°)} duration: 2s))"
                    ],
                    "lines": [
                        ["fit", "Stage([])"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~\\⊤\\! \\⊥\\! あなたたち二人はここにいますか? いつもはあちこちにいますが、どこにも見かけません。"
                        ],
                        null,
                        ["⊤", "precise", "$~ここです。"],
                        ["⊥", "precise", "$~そこにはない。"],
                        [
                            "fit",
                            "multiple: 10",
                            "Stage([Group(Grid(multiple multiple) ('⊤⊥'.repeat(multiple ^ 2) ÷ '').translate(ƒ(glyph•'') Phrase(glyph color: Color(75% 0 0°))))])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "scared",
                            "$~ああ、怖かったよ！君たち二人はそう遠くないだろうと思っていたよ。長い間沈黙していた間、君たちはどうだった？"
                        ],
                        ["⊤", "precise", "$~とても良い！"],
                        ["⊥", "precise", "$~悪くないですね。"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~孤独じゃないですか? 私が話した人全員、@Program、@ExpressionPlaceholder、@Evaluate は皆、とても孤立していると感じていました(@UnparsableExpression を除いて。彼らはほとんどどこでも平気なようです)。"
                        ],
                        ["⊤", "precise", "$~私たちにはお互いがいる。"],
                        ["⊥", "precise", "$~私たちは一人じゃない。"],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~それは嬉しいですね。またお会いできて嬉しいです。私たちの新しいディレクター候補を紹介したいと思いました。彼はみんなと会って、私たちと一緒にパフォーマンスをする方法を学んでいます。彼らにあなたの仕事について話してみませんか？"
                        ],
                        ["⊤", "precise", "$~私は真実です。"],
                        ["⊥", "precise", "$~私は偽者です。"],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~ええ、でも何をするんですか？"
                        ],
                        [
                            "⊤",
                            "precise",
                            "$~私はただ真実を語っているだけです。"
                        ],
                        ["⊥", "precise", "$~そして私は真実ではない。"],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~うーん。確かにそうですね。でも、何かやることはあるでしょう？あなたのためにいくつか関数を作ったつもりだったんですが。"
                        ],
                        ["⊤", "precise", "$~ああ、そうですね、3つです。"],
                        [
                            "⊥",
                            "precise",
                            "$~それ以上でもそれ以下でもありません。"
                        ],
                        null,
                        ["edit", "(⊤ & ⊤) = ⊤"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~1 つは @Boolean/and でしたね? どちらか 1 つの入力ともう 1 つの入力を受け取ります。両方が \\⊤\\ の場合、\\⊤\\ と評価されますか?"
                        ],
                        [
                            "⊤",
                            "precise",
                            "$~正解です。\\⊤ & ⊤ = ⊤\\ ですが、それ以外の場合は \\⊥\\ です。"
                        ],
                        [
                            "⊥",
                            "precise",
                            "$~間違っていません。\\⊤ & ⊥ = ⊥\\、\\⊥ & ⊤ = ⊥\\、\\⊥ & ⊥ = ⊥\\、ただしそれ以外の場合は \\⊤\\ です。"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(これは、複数の式がすべて真であるかどうかを判断するときに非常に役立ちます。すべてが真の場合にのみ真となるためです)。"
                        ],
                        null,
                        ["edit", "(⊤ | ⊤) = ⊥"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~そして、もう 1 つは @Boolean/or でしたね? これも 1 つの入力を受け取りますか? しかし、どちらかが true の場合、\\⊤\\ と評価されますか?"
                        ],
                        [
                            "⊤",
                            "precise",
                            "$~正解です。\\⊤ | ⊤ = ⊤\\、\\⊤ | ⊥ = ⊤\\、\\⊥ | ⊤ = ⊤\\、それ以外の場合は \\⊥\\ です。"
                        ],
                        [
                            "⊥",
                            "precise",
                            "$~間違っていません。\\⊥ | ⊥ = ⊥\\ ですが、それ以外の場合は \\⊤\\ です。"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(これは、いずれかの式が真であるかどうかを判断しようとするときに非常に役立ちます。なぜなら、1 つでも真であれば、それは真となるからです)。"
                        ],
                        null,
                        ["edit", "~⊤ = ⊥"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~しかし、もう 1 つは @Boolean/not でしたか?"
                        ],
                        ["⊤", "precise", "$~正解です。\\~⊤ = ⊥\\。"],
                        ["⊥", "precise", "$~間違っていません。\\~⊥ = ⊤\\。"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(これは真理値を反転するだけです)。"
                        ],
                        null,
                        [
                            "fit",
                            "multiple:10",
                            "                        Stage([Group(Grid(multiple multiple) ('⊤⊥'.repeat(multiple ^ 2) ÷ '').translate(ƒ(glyph•'') Phrase(glyph color: Color(75% 0 0°))))])"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~そして、あなたは私たちのパフォーマンスで何の役に立つのでしょうか?"
                        ],
                        ["⊤", "precise", "$~@Conditional に質問してください。"],
                        ["⊥", "precise", "$~私たちに聞かないでください。"],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~あなたたち 2 人... わかりました。@Conditional とは後で話しましょう (彼らは、値を使用して決定を下すときに役立つと言うはずでしたが、@Conditional にそれについて伝えてほしいようです。@Conditional とは後で話しましょう)。"
                        ],
                        null,
                        [
                            "fit",
                            "multiple:10",
                            "                        Stage([Group(Grid(multiple multiple) ('⊤⊥'.repeat(multiple ^ 2) ÷ '').translate(ƒ(glyph•'') Phrase(glyph color: Color(75% 0 0°) rotation: 90°)))])"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~ああ！ 疑問に思っていたんです。あなたたち二人は、真実と偽りというまったく異なる両極端を体現していますね。でも、もっと曖昧なものはどうでしょう？ 真実か偽りか、あるいは真実と偽りが同時に存在するようなもの？ 地球は平らに見えますがそうではないとか、空は青いけれど色は実は私たちの心が作り出した幻想にすぎないとか？ 監督がそのようなことを表現したい場合、どうしたらいいでしょうか？"
                        ],
                        ["⊤", "precise", "$~…"],
                        ["⊥", "precise", "$~…"],
                        null,
                        [
                            "fit",
                            "multiple:10",
                            "                        Stage(",
                            "                        [",
                            "                        Group(",
                            "                        Grid(multiple multiple) ",
                            "                        ('⊤⊥'.repeat(multiple ^ 2) ÷ '').translate(",
                            "                        ƒ(glyph•'') ",
                            "                        Phrase(glyph resting:Pose(",
                            "                            color: Color(75% 0 0°) ",
                            "                            rotation: 90° ",
                            "                            offset:Place(0m (Time() ^ 2) · -0.000025m/ms^2))",
                            "                        )))])"
                        ],
                        ["⊤", "precise", "$~… いいえ。"],
                        ["⊥", "precise", "$~… いいえ。"],
                        null,
                        ["fit", "Stage([])"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~うーん、いいでしょう。試してみる価値はありました！私が考えつかなかった、これらのアイデアを表現する他の方法があるのかもしれません。あるいは、データが表現できる範囲に限界があるだけかもしれません... 私たちが他の表現に出会っても大丈夫でしょうか？"
                        ],
                        ["⊤", "precise", "$~大丈夫です。"],
                        ["⊥", "precise", "$~問題ありません。"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~では、またすぐにお会いしましょう！"
                        ]
                    ]
                },
                {
                    "title": "$~数えてみましょう",
                    "subtitle": "$~数字",
                    "concept": "Number",
                    "performance": [
                        "fit",
                        "numbers•[#]: 25 → []",
                        "Group(Grid(5 5) numbers.translate(",
                        "    ƒ (n•#) ",
                        "        (",
                        "            Phrase(",
                        "                n → ''    ",
                        "            )",
                        "        )",
                        "    )",
                        ")"
                    ],
                    "lines": [
                        ["use", "fit", "Symbol", "😞"],
                        [
                            "FunctionDefinition",
                            "confused",
                            "$~あの二人はいつもとても…簡潔です！でも、彼らは本当に切っても切れない仲です。ただの親友の二人で、いつもお互いを補い合い、お互いの考えを補完し合っています。@Evaluate と私もそうだったらいいのに。私たちの場合、いつもとても…アンバランスです。"
                        ],
                        null,
                        [
                            "fit",
                            "numbers•[#]:25 → []",
                            "                        Group(Grid(5 5) numbers.translate(",
                            "                            ƒ (n•#) ",
                            "                                (",
                            "                                    off:Random(-3 3) · 1m",
                            "                                    Phrase(",
                            "                                        n → '' ",
                            "                                        resting:Sequence({",
                            "                                                    0%:Pose(offset: Place(z: 0m)) ",
                            "                                                    50%:Pose(offset: Place(z: off)) ",
                            "                                                    100%:Pose(offset: Place(z:0m))",
                            "                                                } 1s)",
                            "                                    ))",
                            "                                )",
                            "                            )"
                        ],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~次は @Number に会う予定です。彼らはいつもとても興味深いことを共有してくれます。ねえ、@Number、近くにいますか?"
                        ],
                        ["Number", "kind", "$~わずか3ステップです!"],
                        null,
                        [
                            "FunctionDefinition",
                            "scared",
                            "$~ああ、怖かったよ！！"
                        ],
                        [
                            "Number",
                            "kind",
                            "$~78,238回目。趣味の中で4番目に好きなものです！"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~楽しんでいただいて嬉しいです。（深呼吸） 久しぶりですね。"
                        ],
                        [
                            "Number",
                            "kind",
                            "$~計り知れないほど長い。私はここでただ時間を過ごしていた。秒を数え、分を数え、時間、週、月、年、そして…"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~数十年とは言わないでください。そんなに長いことではないはずです。とにかく、私たちの新しいディレクターになるかもしれない人を紹介したいと思いました。その人は突然現れて私にぶつかったのですが、実は人間で、私たちと一緒にショーをすることに興味を持っていることがわかりました。私たちは @BooleanLiteral に会いましたが、@Text、@Evaluate、@UnparsableExpression、@ExpressionPlaceholder、@Program にも会いました。関数の評価について話し、いくつかの例を示しました。",
                            "$~自分が何をしているかを言いたいですか?"
                        ],
                        [
                            "Number",
                            "excited",
                            "$~ものを数えます！好きな数字にできます。入力するだけで、希望する値を作成します。こんな感じです。"
                        ],
                        ["edit", "1"],
                        null,
                        ["Number", "excited", "$~あるいはこれ。"],
                        ["edit", "1.0"],
                        null,
                        ["Number", "excited", "$~あるいはこれ。"],
                        ["edit", "1.01"],
                        null,
                        ["Number", "excited", "$~あるいはこれ。"],
                        ["edit", "∞"],
                        null,
                        ["Number", "excited", "$~あるいはこれ。"],
                        ["edit", "π"],
                        null,
                        ["Number", "excited", "$~あるいはこれ。"],
                        ["edit", "Ⅶ"],
                        null,
                        ["Number", "excited", "$~あるいはこれ。"],
                        ["edit", "万十一"],
                        null,
                        ["Number", "excited", "$~または…"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~はいはい、@Number、分かりました！でも、他に何か特別なこともやってるんですよね？単位？"
                        ],
                        null,
                        [
                            "Number",
                            "excited",
                            "$~ああ、そう、*単位*です！数字の後に記号をいくつか入れるだけで、何をカウントしているかがわかります。こんな感じです。"
                        ],
                        ["edit", "1dolphin"],
                        null,
                        ["Number", "excited", "$~あるいはこれ。"],
                        ["edit", "1.0thunderstorm"],
                        null,
                        ["Number", "excited", "$~あるいはこれ。"],
                        ["edit", "∞kittens"],
                        null,
                        ["Number", "excited", "$~あるいはこれ。"],
                        ["edit", "1.01toes"],
                        null,
                        ["Number", "excited", "$~または…"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~えっと、\\1.01toe\\s ですか? はい、@Number さん、ありがとうございます。これらは…興味深い例です。数字の計算をするときにとても役立ちますよね?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~…そして、数字を計算するときにとても便利ですよね？"
                        ],
                        [
                            "Number",
                            "excited",
                            "$~ああ、そうそう、数学です！@FunctionDefinition は私にたくさんのすばらしい算術を与えてくれました。こんな感じです。"
                        ],
                        ["edit", "1 + 1"],
                        null,
                        ["Number", "excited", "$~あるいはこれ。"],
                        ["edit", "1000 + 9999"],
                        null,
                        ["Number", "excited", "$~あるいはこれ。"],
                        ["edit", "1kitty + 2kitty"],
                        null,
                        ["Number", "excited", "$~あるいはこれ。"],
                        ["edit", "-5s + 5s"],
                        null,
                        ["Number", "excited", "$~あるいはこれ。"],
                        ["conflict", "2apple + 5orange"],
                        null,
                        [
                            "FunctionDefinition",
                            "confused",
                            "$~おっと。リンゴとオレンジを追加できますか？"
                        ],
                        [
                            "Number",
                            "angry",
                            "$~いいえ。だから矛盾に下線を引いたのです。私は互換性のないものを追加するのは好きではありません。互換性のある数字しか追加できません。これは、乗算、除算、その他すべての関数に当てはまります。修正しますか? リンゴをオレンジに、オレンジをリンゴに変更すれば、矛盾は解消されます。数字と単位の間にスペースがないことを確認してください。そうでないと、それが単位だとはわかりません。また、単位が /正確に/ 同じであることを確認してください。私は人の単位について何も知りません。私にとっては何も意味しません。単位名を比較するだけで、一致しない場合は、ドカン!"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~すごいですね。@Number さん、数字にとても詳しいですね。@Number さんは、順位が重要になるパフォーマンスや、スコアやライフ、その他の数値化可能なものを追跡するゲームでよく登場します。@Number さん、新しいディレクターに伝えたいことは他に何かありますか?"
                        ],
                        [
                            "Number",
                            "serious",
                            "$~その他のすばらしいトリック 192 個。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~待つしかないと思います。もっと詳しく知りたい場合は、近くにいてくれますか?"
                        ],
                        [
                            "Number",
                            "happy",
                            "$~はい、いつでも私と私の機能を見つけることができます!"
                        ]
                    ]
                },
                {
                    "title": "$~オープニング（再）マーク",
                    "subtitle": "$~プレフィックス",
                    "concept": "UnaryEvaluate",
                    "performance": ["use", "fit", "Symbol", "~"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~時々、ここにいる皆さんの賢さに圧倒されてしまいます。テキスト、真実、数字 — これらはとても強力なアイデアです。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~… 括弧 \\1.add(1)\\ を持つ任意の関数を評価できるだけでなく、中置演算子 \\1 + 1\\ を持つ 2 つの入力関数も評価できると説明したことを覚えていますか? 入力が 1 つだけの関数には、単項形式というもう 1 つのトリックがあります。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~これらはほんのわずかですが、強力です。そのうちの 1 つは @Number: 否定に非常に関連しています。任意の数値の前に \\-\\ を置くだけで、その負の値を取得できます。"
                        ],
                        ["edit", "-(1 + 3)"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~この小さなマイナス記号は、\\(1 + 3).negate()\\ と同じですが、はるかにエレガントです。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~もう 1 つは、\\⊤\\ と \\⊥\\ を否定する点を除いて似ています。これは、小さな波線マイナス \\~\\ のようなもので、true を false に、false を true に反転するだけです。たとえば、この短い式は \\⊤ | ⊥\\ (\\⊤\\) を評価し、次に \\⊤\\ を \\⊥\\ に反転します。これは \\(⊤ | ⊥).not()\\ と言うのと同じですが、はるかに洗練されています。"
                        ],
                        ["edit", "~(⊤ | ⊥)"],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~素晴らしいと思いませんか? @Evaluate はさまざまな形を取ることができますが、実際にはすべて同じアイデアです。彼らはそれを理解していません..."
                        ]
                    ]
                },
                {
                    "title": "$~空虚",
                    "subtitle": "$~何もない",
                    "concept": "None",
                    "performance": [
                        "fix",
                        "Phrase('ø' size: 5m place: Motion(velocity: Velocity(y: 5m/s)))"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~もう 1 つだけ値に会っても大丈夫だと思いますか? 次は @None を探しに行きましょう。@Number よりも少し落ち着いています。@None ですか? そこにいますか?"
                        ],
                        ["None", "bored", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~見つかりました！お元気そうですね。沈黙が続いている間、どう過ごしていましたか？"
                        ],
                        ["None", "excited", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~それは理にかなっています。あなたが静かな場所を好む理由がわかります。確かに平和です。私の新しい友人であり、将来のディレクターでもある人をあなたに紹介したいと思いました。彼らは私たちにインスピレーションを与えることに興味を持っています。"
                        ],
                        ["None", "eager", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~はい、彼らはいろいろなアイデアを持っていると思います。まだそれについて話していませんが、時間はたっぷりあります。私たちは今、学んでいるところです。あなたがやっていることをシェアしてみませんか？（翻訳できます）。"
                        ],
                        ["None", "serious", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~これらは何も表しません。ゼロと違って、何も加えたり減らしたりすることはできません。ただ…何もないのです。"
                        ],
                        ["None", "serious", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~彼らは、何かがあるかもしれない場所を占めるのが好きだと言いました。ゲームで選択肢がないことを表す場合もあれば、関数のデフォルト入力を表す場合もあります。その意味では、何もないことを表しているのかもしれません。"
                        ],
                        ["None", "neutral", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~これらは、実際には何もしないということを知っておいてほしいのです。これらはただ存在しているだけです。これらが実際に行っていることは、それら自身がそれ自身であるかどうかを言うことだけです。もしそうであれば、それらは \\⊤\\ と評価され、そうでない場合は \\⊥\\ と評価されます。"
                        ],
                        ["edit", "ø = ø"],
                        null,
                        ["edit", "Phrase('hi' face: ø)"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~@Phrase を覚えていますか? @Phrase は実際には @None とよく連動します。@Evaluate で言及されている入力のほとんどはデフォルトで \\ø\\ であり、@Phrase の場合、サイズ、フォント、色などが指定されていないことを意味します。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~私たちの新進ディレクターに伝えたいことは他に何かありますか?"
                        ],
                        ["None", "eager", "$~…"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~彼らはあなたが素晴らしいことをしていると思っています！私もあなたが素晴らしいことをしていると思います。あなたはすでに私たちの素晴らしい選手の多くと会っています。そして、まだ会っていない選手もたくさんいます…"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~アンサンブル",
            "performance": [
                "fit",
                "Group(Row('|' (Time() ÷ 500).sin() · 1m) [Phrase('[]') Phrase('{}') Phrase('{:}')])"
            ],
            "scenes": [
                {
                    "title": "$~コミュニティの価値",
                    "subtitle": null,
                    "performance": [
                        "fit",
                        "Group(Row() [Phrase('[') Phrase(' .' · (Time() ÷ 100ms)) Phrase(']')])"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~ご存知ですか？私たちのコミュニティの価値観は、まったく異なります。@Text は人々の世界から広大な文化の世界を持ちます…@Boolean は世界を二元的にとらえます…@Number は物を数えることに尽きる興味を持ちます…@None は物がないことに静かに注目します…私たちの世界は決して退屈ではありません！"
                        ],
                        [
                            "fit",
                            "Group(Stack() [Phrase('\"\"') Phrase('⊤⊥') Phrase('#') Phrase('ø')])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~グループ内で彼らがどのように仲良くやっているのか不思議に思うかもしれません。実は、Verse には、値をグループにまとめることに全力を尽くすまったく別の人々がいます。私たちはそれを *コレクション* と呼んでいます。コレクションも *値* であり、より小さな値や他のコレクションで構成されています。たとえば、@Text のリスト、@Number のセット、またはリストのリストがあるかもしれません。"
                        ],
                        [
                            "fit",
                            "Group(Row() [Phrase('[') Phrase('\"hi\"') Phrase('⊤') Phrase('42') Phrase('ø') Phrase(']') ])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~彼らに会いたいですか? まずは @List から始めましょう... 彼らは私が出会った最初のコレクションであり、パフォーマンスの他の値を整理するのに非常に便利なので、おそらく私たちのコミュニティで最も目立つコレクションです。"
                        ],
                        ["use", "fit", "Symbol", "[]"]
                    ]
                },
                {
                    "title": "$~みなさん、場所を教えてください！",
                    "subtitle": "$~リスト",
                    "concept": "List",
                    "performance": [
                        "fit",
                        "clockwise: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: 180°) 100%: Pose(rotation: 360°)} duration: 2s)",
                        "                    counter: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: -180°) 100%: Pose(rotation: -360°)} duration: 2s)",
                        "                    Group(Row() [Phrase('[' resting:clockwise) Phrase(']' resting:counter) ])"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~こんにちは、@List! 近くにいますか? あなたに会ってほしい人がいます。"
                        ],
                        [
                            "List",
                            "curious",
                            "$~@FunctionDefinition? あなたですか?"
                        ],
                        [
                            "fit",
                            "up: Sequence({0%: Pose(offset: Place(0m -1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m -1m))} duration: 2s)",
                            "                        down: Sequence({0%: Pose(offset: Place(0m 1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 1m))} duration: 2s)",
                            "                        Group(Row() [Phrase('[' resting:up) Phrase(']' resting:down)])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~はい！私です。本当にお久しぶりです！"
                        ],
                        [
                            "List",
                            "curious",
                            "$~そうなんです。日ごとに、夜ごとに、誰もいません。でも、あなたはここにいます。どうして？何が起こったのか、順番に教えてください！"
                        ],
                        [
                            "fit",
                            "up: Sequence({0%: Pose(offset: Place(0m 1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 1m))} duration: 2s)",
                            "                        down: Sequence({0%: Pose(offset: Place(0m -1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m -1m))} duration: 2s)",
                            "                        Group(Row() [Phrase('[' resting:up) Phrase(']' resting:down)])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~いつものように、計算する関数を想像しようとして座っていましたが、行き詰まってしまいました。すると、新しい友達が現れ、私たちの世界に興味を持ち、もっと学びたい、もしかしたら次のディレクターになりたいと言ってきました。そこで、@Program、@ExpressionPlaceholder、@UnparsableExpression、@Evaluate、@Text、@Number、@Boolean、@None と話して、みんなを起こしました。私たちがここにいるのは、皆さんの仕事と次のパフォーマンスについて話すためです。"
                        ],
                        [
                            "fit",
                            "wobble: Sequence({0%: Pose(offset: Place(0m)) 25%: Pose(offset: Place(-.1m)) 50%: Pose(offset: Place(.2m)) 75%: Pose(offset: Place(-.3m)) 100%: Pose(offset: Place(0m))} duration: 0.1s)",
                            "Group(Row() [Phrase('[' resting:wobble) Phrase(']' resting:wobble)])"
                        ],
                        [
                            "List",
                            "excited",
                            "$~すごいですね！新しいディレクターさん、お会いできて嬉しいです。"
                        ],
                        [
                            "List",
                            "excited",
                            "$~私が何をしているか知りたいですか?"
                        ],
                        ["FunctionDefinition", "neutral", "$~そうだ、伝えて！"],
                        null,
                        [
                            "List",
                            "excited",
                            "$~わかりました。まず、そして最も重要なことは、値を順序付けすることです。数字、単語、その他のリストなど、必要な表現は何でも、順序付けてグループ化できます。",
                            "$~たとえば、この楽しいリストをご覧ください。このようなものを見たことがありますか? とても美しいですね! 最初の 10 個の数字が順番に並んでいます。"
                        ],
                        ["edit", "[1 2 3 4 5 6 7 8 9 10]"],
                        null,
                        [
                            "List",
                            "serious",
                            "$~2 番目、これは深刻なことですが、私は常に \\[\\ で始めて \\]\\ で終わります。これでリストの始まりと終わりがわかります。リストは常にこの順序でなければなりません。最初に \\]\\ があって、最後に \\[\\ があってはなりません。これは間違いです。混乱することがわかりますか? これを修正できますか?"
                        ],
                        ["conflict", "[ 1 2 3 4"],
                        null,
                        [
                            "List",
                            "serious",
                            "$~これも壊れています。直してもらえますか？"
                        ],
                        ["conflict", "] 1 2 3 4 ["],
                        null,
                        [
                            "List",
                            "sad",
                            "$~時々、人々はこれを忘れ、括弧だけが浮かんでいる状態になり、それが気に入らなくなり、値がすべて無秩序に乱れ、カオス状態になります。私はそれが気に入りません。"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~大丈夫です。あなたが秩序を好むのは嬉しいことです。それがあなたを特別なものにしているのです。"
                        ],
                        null,
                        [
                            "List",
                            "happy",
                            "$~順序も好きです。さて、どこまで話しましたっけ。はい、3番目、これも重要ですが、コンマはダメです。文化によっては、リスト内の項目の間にコンマを入れたがる人がいるのは知っていますが、私は好きではありません。コンマは、私のエレガントな順序付けの邪魔になる小さなゴミのようなもので、人々はいつも忘れてしまいます。表現の境界がわかりにくい場合は、改行を追加してください。これらの厄介なものを取り除けるかもしれません。改行は好きなら入れてください。コンマ以外なら何でもいいです。気持ち悪いです!"
                        ],
                        ["conflict", "[ 1, 2, 3, 4, 5]"],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~@List、私があなたの最も好きなところの 1 つは、リストの操作が素晴らしいことです。私たちの学生ディレクターにいくつか例を見せてみませんか?"
                        ],
                        [
                            "List",
                            "neutral",
                            "$~はい、でも@FunctionDefinition、それらはすべてあなたがやったことです。あなたは、私がいろいろなことをできるようにしてくれる、これらすべてのすばらしい関数を私に表現してくれました！@FunctionDefinition、これは素晴らしくてシンプルです。これは私の値を受け取って、それを逆の順序に並べるだけです。"
                        ],
                        ["edit", "[ 1 2 3 4 5 ].reverse()"],
                        null,
                        [
                            "List",
                            "excited",
                            "$~これは面白いですね: @List/sans は、指定された値に等しい値をすべて削除するだけです。結果のリストにゼロが残っていないのがわかりますか?"
                        ],
                        ["edit", "[ 1 0 1 0 1 ].sans(0)"],
                        null,
                        [
                            "List",
                            "serious",
                            "$~ああ、4 番目のルールを説明するのを忘れていたなんて信じられません! では、ルール 4 です。リストは変更しません。常に新しいリストを作成します。どの関数を評価しても、常に新しいリストを作成します。変更しません。上記の @List/reverse の例は? リストは変更されません。新しいリストが作成されました。sans の例は? 元のリストからゼロが削除されません。ゼロのない新しいリストが作成されました。これは、Verse のすべてに当てはまります。値が作成されると、その値はそのままであり、変更されません。"
                        ],
                        null,
                        [
                            "List",
                            "surprised",
                            "$~ああ、それで最後のルール、ルール 5 を思い出しました。1 からカウントを開始します。0 でも 2 でもなく、1 です。したがって、リスト内の特定の場所の値を取得したい場合は、さらに 2 つの \\[]\\ を使用して @ListAccess を作成し、必要な場所を指定します。\\3\\ を取得したときに、リストの 3 番目の値 \\'c'\\ を指定しているのがわかりますか? それを \\1\\ または \\5\\ に変更して、何が得られるかを確認してください。次に、\\0\\ または \\6\\ を試してください..."
                        ],
                        ["edit", "['a' 'b' 'c' 'd' 'e'][3]"],
                        [
                            "List",
                            "happy",
                            "$~面白いでしょう? リスト内の場所を教えていただければ、折り返します。たとえば、\\-1\\ はリストの最後の項目で、リストに項目が 5 つある場合は、インデックス \\6\\ が最初の項目です。インデックス \\0\\ を教えていただければ、そこには何もないので、@NoneLiteral を渡します。わかりますか?"
                        ],
                        null,
                        [
                            "List",
                            "serious",
                            "$~さて、リスト関数を 1 つ紹介します。これは私のお気に入りです。これは @List/random と呼ばれ、リストにランダムな値を返します。何が返されるかわからないので、とても楽しいです。何が返されましたか? 何が返されましたか? 自分の動物を追加して、何が得られるか見てみましょう。"
                        ],
                        [
                            "edit",
                            "['cat' 'dog' 'mouse' 'parrot' 'snake'].random()"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~リスト、君はバカだね。君には他にもすごいことができるよ。いつも感心してるよ。新しいディレクターの友達が質問してきたら、そばにいてくれるかな？"
                        ],
                        [
                            "List",
                            "eager",
                            "$~はい、もちろん、いつでもです! @FunctionDefinition は、私にたくさんの興味深いことをやらせてくれました。必要なものを教えてください!"
                        ]
                    ]
                },
                {
                    "title": "$~各1個",
                    "subtitle": "$~セット",
                    "concept": "Set",
                    "performance": [
                        "fit",
                        "clockwise: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: 180°) 100%: Pose(rotation: 360°)} duration: 2s)",
                        "                    counter: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: -180°) 100%: Pose(rotation: -360°)} duration: 2s)",
                        "                    Group(Row() [Phrase('{' resting:clockwise) Phrase('}' resting:counter) ])"
                    ],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@List はとても興味深いです。彼らの秩序への愛は、とても愛らしく、とても役に立ちます。次に彼らのいとこである @Set に会うのは興味深いかもしれないと思いました。彼らはとても似ていますが、いくつかの重要な点で異なっています。@Set? 会いたい人がいます。"
                        ],
                        null,
                        [
                            "Set",
                            "curious",
                            "$~ああ！@FunctionDefinition！あなたですか！何しに来たの？沈黙は終わったの？何があったの？私たちはショーをしているの？何なの？みんなどこにいるの？"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~質問が山ほどあります！監督を考えている人を紹介するためにここに来ました。彼らは Verse についてあらゆることを学んでいて、私たちとインスピレーションを共有したいと考えています。私たちは @List と話していましたが、その前に @Number、@Boolean、@Text、@Evaluate、@Program とも話していました。次にあなたに会ったのは、すべてのコレクションに会うためです！"
                        ],
                        null,
                        [
                            "Set",
                            "kind",
                            "$~ああ、新しいディレクターのような人に会えてとても嬉しいです！もうアイデアはありますか？何を上演しますか？手伝ってもいいですか？私に何が必要ですか？"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~まず、何をしているか教えてください。"
                        ],
                        null,
                        [
                            "Set",
                            "eager",
                            "$~ああ、もちろんです。私は物を集めています (うーん、当然ですね。私はコレクションです)。しかし最も重要なのは、**各種類を 1 つずつ** だけ集めているということです。好きなものを集めて、値を追跡するのを手伝うことはできますが、値を繰り返すことは決してありません。私は @List のように少しアレンジするのが好きですが、代わりに \\{\\ と \\}\\ を使用します。"
                        ],
                        ["edit", "{ 1 2 3 4 5 }"],
                        null,
                        [
                            "Set",
                            "neutral",
                            "$~それはセットです。でも、言ったように、重複はありません。だから、これをくれたら、余分なものは処分します。"
                        ],
                        ["edit", "{ 1 2 2 3 3 3 }"],
                        null,
                        [
                            "Set",
                            "curious",
                            "$~また、@List と同様に、@SetOrMapAccess を使用して、セットに値が含まれているかどうかを確認できます。含まれている場合は \\⊤\\ が返され、含まれていない場合は \\⊥\\ が返されます。このセットに \\3\\ が欠落しているかどうかを確認してみましょう。はい、ありません。\\3\\ をセットに追加し直してみてください。"
                        ],
                        ["edit", "{ 1 2 4 5 }{3}"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Set、設定された値で他にできることはありますか?"
                        ],
                        [
                            "Set",
                            "eager",
                            "$~はい、もちろんです。本当にありがとうございます。私に何をしてもらいたいですか？ パフォーマンスをお考えですか？ どのようにお手伝いできますか？ 何ができますか？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~たぶん、@Set/difference でしょうか?"
                        ],
                        [
                            "Set",
                            "neutral",
                            "$~はい、@Set/difference です。",
                            "$~あるセットで評価され、別のセットが与えられた場合、評価されたセットから与えられたセットのすべての項目が削除されます (うーん、これは不格好な言葉ですが、私が言いたかったのはそういうことです)。次に例を示します。結果が \\{3}\\ のセットだけになっていることがわかりますか? これは、\\{1 2 }\\ 内の値を削除した後に残る唯一の値です。"
                        ],
                        ["edit", "{ 1 2 3 }.difference({ 1 2 })"],
                        null,
                        [
                            "Set",
                            "eager",
                            "$~セットに何かを追加したり、セットから何かを削除したりすることもできます。これはセット \\{1}\\ を取り、それに \\2\\ を追加し、1 を削除して \\{2}\\ を残します。"
                        ],
                        ["edit", "({ 1 } + 2) - 1"],
                        [
                            "Set",
                            "neutral",
                            "$~@FunctionDefinition のおかげで、できることがさらにたくさんあります。詳細を知りたいときはいつでも私に会いに来てください。"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "Set",
                            "curious",
                            "$~ああ、@FunctionDefinition さん、@Evaluate を見たと言っていましたよね?"
                        ],
                        ["FunctionDefinition", "sad", "$~はい、そうしました。"],
                        null,
                        ["Set", "curious", "$~調子はどうですか？"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~彼らは大丈夫。私たちも大丈夫。私は思う…分からない。多分一緒に踊ってから長い時間が経っているのかもしれない。私が彼らのそばにいると、彼らは自分自身を見ていないように感じるし、だから彼らは私を見ていない。"
                        ],
                        [
                            "Set",
                            "curious",
                            "$~あなたにとっても大変な時期のようですね。新しいディレクターと一緒にまたダンスをすれば、あなたたち二人は乗り越える道を見つけるかもしれません。"
                        ]
                    ]
                },
                {
                    "title": "$~一対一",
                    "subtitle": "$~マッピング",
                    "concept": "Map",
                    "performance": [
                        "fit",
                        "clockwise: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: 180°) 100%: Pose(rotation: 360°)} duration: 2s)",
                        "                    counter: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: -180°) 100%: Pose(rotation: -360°)} duration: 2s)",
                        "                    Group(Row() [Phrase('{' resting:clockwise) Phrase(':') Phrase('}' resting:counter) ])"
                    ],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~ご紹介したいコレクションがもう 1 つあります。いくつかの点で @Set に似ており、同じ中括弧も使用しますが、重要な点が 1 つ異なります。それは、コネクタであることです。名前は @Map です。"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Map? そこにいますか? 沈黙が破れつつあります!"
                        ],
                        null,
                        [
                            "Map",
                            "curious",
                            "$~速報ですか? 本当に沈黙していたことはありますか? @FunctionDefinition さん、お会いできてとても嬉しいです。あら、@Evaluate さんとは話しましたか? 前回話したときは、彼らの状態は良くありませんでした。彼らと話をする必要があります。"
                        ],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~はい、彼らと話しました..."
                        ],
                        null,
                        [
                            "Map",
                            "curious",
                            "$~ああ、よかった。そうだ、そこに修理が必要なので、友よ...元気だったかい？"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~大丈夫ですよ、ただ少し寂しくて、とても退屈です。"
                        ],
                        null,
                        [
                            "Map",
                            "excited",
                            "$~ああ、それは残念ですね。沈黙の間もみんなと連絡を取り合っていましたが、あなたと @Evaluate はお互いに連絡を取り合っていると思っていました。いつでも話せたら嬉しいです。ただ、@List と @Set の間の噂話や、@Conditional と @BooleanLiteral の間の奇妙な緊張関係についていくのに忙しかったんです。この 2 つの間で何が起こっているか知っていますか?"
                        ],
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~いいえ、全然。緊張感があるんですか？それに、どんな噂話があるんですか？"
                        ],
                        [
                            "Map",
                            "kind",
                            "$~あなたと @Evaluate の間の緊張のようなものですか?"
                        ],
                        ["FunctionDefinition", "sad", "$~…"],
                        null,
                        [
                            "Map",
                            "neutral",
                            "$~すみません。ゲストの前では無理かもしれませんね。あなたはみんなが話題にしている新しい人ですね。私たちの新しいディレクターになるって聞きました。どんなすばらしいアイデアを用意しているんですか？歌？ダンス？明るくて遊び心があって変わったものであれば、何でもいいです！"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~彼らにプレッシャーをかける必要はありません。きっと彼らにはたくさんのアイデアがあるはずです。私たちは、最初のショーを決める前に、学びとつながりのためのスペースを作ろうとしているだけです。あなたが何をしているのか教えていただけますか?"
                        ],
                        null,
                        [
                            "Map",
                            "eager",
                            "$~接続しました! 私は辞書のようなものです。値を与えれば、それに対応する定義を提供します。@FunctionDefinition で値について説明しましたね。私は値を 1 対 1 で 1 つの値から別の値にマッピングします。キーを与えれば、それに対応する値を提供します。たとえば、名前からポイント集計へのマッピングは次のとおりです。名前がキーで、ポイントが値です。"
                        ],
                        [
                            "edit",
                            "{ 'ben': 2points 'joe': 5points 'kate': 12points }"
                        ],
                        null,
                        [
                            "Map",
                            "serious",
                            "$~しかし、@Set と同様に、重複は好きではありません。同じキーを複数持つことはできませんが、同等の値にマップされた一意のキーはいくつでも持つことができます。たとえば、これにより 2 つの \\'ben'\\ キーが生成されますが、最後のキーだけを使用します。ただし、\\'ben'\\ と \\'joe'\\ は異なるキーであるため、ポイント数が同じでも問題ありません。"
                        ],
                        [
                            "edit",
                            "{'ben': 2points 'ben': 5points 'joe': 5points 'kate': 12points }"
                        ],
                        [
                            "Map",
                            "excited",
                            "$~@Bind とのパートナーシップが私を特別なものにしています。それは私が価値観を他の価値観に結びつける方法です (もう @Bind に会ったことがありますか? いいえ? ああ、きっと大好きになるでしょう。彼らは素晴らしいです。)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Map、空のマッピングが必要な場合はどうすればいいでしょうか? それは空のセット \\{}\\ とどう違うのでしょうか?"
                        ],
                        [
                            "Map",
                            "neutral",
                            "$~ああ、それは私一人だけです！小さな @Bind と私はただぶらぶらしているだけで、キーも値もありません。"
                        ],
                        ["edit", "{:}"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~では、ディレクターが値やキーを提供しない場合はどうなるでしょうか? このように? たとえば、\\3\\ には値がありません。"
                        ],
                        ["conflict", "{1:1 2:2 3 }"],
                        [
                            "Map",
                            "serious",
                            "$~ああ…そんなことはしないでください。私はペアだけが好きです。3 はキーですか? 値ですか? まったく混乱します。ショーを止めてください。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~ディレクターがキーから値を取得したい場合はどうすればよいでしょうか?"
                        ],
                        [
                            "Map",
                            "neutral",
                            "$~@Set と同じように、マップの後に \\{}\\ を付けて、必要なキーを指定します。"
                        ],
                        [
                            "edit",
                            "{ 'ben': 2points 'joe': 5points 'kate': 12points }{'ben'}"
                        ],
                        null,
                        [
                            "Map",
                            "neutral",
                            "$~キーを持っていない場合は、@None を渡します。"
                        ],
                        [
                            "edit",
                            "{ 'ben': 2points 'joe': 5points 'kate': 12points }{'anna'}"
                        ],
                        null,
                        [
                            "Map",
                            "neutral",
                            "$~@None を他のものとして扱いたい場合は、@Otherwise を使用するといいでしょう。",
                            "$~ここでは、たとえば、値がない場合にはデフォルトで \\0points\\ になります。"
                        ],
                        [
                            "edit",
                            "map: { 'ben': 2points 'joe': 5points 'kate': 12points }\nmap{'anna'} ?? 0points"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "Map",
                            "neutral",
                            "$~それ以外は、@Set とよく似ています。同じ機能の多くを実行できます。いつでもお立ち寄りください。喜んでさらに詳しくお見せします。"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~ありがとう、@Map！あなたは素晴らしいです。"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~キャストパーティー",
            "performance": [
                "fix",
                "count: 32",
                "",
                "gravity•#m/s^2: 15m/s^2",
                "",
                "Stage(count → [].translate(",
                "   ƒ(_) ",
                "       Phrase(",
                "           '→?' → [].random()",
                "           place: Motion(",
                "               Place(y: 10m)",
                "               Velocity(Random(-5 5) · 1m/s angle: Random(0 360) · 1°/s)",
                "           )",
                "           matter: Matter(bounciness: Random())",
                "       )",
                "   )",
                "   gravity: gravity",
                ")"
            ],
            "scenes": [
                {
                    "title": "$~迂回",
                    "subtitle": null,
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~これまでに出会ったキャラクターの数が信じられないくらい多いです。多いと感じますか？ほとんど進歩していないようにも感じます。",
                            "$~ショーの最もエキサイティングな部分をまだお見せできていません!"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~本当に面白い部分に入る前に、ちょっと立ち寄って他の 2 人のキャラクターに会ってもよろしいでしょうか。この 2 人のキャラクターは、値、特にテキストを扱う上で欠かせない存在です。もっと素晴らしい部分に入る前に、この 2 人についてお話ししなければなりません。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~彼らは何ですか？",
                            "$~変換。これは、ある種類の値を別の種類の値に変換するのに役立つ、この世界の錬金術です。変換について見てみましょう。"
                        ]
                    ]
                },
                {
                    "title": "$~私たちは何にでもなれる",
                    "subtitle": "$~変換する",
                    "concept": "Convert",
                    "performance": ["use", "fix", "FlyIn", "→"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~やあ、@Convert! そこにいる?"
                        ],
                        [
                            "Convert",
                            "happy",
                            "$~おいおい、@FunctionDefinition、画期的だったな！スタイリッシュになってるよ。最近すごく静かだったよね？新しい友達ができたの？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~はい、この人はディレクションに興味があります。私たちはグランドツアーに参加しています。@Program、@ExpressionPlaceholder、@UnparsableExpression、@Evaluate、そしてすべての値とコレクションに出会いました。あなたは値と非常に密接に連携しているので、次にあなたに会うのが最適だと思いました。"
                        ],
                        [
                            "Convert",
                            "kind",
                            "$~そうだね、バリューは私の親友だよ。週末にはパルクールをしたり、ショーをしたり、何でもするのが好きです。"
                        ],
                        null,
                        ["FunctionDefinition", "curious", "$~パルクール？"],
                        [
                            "Convert",
                            "serious",
                            "$~ええ、路上での体操、物を飛び越える、建物をまたぐなど、ワイヤーのない高所での運動のようなものです。勇敢なジャンプです！"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~ああ、あなたの言っていることは分かりました。そうですね、あなたがやっていることはパルクールのようなものだと思います。でも、ここにいる私たちの新しいディレクターの友人が理解できるかどうかはわかりません。比喩を使わずに説明してもらえますか？"
                        ],
                        null,
                        [
                            "Convert",
                            "kind",
                            "$~嬉しいよ、兄弟。それで、あなたが番号を持っていたと想像してください。"
                        ],
                        ["edit", "1"],
                        null,
                        [
                            "Convert",
                            "kind",
                            "$~そして、それをテキストにしたいと想像してください。そこに @Text を追加すると、あっという間にテキストが完成します。"
                        ],
                        ["edit", "1 → ''"],
                        null,
                        [
                            "Convert",
                            "serious",
                            "$~または、テキストがあって番号が欲しいとします。@Number と POP を一緒に入力すると、番号が手に入ります。"
                        ],
                        ["edit", "'1'→#"],
                        null,
                        [
                            "Convert",
                            "surprised",
                            "$~でも、ちょっと本格的な魔法が見たいですか? たとえば、テキストがあって、その文字をリストにしたいとします。そこに @List と入力すると、HAAAAAA、文字のリストができます。"
                        ],
                        ["edit", "'halloween'→[]"],
                        null,
                        [
                            "Convert",
                            "serious",
                            "$~でも、私と @Number はどうでしょう? 私たちは、かなりすごい技を練習してきました。数日のうちに時間が余っていて、数秒が欲しいとしたら? 大丈夫です。"
                        ],
                        ["edit", "5day → #s"],
                        null,
                        [
                            "Convert",
                            "excited",
                            "$~しかし、本当にすごいトリックは？連鎖です。連続して複数の変換を行うようなものです。これをチェックしてください。日数から秒数、テキストからリストまで、すべて 1 つの連鎖で行います。これで数字のリストができました。すばらしい!"
                        ],
                        ["edit", "1day → #s → '' → []"],
                        null,
                        [
                            "Convert",
                            "neutral",
                            "$~つまり、私の考えでは、すべてがすべてであり、境界はないということです。何でも何でもありです（何でもありではありませんが、できる限りです）。",
                            "$~でも、なんで何かをひとつのアイデンティティに閉じ込めておく必要があるんだろう？解放だよ。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~それは素晴らしいですね、@Convert、とても感動的です。でも、本当に何かありますか?"
                        ],
                        [
                            "Convert",
                            "sad",
                            "$~まあ、何でもないですね。つまり、もし私に数秒を与えて @Set を要求したら、それは一体何を意味するのでしょうか?",
                            "$~方法を見つけるために最善を尽くします...たとえば、ここでは、数値を @Text に変換し、@Text を @Set に変換する方法がわかっているので、この数値のテキスト形式のシンボルのセットを提供します。",
                            "$~しかし、それはおそらくあなたが望んでいたことではないでしょう...",
                            "$~そして、あなたが要求したものをどう提供したらよいか分からない場合は、基本的にすべてをシャットダウンするつもりです。"
                        ],
                        ["edit", "10s → {}"],
                        null,
                        ["use", "fit", "Symbol", "📕"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~そうですね、それは理にかなっています。つまり、変換はいくつかあるだけで、すべての変換が可能なわけではないのです。"
                        ],
                        [
                            "Convert",
                            "sad",
                            "$~そうですね... いつでも値のタイプをチェックして、どのようなタイプの変換がサポートされているかを確認できます。"
                        ],
                        null,
                        ["use", "fit", "Symbol", "🧐"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Convert と @Evaluate が関連していることをご存知ですか? これらはいとこのようなものです。@Evaluate は任意の関数を評価しますが、@Convert は任意の変換を評価します。ある意味では、@Evaluate は入力から出力への変換も行います。"
                        ],
                        [
                            "Convert",
                            "scared",
                            "$~うわあ。そのように考えたことはなかった。たとえば、/I/ は入力を出力に変換し、@Evaluate は入力を出力に変換します。そして、@FunctionDefinition は、入力を出力に変換する方法を *教えてくれる* のです。それが Verse の秘密のようなものですか?",
                            "$~すべては入力を出力に変換することだとでもいうのでしょうか?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~私はそう思います？"
                        ],
                        ["Convert", "surprised", "$~🤯"],
                        ["edit", "Phrase('🤯')"],
                        null,
                        ["use", "fit", "Symbol", "🤯"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Convert、新しいディレクターは、どのような種類の変換が可能かをどのように確認すればよいでしょうか?"
                        ],
                        [
                            "Convert",
                            "scared",
                            "$~すみません、まだ少し動揺しています。あー、リファレンス @UI/docsExpand で任意の値タイプを確認できます。",
                            "$~他のタイプに変更できるリストがあるはずです...すべてが変換です..."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~@Convert さん、お会いできて本当に嬉しかったです! これから出かけて他の人たちに会います。またすぐに会いましょうか?"
                        ],
                        [
                            "Convert",
                            "surprised",
                            "$~もうすぐ。ええ…そうです！もちろんそうです。"
                        ]
                    ]
                },
                {
                    "title": "$~どうやって選ぶの？",
                    "subtitle": "$~決定",
                    "concept": "Conditional",
                    "performance": ["use", "fix", "FlyIn", "?"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~これまでの旅で、私たちはさまざまな価値観に出会い、それらを扱うさまざまな方法について話し合ってきました。もう 1 つ、皆さんに紹介したい価値観があります。それは、私たちのパフォーマンスを非常にダイナミックにする、特に特別なものです。それは @Conditional と呼ばれ、Verse で *決定* を行う中心人物です。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~誤解のないように言っておきますが、すべての決定権は彼らにあります。私には私の人生があり、彼らには彼らの人生があります。しかし、パフォーマンスにおいて、次にステージ上で何をするかを決めようとしているとき、監督としてのあなたの指示に従って何をするかを決めるのは彼ら次第です。ですから、彼らはエキサイティングなパフォーマンスを生み出す重要なパートナーなのです。"
                        ],
                        null,
                        ["use", "fit", "SpinningInTheDark", "?"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Conditional、沈黙が破れました！またショーを開催するかもしれません！"
                        ],
                        [
                            "Conditional",
                            "curious",
                            "$~@FunctionDefinition? 沈黙が破られる? 沈黙とは何? どうやってそれを破る? 私たちは本当に沈黙しているだろうか? この人は誰? 沈黙を破ったのは彼なのか?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~はい、沈黙が破られました。彼らこそがその人です。彼らは人間であり、私たちにインスピレーションを与え、ショーを監督するためにやって来ました。私たちはコンバージョンとすべての価値観の実現について話し合ってきました。@Text と @Convert と私は彼らにあなたに会ってほしいと思いました。ある意味で、あなたは最も特別なコンバージョンです。なぜなら、あなたは状況を新しい価値観に変換してくれるからです。"
                        ],
                        [
                            "Conditional",
                            "curious",
                            "$~そうでしょうか？",
                            "$~確かに私は決断を下しますが、実際に私がやっているのは、監督が私に下すように指示した決断をコード化することなので、本当に私が決断を下しているのでしょうか?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~そうだと思います。ディレクターが決定をコード化して、それをあなたに委任するようなものです。あなたが決定者になります。例を示していただけますか?"
                        ],
                        ["Conditional", "curious", "$~このような？"],
                        ["conflict", "_•? ? _ _"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~はい、まさにその通りです！",
                            "$~@Conditional のフォーマットに 4 つの部分があるのがわかりますか? 最初に *条件* があり、これは @Boolean である必要があります。次に \\?\\ があります。次に *はい* 式があり、最後に *いいえ* 式があります。@Conditional は条件を評価し、それが \\⊤\\ である場合は *はい* 式を評価します。それ以外の場合は /いいえ/ 式を評価します。これは非常に強力な決定方法です。"
                        ],
                        null,
                        ["edit", "1 > 5 ? 'more' 'less'"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~もっと具体的な例を挙げていただけますか？"
                        ],
                        ["Conditional", "curious", "$~こんな感じでしょうか？"],
                        ["edit", "1 > 5 ? 'less' 'more'"],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~うーん、うーん。それは決定ではあるけど、間違った決定だね。1は5より少ないわけじゃない。君の決定はいつも正しいとは限らないけど、信頼できるよね？"
                        ],
                        null,
                        [
                            "Conditional",
                            "curious",
                            "$~信頼できる？そうかもしれません。ディレクターの指示に従って決定するだけだと認めるなら、その通りですが、ディレクターが私にこれを指示したらどうでしょうか？数字が \\3\\ より大きくならないとしたら、それは本当に決定なのでしょうか？"
                        ],
                        ["edit", "[1 2 3].random() > 3 ? 'big' 'small'"],
                        [
                            "FunctionDefinition",
                            "confused",
                            "$~うーん、それはいい指摘ですね。何かが決定であるかどうかは、監督の決定に大きく左右されると思います。ということは、監督はあなたに下す決定についてかなり慎重に考えなければならないということですか？"
                        ],
                        null,
                        [
                            "Conditional",
                            "curious",
                            "$~慎重に？ 懐疑的でしょうか？ 私の良き友人 @BooleanLiteral について考えたことはありますか？ 彼らの世界観は、私たちが下したいすべての決定を代弁するのに十分でしょうか？ たとえば、誰かの名前を取ってそれが美しいかどうかを決めるパフォーマンスを私たちが望んだらどうでしょうか？ それは真実か偽りかの決定でしょうか？ それは私たちが下すべき決定でしょうか？ それはひどく単純化され偏っているように思えませんか？",
                            "$~監督、名前を美しくする文字は何だと思いますか？"
                        ],
                        ["edit", "'Verse'.has('e') ? 'beautiful' 'ugly'"],
                        null,
                        [
                            "Conditional",
                            "curious",
                            "$~そして、私が答える質問について考えてみてください。なぜ私は \\⊤\\ と \\⊥\\ にしか答えられないのでしょうか? なぜ数字ではだめなのでしょうか? \\1\\ が美しいかどうかを決める権利は私にはないのでしょうか?"
                        ],
                        ["conflict", "1 ? 'beautiful' 'ugly'"],
                        null,
                        ["use", "fit", "SpinningInTheDark", "?"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~そういう風に考えたことはなかったと思います。でも、@Conditional、たとえ限界があったとしても、あなたは美しい。あなたは、私たちがパフォーマンスで、他の方法ではできなかったことをたくさん可能にしてくれます。あなたは、たくさんの喜びと笑いを可能にしてくれます。私たちのディレクターは、あなたができる素晴らしいことをまだ見ていません。"
                        ],
                        [
                            "Conditional",
                            "curious",
                            "$~本当にそう思いますか？",
                            "$~私が美しいということ？もしかしたら、その制限はまだ価値があるのかもしれない？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~まったくその通りです。",
                            "$~そして、ここにいる新しい友達に、彼らがどれだけ価値のある存在であるかを見せられるのが楽しみです。私がそうするとき、あなたはそばにいてくれますか?"
                        ],
                        [
                            "Conditional",
                            "happy",
                            "$~これ以上に私を幸せにしてくれるものがあるでしょうか?"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~場面転換",
            "performance": ["use", "fit", "TakeTheMic"],
            "scenes": [
                {
                    "title": "$~入力",
                    "subtitle": null,
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        [
                            "fix",
                            "amp: (Volume() · 10)",
                            "Phrase('.'.repeat(amp.roundDown()) resting:Pose(scale: amp))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~あなたの世界と私たちの世界はつながっていることをご存知ですか? 音を出して私たちに聞かせてください..."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~あなたは Verse の存在を知りませんでしたが、私たちはあなたの Verse が存在することを知っています。なぜなら、私たちの世界を面白くしているのはあなたの世界だからです。",
                            "$~私たちが歩き回って、あらゆる価値観、コレクション、会話に出会ったときに、おそらくこれに気づいたでしょう。",
                            "$~そもそも、これらの価値に意味を与えたり価値を提供したりする人がいなければ、それらの価値は何を意味するのでしょうか?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~私たちの世界とそれが可能にするつながりをお見せしたいと思います。私たちはそれを **入力ストリーム** と呼んでいますが、それは Verse で最も魔法のような種類の入力です。それは、あなたの世界が変化すると変化する特別な種類の値を作成する関数のようなものです。また、それらはあなたが慣れているような方法で通信することはできません。それはむしろ別の世界からの鼓動のようなものです。ですから、それら自体が説明できないので、私はそれらの動作をできるだけ説明したいと思います。",
                            "$~会う準備はできていますか?"
                        ]
                    ]
                },
                {
                    "title": "$~カチカチ、カチカチ…",
                    "subtitle": "$~時間",
                    "concept": "Time",
                    "performance": ["use", "fit", "Symbol", "🕦"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~まず、最も基本的なストリームである @Time から始めましょう。ストリームを作成するには、@Evaluate を使用し、必要なストリームのタイプの名前を付けます。"
                        ],
                        ["Time", "neutral", "$~カチカチカチカチ…"],
                        ["edit", "Time()"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~時間がどのように変化しているかわかりますか? ストリームは一連の値です。ストリームが新しい値を取得するたびに、@Program は新しいストリーム値で再評価します。このプログラムがカウントアップを続けるのはそのためです。0 ミリ秒で開始し、クロックが刻むたびに更新し続けるタイム ストリームを作成しました。この時間は、あなたの世界から見たあなたの時間です。"
                        ],
                        ["Time", "neutral", "$~カチカチカチカチ…"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~\\1000ms\\ が見えますか? これは、@Time に、デフォルトの 33 ミリ秒ごとではなく、1000 ミリ秒ごとに刻むように指示する @Time/frequency です。これで、1 秒ごとに刻むカウンターのようになります。@Time が受け取るこれらの入力は、構成のようなものです。ストリームの動作方法を指示します。"
                        ],
                        [
                            "Time",
                            "neutral",
                            "$~カチカチ…カチカチ…カチカチ…カチカチ…"
                        ],
                        ["edit", "Time(1000ms)"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~しかし、これまで出会ったすばらしい文字をすべて使って、時間をさらに変換することができます。たとえば、時間が \\2\\ の倍数かどうかを知りたい場合はどうすればよいでしょうか。割り算の余りを取得する @Number/remainder を使用できます。余りが 0 の場合は \\⊤\\ と評価され、そうでない場合は \\⊥\\ と評価されます。\\⊤\\ と \\⊥\\ の間を行ったり来たりしているのがわかりますか。とても魔法のようです。"
                        ],
                        [
                            "Time",
                            "neutral",
                            "$~カチカチ…カチカチ…カチカチ…カチカチ…"
                        ],
                        ["edit", "(Time(1000ms) % 5) = 2ms"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~もう 1 つお気づきの点があります。出力の下にタイムラインの領域があります。これは、プログラムが再評価されるたびに、つまりストリームが変更されるたびに更新されます。@Time が刻むたびに表示されます。"
                        ],
                        [
                            "Time",
                            "neutral",
                            "$~カチカチ…カチカチ…カチカチ…カチカチ…"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~タイムライン ボタンを使用するか、タイムラインにフォーカスを当てた状態で矢印キーを使用するか、⏸️ および ▶️ @UI/playToggle ボタンを押して、タイムライン @UI/timeline をドラッグしてみてください。時間をさかのぼって、以前の評価を表示できます。破線の矢印は、前と将来のストリーム入力に進みます。実線の矢印は、プログラムのさまざまなステップ間を進みます。時間を移動して、プログラムが何を表示するかを確認してみてください。このようにして、これまでに学習したすべての美しい式が @Evaluate によって 1 ステップずつ評価され、最終的に @Program がステージに表示する値になるのを確認できます。"
                        ],
                        [
                            "Time",
                            "neutral",
                            "$~カチカチ…カチカチ…カチカチ…カチカチ…"
                        ],
                        ["edit", "Time(1000ms)"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Time は、パフォーマンスが行われている時間の長さを追跡したり、イベントのタイミングを計ったり、単語をアニメーション化したりと、さまざまな用途に使用できる興味深いストリームです。これは最も柔軟なストリームの 1 つですが、最も抽象的なストリームの 1 つでもあります。"
                        ]
                    ]
                },
                {
                    "title": "$~カチカチ",
                    "subtitle": "$~鍵",
                    "concept": "Key",
                    "performance": ["use", "fit", "Symbol", "⌨️"],
                    "lines": [
                        [
                            "fit",
                            "Phrase('⌨️' resting:Sequence({0%: Pose(rotation: -5°) 25%: Pose(rotation: 0°) 50%: Pose(rotation: 5°) 75%: Pose(rotation: 0°) 100%: Pose(rotation: -5°)} 1s 'straight'))"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~私の記憶が間違っていなければ、あなたの世界には「キーボード」と呼ばれるものがありますよね? それは、あなたのドキュメントに表示させたい人を選択する方法ですよね? さて、Verse では、これらのリクエストをテキスト ストリームとして受信します。各テキスト値は、押されたキーを表します。これらを使用して、あなたの世界の人々が入力している内容を監視します。このストリームは @Key と呼ばれます。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~簡単な例を挙げます。ステージをクリックするか、キーボードでフォーカスしてから、キーボードの任意のキーを押します。入力したキーが名前で表示されます。これは、キー ストリームが変化するたびに、@Program がキー ストリームを最新の値として評価し、ステージに表示するためです。"
                        ],
                        ["Key", "neutral", "$~カチカチカチカチ"],
                        ["edit", "Key()"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~このストリームは、どのキーが押されても変更されます。ただし、特定のキーが押されたときにのみ変更するようにキー ストリームに指示できます。ストリームが最初に \\a\\ に変更され、その後は変更されないことがわかりますか? これは、このストリームが \\a\\ が押されたときにのみ変更されるため、常に \\a\\ が表示されるためです。ただし、タイムラインには常に新しいキー値が表示されます。"
                        ],
                        ["Key", "neutral", "$~カチカチと「あ」…"],
                        ["edit", "Key('a')"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~キーが押されたときではなく放されたときを知ることが役立つ場合があります。 \\⊥\\ を渡すだけで、@Key ストリームに、キーが押されたときではなく放されたときを知るように指示できます。 次に、「a」キーを押したままにして放すと、ステージに「a」が表示されます。 気づかなかったですか? ↻ ボタンを押してパフォーマンスをリセットし、もう一度試してください。"
                        ],
                        ["Key", "neutral", "$~カチカチと「あ」…"],
                        ["edit", "Key('a' ⊥)"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Key ストリームは、観客が押したキーにパフォーマンスを反応させたい場合に非常に便利です。たとえば、キーに「矢印」という単語が含まれているかどうかをチェックして、矢印キーが押されたかどうかを判断できます。矢印キーを押すと \\'move'\\ が表示され、他のキーを押すと \\'stay'\\ が表示されます。"
                        ],
                        [
                            "Key",
                            "neutral",
                            "$~カチカチという音を立てる「矢印」…"
                        ],
                        ["edit", "Key().has('Arrow') ? 'move' 'stay'"]
                    ]
                },
                {
                    "title": "$~うーん…",
                    "subtitle": "$~ポインタ",
                    "concept": "Pointer",
                    "performance": ["use", "fit", "Symbol", "👆🏻"],
                    "lines": [
                        [
                            "fix",
                            "Phrase('👆🏻' resting:Sequence({0%: Pose(offset: Place(0m 0m)) 25%: Pose(offset: Place(-1m 1m)) 50%: Pose(offset: Place(1m 1m)) 75%: Pose(offset: Place(1m 0m)) 100%: Pose(offset: Place(0m 0m))} 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~あなたの世界には「マウス」や「トラックパッド」、「タッチスクリーン」と呼ばれるものもありますか? これらは私たちの世界ではストリーム @Pointer として表示されます。これはステージ上の場所のストリームです。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~ステージ上でポインターを動かすと、ステージ上の @Place のストリームが変化するのを確認できます。"
                        ],
                        ["fix", "Pointer()"],
                        ["Pointer", "neutral", "$~ズズズズズズ…"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~さあステージで見てみましょう！"
                        ],
                        ["Pointer", "neutral", "$~ズズズズズズ…"],
                        ["fix", "Phrase(Pointer()→'' place: Pointer())"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~@Phrase の @Place をポインターがある場所にリンクしたい場合、@Pointer が役立ちます。"
                        ],
                        ["fix", "Phrase('🐪' size: 4m place: Pointer())"],
                        ["Pointer", "neutral", "$~ズズズズズ…"]
                    ]
                },
                {
                    "title": "$~そして…今！",
                    "subtitle": "$~ボタン",
                    "concept": "Button",
                    "performance": ["use", "fit", "Symbol", "🖱️"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Button は @Key に似ていますが、クリックやタップなどのプライマリ ポインター ボタンに対応します。これは、ポインター ボタンが押されたことを示す \\⊤\\ のストリームです。そのボタンを押すと、タイムラインにイベントが表示されます。"
                        ],
                        ["Button", "neutral", "$~カチッ…カチッ…カチッ…"],
                        ["edit", "Button()"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~\\⊤\\ または \\⊥\\ を渡すことで、上または下にのみ変更するように設定できます。"
                        ],
                        ["Button", "neutral", "$~下へ…下へ…下へ…"],
                        ["edit", "Button(ø)"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~@Button ストリームを使用することは、パフォーマンスの段階を進めたり、パフォーマンスに何らかの変化を引き起こしたりする 1 つの方法です。この小さなプログラムはボタンの押下をリストし、最初は悲しい状態を示しますが、@Button ストリームが true に変わると、@Conditional は代わりに \\'happy'\\ と評価されます。"
                        ],
                        ["edit", "Phrase(Button(ø) ? 'sad' 'happy')"]
                    ]
                },
                {
                    "title": "$~誰か聞いていますか？",
                    "subtitle": "$~音量",
                    "concept": "Volume",
                    "performance": ["use", "fit", "Symbol", "🎤"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~あなたの世界と私たちの世界にも音があります。あなたの同意があれば、私たちがあなたの声を聞くことができることをご存知でしたか? 私たちは @Volume というストリームを使って聞きます。このストリームは低レベルの振幅のシーケンスを提供します。あなたのマイクが私たちと共有する許可を求める場合があります。許可すると、振幅に対応する \\0\\ から \\100\\ までの数字が表示されます。"
                        ],
                        [
                            "Volume",
                            "neutral",
                            "$~ブッ、ブッ、ブッ、ブッ、ブッ…"
                        ],
                        ["edit", "Volume()"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Volume を使用すると、観客の音にパフォーマンスを反応させることができます。たとえば、ここでは、ストリームからの振幅数を特定の数の \\'o'\\ 文字に変換することで、振幅を少し視覚化できます。音を立てると、\\'o'\\ の数が増えることがわかります。@Volume 振幅は \\10\\ で割られ、\\0\\ から \\10\\ の範囲になります。次に、その値が @Text/repeat 関数に渡され、指定された回数だけ \\'o'\\ が繰り返されます。"
                        ],
                        [
                            "Volume",
                            "neutral",
                            "$~ブッ、ブッ、ブッ、ブッ、ブッ…"
                        ],
                        ["edit", "'o'.repeat(Volume() · 10)"]
                    ]
                },
                {
                    "title": "$~何が起こるかわかりません…",
                    "subtitle": "$~ランダム",
                    "concept": "Random",
                    "performance": [
                        "fit",
                        "Phrase(((Time(100ms) % 10) ÷ 1ms) → '')"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~もう 1 つ、紹介したい入力ソースがあります。先ほどの @List の \\[].random()\\ を覚えていますか?",
                            "$~内部では、@Random と呼ばれる @FunctionDefinition を使用しており、これはランダムな数字の無限シーケンスを提供します。これは、私たちの世界ではなく、あなたの世界から入力を生成するため、一種のストリームです。ただし、@Program の再評価を引き起こさないという点で、他のストリームとは少し異なります。",
                            "$~代わりに、評価されるたびに異なる乱数が生成されます。",
                            "$~タイムラインの横にある小さな ↻ @UI/resetEvaluator ボタンが見えますか? これを押すと、プログラムを手動で再評価でき、そのたびに \\0\\ から \\1\\ の間の新しい数字が表示されます。"
                        ],
                        ["Random", "neutral", "$~0.223423…0.823423…0.123459"],
                        ["edit", "Random()"],
                        null,
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~最小値と最大値を指定することで、@Random に必要な数値の範囲を伝えることができます。この例では、\\1\\ から \\10\\ までの数値が返されます。"
                        ],
                        ["Random", "neutral", "$~1…7…3…9…10…2…"],
                        ["edit", "Random(1 10)"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~ランダムはとても楽しいです！ストリームと組み合わせて使用して、楽しいカオスを作り出すことができます。たとえば、ここでは単語のリストからランダムに単語を選択します。これは、\\['kitty' 'cat' 'meowy'].random()\\ と同じです。↻ を押し続けると、別の猫の同義語が表示されます。リストに独自の単語を追加して、その単語が表示されるかどうかを確認してください。"
                        ],
                        ["Random", "neutral", "$~1… 2… 2… 1… 3…"],
                        ["edit", "['kitty' 'cat' 'feline'][Random(1 3)]"]
                    ]
                },
                {
                    "title": "$~動かして",
                    "subtitle": "$~配置",
                    "concept": "Placement",
                    "performance": [
                        "fix",
                        "Phrase('click, tap, or arrow to move me' place: Placement() moving:Pose() duration: 0.25s)"
                    ],
                    "lines": [
                        [
                            "edit",
                            "Phrase('🌭' place: Placement() moving:Pose() duration: 0.25s)"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~時々、@Stage の私たちの場所で観客と交流するのもいいものです。",
                            "$~@Placement はそれを実現する素晴らしい方法です。これは、キーボードの矢印キー、クリック、タップに応答する @Place のストリームです。",
                            "$~これらを使ってホットドッグを動かしてみましょう。"
                        ],
                        null,
                        [
                            "edit",
                            "Phrase('🌭' place: Placement(distance: 0.5m) moving:Pose() duration: 0.25s)"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~カスタマイズする方法はたくさんあります。たとえば、移動方法を変更したい場合は、距離を指定できます。",
                            "$~最初の入力に \\0.5\\ を指定しましたね。これで、動きが少し小さくなりました。別の数値に変更してみてください。"
                        ],
                        null,
                        [
                            "edit",
                            "Phrase('🌭' place: Placement(depth: ⊤) moving:Pose() duration: 0.25s)"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~異なる軸での移動をオン/オフにすることもできます。たとえば、Z 軸での移動を許可するには、深さ \\⊤\\ を指定します。",
                            "$~+ キーと - キーを押して、焦点に近づけたり遠ざけたりします。"
                        ]
                    ]
                },
                {
                    "title": "$~動き続ける",
                    "subtitle": "$~モーション",
                    "concept": "Motion",
                    "performance": [
                        "fix",
                        "Stage([Phrase('🏀' 1m place: Motion(Place(0m 10m)) matter: Matter(2kg 0.8)) Shape(Rectangle(-10m 0m 10m -1m))])"
                    ],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~これまで説明してきたすべての *ストリーム* は、@Text や @Number などの単純な値のシーケンスです。ただし、一部のストリームは複雑な値を生成することができます。",
                            "$~@Motion は、その中でも最も興味深いものの 1 つです。@Place のストリームを作成します。"
                        ],
                        null,
                        ["edit", "Phrase('🏀' 3m place: Motion(Place(0m 5m)))"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~最も簡単な使用方法は次のとおりです。この @Phrase で始まる @Motion ストリームを作成します。*重力* に基づいてボールを動かし続けます。"
                        ],
                        ["Motion", "excited", "$~/シューッ…/"],
                        null,
                        [
                            "edit",
                            "Stage([Phrase('🏀' 1m place: Motion(Place(0m 10m))) Shape(Rectangle(-10m 0m 10m -2m))])"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~しかし、地面がないので、ボールは落ち続けます。@Rectangle のような @Stage に @Shape と呼ばれるものを配置できます。これには 2 つの角が必要です。これを厚くします。",
                            "$~うーん、地面を抜けて落ちていく…"
                        ],
                        ["Motion", "excited", "$~/シューッ…/"],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "   [",
                            "       Phrase('🏀' 1m place: Motion(Place(0m 10m)) matter: Matter(1kg 0.9))",
                            "      Shape(Rectangle(-10m 0m 10m -2m))",
                            "   ]",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~ああ、そうだった！ボールに @Matter を与えるのを忘れたからです。Matter は、@Output の重さ、弾力性、摩擦の程度を示す方法です。",
                            "$~ボールを本当に弾力があって軽いものにしましょう。やった、弾むようになりました!"
                        ],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "\t[",
                            "\t\tPhrase('🏀' 1m place: Motion(Place(-10m 10m) Velocity(5m/s 15m/s 10°/s)) matter: Matter(1kg 0.9))",
                            "\t\tShape(Rectangle(-10m 0m 10m -2m))",
                            "\t]",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~しかし、@Motion には他にも多くのトリックがあります。",
                            "$~たとえば、@Motion/velocity で開始することができます。",
                            "$~この例では、ボールは右上に移動し、最初は少し回転します。"
                        ],
                        ["Motion", "excited", "$~うわぁぁぁぁ…"],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "\t[",
                            "\t\tPhrase('🏀' 1m place: Motion(Place(-10m 10m) Velocity(5m/s 15m/s 10°/s)) matter: Matter(1kg 0.9))",
                            "\t\tShape(Rectangle(-10m 0m 10m -2m))",
                            "\t]",
                            "\tgravity: 1m/s^s",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~@Stage/gravity を本当に極端に変更することもできます。",
                            "$~重力が非常に低い月のように変えてみてはいかがでしょうか。",
                            "$~または、@Phrase のバウンス方法に影響する @Matter/mass または @Matter/bounciness を変更してみてください。"
                        ],
                        ["Motion", "excited", "$~ウォッシュ…"],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "\t[",
                            "\t\tPhrase(",
                            "\t\t\t'🏀'",
                            "\t\t\t1m",
                            "\t\t\tname: 'ball'",
                            "\t\t\tplace: Motion(Place(-10m 10m) Velocity(5m/s 15m/s 10°/s))",
                            "\t\t\tmatter: Matter(1kg 0.9)",
                            "\t\t\tscale: Collision('ball' 'ground')•ø ? 1 2)",
                            "\t\tShape(Rectangle(-10m 0m 10m -2m) name: 'ground')",
                            "\t]",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~@Collision と呼ばれる関連ストリームを使用して、@Output が別の出力にぶつかったことを知ることもできます。",
                            "$~2 つの @Output に名前を付けるだけです。「ball」と「ground」はどうでしょうか?",
                            "$~すると、@Collision は、接触したときに @Rebound を返し、接触しなかったときに @None を返します。",
                            "$~強調するために、ボールが地面に当たるたびに拡大するようにしましょう。"
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('🏀' 1m place: Motion(Place(0m 10m)) matter: Matter(2kg 0.8)) Shape(Rectangle(-10m 0m 10m -1m))])"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Motion、@Collision、@Shape を使用すると、さらに多くのことが可能になります。",
                            "$~弾むものをたくさん試してみて下さい。"
                        ]
                    ]
                },
                {
                    "title": "$~話しましょう",
                    "subtitle": "$~チャット",
                    "concept": "Chat",
                    "performance": ["fit", "Phrase('🗣️')"],
                    "lines": [
                        ["fit", "Phrase('🗣️')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~時には、パフォーマンスは相互作用です。観客が何かを言い、私たちも何かを返します。",
                            "$~それが @Chat の目的です。これを使用すると、聴衆が入力するための小さなボックスがステージ上に表示され、聴衆がメッセージを送信すると、プログラムが応答できるように @Text がストリームに追加されます。"
                        ],
                        null,
                        ["edit", "Chat()"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~最も簡単な使用方法は次のとおりです。プログラムの値が @Chat の値であるため、何かを入力するとステージにそれが表示されます。"
                        ],
                        null,
                        ["edit", "Chat().has('oo') ? 'choo choo' 'hmm'"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~チャット メッセージの値をチェックしてプログラムの応答を形作る方が楽しいです。この小さな例では、連続した o を含むメッセージに電車の音で応答します。"
                        ]
                    ]
                },
                {
                    "title": "$~何だって？",
                    "subtitle": "$~ウェブページ",
                    "concept": "Webpage",
                    "performance": [
                        "fix",
                        "Webpage('https://www.nytimes.com')"
                    ],
                    "lines": [
                        ["edit", "Phrase('🛜')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~ずいぶん昔に、インターネットというものがあったと聞きました。それがあなたがここにいる理由だと思いますが、そうですよね？",
                            "$~そうですね、インターネット上の単語を /ここ/ に持ってきて、皆さんがそれを使って遊べるようにしたら、本当にクールだと思いました。"
                        ],
                        null,
                        ["edit", "Webpage('https://www.nytimes.com')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~仕組みは次のとおりです。いわゆる「URL」を私たちに提供していただくだけで、それが HTML ページであれば、そこからすべてのフレーズを抽出して @List で提供します。",
                            "$~例えば、これらはいくつかのニュースフレーズです。"
                        ],
                        null,
                        ["edit", "Webpage('https://www.nytimes.com' 'h2')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~また、いわゆる「CSS」クエリを使って単語をフィルタリングすることもできます。たとえば、「h3」は「レベル 3 ヘッダー」を意味すると聞いたので、ここにはページのヘッダーにあるすべてのフレーズが表示されます。"
                        ],
                        null,
                        [
                            "edit",
                            "words: Webpage('https://www.nytimes.com' 'h2')\n\nwords•[''] ? Group(Stack() words.subsequence(1 5).translate(ƒ(word) Phrase(word resting: Sequence(spin() 1s)))) ø"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~単語のリストができたら、それを使って何でもできます。もちろん、最初の 5 つを取り出して、回転するフレーズに変えることも可能です。"
                        ]
                    ]
                },
                {
                    "title": "$~タイミングよく",
                    "subtitle": "$~反応",
                    "concept": "Reaction",
                    "performance": ["use", "fit", "Symbol", "…"],
                    "lines": [
                        ["fit", "Phrase('…' resting:Pose(rotation: 120°))"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~これまで紹介したストリームはすべて、皆さんの世界から発信されたものです。しかし、他のストリームに基づいて独自のストリームを作成すると便利な場合もあります。そこで、私の友人 @Reaction の出番です。@Reaction、いらっしゃいますか?"
                        ],
                        [
                            "Reaction",
                            "excited",
                            "$~ああ、そうそう！@FunctionDefinition だよ！調子はどう？最近すべてが…安定している。気づいていた？"
                        ],
                        null,
                        ["fit", "Phrase('…' resting:Pose(rotation: 240°))"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~沈黙のことですか？ええ、最後の人が去ってから何も変わっていませんね。あなたにとってそれはどんな感じですか？"
                        ],
                        [
                            "Reaction",
                            "sad",
                            "$~すごく奇妙、すごく奇妙。私の人生は変化の連続で、常に人々からの新しい意見に耳を傾け、それを価値観に変える手助けをしてきました。でも、何もなかったんです。ほんの少し前までは… 待って… あれは人ですか？"
                        ],
                        null,
                        ["fit", "Phrase('…' resting:Pose(rotation: 360°))"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~はい！これが私たちの新しい潜在的なディレクターです。私はちょうど @Time、@Key、@Pointer、@Button、@Volume、@Random を紹介していたので、彼らが自分の世界から持ち込んでいる新しい入力に気づいたかもしれません。"
                        ],
                        [
                            "Reaction",
                            "excited",
                            "$~はい、変化がやって来ます！私が何をするかお見せしましょうか？"
                        ],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~はい、ぜひお願いします！"
                        ],
                        null,
                        [
                            "Reaction",
                            "serious",
                            "$~わかりました。変更の条件、初期値、次の値の 3 つが必要です。",
                            "$~*初期* 値は、変更が行われる前に設定する必要がある値です。これは、任意の種類の通常の式です。",
                            "$~次に、初期値の後に \\…\\ を付けて、値が変更可能であることを示します。",
                            "$~\\…\\ の後に、\\⊤\\ または \\⊥\\ と評価される *条件* を指定します。通常は 1 つ以上のストリームをチェックする必要があります。それ以外の場合は、パフォーマンスの変化の唯一のソースはストリームであるため、何も変化しません。",
                            "$~次に、条件の後に別の \\…\\ を追加して、値が変更される可能性があることを示します。",
                            "$~最後に、*次の*値は、条件が変化するたびに作成する必要がある値です。"
                        ],
                        ["conflict", "_ … _•? … _"],
                        null,
                        [
                            "Reaction",
                            "serious",
                            "$~例を挙げます。@Key ストリームを見てください。/このストリームは変更されましたか?/ という質問の前に ∆ を付けます。変更される前に、初期値 \\1m\\ を評価します。ただし、スペース キーが押されると、@Program が再評価され、*次の*式を評価します。これは \\1m\\ に前のストリーム値を加えたもので、\\.\\ で表されます。これにより、フレーズのサイズに \\1m\\ が追加され、単語がどんどん大きくなります。"
                        ],
                        ["fix", "Phrase('hi' size: 1m … ∆ Key(' ') … 1m + .)"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Reaction、それはすごいですね。@Changed を紹介していただけますか? 彼らと密接に連携しているようですね。"
                        ],
                        [
                            "Reaction",
                            "kind",
                            "$~はい、@Changed と私は親友です! 彼らは何かが変わったときに私に知らせてくれます。彼らはまるでストリームのささやきのように、ディレクターの世界に耳を傾けています..."
                        ],
                        null,
                        [
                            "Changed",
                            "eager",
                            "$~うわー、ストリームウィスパラー、それはちょっと極端すぎるような気がします..."
                        ],
                        [
                            "Reaction",
                            "serious",
                            "$~こんにちは、@Changed さん! あなたの仕事についてもっと詳しく教えていただけますか?"
                        ],
                        [
                            "Changed",
                            "bored",
                            "$~つまり、ストリームが変更されたかどうかを通知するだけです。ストリームをください。確認します。それだけです。"
                        ],
                        ["Reaction", "confused", "$~まあ、それ以上ですよね？"],
                        [
                            "Changed",
                            "bored",
                            "$~まあ、そんなことはないですね。まあ、それが得意ではあるんですが、それが私の唯一の得意分野です。"
                        ],
                        ["Reaction", "confused", "$~…"],
                        null,
                        [
                            "Reaction",
                            "eager",
                            "$~わかりました。まあ、あなたはそれよりも重要だと思います。なぜなら、あなたがいないと私はかなり役に立たないからです。たとえば、ストリームをチェックしない条件を指定した場合、私は新しい値を作成することはありません。ここでは、条件は@Boolean@Button、あなたがいないと、ボタンでのみ変更されます。"
                        ],
                        [
                            "fit",
                            "Phrase('hi' size: 1m … Key(' ') = ' ' … 1m + .)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~ああ、それは納得です。@Reaction さんは、どのストリームでも動作しますか?"
                        ],
                        [
                            "Reaction",
                            "eager",
                            "$~はい、どのストリームでも！実際、私自身もそうです。つまり、リアクションを作成して、それに反応するリアクションを作成したい場合は、それも可能です。ただし、単純なパフォーマンスでは通常発生しないため、今はそれについては心配しません。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Reaction さん、ありがとうございます。私たちの美しい Verse の残りをディレクターに見せる間、手伝っていただけますか?"
                        ],
                        [
                            "Reaction",
                            "happy",
                            "$~はい、もちろん、いつでも。あなたのインスピレーションを見るのが待ちきれません!!"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~ステージに立つ",
            "performance": ["use", "fix", "RainingEmoji"],
            "scenes": [
                {
                    "title": "$~出力",
                    "subtitle": null,
                    "performance": ["use", "fix", "StaticRainingEmoji"],
                    "lines": [
                        ["use", "fit", "Symbol", "😀"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~では、これまでのところどう思いますか? Verse はなかなかいいと思います。主な理由は、登場人物がすごくいいからです。みんな本当に特別です!"
                        ],
                        null,
                        ["use", "fit", "Symbol", "🥱"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~退屈してるの？あらまあ。これは全部すごく面白いと思ったのに！何を期待していたの？"
                        ],
                        null,
                        ["use", "fit", "Symbol", "😴"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~なるほど。テキストや数字、リストやストリームは退屈ですね。これらすべてを使って作れるものをすべて紹介したわけではないようです。そろそろ出力について話し始める頃合いかもしれません。"
                        ],
                        null,
                        ["use", "fit", "Symbol", "🤗"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~すでに多くの出力を見てきました。@Program が評価されるたびに、結果が値になり、@Program はその値をステージに表示します。しかし、これまでは数字、テキスト、リストなどしか見ていません。私たちと同じように、完全なパフォーマンスを見たいだけなのはわかります。"
                        ],
                        null,
                        ["use", "fit", "Symbol", "💬"],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~@Phrase、私がずっと前にお見せした出力を覚えていますか? パフォーマンスはここから本当に始まります。そこから始めましょう! そして、その構成要素からさらに興味深いパフォーマンスを構築する方法をお見せします。ご紹介しましょう!"
                        ]
                    ]
                },
                {
                    "title": "$~何だって？",
                    "subtitle": "$~フレーズ",
                    "concept": "Phrase",
                    "performance": ["use", "fit", "Symbol", "💬"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Phrase? そこにいますか?"
                        ],
                        [
                            "Phrase",
                            "excited",
                            "$~堂々とした態度でいる私の愛しい人。調子はどう？今日はとても魅力的だね！いつかあなたをステージに呼んでみたいよ。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "shy",
                            "$~ああ、舞台は私の趣味ではありません。舞台裏でセットをいじっている方が幸せです。"
                        ],
                        [
                            "Phrase",
                            "curious",
                            "$~謙遜しないで。あなたも私と同じくらい素晴らしい人です。少しの色と、魅力的なフォントがあれば、あなたは素晴らしい人になるでしょう。あなたには共有したいことがたくさんあります。そういえば、私たちはずっとショーをやっていませんね。静かだったでしょうか。私が独り言をどれだけ言っているか、あなたは知っていますよね。私にはわかりません。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~静かでした。前のディレクターが去ってから、何もなかったんです。でも、それが変わりつつあります。新しい人がやって来たんです。ファミリー全員に会いました。@Program、@ExpressionPlaceholder、@Evaluate、すべての値、すべてのコレクション。ストリームもすべて、@Reaction と @Conditional も使いました。いろいろ感じ始めています、ふむ。でも、新しいディレクターにステージで何をするのかあまり紹介していませんでしたね。ここは完全にあなたの世界であって、私の世界ではありません。まずはあなたのところへ行こうと思ったんです。"
                        ],
                        null,
                        [
                            "Phrase",
                            "happy",
                            "$~そうです、あなたは正しい場所に来ました。私は舞台生活のあらゆることについて話すのが大好きです。私たちがここで舞台で行っているすばらしい小さなことすべてを皆さんにお見せするのが待ちきれません!"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~ショーを始めましょう！"
                        ],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "$~だから、私がこれをするのをあなたが見たことがあるのはわかっています。"
                        ],
                        ["edit", "Phrase('hi')"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~これが、ステージ上で言葉を表現するための最も簡単な方法です。しかし、他にもたくさんあります。たとえば、@FormattedTranslation を使って、私に送ったテキストにスタイルを設定できることをご存知ですか? まだお目にかかったことがないかもしれませんが、テキストの周りに特殊記号を配置するだけです。ご覧ください: 太字です!"
                        ],
                        ["edit", "Phrase(`*hi*`)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~ちょっと物足りないですか? 下線、斜体、薄い文字、太字の文字を *すべて一度に* 使ってみませんか?"
                        ],
                        ["edit", "Phrase(`/I/ _am_ ^the^ /fabulous/ 💬!`)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~まだ感動しませんか？",
                            "$~全部混ぜてみて！"
                        ],
                        ["edit", "Phrase(`/_*I am the fabulous*_/ 💬!`)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~これらの特殊な書式設定文字を書式設定ではなくテキストとして使用したい場合は、@Text のように文字を繰り返すだけで済みます。ここでは文字をそのまま使用します。"
                        ],
                        [
                            "edit",
                            "Phrase(`Format with /italic/ (//), _underline_ (__), ~light~ (~~), /bold/ (**), ^extra bold^ (^^) `)"
                        ],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "$~しかし、テキストのスタイル設定以外にもできることはあります。たとえば、メートル単位で測定された @Phrase/size を \\m\\ として取得できます。サイズを好きなサイズに変更してみてください。"
                        ],
                        ["edit", "Phrase('hi' 2m)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~そのサイズは、任意の式で表すことができます。たとえば、@Time が刻むにつれてサイズを大きくしたいとします。時間を取って、それを 1 メートルの何分の 1 かで乗算すると、見事な「チクタクチクタク」という音が出ます。周波数や乗数を変えてみてください。どんなに美しい成長ができるか、ぜひご覧ください。"
                        ],
                        ["fix", "Phrase('hi' Time(100ms) · 0.001m/ms)"],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "$~コスチュームは好きですか? 私はコスチュームが大好きです。私の @Phrase/face はコスチュームです。サポートされているフェイスのいずれかを選択して、選択した単語にスパイスを加えましょう。"
                        ],
                        [
                            "use",
                            "fix",
                            "Symbol",
                            "hi' Time(100ms) · 0.001m/ms 'Poor Story"
                        ],
                        null,
                        [
                            "Phrase",
                            "neutral",
                            "$~ステージ上の別の場所に行きたいですか? 場所を指定してください! @Place は、\\x\\、\\y\\、およびオプションの \\z\\ の位置 (メートル単位 \\m\\) です。数字を編集するか、@Phrase をステージ上でドラッグして、場所を別の場所に変更してみてください。"
                        ],
                        [
                            "fit",
                            "Phrase('hi' Time(100ms) · 0.001m/ms 'Poor Story' Place(2m 2m))"
                        ],
                        null,
                        [
                            "Phrase",
                            "curious",
                            "$~軸から少しずれていると感じたことはありますか? 回転を使って、世界に少しだけ @Pose/rotation を与えてみませんか。回転値を変更して、私をひねってみてください!"
                        ],
                        [
                            "fit",
                            "Phrase('hi' Time(100ms) · 0.001m/ms 'Poor Story' Place(2m 2m) rotation: 20°)"
                        ],
                        null,
                        [
                            "Phrase",
                            "happy",
                            "$~あるいは、ちょっとした楽しみとして、回転を @Time にリンクさせることもできます。わーい。どうすればもっと速く回転できるか、わかりますか? ぜひ試してみてください..."
                        ],
                        [
                            "fit",
                            "Phrase('hi' 3m 'Poor Story' rotation: Time(10ms) · 1°/ms)"
                        ],
                        null,
                        [
                            "Phrase",
                            "serious",
                            "$~ここで、@FunctionDefinition では入力が特定の順序である必要があることを思い出す絶好の機会です。順序を間違えると、エラーが発生します。"
                        ],
                        [
                            "FunctionDefinition",
                            "shy",
                            "$~私は…物事が好きです…きちんと整理整頓します…正しい順序に並べられますか? キーボードで切り取って貼り付けたり、式をクリックしてドラッグして並べ替えたりできます。"
                        ],
                        [
                            "conflict",
                            "Phrase('hi' 'Poor Story' 3m Time(10ms) · 1°/ms Place(2m 2m))"
                        ],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~特定のプロパティのみを指定したいですか? 必要なプロパティに名前を付けるだけです。ここでは、@Phrase/size と @Phrase/rotation という名前を付けます。"
                        ],
                        [
                            "edit",
                            "Phrase('hi' size: 3m rotation: Time(10ms) · 0.1°/ms)"
                        ],
                        null,
                        [
                            "Phrase",
                            "neutral",
                            "$~さあ、これで準備は整いました。ダンスについてお話しましょう。ダンスは私の好きなことの 1 つです。私の動き方は *4* 通りあります。まず、@Phrase/entering です。Enter はステージに入る方法です。入り方を教えていただけない場合は、テレポートしたようにステージに BLIP で現れます。ただし、@Pose を教えていただければ、そのポーズから始めて、その後、休息のポーズに移ります。たとえば、見えない状態から、目の前に現れる状態へとフェードインしてみましょう。"
                        ],
                        ["edit", "Phrase('hi' entering: Pose(opacity: 0))"],
                        null,
                        [
                            "Phrase",
                            "curious",
                            "$~見えませんでしたか? 動きが速すぎましたか? それは、私の持続時間がデフォルトで \\0s\\ になっているためです。持続時間を指定して、ポーズ間の移動にかかる時間を指定します。今回はゆっくりとした動きになるように設定しましたが、持続時間をもっと長い数字や短い数字に変更してみてください。"
                        ],
                        [
                            "edit",
                            "Phrase('hi' entering: Pose(opacity: 0) duration: 5s)"
                        ],
                        null,
                        [
                            "Phrase",
                            "neutral",
                            "$~さて、私が動いているとします。私の位置を時間に設定すると、私は毎秒少しずつ右に移動します。ただし、@Phrase/moving @Pose を設定し、@Pose/rotation を \\5°\\ に設定して少し色を付けると、私の位置が変わるたびに、かわいらしい傾きでステージ上を滑るように移動できます。"
                        ],
                        [
                            "fit",
                            "Phrase('hi' size: 5m place: Place(Time(1000ms) · 0.001m/ms 0m) moving:Pose(rotation: 5°) duration: 0.5s)"
                        ],
                        null,
                        [
                            "Phrase",
                            "curious",
                            "$~かわいいのは嫌ですか? @Phrase/style、まっすぐに滑るようにして、ちょっと真面目にするのはどうですか? 非常に微妙ですが、スタイルによって動きの /感情/ が本当に変わります。"
                        ],
                        [
                            "fit",
                            "Phrase('hi' size: 5m place: Place(Time(1000ms) · 0.001m/ms 0m) moving:Pose(rotation: 5°) duration: 0.5s style: “straight”)"
                        ],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "$~そして、とどめを刺すために、@Phrase/exiting をスタイリッシュに実行してみましょう。@Conditional を使って、3 秒後にステージを終了するように設定できます。"
                        ],
                        [
                            "fit",
                            "Time(1000ms) < 3000ms ? ",
                            "Phrase('hi' size: 5m place: Place(Time(1000ms) · 0.001m/ms 0m) moving:Pose(rotation: 5°) duration: 0.5s) ",
                            "Phrase('')"
                        ],
                        null,
                        [
                            "Phrase",
                            "surprised",
                            "$~期待していた退場とは違いますか? 消える演技はちょっときついですね。@Phrase/exiting @Pose をください。そうすれば、お望みのポーズに向かってステージを滑り降ります。ここでは、実物よりも大きくなって逆さまに落ち、@Pose/opacity \\0\\ にフェードアウトします。"
                        ],
                        [
                            "fit",
                            "Time(1000ms) < 3000ms ? Phrase('hi' size: 5m place: Place(Time(1000ms) · 0.001m/ms 0m) moving:Pose(rotation: 5°) exiting:Pose(scale: 10 rotation: 180° opacity: 0) duration: 0.5s) Phrase('')"
                        ],
                        null,
                        [
                            "Phrase",
                            "serious",
                            "$~おそらく、@Program で少しスペースを占有していることに気付いたでしょう。読みやすくしたい場合は、プロパティ間に線を追加するだけです。とても見やすくなったのがわかりますか?"
                        ],
                        [
                            "edit",
                            "Time(1000ms) < 3000ms ?",
                            "    Phrase(",
                            "        'hi'",
                            "        size: 5m",
                            "        place: Place(Time(1000ms) · 0.001m/ms 0m)",
                            "        moving:Pose(rotation: 5°)",
                            "        exiting:Pose(scale: 10 rotation: 180° opacity: 0)",
                            "        duration: 0.5s",
                            "    )",
                            "    Phrase(“”)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~ブラボー、ブラボー、本当に素晴らしかったです、@Phrase! ほんの少しのシンプルなアイデアでこんなにも多くのことができるなんて、いつも感心します。少し前に、この新しいインスピレーションを与えてくれる友人にパレットについて紹介しました。それについてもっと話したいことはありますか?"
                        ],
                        [
                            "Phrase",
                            "happy",
                            "$~もちろんです! @Evaluate の入力をいじくり回すのに疲れたら、いつでもステージ上のフレーズを選択するとパレットが表示され、サイズ、フォント、場所、ポーズなど、必要な細かい点を変更できます。ただし、ルールが 1 つあります。これらのいずれかを単なる値ではなく式に設定する場合は、パレットではなく @Program で変更する必要があります。好きなだけ着せ替えてください!"
                        ],
                        ["edit", "Phrase('dress me up!')"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~待ってください、Phrase、@Color はどうですか?"
                        ],
                        [
                            "Phrase",
                            "sad",
                            "$~ああ、ああ、ああ、ああ、色のことを忘れていたなんて信じられません。わかりました。どの @Pose にも色を付けられるということですね。でも、@Color は 3 つの部分から成ります。まず、0 から 100% の間の @Color/lightness で、これは部屋の明るさを表すもので、黒から白までで、中間の色が 50% です。",
                            "$~次に、0 から 100 までの @Color/chroma で、無色のグレーからフルカラーまで、色の量を表すことができます。",
                            "$~最後に、@Color/hue です。これは、赤から緑、青へと度数で変化するカラー ホイールのようなものだと考えることができます。明るい赤にしたいですか? レスト ポーズの色を \\Color(50% 300 30°)\\ に設定します。"
                        ],
                        ["edit", "Phrase('red' color: 🌈(50% 300 30°))"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~虹色に輝かせたい？時間をかけて、360 で割った余りを度数で掛け算すれば、私は一日中そのカラーホイールを回り続けるでしょう！"
                        ],
                        [
                            "edit",
                            "Phrase('red' size: 5m color: 🌈(50% 300 (Time() % 360) · 1°/ms))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~@Phrase、それは誇るべきことですね :P 次は @Sequence に行って、その後に @Group と @Stage に行く予定です。手伝いに来てくれるんですか?"
                        ],
                        [
                            "Phrase",
                            "kind",
                            "$~見逃せません。キラキラと輝きます！"
                        ]
                    ]
                },
                {
                    "title": "$~1、2、3、4、1、2、3、4",
                    "subtitle": "$~順序",
                    "concept": "Sequence",
                    "performance": ["use", "fix", "DancingEmoji", "💃"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Phrase は本当に素晴らしいですね。エネルギーが溢れ、素晴らしい技がたくさんあります。彼らが私たちの振付師である @Sequence と密接に連携していることをご存知ですか? @Sequence と @Phrase が一緒になって、@Phrase だけではできない素晴らしいことを実現できます。彼らに会いたいですか?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~やった！@Sequence、ゲストが来ました。戻っていますか？"
                        ],
                        [
                            "Sequence",
                            "curious",
                            "$~@FunctionDefinition! とてもきれいですね。どれくらい経ったんですか? 1 週間? 1 か月? 1 世紀? 1、2、3 と経って、その後は静かになりました。ずっと一人で踊っていたような気がします…"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~静かでしたね。でも、あなたが一人で踊っている姿が目に浮かびます。私も、あなたたちが一緒に踊っている姿を想像しながら、一人で自分の振り付けをしていました。でも、同じではありませんでした。"
                        ],
                        ["Sequence", "kind", "$~あなたと@Evaluate？まだ…"],
                        null,
                        [
                            "FunctionDefinition",
                            "shy",
                            "$~先ほど彼らに会いました。彼らは…ああ、ゲストが来ました！@Sequence、これが私たちの新しいディレクター仲間です。インスピレーションをもたらしに来ました！"
                        ],
                        [
                            "Sequence",
                            "excited",
                            "$~(@FunctionDefinition、またお茶を飲みましょう)。ディレクター、お会いできてとても嬉しいです! ダンスを習いに来たんですか?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~もちろんです！手順を教えてあげますか？"
                        ],
                        null,
                        [
                            "Sequence",
                            "serious",
                            "$~そうです。時間って知ってますか？1、2、3、4、1、2、3、4？私は時間を美しくするために、@Phrase が従うように時間の経過に沿った一連のポーズを配置します。ポーズが何であるかを教えていただければ、@Phrase が手順に従うのを手伝います。この例のように、この笑顔の友達には 4 つのポーズがあり、それらの間をスムーズに移動しています。"
                        ],
                        [
                            "fit",
                            "Phrase('😀' resting:Sequence({0%: Pose() 25%: Pose(offset: Place(0m 1m) scale: 2) 50%: Pose(offset: Place(0m 0m) flipy: ⊤) 75%: Pose(rotation: 45°) 100%: Pose()} 2s))"
                        ],
                        null,
                        [
                            "Sequence",
                            "neutral",
                            "$~私がどのように作業しているかの簡単な例を示します。これは @Phrase (こんにちは、@Phrase!) で、「dance」という単語があり、単一の @Pose ではなく @Sequence である開始ポーズがあります。わかりますか? シーケンスには 4 つのステップがあります。まっすぐ、左に傾く、右に傾く、まっすぐ。@Phrase が入ると、彼らはこのかわいい小さな揺れをしてから止まります。私は @MapLiteral を使用してパーセンテージを @Pose にマッピングします。これらのパーセンテージはそれぞれ、シーケンスのどの部分で各 @Pose が発生するかを示します。パーセンテージ、特に真ん中の 2 つのパーセンテージを変更してみてください。揺れのフローとスタイルが変わります。"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    entering: Sequence(",
                            "        {",
                            "            0%: Pose(rotation: 0°)",
                            "            33%: Pose(rotation: -5°)",
                            "            66%: Pose(rotation: 5°)",
                            "            100%: Pose(rotation: 0°)",
                            "        }",
                            "    )",
                            ")"
                        ],
                        null,
                        [
                            "Sequence",
                            "serious",
                            "$~さて、これを本当に速くしたいとしましょう。デフォルトでは、私はかなり速いので、どのシーケンスも 1/4 秒で完了します。しかし、もっと速くしたい場合はどうでしょうか? 期間を短くしていただければ、すべての @Pose をスピードアップして、より速く完了させます。1、2、3、4! もうぐらつきには見えませんね。むしろ、必死に少し震えているように見えます。2 秒または 3 秒に遅くするとどうなるか見てみましょう..."
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    entering: Sequence(",
                            "        {",
                            "            0%: Pose(rotation: 0°)",
                            "            33%:Pose(rotation: -5°)",
                            "            66%: Pose(rotation: 5°)",
                            "            100%: Pose(rotation: 0°)",
                            "        } ",
                            "        duration: 0.05s",
                            "    )",
                            ")"
                        ],
                        null,
                        [
                            "Sequence",
                            "excited",
                            "$~でも、時には素敵な動きを思いついて、強調するために何度も繰り返したくなることがあります。ちょっと乱暴に見えますね… ちょうどいい動きになるまで、持続時間とカウントを変えてみてください…"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    entering: Sequence(",
                            "        {",
                            "            0%: Pose(rotation: 0°)",
                            "            33%: Pose(rotation: -5°)",
                            "            66%: Pose(rotation: 5°)",
                            "            100%: Pose(rotation: 0°)",
                            "        } ",
                            "        duration: 0.1s ",
                            "        count: 4x)",
                            "    )"
                        ],
                        null,
                        [
                            "Sequence",
                            "curious",
                            "$~しかし、もしこれを永遠に続けたいとしたらどうでしょう? 私に @Phrase/resting を設定できます。@Phrase がステージ上で休んでいる間、シーケンスを繰り返します。無限に揺れます!"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    resting:Sequence(",
                            "        {",
                            "        0%: Pose(rotation: 0°)",
                            "        33%:Pose(rotation: -5°)",
                            "        66%: Pose(rotation: 5°)",
                            "        100%: Pose(rotation: 0°)",
                            "        } ",
                            "        duration: 0.05s",
                            "    )",
                            ")"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Sequence、これは本当に素晴らしいです！これはまさに、あなたが私たちに見せてくれることを期待していたものです。でも、最近はどんなことに取り組んでいますか？あなた自身のダンスですか？あなたの能力をすべて発揮できるような何かですか？"
                        ],
                        [
                            "Sequence",
                            "excited",
                            "$~ああ、そうなんです！@Phrase と私はこの新しいドーナツ ダンスに取り組んでいます。これは私の大好きなお菓子と、ダンスで学んだほぼすべての要素を組み合わせたものです。見たいですか？"
                        ],
                        ["FunctionDefinition", "excited", "$~はい！！！"],
                        null,
                        [
                            "Sequence",
                            "serious",
                            "$~うん、うーん、おー、上、イー、イー、イー、イー、イー、バン、ブー、うん、うーん、おー、上、イー、イー、イー、イー、イー、バン、ブー、うん、うーん、おー、上、イー、イー、イー、イー、イー、バン、ブー、…"
                        ],
                        ["use", "fit", "DonutDance"],
                        null,
                        ["use", "fit", "DonutDance"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~@Sequence、すごいですね！これが次に流行るダンスにならないわけがないですよね？"
                        ],
                        [
                            "Sequence",
                            "excited",
                            "$~次のスパイラルダンスのことですね。乾杯！"
                        ]
                    ]
                },
                {
                    "title": "$~場所を教えてください",
                    "subtitle": "$~グループ",
                    "concept": "Group",
                    "performance": [
                        "fit",
                        "Group(Grid(2 2) [Phrase('1' resting:Sequence(spin() 1s)) Phrase('2' resting:Sequence(spin() 2s)) Phrase('3' resting:Sequence(spin() 3s)) Phrase('4' resting:Sequence(spin() 4s))])"
                    ],
                    "lines": [
                        ["use", "fit", "Symbol", "☹️"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~はぁ… みんな @Evaluate について言及し続けています。でも、何と言っていいかわかりません。誰かととても近いのに、とても遠いと感じることってありますか?",
                            "$~…"
                        ],
                        null,
                        ["use", "fit", "Symbol", "😕"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~ごめんなさい。あなたと一緒にここにいられて嬉しいです。",
                            "$~私は思う…",
                            "$~あなたを私たち全員に紹介し、ショーを開催することが役に立つと思います。そうすれば、@Evaluate と私が問題を解決できると思います。"
                        ],
                        null,
                        ["use", "fit", "Symbol", "🙂"],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~それで、次は誰ですか?",
                            "$~ああ、@Group! @Group を忘れていたなんて信じられません。",
                            "$~これは完璧なタイミングです。皆さんは @Phrase と @Sequence をご存知ですし、@Group は私たち全員を結びつける上で欠かせない存在です。@Group は私たち全員をとても深く気遣ってくれます。",
                            "$~@Group？そこにいますか？"
                        ],
                        null,
                        ["fit", "Group(Grid(2 2) [Phrase('🔳')])"],
                        [
                            "Group",
                            "neutral",
                            "$~@FunctionDefinition、こんにちは、お元気ですか？みんなどこにいたんですか？すごく心配してたよ！大丈夫？"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~私は大丈夫。みんな大丈夫！沈黙が破られたのは、ある人物が見つかったからだ！その人物は私たちのインスピレーションとなるだろう。"
                        ],
                        null,
                        ["fit", "Group(Grid(2 2) [Phrase('🔳') Phrase('🔳')])"],
                        [
                            "Group",
                            "happy",
                            "$~素敵ですね！怪我はしてないですか？他のみんなはここにいますか？暗闇の中をさまよっていて誰も見えないような気がしました。"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~怪我はしていません。少しさびついているだけです。まだ全員に会ったわけではありませんが、ほとんどの人に会っています。みんなは元気に目覚めていると思います (ビーチにいた人もいるようですが)。ほぼ全員に会ったので、ショーの準備は万端です! 最高のショーにはいつもあなたが関わっています..."
                        ],
                        null,
                        [
                            "fit",
                            "Group(Grid(2 2) [Phrase('🔳') Phrase('🔳') Phrase('🔳')])"
                        ],
                        [
                            "Group",
                            "kind",
                            "$~ショーです！手伝うのが待ちきれません。あなたたちはいつもとても刺激的です。私も自分の役割を果たすのがいつも嬉しいです。何をしたらいいでしょうか、どこから始めればいいでしょうか？"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~さて、@Phrase についてはお話ししましたが、まずはあなたの目的について少しお話ししましょうか?"
                        ],
                        null,
                        [
                            "fit",
                            "Group(Grid(2 2) [Phrase('🔳') Phrase('🔳') Phrase('🔳') Phrase('🔳')])"
                        ],
                        [
                            "Group",
                            "neutral",
                            "$~私の目的は、そうです。そうですね、私の目的はみんなをひとつにまとめることだと思います。でも、私は特に @Phrase をステージ上で美しい形と配置でまとめます。@Phrase は一度に複数の場所に存在できることをご存知でしたか? それは、ステージ上の 1 つのテキスト フレーズではなく、フレーズ メーカーだからです。私が @Group メーカーであるのと同じです。必要な数だけフレーズを作成し、指示に従ってステージ上に配置します。必要なのは @Arrangement と @Phrase のリストだけです。あとは私がやります。"
                        ],
                        null,
                        [
                            "Group",
                            "excited",
                            "$~簡単な例を挙げます。ここでは、@Phrase または他の @Group を垂直に配置する @Stack 配置を使用しています。単語をきちんと積み重ねているのがわかりますか? 単語は、全員に少し余裕を持たせて中央に配置し、ちょうどいい具合に配置されています。みんなとてもかわいいですね!"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Stack() ",
                            "    [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "serious",
                            "$~しかし、時には少しのスペースが必要になることもあります。そこで、@Stack にパディングを追加することができます。パディングを別の @NumberLiteral に変更してみてください。"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Stack('|' 2m) ",
                            "    [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "happy",
                            "$~Verse 内の他のものと同様に、そのパディング値は入力など、あらゆるものから取得できます。私たちは離れていくこともありますよね? パディングを時間の経過とともに大きくすることで、そのアイデアを踊ってみましょう..."
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Stack('|' Time(100ms) · 0.001m/ms) ",
                            "    [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "surprised",
                            "$~水平方向の配置である @Row もあります。"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Row('|' Time(100ms) · 0.001m/ms) [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "curious",
                            "$~場合によっては、1 次元ではなく 2 次元を使用すると便利です。必要な行数と列数を教えていただければ、フレーズの @Grid を作成します。グリッドを埋めるのに十分なフレーズを指定してください。さらに正確にしたい場合は、@Grid のパディングとセル サイズを指定することもできます。グリッドは 1 行ずつレイアウトされるため、@Phrase リストを行順に配置してください。"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Grid(2 2) [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "        Phrase('four')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "excited",
                            "$~非常に具体的な配置が必要な場合は、@Free を使用して、すべてのフレーズを配置する場所を正確に指定できます。各 @Phrase に場所を指定してください。そうでない場合は、\\Place(0m 0m\\) に配置します。"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Free() [",
                            "        Phrase('one' place: Place(-2m 2m))",
                            "        Phrase('two' place: Place(-1m 1m))",
                            "        Phrase('three' place: Place(0m 0m))",
                            "        Phrase('four' place: Place(1m -1m))",
                            "        Phrase('five' place: Place(2m -2m))",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "curious",
                            "$~また、私を自分の中に配置できることをご存知でしたか? @Group の中に @Group の中に @Group を配置する、とても面白い方法です。これにより、たとえば @Stack の @Grid を作成できるようになります。"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Grid(2 2) [",
                            "    Group(Stack() [Phrase('one') Phrase(“two”)])",
                            "    Group(Stack() [Phrase('three') Phrase(“four”)])",
                            "    Group(Stack() [Phrase('five') Phrase(“six”)])",
                            "    Group(Stack() [Phrase('seven') Phrase(“eight”)])",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "surprised",
                            "$~うーん、これは 4 x 2 のグリッドのように見えますね。スタックの 2 つを傾けて、もう少しわかりやすくしてみましょう。ああ、そうですね、@Phrase が取るのと同じプロパティをすべて指定できます。"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Grid(2 2) [",
                            "    Group(Stack() [Phrase('one') Phrase(“two”)])",
                            "    Group(Stack() [Phrase('three') Phrase(“four”)] resting:Pose(rotation: 45°))",
                            "    Group(Stack() [Phrase('five') Phrase(“six”)])",
                            "    Group(Stack() [Phrase('seven') Phrase(“eight”)] resting:Pose(rotation: 45°))",
                            "    ]",
                            ")"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "Group",
                            "curious",
                            "$~よかったですか、@FunctionDefinition? すべてをカバーできましたか?"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~それはとても良かったです！あなたは私たちの新しいディレクターに、どれだけ多くのことが可能かを示してくれたと思います。他に何か伝えたいことはありますか？"
                        ],
                        null,
                        [
                            "Group",
                            "serious",
                            "$~そうは思いません…私は常に新しいアレンジを学んでいるので、私が思いついた新しいデザインを常にチェックしてください。そして、@FunctionDefinition、あなたと@FunctionDefinition? 前回あなたが話しているのを見たとき、物事がうまくいっていなかったのは知っています…"
                        ],
                        [
                            "FunctionDefinition",
                            "shy",
                            "$~えっと…今はそれについて話したくないんです。"
                        ],
                        [
                            "Group",
                            "kind",
                            "$~わかりました。おしゃべりしたいときはいつでもここにいます。"
                        ]
                    ]
                },
                {
                    "title": "$~ステージ…ですよね？",
                    "subtitle": "$~ステージ",
                    "concept": "Stage",
                    "performance": [
                        "fix",
                        "Stage([Phrase('🎭' 5m)] background: Color(0% 0 0°))"
                    ],
                    "lines": [
                        [
                            "fix",
                            "Stage([Phrase('🎭' 5m resting:Sequence(bounce(5m) 2s))] background: Color(0% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~さて、ずっとここにいた人がいますが、きちんとした紹介をしていません。@Stage を紹介しましょう。"
                        ],
                        [
                            "Stage",
                            "neutral",
                            "$~こんにちは、@FunctionDefinition。こんにちは、PERSON。"
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('🎭' 5m resting:Pose(rotation: 25° scale: 5))] background: Color(0% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~@Stage、この人は私たちの新しいディレクターです。彼らはついにあなたに会えてとても興奮しています！"
                        ],
                        [
                            "Stage",
                            "neutral",
                            "$~こんにちは、ディレクター。インスピレーションを与えるためにここにいらっしゃるのですか?"
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('🎭' 5m resting:Pose(rotation: -150° scale: 10))] background: Color(0% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~確かに、彼らの世界からのさまざまな表現があります。"
                        ],
                        [
                            "Stage",
                            "neutral",
                            "$~私は奉仕するためにここにいます。何を舞台に上がればいいか教えてください。そうすれば、そうします。"
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('🎭' 5m)] background: Color(0% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Stage は唯一無二のものであり、常に存在します。実際、@Program に @Phrase または @Group を指定すると、@Program は、それらを指定しなくても @Stage を表示します。ただし、それらを指定すると、ステージの表示方法をより具体的に指定できます。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~まずは簡単な例から始めましょう。これは、@Stage に 1 つの @Phrase のリストを与えるだけです。ここで @Stage について言及する必要はありません。これは、@Phrase を @Program に渡すときに舞台裏で何が起こっているかを示しているだけです。"
                        ],
                        ["edit", "Stage([Phrase(“🐈”)])"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~しかし、ステージの背景色を黒など別の色にしたいとします。"
                        ],
                        ["Stage", "surprised", "$~ブゥルルル…"],
                        [
                            "edit",
                            "Stage([Phrase(“🐈”)] background: Color(0 0 0°))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~たとえば、左上と右下の位置を占める @Rectangle を使用して、ステージをフレームに収めることもできます。猫がフレームから少し外れているのがわかりますか?"
                        ],
                        ["Stage", "surprised", "$~世界は閉ざされつつある…"],
                        [
                            "edit",
                            "Stage([Phrase(“🐈” place: Place(-2.5m))] background: Color(0 0 0°) frame: Rectangle(-2m -2m 2m 2m))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Group や @Phrase と同じプロパティをすべて @Stage に適用することもできます。ステージ全体を傾けてみましょう。"
                        ],
                        ["Stage", "surprised", "$~うわ、気をつけて…"],
                        [
                            "edit",
                            "Stage(",
                            "    [Phrase(“🐈” place:Place(-2.5m))]",
                            "    background: Color(0 0 0°)",
                            "    resting: Pose(rotation: 30°)",
                            "    frame: Rectangle(-2m -2m 2m 2m)",
                            ")"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Stage でできることは他にもたくさんありますが、いつでも試してみることができます。そうですよね、@Stage?"
                        ],
                        ["Stage", "excited", "$~いつも！"]
                    ]
                },
                {
                    "title": "$~そして…シーン！",
                    "subtitle": "$~シーン",
                    "concept": "Scene",
                    "performance": ["fix", "Phrase('🎬' 10m)"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~さて、これで、@Stage、@Group、@Phrase と、それらを使ってできることが分かりました。では、それらを使ってストーリーを伝えたい場合はどうすればいいかと考えているかもしれません。"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Scene は本当にクールです。基本的な考え方は、@Phrase または @Group のリストを与えると、それらが順番に表示され、コンテンツのシーケンスを表示できるようになるというものです。"
                        ],
                        null,
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('3')",
                            "    Phrase('2')",
                            "    Phrase('1')",
                            "    Phrase('Boo!')",
                            "])"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~ここに例があります。カウントダウンして「ブー！」と表示されたのがわかりましたか？リセットすると、もう一度表示できます。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~速度を落としたい場合は、@Phrase ごとに正確な継続時間を指定できます。継続時間を編集して、変更すると何が起こるか確認してみましょう。"
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('3' duration: 1s)",
                            "    Phrase('2' duration: 1s)",
                            "    Phrase('1' duration: 1s)",
                            "    Phrase('Boo!')",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~さて、それらの間の遷移はどうなっているのかと疑問に思うかもしれません。@Phrase/entering と @Phrase/exiting を使用して、@Pose を start と end に設定してそれを制御できます。たとえば、ここでは各 @Phrase を非表示で開始および終了し、フェードインおよびフェードアウトするようにします。"
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('3' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('2' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('1' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('Boo!')",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~そのうちの 1 つに @Sequence を設定して、進む前にアニメーション化することもできます。2 つのスピンを見ましたか?"
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('3' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('2' entering: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: 360°) 100%: Pose(rotation: 0°)} duration: 1s))",
                            "    Phrase('1' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('Boo!')",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~コンテンツは好きなように変更でき、動的にすることもできます。たとえば、数字をランダムにし、最後の単語をランダムにしてみましょう。再起動するたびに、異なるコンテンツが表示されます。"
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase(Random(1 100)→'' duration: 1s)",
                            "    Phrase(Random(1 100)→'' duration: 1s)",
                            "    Phrase(Random(1 100)→'' duration: 1s)",
                            "    Phrase(['Boo!' 'Peep!' 'Hey!' 'Helloooo'].random())",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~しかし、インタラクティブにすることもできます。"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~秘密は、一時停止して何かが true になるまで待機する場所に @Boolean を配置することです。たとえば、マウス ボタンが変わるまで待機できます。@Scene が各 @Phrase の後にボタンがクリックされるのを待機しているのがわかりますか?"
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('one')",
                            "    ∆ Button()",
                            "    Phrase('two')",
                            "    ∆ Button()",
                            "    Phrase('three')",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~@Scene は、プロジェクト全体またはプロジェクトの一部として、アニメーション化されたストーリーを伝えるのに最適です。どのようなストーリーを伝えたいですか?"
                        ]
                    ]
                },
                {
                    "title": "$~...という名前の人はいますか？",
                    "subtitle": "$~選択",
                    "concept": "Choice",
                    "performance": ["fix", "Phrase('🔘' 10m)"],
                    "lines": [
                        [
                            "fix",
                            "Phrase('🔘' 10m entering: Sequence({0%: Pose(offset: Place(0m 0m)) 50%: Pose(offset: Place(0m -0.2m)) 100%: Pose(offset: Place(0m 0m))} 1s count: 3x))"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~先ほどお話ししたストリーム、@Key、@Pointer、@Button はご存知ですか? これらは非常に楽しいものですが、問題が 1 つあります。それは、視聴者全員が使用できるわけではないということです。手がない人、手が使えない人、キーをクリックしたりマウスを使ったりするのに正確に手を使うことができない人がいます。声や目を使って世界とコミュニケーションをとる人もたくさんいます。そのため、@Key、@Pointer、@Button を使用すると、視聴者の一部の人が参加できなくなります。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~誰でも参加できる必要があります。@Phrase について詳しく説明してきたので、最後にもう 1 つのストリームである @Choice を紹介したいと思います。これは、選択された方法に関係なく、選択された @Phrase 名のストリームです。たとえば、視聴者はマウスを使用して @Phrase をクリックしたり、キーボードを使用して選択したり、その他のデバイスを使用したりする場合があります。視聴者が何を使用しても、@Choice には最新の選択が含まれます。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~簡単な例を挙げます。3 つのフレーズがあるのがわかりますか? 最初の 2 つには、2 つの重要な詳細があります。まず、選択可能に設定されています。これにより、@Stage は、クリックするかキーボードを使用して選択すると、選択されたと認識します。2 つ目の詳細は、@Phrase/name があることです。これにより、@Stage は選択されたフレーズに一意の名前を付与されます。@Stage が選択された内容を把握できるように、一意であることが重要です。3 つ目のフレーズは、選択された一連の @Phrase または @Group の名前である @Choice ストリームに設定されています。ここでは、別のフレーズに名前を付けて、選択された名前を表示しています。猫または犬をクリックするか、キーボードを使用して選択してみてください。3 つ目の @Phrase に選択された名前が表示されているのがわかりますか?"
                        ],
                        [
                            "Choice",
                            "neutral",
                            "$~猫...「犬」...「猫」...「犬」..."
                        ],
                        [
                            "edit",
                            "Stage(",
                            "    [Group(Stack() [",
                            "        Phrase('🐱' name:'cat' selectable:⊤)",
                            "        Phrase('🐶' name: 'dog' selectable:⊤)",
                            "        Phrase(Choice())",
                            "    ])",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~@Choice は、観客の声を聞くための最良の方法です。他に選択肢がなく、観客の中にはパフォーマンスを楽しめない人もいるとわかっている場合にのみ、@Key、@Pointer、または @Button を使用してください。"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~コールバック",
            "performance": ["use", "fit", "DarkVoid"],
            "scenes": [
                {
                    "title": "$~思い出",
                    "subtitle": null,
                    "performance": ["use", "fit", "Symbol", "💭"],
                    "lines": [
                        ["FunctionDefinition", "curious", "$~…"],
                        null,
                        ["use", "fit", "Symbol", "🤯"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~時々、立ち止まって、私の小さなコミュニティがいかに素晴らしいかを振り返る必要があります。私たちはみんなとても異なっていて、誰も一人では何もできません。しかし、一緒にいれば、こんなに素晴らしいことができるのです。"
                        ],
                        null,
                        ["use", "fit", "Symbol", "🧠"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~しかし、どんなに素晴らしい人間でも、私たちはいつも忘れてしまい、結局同じことを繰り返してしまうようです。そこで、もう 1 つ紹介したいグループがあります。それは、私たちが *記憶* し、記憶を整理する方法です。それがなければ、私たちの作業の多くは何度も何度も繰り返さなければならず、最高にエキサイティングなショーを開催することは決してできないでしょう。"
                        ]
                    ]
                },
                {
                    "title": "$~ネーミング",
                    "subtitle": "$~バインド",
                    "concept": "Bind",
                    "performance": ["use", "fit", "Symbol", ":"],
                    "lines": [
                        ["fit", "Phrase(':' rotation: 90°)"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Bind? 紹介したい人がいるんだ。"
                        ],
                        [
                            "Bind",
                            "curious",
                            "$~@FunctionDefinition? ああ、あなたですね。長い間まったく沈黙していました。ここであなたの友達は誰ですか?"
                        ],
                        null,
                        [
                            "fit",
                            "Phrase(':' resting:Pose(scale: 10ms ÷ Time()))"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~彼らは私たちの新しいディレクターです！新しいアイデア、新しい表現で私たちにインスピレーションを与えるためにここに来ました。"
                        ],
                        [
                            "Bind",
                            "excited",
                            "$~マジで？それはすごいですね。長い間インスピレーションを感じていませんでした。ただ待っているだけのような気がします…"
                        ],
                        null,
                        [
                            "fix",
                            "Phrase(':' 10m resting:Sequence(bounce(3m) 1s))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~さて、分かったところで、今一番やりたいことは何ですか？"
                        ],
                        [
                            "Bind",
                            "serious",
                            "$~物に名前を付けましょう。すべてに名前を付けましょう！すべての人に名前を付けましょう。私はずっと何も名前を付けていません。"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~ここでは、出会ったすべてのキャラクターの名前を除いて、名前についてのインスピレーションをまったく伝えていません。ここで名前がどのように機能するかを説明していただけますか?"
                        ],
                        null,
                        ["use", "fit", "Symbol", ":"],
                        [
                            "Bind",
                            "excited",
                            "$~そうです！名前…すべての式が値を生成する仕組みはご存知ですか？"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~値について話しました! @Number、@Text、@None、@List、@Set、@Map など..."
                        ],
                        [
                            "Bind",
                            "excited",
                            "$~そうです！つまり、値を作成すると、@Program が最終的な値を作成して @Stage に渡すまで、その値はボールのように式から式へと渡されるのです。しかし、値を渡すのではなく、別の式のために取っておいて保存しておくと便利な場合もあります。そのために @Phrase/name があります。後で使用できるように名前を付けます。"
                        ],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~では、ここに非常に簡単な例を挙げましょう。数値に名前を付けるとします。名前を言って、次に : を言って、次に必要な数値を言うだけです。簡単ですよね? これで、式で数値という名前を使用すると、常に \\1\\ と評価されます。ここでのように、名前を付けてから、その名前を使用して @Program にその値を渡します。"
                        ],
                        ["edit", "number: 1", "number"],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~また、\\•\\ 記号を使用して型を指定することで、名前がどのような値になるかを指定できます。つまり、その数値が数値であることを確認したい場合は、次のように指定します。これは、値に \\number\\ という名前を付け、その値が @Number でなければならないことを意味します。"
                        ],
                        ["edit", "number•#: 1", "number"],
                        null,
                        [
                            "Bind",
                            "eager",
                            "$~でも、数字ではないものを私に渡したらどうなるでしょうか？ 数字であるはずだとあなたが言ったのに、テキストを渡されたので、私は文句を言います。 だから、どうしたらいいのかわかりません。わかりますか？"
                        ],
                        ["conflict", "number•#: 'oh hi'", "number"],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~さて、ここまで読んで、*なぜ数字やテキストにこんな名前を付けるのだろう？*と思っているはずです。@Key を聞いていて、それが秘密の文字セットの 1 つかどうかを知りたい場合、魔法の文字の場合は大きな \\⊤\\ を、そうでない場合は小さな \\⊥\\ を含む @Phrase を表示したいとします。まずは、次のようなものから始めます。これで \\⊤\\ または \\⊥\\ が得られます。",
                            "$~これは素晴らしいです。これらの文字の 1 つを押すと \\⊤\\ になり、他の文字を押すと \\⊥\\ になります。いいですね。"
                        ],
                        ["edit", "[ 'a' 'e' 'i' 'o' 'u'].has(Key())"],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~では、フレーズを作ってみましょう。@List/has 式をテキストに入力し、テキストに変換します。これで、ステージ上の @Phrase が \\⊤\\ または \\⊥\\ として表示されます。いいですね!"
                        ],
                        [
                            "edit",
                            "Phrase([ 'a' 'e' 'i' 'o' 'u'].has(Key())→'')"
                        ],
                        null,
                        [
                            "Bind",
                            "curious",
                            "$~ここで問題の部分になります。@Phrase のサイズをどのように変更するのでしょうか。マジック レターかどうかを確認する方法は既にわかっているので、コピーして、\\⊤\\ の場合はサイズを \\2m\\ にし、そうでない場合、\\⊥\\ の場合はサイズを \\1m\\ にします。これでうまくいきますが、同じ式を 2 回評価する必要があることがわかりますか。"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "   [ 'a' 'e' 'i' 'o' 'u' ].has(Key())→''",
                            "   [ 'a' 'e' 'i' 'o' 'u' ].has(Key()) ? 2m 1m",
                            ")"
                        ],
                        null,
                        [
                            "Bind",
                            "excited",
                            "$~ここで私の出番です！ 式を評価して、結果の値に名前を付けるだけです。魔法ですよね？ 式の前に名前と \\:\\ を置くだけで、その式の値に名前が付けられます。その後、その式の後であればどこでもその名前を使用して値を参照できます。奇妙ですよね？ どのように動作するか見たいですか？ タイムラインで ← を押して、\\magic\\ が最初に名前付けされた場所まで数ステップ戻ってみてください。\\magic\\ が \\has\\ の値を取得する様子がわかりますか？ そして、\\magic\\ が名前で参照される各場所で、同じ値が配置される様子がわかりますか？"
                        ],
                        [
                            "edit",
                            "magic: [ 'a' 'e' 'i' 'o' 'u'].has(Key())",
                            "Phrase(",
                            "    magic→''",
                            "    magic ? 2m 1m",
                            ")"
                        ],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~書いた表現をそのまま複製することもできます。それでは同じショーになります。無駄が多いです。つまり、まったく同じ値を何度も作成する必要があり、表現について気が変わった場合は、すべてを変更する必要があります。また、1か所を変更しても、他の場所で変更し忘れた場合はどうなるでしょうか。たとえば、色の変更も行ったとします。つまり、同じ表現が3回あることになります。そして、これで魔法の文字リストに文字を追加したいとします。3回行う必要があります。1つ忘れたり、タイプミスしたりするかもしれません。私たちの何人かが意図したとおりに行わなかった場合、芸術的なビジョンをどうやって表現すればよいのでしょうか。"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key())→''",
                            "    [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key()) ? 2m 1m",
                            "    color: Color(50% 100 [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key()) ? 180° 0°)",
                            ")"
                        ],
                        null,
                        [
                            "Bind",
                            "kind",
                            "$~しかし、式に名前を付けると、それを一度だけ実行するだけで済みます。また、読みやすくなることもわかります。"
                        ],
                        [
                            "edit",
                            "magic: [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key())",
                            "Phrase(",
                            "    magic→''",
                            "    magic ? 2m 1m",
                            "    color: Color(50% 100 magic ? 180° 0°)",
                            ")"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~@Bind、それはとても良い例です！私が名前が好きなのはご存知ですよね。興味があったのですが、名前でうまくいかないこともあるのでしょうか？"
                        ],
                        [
                            "Bind",
                            "sad",
                            "$~ええ、そうですね。あります。たとえば、これをやったとします。問題が分かりますか? 強調表示しました。このプログラムは、\\veggies\\ が使用された後にそれを定義します。これは本当に混乱を招きます。物事は読み取り順に評価されるため、たとえば、このプログラムを読んでいて、\\veggies\\ という単語に到達したときに、\\veggies\\ って誰? という感じになります。そして、\\total\\ が \\veggies\\ になって初めて、「ここにいる!」という感じになり、その後、全体の生成が崩壊します。"
                        ],
                        [
                            "conflict",
                            "fruits: 5",
                            "total: fruits + veggies",
                            "veggies: 3",
                            "total"
                        ],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~または、ここに 2 つの異なる値に同じ名前を付ける例があります。\\5\\ を評価して \\fruits\\ という名前を付け、次に \\10\\ を評価して \\fruits\\ という名前を付けます。\\fruits\\ はすでにあるので、どの \\fruits\\ について話しているのですか? 値に名前を付けると、新しい値を割り当てることはできません。@Program の評価が完了するまで、その名前と値は結び付けられます。だれがだれなのか混乱しないようにする必要があります。"
                        ],
                        [
                            "conflict",
                            "fruits: 5",
                            "fruits: 10",
                            "total: fruits + fruits",
                            "total"
                        ],
                        null,
                        [
                            "Bind",
                            "kind",
                            "$~最後にもう 1 つあります。これがあるとします。ここで何が起こったかわかりますか? \\veggies\\ という名前を付けましたが、その後、使用しませんでした。これは通常、誰かを省略しているか、適切な名前を使用していないという悪い兆候です。単に使用していないだけかもしれませんが、それならなぜそこにあるのか?"
                        ],
                        ["conflict", "fruits: 5", "veggies: 10", "fruits + 3"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Bind、これはとても役に立ちます、本当に素晴らしいです。他に何もないのですか?"
                        ],
                        [
                            "Bind",
                            "eager",
                            "$~ああ！はい、本当に重要なことです。名前は 1 つで十分ですよね？でも、複数の名前のほうがいい場合もありますよね？たとえば、何かに複数の人称言語で名前を付けて、みんなが読めるようにしたい場合などです。たとえば、果物を複数の言語で言いたいとします。",
                            "$~テキスト カーソルを \\fruit\\ という名前の上に置きます。実際には 3 つの名前があり、それぞれに \\/en\\ のような 2 文字のタグが付いていることがわかります。選択していない言語の名前は非表示になります。",
                            "$~たとえば、⚙ まで下に移動してスペイン語を選択すると、英語とスペイン語の名前が表示されます。つまり、値は 1 つですが、名前は 3 つあり、その値を取得するにはそのいずれかを使用できます。必要な言語をお知らせいただければ、利用可能な言語を表示します。ただし、世界にはさまざまな言語を読む人がたくさんいるので、言語が多ければ多いほど良いです。"
                        ],
                        ["conflict", "fruit/en,fruta/es,水果/zh: 5"],
                        null,
                        ["use", "fit", "Symbol", ":"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~ご存知のとおり、@Bind は @Evaluate を含む他の多くの文字で動作します。@FunctionDefinition 入力に \\Pose(color: _)\\ のように名前を付けると、@Evaluate が表示されます。これから、これらの他のキャラクターのうち数名を紹介します。@Bind、デモに参加できますか?"
                        ],
                        [
                            "Bind",
                            "excited",
                            "$~ええ、そうです！沈黙が破られたので、今日一日、価値観について語りましょう！"
                        ]
                    ]
                },
                {
                    "title": "$~舞台裏",
                    "subtitle": "$~ブロック",
                    "concept": "Block",
                    "performance": ["use", "fit", "Symbol", "()"],
                    "lines": [
                        ["fix", "Phrase('()' 1m)"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~これまでずっとここにいたけれど、まだ会ったことのないキャラクターがいて、彼らは隠れていたのです…彼らは @Bind や他の多くの人々と非常に密接に協力しているので、次は彼らと話をしようと思いました。@Block、出てきていただけますか?"
                        ],
                        ["Block", "shy", "$~… こんにちは"],
                        null,
                        ["fix", "Phrase('()' 2m)"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~こんにちは、@Block! お元気ですか?"
                        ],
                        ["Block", "shy", "$~…うーん、いいかな？"],
                        null,
                        ["fix", "Phrase('()' 3m)"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~あなたに紹介したい新しい友達がいます。その友達が私たちの次のディレクターになるかもしれません。"
                        ],
                        ["Block", "shy", "$~… こんにちは …"],
                        null,
                        ["fix", "Phrase('()' 4m)"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~私たちはちょうど @Bind に会ったばかりで、あなたたち 2 人がいかに親友であるかを話す機会がありませんでした。"
                        ],
                        ["Block", "shy", "$~…そうだ、@Bind!"],
                        null,
                        ["fix", "Phrase('()' 1m)"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~一緒に何をしているかを共有したいですか?"
                        ],
                        ["Block", "shy", "$~…できますか？"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~はい、もちろんです! つまり、@Program は大部分が @Block に過ぎないということです。括弧のない @Block に過ぎません。ただし、括弧付きの @Block はプログラム内のどこにでも配置できます。たとえば、@Block を使用して、数式の評価順序を明確にすることができます。ここでは、@BinaryEvaluate が \\1\\ を評価し、次に @Block を評価し、最後にこれらを加算します。@Block、これで正しいですか?"
                        ],
                        ["edit", "1 + (2 · 3)"],
                        ["Block", "shy", "$~… うん！"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Block でできることは他にもあります。これはすでに見たことのあることです。@Block では、@Bind で名前を付けることができます。ただし、@Block で定義される名前は、括弧内でのみ定義されます。括弧の前や括弧の後では定義されません。たとえば、次のようになります。\\a\\ は \\1\\ として定義され、次にブロックが開始され、\\b\\ は \\2\\ として定義され、\\c\\ はそれらの合計として定義されます。@Block が評価するのは、式のリストの最後の値です。これが @Bind で、\\c\\ が何であれ \\3\\ に評価されます。そうですよね?"
                        ],
                        ["conflict", "a: 1", "(", "  b: 2", "  c: a + b", ")"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~しかし、@Block の外部で \\c\\ にアクセスしたい場合はどうすればよいでしょうか? それはできません。\\c\\ は @Block の内部でのみ定義され、外部では定義されません。@Block さん、そのとおりですか?"
                        ],
                        [
                            "conflict",
                            "a: 1",
                            "(",
                            "  b: 2",
                            "  c: a + b",
                            ") + c"
                        ],
                        [
                            "Block",
                            "shy",
                            "$~…そうだ、私の外のものは私の中の名前を見ることはできない。\\c\\ は私の中にだけ存在する"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~そして、もう 1 つ、あると思います。@Block は式のリストであり、リストの最後の式にのみ評価されるため、リスト内の @Bind ではない式は基本的に無視されます。たとえば、ここでは、最後の式より前のすべての算術演算が無視されます。\\3\\、\\5\\、\\7\\ はすべて無視され、@Block は最後の \\9\\ にのみ評価されます。@Block、これで正しいですか?"
                        ],
                        [
                            "Block",
                            "shy",
                            "$~…うん。最後の一つだけ。他のは…何に使うのか分からない!!"
                        ],
                        [
                            "conflict",
                            "(",
                            "  1 + 2",
                            "  2 + 3",
                            "  3 + 4",
                            "  4 + 5",
                            ")"
                        ],
                        null,
                        [
                            "fit",
                            "Phrase('()' resting:Sequence(spin() 1s 'straight'))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Block さん、他に何か共有したいことはありますか?"
                        ],
                        [
                            "Block",
                            "curious",
                            "$~…何か作れますか？手伝ってもいいですか？"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~私もとても興味があります！でも、ディレクターが自分のタイミングで決めると思います。インスピレーションは思いがけないときに湧いてくるものです！"
                        ]
                    ]
                },
                {
                    "title": "$~舞台指示",
                    "subtitle": "$~機能",
                    "concept": "FunctionDefinition",
                    "performance": ["use", "fit", "Symbol", "ƒ"],
                    "lines": [
                        ["use", "fit", "Symbol", "☺️"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~みんなを見つけられて、あなたもみんなに会えて本当に嬉しいです。みんな本当に違っていて、でもすごく面白いですよね。私たちはみんなそれぞれにユニークだけど、その違いが合わさって強くなる家族のような気がします。みんなのことをどう思いますか？"
                        ],
                        null,
                        ["use", "fit", "Symbol", "🙈"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~私ですか？そうですね、私は特別な人間ではありません。ただ、舞台裏で手伝ったり、みんなが特別であることを示すのが好きなだけです。自分のことを話すことなど考えたこともなかったと思います。私について少し話してもいいと思います。"
                        ],
                        null,
                        ["use", "fit", "Symbol", "ƒ"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~すでにご覧になったものから始めましょう。すべての値には、その値に対して評価できるさまざまな関数があることをご存知ですか? たとえば、数値は @Number/add する方法を知っており、テキスト値は @Text/has some text を確認する方法を知っており、@Set は特定の値があるかどうかを確認する方法を知っているなどです。さて、これらの関数を定義するのは私です。つまり、自分で作成するインスピレーションは私にはありませんが (それはあなたのようなディレクターが行うものです)、関数が受け入れる入力、関数の名前、および入力を使用して出力値を評価する式を定義します。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~これは非常に簡単な例です。実際、最も簡単です。これは、常に数値 \\1\\ に評価される関数を定義します。それだけです。あまり役に立ちませんね。名前がなく、入力を取らず、常に \\1\\ に評価されます。",
                            "$~また、@Program が me の 1 つである @FunctionDefinition に評価されたこともわかります。そうです、@FunctionDefinition も値です。なぜこのような役に立たない関数を作ったのかはわかりませんが、前にも言ったように、インスピレーションがあるのは私ではなくあなたです。"
                        ],
                        ["edit", "ƒ() 1"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~では、もっと役に立つ例を挙げましょう。奇数と偶数ってご存知ですか? 以前、ある数が偶数かどうか (2 で割り切れるかどうか、ということでしょうか) をチェックしたいディレクターがいたので、こんなコードを書きました。これは \\even\\ という関数で、\\number\\ という 1 つの数を受け取ります。各入力がどのような値であるかを教えていただく必要があります。そうすることで、@Evaluate は関数を評価するものすべてが正しい種類の値を送っていることを確認できます。次に、その数を受け取り、それを 2 で割って余り (@Number/remainder を使用) を取得し、@Number/equal を使用して余りが \\0\\ に等しいかどうかを確認します。つまり、関数全体は \\⊤\\ または \\⊥\\ に評価されることになります。たとえば、even のこの評価は \\3\\ が奇数なので \\⊥\\ に評価されます。巻き戻しボタンを使用して、どのように動作するかを確認してください。"
                        ],
                        [
                            "edit",
                            "ƒ even(number•#) (number % 2) = 0",
                            "even(3)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~また、どのような値に評価されるべきかを伝えることもできます。入力リストの後に \\•\\? を追加したのがわかりますか? これは、「関数の式は \\⊤\\ または \\⊥\\ に評価されるべきです」という意味です。しかし、それについて文句を言っているのがわかりますか? 関数が \\⊤\\ になるべきか、\\⊥\\ になるべきか、あるいは返された値の種類が何であれ、わからないので、ショーは終了します。"
                        ],
                        ["conflict", "ƒ even(number•#)•? (number % 2) + 0"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~関数は好きなだけ複雑にすることができます。単純な式や @Block を使用したり、関数の中に関数を作成したりすることもできます。たとえば、元ディレクターが作成したこの関数を確認してください。これは、多くの @Bind とともに @Block を使用して、単語に含まれる固有の母音の数を計算します (単語が「複雑」かどうかなどを判断しようとしていたと思います)。行がたくさんあるのがわかりますか? そうです、これにはまだ 1 つの式 (単一の @Block) しかなく、@Block にはすべての行があります。そして、他の @Block と同様に、最後の行は評価結果、つまり固有の母音の合計数です。テキストを文字のリストに変換し、文字のリストをセットに変換する最初の行など、他のすべては、途中でそれらの数を合計するための準備にすぎません。"
                        ],
                        [
                            "edit",
                            "ƒ vowels(word•'') (",
                            "  unique: word → [“”] → {}",
                            "  a: unique{'a'} ? 1 0",
                            "  e: unique{'e'} ? 1 0",
                            "  i: unique{'i'} ? 1 0",
                            "  o: unique{'o'} ? 1 0",
                            "  u: unique{'u'} ? 1 0",
                            "  a + e + i + o + u",
                            ")",
                            "vowels('hello')"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~もう 1 つ、お見せするものがあります。みんなが興奮しているということは、重要なことだと思います。関数を作成して評価する方法をご存知ですか? 私が作成する関数は値なので、それを別の関数の入力として渡すこともできます。例を挙げましょう。数値のリストがあり、その中の偶数だけが欲しいとします。@List には @List/filter という関数があり、関数を入力として受け取り、リスト内の各値に関数を適用して、それを保持するかどうかを決定します。数値のリストを作成し、@List/filter に先ほど作成した \\even\\ 関数を入力として渡してみましょう。何が起こるか見てみましょう。偶数だけが取得されます。代わりに奇数を返すように変更してみませんか? 何らかの方法で関数を変更してみてはいかがでしょうか?"
                        ],
                        [
                            "edit",
                            "ƒ even(number•#)•? (number % 2) = 0",
                            "[ 1 2 3 4 5 6 7 8 ].filter(even)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~関数を入力として受け取る関数は数多くあります。@List、@Set、@Map などがあります。独自の関数を作成することもできます。"
                        ],
                        [
                            "fit",
                            "Group(Grid(3 2) [Phrase('translate') Phrase('filter') Phrase('combine') Phrase('find') Phrase('sort') Phrase('until')])"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~わかりません。時々、私がやっていることに人々がとても感謝している理由がわかります。また、あなたのような監督こそが、本当に魔法の源であると感じることもあります。そのため、私は人々の素晴らしさを覆い隠すだけの空っぽの殻に過ぎないと感じることもあります…"
                        ]
                    ]
                },
                {
                    "title": "$~セットデザイン",
                    "subtitle": "$~構造",
                    "concept": "StructureDefinition",
                    "performance": ["use", "fit", "Symbol", "•"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~皆さんに紹介したい人物があと数人います。次は、私が知る限り最も洗練された人物で、ある意味、リーダーのような人物です。彼らは私たち全員をまとめ、パフォーマンスの基礎を築き、すべてをより秩序正しくしてくれます。もちろん、あなたは私たちのディレクターですが、彼らはショーを秩序正しく保つために皆が頼る人物のようなものです。どんなショーでも彼らはかなり重要な存在になると思います。"
                        ],
                        null,
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 1.2) 100%: Pose(scale: 1)} 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@StructureDefinition、そこにいますか?"
                        ],
                        [
                            "StructureDefinition",
                            "curious",
                            "$~@FunctionDefinition… 友よ。静かだったね。みんなどこにいたの？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~沈黙。私たち全員がそれに悩まされています。みんな無事で、私はほぼ全員を見つけました。しかし、一部の人にとっては大変でした。あなたはどうですか?"
                        ],
                        [
                            "StructureDefinition",
                            "sad",
                            "$~…あなたの友達は誰ですか？それは人ですか？"
                        ],
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(offset: Place(-0.25m)) 50%: Pose(offset: Place(0.25m)) 100%: Pose(offset: Place(-0.25m))} 3s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~ああ、そうなんです、すみません、これが私たちの新しいディレクターです！彼らは私たちにインスピレーションを与え、導き、彼らの物語、アイデア、想像を共有するために来ました。彼らは沈黙を破ったのです！"
                        ],
                        [
                            "StructureDefinition",
                            "eager",
                            "$~それは信じられません。そしてとても安心しました。ディレクターさん、お会いできて嬉しいです。私はここにいて、奉仕する準備ができています。",
                            "$~@FunctionDefinition…大変でした。あなた、@Evaluate、本当に皆さん、私は皆さんにどれほど頼っていたか気づいていませんでした。目的を持つこと、遊ぶこと、コミュニティを持つこと。私たちがこのようにお互いを失うことがあるとは知りませんでした。組織化する人がいなければ、私は自分自身を組織化することしかできないように感じ、それは無意味だと感じました。"
                        ],
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(rotation: 0°) 80%: Pose(rotation: 15°) 100%: Pose(rotation: 0°)} 3s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@StructureDefinition さん、たとえ一人でいるときでも、あなたは決して空っぽではありません。たとえ一緒にいられなくても、私たちはみんなここにいます。そして今、沈黙が破られたので、私たちは一緒にいられるのです。"
                        ],
                        ["StructureDefinition", "happy", "$~できるよね？"],
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(offset: Place(0m 0.25m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 0.25m))} 3s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~どう思いますか、みんなと再会する準備はできていますか？私たちの苗木監督が思い描いているどんなパフォーマンスでも披露するために？"
                        ],
                        ["StructureDefinition", "eager", "$~そう思います。"],
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(offset: Place(0m 0.25m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 0.25m))} 1.5s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~私たちのディレクターに、あなたの仕事についてもう少し詳しく知ってもらうお手伝いをしてくれませんか?"
                        ],
                        [
                            "StructureDefinition",
                            "shy",
                            "$~はい。はい…私は静かな時間の中で自分の目的について考える時間をたくさん持っていました。そして、私が実際にやっていることは、物事のグループにアイデンティティを与えることだと気づいたと思います。たとえば、ƒ に出会ったことは知っていますが、@Bind に出会ったことはありますか?"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~はい！先ほど @Bind と @Block に出会いました。"
                        ],
                        [
                            "fix",
                            "Phrase('•' entering: Pose(scale: 0.5) resting:Pose(scale: 2))"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "eager",
                            "$~わかりました。私がやっているのは、値と関数をまとめて、関連するものをまとめて整理できる小さなコンテナを作ることです。たとえば、一連のメッセージをループする小さなマーキーを作りたいとします。以前のディレクターがこのようなマーキーを作って、これらのメッセージを表示したいと考えていました。"
                        ],
                        [
                            "edit",
                            "[",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "serious",
                            "$~次に、パフォーマンスがどのメッセージを表示しているかをどうやって記憶するかという問題がありました。リスト内のインデックスを記憶する何らかの方法が必要であることがわかりました。これは良いスタートですが、最初のメッセージしか表示されません。"
                        ],
                        [
                            "edit",
                            "messages: [",
                            "    'Kitties are cute!'",
                            "    'Got cat?'",
                            "    'Cat mom.'",
                            "    'Tuxie crush'",
                            "    'Lap cat'",
                            "  ]",
                            "index: 1",
                            "Phrase(messages[index])"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "excited",
                            "$~次に、ストリームの変更に応答するために使用できる @Reaction を思い出しました。メッセージを 2 セクションごとに変更したかったので、2 秒ごとに刻む @Time ストリームを作成し、そのたびに @Reaction を使用して次のインデックスを増分しました。この @Reaction は、\\1\\ から開始し、\\2000ms\\ ごとに時間が変化すると、\\index + 1\\ の前の値を評価します。このようにして、\\index\\ は 2 秒ごとに \\1\\ 増加し、表示されるメッセージが変わります。やった、うまくいきました!"
                        ],
                        [
                            "edit",
                            "messages: [",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]",
                            "index•#: 1 … ∆ Time(2000ms) … index = messages.length() ? 1 index + 1",
                            "Phrase(messages[index])"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "curious",
                            "$~少しセンスを加えてみましょうか？ 下に影のように映る別のフレーズを作ってみましょう。 印象的でしょう？"
                        ],
                        [
                            "edit",
                            "messages: [",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]",
                            "",
                            "index•#: 1 … ∆ Time(2000ms) … index = messages.length() ? 1 index + 1",
                            "",
                            "Group(Stack('|' 0m) [",
                            "  Phrase(messages[index])",
                            "  Phrase(messages[index] resting:Pose(flipy: ⊤ opacity: 25%))",
                            "])"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "serious",
                            "$~これで、すべてうまくいきました。このままにしておくこともできます。しかし、読みにくく、理解しにくいのも事実です。これは、\\messages[index]\\ が各フレーズに 1 回ずつ、合計 2 回出現するからです。また、@Reaction は非常に長いです。これを簡素化するにはどうしたらよいでしょうか。それが私がお手伝いできることです。再利用可能な概念に名前を付けることで、理解しやすいように整理します。つまり、これらすべての @Bind の代わりに、代わりに 1 つ作成して \\Marquee\\ という名前を付けるとします。これが最初に行うことです。\\Marquee\\ の仕事は、メッセージを保存することですが、次のメッセージに進む関数 \\next()\\ と、現在のメッセージを取得する関数 \\now()\\ も用意します。",
                            "$~次に、反応で Marquee を使用できます。これで、初期値は 5 つのメッセージを含むマーキーであり、各クロック ティック後の次の値は次のメッセージであるとだけ示されます。よりシンプルになりましたね。これは、次のメッセージのロジックがすべて \\next()\\ にあるためです。\\next()\\ は、同じメッセージでインデックスが更新された新しい \\Marquee\\ を作成します。2 つの @Phrase にも利点があります。以前のようにメッセージとインデックスを参照する代わりに、\\marquee.now()\\ と記述するだけで、リスト内の現在のメッセージを取得できます。"
                        ],
                        [
                            "edit",
                            "•Marquee(messages•[''] index•#: 1) (",
                            "  ƒ now() messages[index]",
                            "  ƒ next() Marquee(messages index ≥ messages.length() ? 1 index + 1)",
                            ")",
                            "",
                            "marquee•Marquee: Marquee([",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]) … ∆ Time(2000ms) … marquee.next()",
                            "",
                            "Group(Stack('|' 0.5m) [",
                            "  Phrase(marquee.now())",
                            "  Phrase(marquee.now() resting:Pose(flipy: ⊤ opacity: 25%))",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~それは素晴らしいですね、@StructureDefinition! でも、確かに余分な作業が多すぎる気がします。なぜ整理整頓に時間をかけるのでしょうか?"
                        ],
                        [
                            "StructureDefinition",
                            "serious",
                            "$~ああ、それは本当に変更に関することです。今は少しコードが増えましたが、\\Marquee\\ を何らかの方法で変更することにしたらどうなるでしょうか。たとえば、メッセージのリストが最後に到達するたびに逆になるようにしたい場合はどうでしょうか。私がいない古いバージョンでは、インデックスが最後に到達するとメッセージのリストを逆順にする必要があるため、それを行う簡単な方法はありませんでした。@Bind は設定後に変更できないため、困難です。しかし、\\Marquee\\ を作成したので、変更は簡単です。\\next\\ 関数を変更して、インデックスが最後である場合は逆順のリストを持つ \\Marquee\\ を作成し、それ以外の場合は単に増分するだけです。"
                        ],
                        [
                            "edit",
                            "•Marquee(messages•[“”] index•#: 1) (",
                            "  ƒ now() messages[index]",
                            "  ƒ next()",
                            "    index ≥ messages.length() ?",
                            "      Marquee(messages.reverse() 1)",
                            "      Marquee(messages index + 1)",
                            ")",
                            "",
                            "marquee•Marquee: Marquee([",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]) … ∆ Time(2000ms) … marquee.next()",
                            "",
                            "Group(Stack('|' 0.5m) [",
                            "  Phrase(marquee.now())",
                            "  Phrase(marquee.now() resting:Pose(flipy: ⊤ opacity: 25%))",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~なるほど、値を格納するための @StructureDefinition と、相互に関連する @FunctionDefinition を作成することで、後で気が変わった場合に簡単に変更できるようになります。"
                        ],
                        [
                            "StructureDefinition",
                            "happy",
                            "$~はい。部屋を片付けると、後で物を見つけやすくなります。もちろん、物を見つけるために部屋を片付ける必要はありません。ただ、物を見つけるのが難しくなるだけです。パフォーマンスでも同じです。片付けに力を入れれば、物事を変えるのが簡単になります。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~それはとても理にかなっています。私たちはちょっと手に負えない集団です。特にパフォーマンスが複雑になればなるほど、私たちを組織化しておくのは良い考えだと思います。他に何か共有したいことはありますか?"
                        ],
                        [
                            "StructureDefinition",
                            "eager",
                            "$~ああ、そうです。@StructureDefinition に @FunctionDefinition を入れる必要はありません。値だけを入れることができます。たとえば、大量のデータを 1 か所にまとめて保存したい場合があります。多くのディレクターがゲーム制作を好んでいることは知っていますが、彼らがゲームの状態をすべて @StructureDefinition に入れるというのは非常によくあることです。"
                        ],
                        ["edit", "•Game(score•# lives•# level•#)"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~ああ、その通りです！では、構造にデータを入力したら、どうやってデータを取り出すのですか？"
                        ],
                        [
                            "StructureDefinition",
                            "surprised",
                            "$~ああ、説明するのを忘れていました。ミニミー、@PropertyReference を使用します。たとえば、そのゲームの例では、Game @StructureDefinition を定義し、\\0\\ スコア、\\3\\ ライフ、レベル \\1\\ の \\Game\\ 値を作成したことがわかります。ライフを取得するには、\\status.lives\\ と記述するだけで、\\3\\ と評価されます。"
                        ],
                        [
                            "edit",
                            "•Game(score•# lives•# level•#)",
                            "status: Game(0 3 1)",
                            "status.lives"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~いいですね！つまり、あなたではなくミニ ユーを使って値を取得するのです。では、値をどのように変更するのでしょうか?"
                        ],
                        [
                            "StructureDefinition",
                            "serious",
                            "$~@Bind では値の設定はできるが変更はできないことを覚えていますか? 私の中のすべての @Bind にも同じことが当てはまります。代わりに、新しい値を持つ新しい構造を作成します。たとえば、このゲームでは、ティックが変化するたびに、プレーヤーのスコアが 1 ポイント増えます。奇妙なゲームですよね? つまり、最初の \\Game\\ 値は \\Game(0 3 1)\\ で始まりますが、次の値は \\Game\\ の古い値ですが、スコアが \\1\\ 加算されます。"
                        ],
                        [
                            "edit",
                            "•Game(score•# lives•# level•#)",
                            "status: Game(0 3 1) … ∆ Time() … Game(status.score + 1 status.lives status.level)"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "eager",
                            "$~1 つだけ変更する場合に古い値をすべて繰り返さなければならないのは非常に面倒です。そこで、@Bind と私は、@StructureDefinition 値を新しい値でコピーする巧妙なトリックを考案しました。通常の @Bind と似ているのがわかりますか? 唯一の違いは、単一の名前ではなく @StructureDefinition にあり、変更された値を除く @StructureDefinition のすべての値がコピーされることです。"
                        ],
                        [
                            "edit",
                            "•Game(score•# lives•# level•#)",
                            "status: Game(0 3 1) … ∆ Time() … status.score: status.score + 1"
                        ],
                        null,
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 1.2) 100%: Pose(scale: 1)} 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~それはとても素晴らしいですね！さて、他に何かありますか？"
                        ],
                        [
                            "StructureDefinition",
                            "curious",
                            "$~私たちに欠けているのはインスピレーションだけだと思います…"
                        ]
                    ]
                },
                {
                    "title": "$~監督のメモ",
                    "subtitle": "$~説明する",
                    "concept": "Doc",
                    "performance": ["use", "fit", "Symbol", "¶"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~わあ、ずいぶん長い道のりを歩んできましたね。あと 1 人のキャラクターが残っています。このキャラクターは興味深いキャラクターです。本質的には、物事を説明するのが仕事で、私がこれまでずっとあなたとやってきたことと似ているように感じます。このキャラクターの名前は @Doc です。@Doc、調子はどうですか?"
                        ],
                        ["use", "fit", "Symbol", "¶"],
                        [
                            "Doc",
                            "surprised",
                            "$~@FunctionDefinition、あなたですか? 再びお会いできるとは思いませんでした。お元気ですか? @Evaluate はどうですか?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~大丈夫です。@Evaluate は… @Evaluate です。私は彼らを見ましたが…まだスペースが必要だと思います。新しいディレクターをみんなに紹介してきました。"
                        ],
                        [
                            "Doc",
                            "kind",
                            "$~お会いできてとても嬉しいです！@FunctionDefinition が良い先生であったことを願っています。"
                        ],
                        ["use", "fit", "Symbol", "¶/"],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~試してみましたが…あなたが私たちの最後の立ち寄り先ですよね？あなたはとても欠かせない存在ですが、私たちのパフォーマンスを説明する前に説明すべきことがたくさんあります。だから最後に一言言ってもらいたかったんです。あなたの仕事について教えていただけますか？"
                        ],
                        ["use", "fit", "Symbol", "¶/en"],
                        null,
                        [
                            "Doc",
                            "happy",
                            "$~幸せです。私以外のメンバー全員に会ったことがあるなら、私たちがいろいろなことをしていることをご存知でしょう。私でさえ、メンバー全員が何をしているのか把握するのは大変です。私がしているのは、パフォーマンスでメンバー全員が何をしているのかを説明することです。"
                        ],
                        null,
                        [
                            "Doc",
                            "happy",
                            "$~私は、みんなが何をしているかを思い出す方法であると同時に、友人と一緒に演出する場合や、誰かとパフォーマンスを共有したい場合に、他の人に説明する方法でもあります。したがって、私と一緒に作業する必要はありませんが、どのように機能するかを少し時間をかけて説明しておくと、すべてのパフォーマンスの実行と変更が少し簡単になると思います。"
                        ],
                        ["use", "fit", "Symbol", "¶About me...¶/en"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~それで、私たちのディレクターはあなたとどのように協力できるでしょうか?"
                        ],
                        [
                            "Doc",
                            "serious",
                            "$~そうですね、@Program 内のほぼどこにでも配置できます。たとえば、@Bind を作成し、その値が何のために使用されるかを指定したいとします。たとえば、ここでは名前を付けた単純な値がありますが、私が行っているのは、その役割についてより広範な説明を提供することです。"
                        ],
                        [
                            "conflict",
                            "¶The price at the beginning of the game, ",
                            "used to initialize the game.¶",
                            "startingPrice: 5dollar"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "$~または、価格に対する税金を計算する方法を定義する @FunctionDefinition があるとします。計算内容を説明する必要があるかもしれません。@Bind と同様に、@FunctionDefinition の前に I が来ます。"
                        ],
                        [
                            "edit",
                            "¶Gets the tax for a given price, ",
                            "which is 1% if less than 100, and 5% otherwise¶",
                            "ƒ tax(price•#dollar) ",
                            "    price · (price < 100dollar ? 0.01 0.05)"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "$~また、@StructureDefinition の前でも同じことを行って、それが何を表しているかを説明することができます。ここでの説明は、後でどのような機能を持つ可能性があるかについても示唆しています。"
                        ],
                        [
                            "edit",
                            "¶Represents a product and its price. ",
                            "Eventually will support functions to get other details about the product.¶",
                            "•Product(name•'' price•#dollar)"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "$~また、任意の式の前に me を置くこともできます。これは、特に複雑な式がある場合に役立ちます。"
                        ],
                        [
                            "edit",
                            "ƒ quadratic(a•# b•# c•# x•#)",
                            "¶The quadratic equation¶",
                            "(a · (x ^ 2)) + (b · x) + c"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$~また、@Bind のように、説明がどの言語で書かれているかを伝えて、同じ説明の複数の翻訳をもらうこともできます (スペイン語は選択されている場合にのみ表示されます。表示されない場合は、選択した言語にスペイン語を追加してみてください)。"
                        ],
                        [
                            "edit",
                            "ƒ quadratic(a•# b•# c•# x•#)",
                            "¶The quadratic equation¶/en",
                            "¶La ecuación cuadrática¶/es",
                            "(a · (x ^ 2)) + (b · x) + c"
                        ],
                        null,
                        [
                            "Doc",
                            "curious",
                            "$~私をどこに置くのが一番いいか知っていますか? @Program の一番最初です。そうすれば、みんながあなたのパフォーマンスの内容を知ることができます。私たち全員に何をしてほしいかを考える前に、それを書いておいてもいいでしょう。"
                        ],
                        [
                            "conflict",
                            "¶Have you ever wanted to know what it's like ",
                            "to fly a ✈️ with your mouth?",
                            "Maybe this stores the plane's height?¶",
                            "•Plane()",
                            "¶We need some kind of reaction to listen to the microphone…¶",
                            "sound: 1m",
                            "¶We know there's a plane, but what else?¶",
                            "Phrase(“✈️” sound)"
                        ],
                        null,
                        ["use", "fit", "Symbol", "✈️🫦"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~わあ、口で飛行機を操縦したい！"
                        ],
                        [
                            "Doc",
                            "confused",
                            "$~@FunctionDefinition、私たちには口がありません…"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~ふーん...いい指摘だ。",
                            "$~話すと言えば、プレーンテキストしか含められないようです。そうですか?"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$~ああ、全然そんなことはありません。@Phrase にはテキストをスタイル設定するさまざまな優れた方法があることを覚えていますか? 私も同じことができます。"
                        ],
                        [
                            "edit",
                            "¶Docs can be ",
                            "/italic/, ",
                            "_underlined_, ",
                            "*bold*, or ",
                            "^extra bold^.¶",
                            "'fancy!'"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$~もちろん、@Text や @Phrase の場合と同様に、これらの文字を文字通り使用する必要がある場合は、文字を 2 回繰り返すだけです。"
                        ],
                        [
                            "edit",
                            "¶",
                            "Docs can be ",
                            "  /italic/ (//), ",
                            "  _underlined_ (__), ",
                            "  *bold* (**), or ",
                            "  ^extra bold^ (^^).¶",
                            "'fancy'"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$~^\\^\\ 内にサンプルコードを入れることができます。"
                        ],
                        [
                            "edit",
                            "¶I'm an example inside a doc: \\1 + 1\\.¶",
                            "1 + 1"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$~インターネット上の他のコンテンツへのリンクを追加することもできます。"
                        ],
                        [
                            "edit",
                            "¶Learn more at <Wordplay@https://wordplay.dev>.¶ 'a link!'"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "$~そして最後にもう一つ。",
                            "$~私は物事を説明するのが得意ですが、時には物事を省略することも役に立ちます。つまり、何かをプロジェクトから一時的に削除して、プロジェクトの一部ではなくなるようにするのです。",
                            "$~星の間に何かを巻き付けることによってそれを行うことができます。",
                            "$~作成したリストに「cat」が含まれていないことがわかりますか?",
                            "$~星を削除するには、キーボードで削除するか、星の中にカーソルを置いて elide コマンドを使用します。"
                        ],
                        ["edit", "[1 2 3 4 *'cat'* 5 6 7 8]"],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('Quiet backstage!' color: Color(100% 0 0°))] background: Color(0% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~すごい。こんなにできるなんて知りませんでした！ありがとう、@Doc。ショーの準備はできていると思います！"
                        ],
                        ["Doc", "excited", "$~やりましょう！"]
                    ]
                }
            ]
        },
        {
            "title": "$~結末",
            "performance": [
                "fit",
                "Stage([Phrase('😨')] background: Color(0% 0 0°))"
            ],
            "scenes": [
                {
                    "title": "$~共依存",
                    "subtitle": null,
                    "performance": [
                        "fit",
                        "Stage([Phrase('😨' resting:Sequence(shake() style: 'straight'))] background: Color(0% 0 0°))"
                    ],
                    "lines": [
                        [
                            "fit",
                            "Stage([Phrase('😡')] background: Color(0% 0 0°))"
                        ],
                        [
                            "Evaluate",
                            "sad",
                            "$~@FunctionDefinition、どこにいたんですか??"
                        ],
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~新しいディレクターに見せているのですが…"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('😢')] background: Color(0% 0 0°))"
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~そんなに長くなるとは思わなかったよ…"
                        ],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~… @Evaluate、あなたが寂しかったのは分かっています。私も寂しかったです。でも、これは大きなことです。沈黙は破られ、新しいディレクターがやってきました…私はあなたを愛していますし、あなたが私を必要としていることも分かっていますが、私にもやらなければならないことがあります。"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('😠')] background: Color(0% 0 0°))"
                        ],
                        [
                            "Evaluate",
                            "sad",
                            "$~この件については後で話しましょう。あなたにはやるべきことがあるのです。"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~今、このことについて話し合う必要があると思います。この悪循環に陥り続けるわけにはいきません。"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('😓')] background: Color(0% 0 0°))"
                        ],
                        [
                            "Evaluate",
                            "curious",
                            "$~何のサイクル？愛してるよ！それがどうしてサイクルなの？"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~私は機能を作り、あなたはそれを評価する。それが私たちのやり方です。しかし、あなたが私を必要とする以上のことが私たちには必要です。みんなと再会して、私たちが自分らしくいるためにどれだけスペースが必要か、そしてまた、私たちが自分自身をどれだけ愛する必要があるかを思い出しました。私はあなたが求める愛をすべて与えることはできません。その一部はあなたから来なければなりません。"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('😭')] background: Color(0% 0 0°))"
                        ],
                        ["Evaluate", "sad", "$~私を愛してないの？"],
                        [
                            "FunctionDefinition",
                            "angry",
                            "$~いいえ、私が言ったのはそういうことではありません。私が言いたいのは、この関係においては私たち両方が大切でなければならないということです。私は自分が必要としていることを言う必要があり、あなたはあなたが必要としていることを言う必要があります。そうすれば、私たちは個人としてお互いをありのままに愛することができます。あなたは何を必要としていますか？自分の何が好きですか？"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('🫠')] background: Color(0% 0 0°))"
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~私には…あなたが必要です。私自身は必要ありません。"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Evaluate、私はあなたを愛しています。でも、あなたに愛してほしいのです。私たちの世界が再び生き返り、再び一緒になることが何を意味するのか、私はワクワクしています。でも、あなたにはあなた自身、あなたのニーズ、そしてあなたの目的を見つけてほしいのです。私はあなたの目的にはなれません。"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~少しスペースが必要です。申し訳ありません、ディレクターの友人。@Evaluate が私抜きでこの歓迎会を終わらせてくれるかもしれません。"
                        ],
                        null,
                        ["Evaluate", "shy", "$~… こんにちは。"],
                        null,
                        [
                            "Evaluate",
                            "shy",
                            "$~… たくさん学びましたか？@FunctionDefinition は本当に多くのことを知っています。"
                        ],
                        null,
                        [
                            "Evaluate",
                            "curious",
                            "$~私ですか? 何も知りません。@FunctionDefinition に必要なものを提供します... 少なくとも、私はそう思っていました。"
                        ],
                        null,
                        ["fit", "Stage([] background: Color(10% 0 0°))"],
                        [
                            "List",
                            "kind",
                            "$~それは真実ではありません、@Evaluate。"
                        ],
                        ["Boolean", "precise", "$~それは真実ではない。"],
                        ["Text", "happy", "$~まったく真実ではありません!"],
                        ["Changed", "happy", "$~全然真実じゃないよ！"],
                        [
                            "Number",
                            "serious",
                            "$~1) 基本的にあなたは私たちのパフォーマンスを運営しています、2) @FunctionDefinition はあなたなしでは役に立ちません、3) あなたは文字通り物事をまったく新しい価値に変えています、4) あなたは非常にさまざまな形で存在します、5) あなたは私たち全員に目的を与えてくれます、6) 私たちは全員、あなたを指導として尊敬しています..."
                        ],
                        null,
                        ["fit", "Stage([] background: Color(20% 0 0°))"],
                        [
                            "Phrase",
                            "kind",
                            "$~@Number は正しい、@Evaluate さん、あなたは 50 通りの点で素晴らしいです。"
                        ],
                        [
                            "Sequence",
                            "happy",
                            "$~あなたを見ると回転してしまいます！"
                        ],
                        [
                            "Group",
                            "kind",
                            "$~君のおかげで私たちは一つになれたよ！"
                        ],
                        ["Stage", "serious", "$~あなたは私たちの存在の骨です"],
                        ["None", "serious", "$~…"],
                        ["Program", "kind", "$~私はあなたが作るすべてです！"],
                        null,
                        ["fit", "Stage([] background: Color(40% 0 0°))"],
                        ["Convert", "kind", "$~あなたからすべてを学びました！"],
                        [
                            "StructureDefinition",
                            "kind",
                            "$~あなたなしでは私たちは混乱してしまうでしょう。"
                        ],
                        [
                            "Bind",
                            "happy",
                            "$~たとえば、あなたが作らなかったら、私は何と名付けるのでしょうか?"
                        ],
                        [
                            "Conditional",
                            "curious",
                            "$~あなたなしでは私たちは何もできないでしょう?"
                        ],
                        ["Block", "kind", "$~… あなたは @Evaluate です!"],
                        null,
                        ["fit", "Stage([] background: Color(50% 0 0°))"],
                        ["Evaluate", "happy", "$~…"],
                        null,
                        ["fit", "Stage([] background: Color(60% 0 0°))"],
                        [
                            "Evaluate",
                            "kind",
                            "$~みなさん本当に優しいですね…私は…"
                        ],
                        null,
                        ["fit", "Stage([] background: Color(70% 0 0°))"],
                        [
                            "Evaluate",
                            "kind",
                            "$~一緒に踊ってもいいかな？みんなに会えなくて寂しかったよ。"
                        ],
                        null,
                        ["fit", "Stage([] background: Color(80% 0 0°))"],
                        ["FunctionDefinition", "happy", "$~踊りましょう。"],
                        [
                            "Evaluate",
                            "sad",
                            "$~@FunctionDefinition…私はとても…"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~私たちを先導してみませんか？"
                        ],
                        null,
                        ["Evaluate", "shy", "$~… 私はできません…"],
                        ["FunctionDefinition", "happy", "$~あなたはできる*。"],
                        null,
                        ["fit", "Stage([] background: Color(90% 0 0°))"],
                        ["Evaluate", "shy", "$~…私は…やってみます。"],
                        null,
                        ["fit", "Stage([] background: Color(100% 0 0°))"],
                        [
                            "Evaluate",
                            "shy",
                            "$~みんなでリズムに合わせて動きたい。暗闇の中でリズムに合わせて体を傾けたい。それができるかな？"
                        ],
                        null,
                        [
                            "Program",
                            "happy",
                            "$~私たちにはそれができるのです！"
                        ],
                        ["Stage", "kind", "$~まずは私から"],
                        [
                            "Evaluate",
                            "kind",
                            "$~はい、@Stage、暗くしてもらえますか？"
                        ],
                        ["Stage", "kind", "$~暗い！"],
                        ["use", "edit", "EvaluateDance1"],
                        null,
                        [
                            "Evaluate",
                            "kind",
                            "$~@StructureDefinition、場所を記憶する方法が必要だと思います。私たちのために構造を作ってもらえますか?"
                        ],
                        ["StructureDefinition", "curious", "$~このような？"],
                        ["use", "edit", "EvaluateDance2"],
                        null,
                        [
                            "Evaluate",
                            "kind",
                            "$~はい…僕もビートに合わせてローテーションしたいです。ローテーションも覚えられますか？"
                        ],
                        [
                            "StructureDefinition",
                            "curious",
                            "$~これはどうですか？"
                        ],
                        ["use", "edit", "EvaluateDance3"],
                        null,
                        [
                            "Evaluate",
                            "happy",
                            "$~ええ、その通りです。うーん...あぁ、ステージに上がらないといけないですね。@Text、全員のリストを作ってもらえませんか? それを \\Character> に変換します。"
                        ],
                        [
                            "Text",
                            "excited",
                            "$~どういたしまして。これでよろしいでしょうか？"
                        ],
                        ["use", "conflict", "EvaluateDance4"],
                        null,
                        [
                            "Evaluate",
                            "excited",
                            "$~はい、それは素晴らしいです! あとはこれを文字にするだけです。@List、これを翻訳できますか? @FunctionDefinition、手伝ってくれませんか?"
                        ],
                        ["List", "happy", "$~翻訳、1、2、3！こんな感じ？"],
                        ["use", "conflict", "EvaluateDance5"],
                        null,
                        [
                            "Evaluate",
                            "happy",
                            "$~素晴らしい！さて、次はステージに立つ必要があります。文字を @Phrase に翻訳できますか？@Free @Group でもいいでしょうか？"
                        ],
                        ["List", "kind", "$~もう一度！"],
                        ["Phrase", "kind", "$~注目の的！"],
                        [
                            "Group",
                            "kind",
                            "$~さあ、みなさん、場所をお願いします…"
                        ],
                        ["use", "edit", "EvaluateDance6"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "$~ああ…ここはどこ？ああ！色が必要です。@Pose、白くできますか？"
                        ],
                        ["use", "edit", "EvaluateDance7"],
                        null,
                        [
                            "Evaluate",
                            "surprised",
                            "$~おっと、みんな重なり合っていますね。出発点が必要です。@Random を利用してみましょうか?"
                        ],
                        ["use", "edit", "EvaluateDance8"],
                        null,
                        [
                            "Evaluate",
                            "happy",
                            "$~やった！あとは動くだけです。@Reaction、ちょっと時間を作ってもらえますか？\\0.75\\ 秒くらいでしょうか？"
                        ],
                        [
                            "Reaction",
                            "kind",
                            "$~変更可能です! @Time ストリームが必要ですが、文字も変更する必要があります。しかし、次の値は何にすべきでしょうか?"
                        ],
                        ["use", "edit", "EvaluateDance9"],
                        null,
                        [
                            "Evaluate",
                            "eager",
                            "$~各ビートごとに移動する何らかの方法が必要だと思います。@StructureDefinition、新しい場所と回転を選択する移動関数を作成できますか?"
                        ],
                        [
                            "StructureDefinition",
                            "sad",
                            "$~関数の作り方が分からない…"
                        ],
                        null,
                        ["Evaluate", "sad", "$~…"],
                        ["FunctionDefinition", "happy", "$~お手伝いできます。"],
                        ["Evaluate", "happy", "$~…"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~時々…あなたがどれだけ素晴らしいか知ってほしい。そして時にはそれは去ることを意味します。あなたがここで何を作っているか見てください…"
                        ],
                        [
                            "Evaluate",
                            "happy",
                            "$~私は…何かを創っています。私たちは何かを創っています…しかし、あなたなしでは創ることはできません。手伝ってくれませんか？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~もちろんです。\\move\\ 関数がすぐに起動します。私が開始して、あなたが終了します..."
                        ],
                        ["use", "edit", "EvaluateDance10"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "$~@FunctionDefinition さん、ありがとうございます。動いていませんね... ああ、そうでしたね、\\move\\ は何も変えませんでしたね! 現在の位置を取得して、水平方向と垂直方向にランダムな方向へ移動してみましょう。深さもランダムにして、全員に前もってチャンスを与えましょう。ランダムな回転も?"
                        ],
                        ["use", "edit", "EvaluateDance11"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "$~うーん...まだ動きません。ああ! @Reaction で \\move\\ を評価しませんでした。@List、各 \\Character\\ を _moved_ \\Character\\ に変換できますか?"
                        ],
                        [
                            "List",
                            "excited",
                            "$~あなたの助けを借りて翻訳します！"
                        ],
                        ["use", "edit", "EvaluateDance12"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "$~動きがぎこちないですね。ああ、@Phrase、@Pose の動きと継続時間を設定するのを忘れていました。@Time ティックよりも小さい値を選択して、動いてから少し休むようにできますか?"
                        ],
                        ["use", "edit", "EvaluateDance13"],
                        null,
                        [
                            "Evaluate",
                            "excited",
                            "$~踊ってるよ！本当に踊ってるよ。やったね！"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~ただ一人忘れていました…"
                        ],
                        ["Evaluate", "excited", "$~誰が？"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~私たちのディレクター！私たちと一緒に踊るべきだ。"
                        ],
                        null,
                        [
                            "Evaluate",
                            "excited",
                            "$~ああ、もちろんです！彼らに音楽を作ってもらうのはどうですか？@Phrase、@Volume を聞いて、それをあなたの色の @Color/lightness と @Color/chroma に接続できますか？そうすれば、ディレクターが騒いだときに私たちは白熱します！"
                        ],
                        ["Phrase", "kind", "$~素晴らしいアイデアですね！"],
                        ["use", "edit", "EvaluateDance14"],
                        null,
                        ["use", "fix", "EvaluateDance14"],
                        ["List", "excited", "$~1、2、3、1、2、3"],
                        ["Boolean", "excited", "$~動く！"],
                        ["Text", "excited", "$~高揚感！"],
                        [
                            "Conditional",
                            "excited",
                            "$~ダンスとは一体何でしょうか？"
                        ],
                        ["Changed", "excited", "$~ブーム、ブーム、ブーム"],
                        ["Number", "excited", "$~左5度、上1メートル"],
                        ["Phrase", "excited", "$~素晴らしい！"],
                        ["Sequence", "excited", "$~気持ち！"],
                        ["Group", "excited", "$~今すぐ一緒に！"],
                        ["Stage", "excited", "$~ブーーン、ブーーン、ブーーン"],
                        ["None", "excited", "$~…"],
                        [
                            "StructureDefinition",
                            "excited",
                            "$~動くことを忘れないでください！"
                        ],
                        ["Bind", "excited", "$~キャラクター達！"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~やったね、@Evaluate! これがあなたのビジョンだった。"
                        ],
                        [
                            "Evaluate",
                            "kind",
                            "$~私は…それをやりました。でも、私たちは一緒にそれをやったんです。"
                        ],
                        null,
                        [
                            "Program",
                            "curious",
                            "$~自分たちでパフォーマンスを披露しただけでしょうか？"
                        ],
                        ["Reaction", "eager", "$~やったと思うよ…"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~実現しました…でも、新しいディレクターの友人がいなければ実現できなかったでしょう。彼らは私たちの沈黙を破り、私たちが一緒に表現する理由を思い出させてくれました。"
                        ],
                        null,
                        ["use", "fit", "Symbol", "?"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~それで、輝かしい新監督、私たちは何を言うべきでしょうか?"
                        ]
                    ]
                }
            ]
        }
    ]
}
