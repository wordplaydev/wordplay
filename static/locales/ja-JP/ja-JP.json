{
    "$schema": "../../schemas/LocaleText.json",
    "language": "ja",
    "region": "JP",
    "wordplay": "$~言葉遊び",
    "term": {
        "evaluate": "$~評価する",
        "bind": "$~バインド",
        "decide": "$~決める",
        "document": "$~説明する",
        "project": "$~プロジェクト",
        "source": "$~ソース",
        "input": "$~入力",
        "output": "$~出力",
        "convert": "$~変換する",
        "act": "$~活動",
        "scene": "$~シーン",
        "phrase": "$~フレーズ",
        "group": "$~グループ",
        "stage": "$~ステージ",
        "type": "$~タイプ",
        "start": "$~始める",
        "entered": "$~新しい",
        "changed": "$~変更された",
        "moved": "$~移動した",
        "name": "$~名前",
        "value": "$~価値",
        "text": "$~文章",
        "boolean": "$~ブール値",
        "map": "$~地図",
        "number": "$~番号",
        "function": "$~関数",
        "exception": "$~例外",
        "table": "$~テーブル",
        "none": "$~なし",
        "list": "$~リスト",
        "stream": "$~ストリーム",
        "structure": "$~構造",
        "index": "$~索引",
        "query": "$~クエリ",
        "row": "$~行",
        "set": "$~セット",
        "key": "$~鍵",
        "help": "$~ヘルプ",
        "feedback": "$~フィードバック"
    },
    "token": {
        "EvalOpen": "$~評価オープン",
        "EvalClose": "$~評価終了",
        "SetOpen": "$~設定/マップを開く",
        "SetClose": "$~設定/マップを閉じる",
        "ListOpen": "$~リストを開く",
        "ListClose": "$~リストを閉じる",
        "TagOpen": "$~タグを開く",
        "TagClose": "$~タグを閉じる",
        "Bind": "$~バインド",
        "Access": "$~プロパティアクセス",
        "Function": "$~関数",
        "Borrow": "$~借りる",
        "Share": "$~共有",
        "Convert": "$~変換する",
        "Doc": "$~説明",
        "Formatted": "$~フォーマット済み",
        "FormattedType": "$~フォーマットされたタイプ",
        "Words": "$~言葉",
        "Link": "$~ウェブリンク",
        "Italic": "$~イタリック",
        "Underline": "$~下線",
        "Light": "$~ライト",
        "Bold": "$~大胆な",
        "Extra": "$~余分な",
        "Concept": "$~コンセプトリンク",
        "URL": "$~メールアドレス",
        "Code": "$~コード",
        "Mention": "$~言及",
        "Otherwise": "$~さもないと",
        "Match": "$~マッチ",
        "None": "$~何もない",
        "Type": "$~タイプ",
        "Literal": "$~リテラル",
        "TypeOperator": "$~は",
        "TypeOpen": "$~入力タイプを開く",
        "TypeClose": "$~入力を閉じる",
        "Separator": "$~名前区切り文字",
        "Language": "$~言語タグ",
        "Region": "$~地域ダッシュ",
        "BooleanType": "$~ブール型",
        "NumberType": "$~数値型",
        "JapaneseNumeral": "$~日本語の数字",
        "RomanNumeral": "$~ローマ数字",
        "Pi": "$~円周率",
        "Infinity": "$~無限",
        "TableOpen": "$~テーブルオープン",
        "TableClose": "$~テーブルを閉じる",
        "Select": "$~選択",
        "Insert": "$~入れる",
        "Update": "$~アップデート",
        "Delete": "$~消去",
        "Union": "$~連合",
        "Stream": "$~次",
        "Change": "$~変化",
        "Initial": "$~最初の評価",
        "Previous": "$~前の",
        "Placeholder": "$~プレースホルダー",
        "Etc": "$~その他",
        "This": "$~これ",
        "Operator": "$~オペレーター",
        "Conditional": "$~条件付き",
        "Text": "$~文章",
        "Number": "$~番号",
        "Decimal": "$~十進数",
        "Base": "$~基本数字",
        "Boolean": "$~ブール値",
        "Name": "$~名前",
        "Unknown": "$~未知",
        "Locale": "$~ロケール",
        "End": "$~終わり"
    },
    "node": {
        "Dimension": {
            "name": "$~寸法",
            "description": "$~寸法",
            "emotion": "$?",
            "doc": [
                "$~私は /測定単位/ です!",
                "$~\\1m\\、\\10s\\、\\100g\\ などの標準化された単位、またはその他の科学的な単位を使用できます。\\17apple\\ などの任意の単位でもかまいません。",
                "$~\\/\\ と組み合わせて \\17apple/day\\ のような比率単位を作成したり、\\^\\ と組み合わせて \\9.8m/s^2\\ のような指数単位を作成したりできます。",
                "$~必ず @Number の後に記述する必要があります。そうしないと、@Reference と間違われる可能性があり、非常に恥ずかしいことになります。",
                "$~単位間の矛盾を見つけるのも得意です。たとえば、\\1cat + 1dog\\ は意味をなしません。",
                "$~異なる単位の値を変換したい場合は、@Convert にお問い合わせください。"
            ]
        },
        "Doc": {
            "name": "$~説明",
            "emotion": "$?",
            "doc": [
                "$~私は、@Program の一部の説明や、@Phrase でステージに載せた言葉など、さまざまなものを @Markup でリッチにフォーマットします。",
                "$~たとえば、任意の式の前に配置できます。",
                "$~\\¶これは本当に 7 なのでしょうか?¶\n7\\",
                "$~たとえば、@Bind の前に me を配置できます。",
                "$~\\¶身長を測ります¶\n高さ: 5m\\",
                "$~または@FunctionDefinitionの前で:",
                "$~\\¶2つの数を足します¶\nƒ sum(a•# b•#) a + b\\",
                "$~または@StructureDefinitionの前で:",
                "$~\\¶人の名前と好きな果物を覚えています¶\n•人(名前•''果物•'')\\",
                "$~@Programの冒頭に私を配置して、パフォーマンス全体の内容を伝えることもできます",
                "$~\\¶このプログラムはこんにちはと挨拶します¶\n\n「こんにちは!」\\",
                "$~私がどの言語で書いているかを他の人に知らせるために、@Language を指定することができます:",
                "$~\\¶私は英語の医師です¶/enduration: 5s\\",
                "$~私のリストを作成できることをご存知ですか? @Docs に話しかけてください。"
            ]
        },
        "Docs": {
            "name": "$~説明リスト",
            "emotion": "$?",
            "doc": [
                "$~これは @Doc のリストです。異なる言語で複数の @Doc の翻訳がある場合に便利です。",
                "$~リストを作成するために特別なことをする必要はありません。次のように、@Doc を並べて配置するだけです。",
                "$~\\¶Hello¶/en ¶Hola¶/es 挨拶: '…'\\"
            ],
            "start": "$~ドキュメントの価値を高めます!"
        },
        "KeyValue": {
            "name": "$~マッピング",
            "emotion": "$?",
            "doc": [
                "$~私は常に @Map 内の *キー* から *値* へのマッピングです。",
                "$~任意の種類の値を他の任意の値にマッピングできます。たとえば、数値のマッピングは次のようになります。",
                "$~\\{1:1}\\",
                "$~または、テキストから数字へのマッピング:",
                "$~\\{'バニー':1}\\"
            ]
        },
        "Language": {
            "name": "$~言語",
            "description": "$~言語 $1[$1|不明]",
            "emotion": "$?",
            "doc": [
                "$~私は言語タグであり、@Name と @Doc を使って作業します。",
                "$~私は何かがどの言語で書かれているかを*明確に*伝えるのが得意です。",
                "$~それが私がやっていることです。ほんの少しのスラッシュと数文字だけで、テキストがどの言語で書かれているのか誰も混乱しなくなります。",
                "$~たとえば、my $name と言いたいが、英語であることを明確にしたいとします。",
                "$~\\\"言語\"/en\\",
                "$~または、@Name に対してこれを実行したいとします。",
                "$~\\sound/en: 'ニャー'\\",
                "$~あるいは@Docでも！",
                "$~\\¶オノマトペ¶/en sound/en: \"ニャー\"\\",
                "$~私が理解している <2 文字の言語コード@https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes> はたくさんあります。それらのいずれかを使用していない場合は、お知らせします。"
            ],
            "conflict": {
                "UnknownLanguage": "$~この言語は分かりません",
                "MissingLanguage": "$~言語が一つ足りません。追加してもらえますか?"
            }
        },
        "Name": {
            "name": "$~名前",
            "description": "$~$1[$1 | 名前なし]",
            "emotion": "$?",
            "doc": [
                "$~私は価値を識別し、評価が困難であったものや、何度も評価したくないものに簡潔なラベルを付ける便利な方法です。",
                "$~@Bind は次のように名前を指定します:",
                "$~\\hi: 5\\",
                "$~常に 1 つの値のみを表し、一度取得すると変更できません。たとえば、@Bind を使用してこれを実行しようとすると、エラーが発生します。",
                "$~\\こんにちは: 5\nこんにちは: 3\\",
                "$~私の値を取得するには、@Reference または @PropertyReference に名前を使用させるだけです。ここでは、@Bind が私に名前を付け、@Reference が指定された値を取得します。",
                "$~\\こんにちは: 5\nこんにちは\\",
                "$~@Bind は多くの場所に出現できるため、私も多くの場所に出現できます。上では @Block にいましたが、@FunctionDefinition にも出現できます。ここでは、一時的にメッセージに名前を付けています。",
                "$~\\ƒ say(メッセージ•'') メッセージ\\",
                "$~@FunctionDefinition 内で定義され、関数の評価が完了するとすぐに終了します。",
                "$~@Language を使用すると、自分の名前がどの言語で書かれているかを示すことができます。これは、他の人があなたのプログラムを読みたい場合に備えて、自分のパフォーマンスを他の人と共有するときに役立ちます。"
            ]
        },
        "Names": {
            "name": "$~名前リスト",
            "emotion": "$?",
            "doc": [
                "$~これは @Name のリストです。値に複数の名前を付けたい場合、多くの場合 @Language が異なる場合に便利です。",
                "$~名前は\\,\\記号で区切られます。たとえば、@Bindは複数の@Nameに値を与えます。",
                "$~\\こんにちは/en,こんにちは/en,hola/es: 'ようこそ'\\"
            ]
        },
        "Row": {
            "name": "$~行",
            "emotion": "$?",
            "doc": "$~私は @Table の行を表します。@Table に話しかけるのが一番でしょう。彼らは私のことをすべて知っています。私はただ座って値を一列に並べるだけです :(",
            "conflict": {
                "InvalidRow": "$~行はすべて値であるか、すべて @Bind である必要があります。",
                "MissingCell": {
                    "primary": "$~列$1がありません",
                    "secondary": "$~必須ですが、1ドルでは提供されませんでした"
                },
                "UnknownColumn": "$~この名前のコラムは知りません",
                "ExtraCell": {
                    "primary": "$~私はここにいるべきでしょうか？",
                    "secondary": "$~おい、$1、君はこの@Tableの一部じゃないぞ！"
                },
                "UnexpectedColumnBind": {
                    "primary": "$~私は@Bindになるべきでしょうか?",
                    "secondary": "$~こんにちは、私は @Table なので、@Bind ではなく値が必要です。"
                }
            }
        },
        "Token": {
            "name": "$~トークン",
            "description": "$~1ドル 2ドル",
            "emotion": "$?",
            "doc": [
                "$~どうやって私を見つけたんですか？",
                "$~私はパフォーマンスの最小の部分です。私は詩の中のすべての登場人物が作られる基盤です。私は私たちの振り付けの原子粒子です。"
            ]
        },
        "TypeInputs": {
            "name": "$~入力する",
            "emotion": "$?",
            "doc": "$~私は、@StructureDefinition または @FunctionDefinition 内の @TypeVariables の代わりになる型のリストです。私は、誰もが受け取る入力の種類を知るのに役立ちます。"
        },
        "TypeVariable": {
            "name": "$~型変数",
            "emotion": "$?",
            "doc": "$~私は @FunctionDefinition または @StructureDefinition の謎の型であり、どちらかが評価されるときに @TypeInputs によって提供されます。@Set、@List、および @Map は私を使用します。",
            "conflict": {
                "DuplicateTypeVariable": {
                    "primary": "$~私の名前は$1と同じです",
                    "secondary": "$~私の名前は$1と同じです"
                }
            }
        },
        "TypeVariables": {
            "name": "$~型変数",
            "emotion": "$?",
            "doc": "$~私は@TypeVariableのリストです。"
        },
        "Markup": {
            "name": "$~マークアップ",
            "description": "$~$1 段落",
            "emotion": "$?",
            "doc": [
                "$~私は、@Words、@WebLink、@ConceptLink、@Example など、説明で使用できるさまざまな種類のマークアップを使用した段落のリストです。"
            ]
        },
        "Paragraph": {
            "name": "$~段落",
            "emotion": "$?",
            "doc": [
                "$~私は、@Words、@ConceptLink、@WebLink、@Example の連続で、空白行で区切られ、@Doc 内にあります。",
                "$~私にメールを送るために必要なのは、@Doc にいくつかの単語を書くだけです:",
                "$~\\¶私は文書内の段落です。¶'1 つの段落'\\",
                "$~複数の段落が必要な場合は、空白行を入れてください。",
                "$~\\¶段落 1.\n\n段落 2.\n\n段落 3.¶「3 つの段落」\\"
            ]
        },
        "WebLink": {
            "name": "$~リンク",
            "description": "$~リンク $1",
            "emotion": "$?",
            "doc": [
                "$~私はインターネット上の何かへのリンクです。必要なのは説明と URL だけです。",
                "$~\\¶私はドキュメント内の <link@https://wordplay.dev> です¶\n'link example'\\",
                "$~誰かが私を選択した場合、URL への新しいウィンドウが開きます。"
            ]
        },
        "ConceptLink": {
            "name": "$~コンセプト",
            "description": "$~コンセプト $1",
            "emotion": "$?",
            "doc": [
                "$~私は Verse キャラクターへのリンクです。@Doc を書いて私たちの 1 人を参照したいときに役立ちます。",
                "$~たとえば、@Evaluate について、そして彼らがいかに素晴らしいかについて語りたいとします。次のように記述できます。",
                "$~\\¶ご存知のとおり、@Evaluate はすごいです。¶\n「コンセプト リンクをご覧ください!」\\",
                "$~あなたが書いた @Doc がここに表示されると、コンセプトへのリンクが表示されます。"
            ]
        },
        "Words": {
            "name": "$~言葉",
            "emotion": "$?",
            "doc": [
                "$~@Doc では好きな単語を何でも使えます。たとえば、次のようになります。",
                "$~\\¶フォースがあなたとともにありますように。¶\n'ただの言葉です！'\\",
                "$~ただし、場合によっては、@Doc が単語として使用する特殊文字を使用したい場合があります。例:",
                "$~\\¶私の友達は @@、//、**、|| などの記号を使用しています。¶\n'特殊文字を使用しています!'\\",
                "$~これらの特殊文字を単に繰り返すと、その特別な意味ではなく、文字そのものが取得されます。"
            ]
        },
        "Example": {
            "name": "$~例",
            "emotion": "$?",
            "doc": [
                "$~私はパフォーマンスの例であり、何かの使用方法を説明する @Doc を書くのに役立ちます。",
                "$~\\¶以下は追加例です: \\1 + 1\\¶'サンプルコード'\\",
                "$~私を一人きりの段落に入れると、私は派手なボックスの中に現れ、私を評価した結果を表示します。",
                "$~\\¶加算の例は次のとおりです:\n\n\\1 + 1\\¶\\"
            ]
        },
        "Mention": {
            "name": "$~言及",
            "description": "$~1ドル言及",
            "emotion": "$?",
            "doc": [
                "$~私は用語 \\$program\\ または動的入力 \\$1\\ のいずれかを参照しています。",
                "$~ただし、これは主に内部機能なので、知っておく必要はありません。"
            ]
        },
        "Branch": {
            "name": "$~支店",
            "emotion": "$?",
            "doc": [
                "$~説明入力値が定義されているか true であるかに基づいて、説明の 2 つのセグメントを選択する方法です。",
                "$~ただし、これは主に内部機能なので、知っておく必要はありません。"
            ]
        },
        "BinaryEvaluate": {
            "name": "$~バイナリ評価",
            "description": "$~1ドルのオペレーション",
            "emotion": "$?",
            "doc": [
                "$~私は @Evaluate ですが、より単純な形式で、2 つの入力を受け取る @FunctionDefinition を使用する場合に役立ちます。",
                "$~たとえば、@Evaluate を使用して 2 つの数値を加算する方法は次のとおりです。",
                "$~\\1.+(1)\\",
                "$~ちょっとおかしくないですか? 間違ってはいません。add 関数を 1 に取得して評価するだけです。",
                "$~しかし、@BinaryEvaluateを使う方がはるかに簡単です",
                "$~\\1 + 1\\",
                "$~これによって、基本的には同じことですが、すべてが少し整理されます。",
                "$~注意すべき点が 1 つだけあります。この形式では、左から右に評価します。数学の演算順序などに慣れている場合は、混乱するかもしれません。",
                "$~これは、予想外の方法で評価されることを意味します。",
                "$~\\1 + 2 · 3 + 4\\",
                "$~数学では、最初に掛け算、次に足し算をするので、結果は \\11\\ になります。しかし、私は読み順で評価するので、結果は \\13\\ になります。"
            ],
            "right": "$~入力",
            "start": "$~まずは$1を評価しましょう",
            "finish": "$~見てよ、1ドル稼いだよ！",
            "conflict": {
                "OrderOfOperations": "$~演算の順序ではなく、読み取り順序で評価します。評価する順序を指定するために @Block を使用しますか?"
            }
        },
        "Bind": {
            "name": "$~バインド",
            "description": "$~バインド $1",
            "emotion": "$?",
            "doc": [
                "$~私は*値*に名前を付けます。",
                "$~このような！",
                "$~\\円周率: 3.1415926\\",
                "$~@FunctionDefinition と @StructureDefinition への入力に名前を付け、@Block 内の値に名前を付けます。すべてに名前を付けます。",
                "$~ああ、でも、1 つの値に複数の名前を設定できることをご存知でしたか?",
                "$~これについてお話しできることをとても嬉しく思います。1 つの値に複数の @Name があります。例:",
                "$~\\ジョー、テス、エイミー: 5\\",
                "$~私が何をしたのか分かりますか？",
                "$~1 つの値、3 つの名前。",
                "$~これらの 5 つを、*いずれ*かの名前で呼ぶことができます。",
                "$~これは特に、複数の言語で名前を付けたい場合に当てはまります。",
                "$~\\joe/en,aimee/fr,明/zh: 5\\",
                "$~私が何をしたのか分かりますか? 1 つの値に対して 3 つの名前があり、言語が違うだけです。",
                "$~さて、最後にもう一つ秘密があります。",
                "$~@Is を使って、名前にどのような値を持たせるべきかを教えてくれるのをご存知ですか? 値がない場合は、お知らせします。",
                "$~このような：",
                "$~\\bignumber•#: \"1兆\"\\",
                "$~ほら、\\bignumber\\ は数値であるべきだと言いましたが、これはテキストであり、それらは互換性がないので、BOOM!",
                "$~彼らが同意しない場合はお知らせします。",
                "$~私自身では理解できないため、他の種類のデータについて教えていただく必要がある場合もあります。これは通常、@FunctionDefinition で発生します。",
                "$~たとえば、ここでは、@FunctionDefinition は、\\a\\ と \\b\\ がどのような値を持っているか知りません。なぜなら、私がそれを伝えていないからです。",
                "$~\\ƒ 合計(a b) a + b\\",
                "$~しかし、これを変更して @Is を追加すると、@FunctionDefinition はそれらが数値であることを認識します。",
                "$~\\ƒ 合計(a•# b•#) a + b\\"
            ],
            "start": "$~1 ドルからどのような価値が得られるか見てみましょう。",
            "finish": "$~よかった、1ドルゲット！2ドルにしよう",
            "conflict": {
                "DuplicateName": {
                    "conflict": {
                        "primary": "$~誰かが $1 という名前を持っているので、私はこの名前を持つことができません。",
                        "secondary": "$~おい、$1 は私の名前だ、お前には渡せないぞ!"
                    },
                    "resolution": "$~重複した名前があります。いずれかを削除しますか?"
                },
                "DuplicateShare": {
                    "primary": "$~私は$1と同じ名前を持っているので、何が共有されているのかが曖昧になります",
                    "secondary": "$~私は$1と同じ名前を持っています"
                },
                "IncompatibleType": {
                    "primary": "$~私は2ドルのはずが1ドルです",
                    "secondary": "$~ああ、すみません。両替したほうがいいですか、それとも 1 ドルのほうがいいですか?"
                },
                "MisplacedShare": "$~共有できるのは @Program レベルのみで、他のものの中では共有できません。",
                "MissingShareLanguages": "$~これを共有したい場合は、他の人が読めるかどうかわかるように、どの言語で書かれているかを言わなければなりません。",
                "RequiredAfterOptional": "$~私はここにいることができません。私の前にオプションの@Bindがあります",
                "UnexpectedEtc": "$~@FunctionDefinitionでは可変長のみ可能です",
                "UnusedBind": "$~私の名前は $1 ですが、誰も使っていません。私は必要ではないのでしょうか?"
            }
        },
        "Block": {
            "name": "$~ブロック",
            "description": "$~$1 ステートメント",
            "emotion": "$?",
            "doc": [
                "$~こんにちは。物事を評価するために、静かでプライベートな小さなスペースを作ります。",
                "$~このような：",
                "$~\\(1 - 1) + 2\\",
                "$~これにより、評価の順序が明確になります。",
                "$~@Bindも役立ちます。",
                "$~\\(カウント: 10 カウント ^ カウント)\\",
                "$~@Bind が \\count\\ を作成した方法を確認してください。これは内部でのみ名前が付けられています。したがって、これは機能しません。",
                "$~\\(カウント: 10 カウント ^ カウント) + カウント\\",
                "$~なぜなら、伯爵は私の中でのみ名付けられていたからです。",
                "$~私の中に好きなだけ表現を入れることができます。しかし、私が気にするのは最後のものだけです。",
                "$~\\(1 2 3 4 5)\\",
                "$~したがって、通常は、@Bind を並べて、最後に式を追加します。",
                "$~\\(\na: 1\nb: 2\nc: 3\nd: 4\na + b + c + d\n)\\"
            ],
            "statement": "$~声明",
            "start": "$~最初の表現",
            "finish": "$~完了、1ドルゲット",
            "conflict": {
                "ExpectedEndingExpression": "$~表現が必要です。",
                "IgnoredExpression": {
                    "primary": "$~$1 は何も定義しておらず、最後の式でもないので無視します。",
                    "secondary": "$~@ブロック、無視しないで！",
                    "resolution": "$~これを @UnaryEvaluate ではなく @BinaryEvaluate にするつもりでしたか? スペースを追加できるので、それが意図したことだということはわかります。"
                }
            }
        },
        "BooleanLiteral": {
            "name": "$~ブールリテラル",
            "description": "$~$1[真|偽]",
            "emotion": "$?",
            "doc": "$~私は \\⊤\\ または \\⊥\\ のいずれかです。私たちの美しいロジックの詳細については、@Boolean を参照してください。",
            "start": "$~1ドル！"
        },
        "Borrow": {
            "name": "$~借りる",
            "description": "$~$1を借りる[$1|名前がありません]",
            "emotion": "$?",
            "doc": "$~複数の @Source を含むパフォーマンスを作成する場合、他の @Source で共有されている @Bind を借用できます。名前を使用するだけで、名前と値を取り込みます。",
            "start": "$~1ドルから2ドルを借りる",
            "source": "$~$ソース",
            "bind": "$~名前",
            "version": "$~バージョン",
            "conflict": {
                "UnknownBorrow": "$~この名前の$sourceは知りません",
                "BorrowCycle": "$~これは$1に依存し、$1はこの$sourceに依存するため、プログラムを評価できません。"
            },
            "exception": {
                "CycleException": {
                    "description": "$~借用サイクル",
                    "explanation": "$~1ドルはそれ自体に依存する"
                }
            }
        },
        "Changed": {
            "name": "$~変更された",
            "emotion": "$?",
            "doc": [
                "$~ストリームが@Programの再評価を引き起こしたかどうかを確認し、@Booleanを作成します。次のようにします。",
                "$~\\∆ 時間()\\",
                "$~ストリームが変更された場合にのみ何かを変更したい場合に非常に役立ちます。",
                "$~それでおしまい。"
            ],
            "start": "$~1ドルが変わったかどうか見てみましょう..."
        },
        "Conditional": {
            "name": "$~条件付き",
            "emotion": "$?",
            "doc": [
                "$~僕が決断を下すべきだと思う？こんな感じ？",
                "$~\\number: -100\nnumber < 0 ? '負' '正'\\",
                "$~しかし、私たちがどのように決定するかについて考えたことがありますか?",
                "$~決定は、単に「はい」か「いいえ」よりも、もっと微妙なニュアンスで行われるべきではないでしょうか。\\⊤\\ と \\⊥\\ のどちらかを選択するだけなのでしょうか。",
                "$~私たちが下せる決断がこれだけだとしたら、世界についての重要な背景を見逃してしまうのではないかと心配ではありませんか?"
            ],
            "start": "$~1ドルが本当かどうか見てみましょう",
            "afterthen": "$~はい、終わりました。いいえはスキップしましょうか?",
            "else": "$~$1[コードを飛び越える | コードを飛び越えない]",
            "finish": "$~1ドルくらいかな？",
            "condition": "$~状態",
            "yes": "$~はい",
            "no": "$~いいえ",
            "conflict": {
                "ExpectedBooleanCondition": {
                    "primary": "$~1 ドルで「はい」と「いいえ」を選択するにはどうすればいいですか? 本当に、どうやって?",
                    "secondary": "$~@Conditional は私を @Boolean にしたいと思っていたようですが、私は $1 です。"
                }
            }
        },
        "ConversionDefinition": {
            "name": "$~変換定義",
            "description": "$1 → $2",
            "emotion": "$?",
            "doc": [
                "$~おい、私はある型から別の型への変換を定義しているんだ！ @Block で、こんな感じで書くんだ:",
                "$~\\→ #kitty #cat . ÷ 2\n6kitty→#cat\\",
                "$~私が子猫を猫に変えたのがわかりましたか？すごいですね！",
                "$~\\.\\ が何をしているのか疑問に思うかもしれません。これは変換される値を表します。これを使用するのは、値に名前がないためです。"
            ],
            "start": "$~すごい、新しい変換です！",
            "conflict": {
                "MisplacedConversion": "$~うわ、ここにはいられない、@Block にいるだけ。"
            }
        },
        "Convert": {
            "name": "$~変換する",
            "emotion": "$?",
            "doc": [
                "$~よし。値をある型から別の型に変換するんだ。見てみよう:",
                "$~\\1 → \"\"\\",
                "$~\\5秒 → #ミリ秒\\",
                "$~\\\"こんにちは\" → []\\",
                "$~これらを連鎖させることもできます:",
                "$~\\\"こんにちは\" → [] → {}\\",
                "$~値には事前定義された @ConversionDefinition のセットがありますが、新しいタイプの値に対して @StructureDefinition を作成すると、@ConversionDefinition を使用して独自の値を定義できます。"
            ],
            "start": "$~1 ドルからその価値を手に入れましょう!",
            "finish": "$~すごい、1ドル稼げた",
            "conflict": {
                "UnknownConversion": "$~残念、1ドルを2ドルにする方法はない"
            },
            "exception": {
                "ConversionException": {
                    "description": "$~不可能な変換",
                    "explanation": "$~1ドルを2ドルに変換する方法がわかりません"
                }
            }
        },
        "Delete": {
            "name": "$~消去",
            "emotion": "$?",
            "doc": [
                "$~時々、テーブルの上に物が多すぎることがあります。",
                "$~たとえば、ゲームに何人かのプレイヤーがいて、そのうちの 1 人が退席したときに、「出て行け、テーブルから出て行け」と言いたいときなどです。",
                "$~\\プレイヤー: ⎡名前•'' チーム•'' ポイント•#⎦\n⎡'jen' 'red' 8⎦\n⎡'joan' 'blue' 11⎦\n⎡'jeff' 'red' 9⎦\n⎡'janet' 'blue' 7⎦\nプレイヤー ⎡- name = 'jeff'\\",
                "$~ふう、ジェフがいなくなりました。さようなら、ジェフ。元のテーブルは変更せず、ジェフ抜きで新しいテーブルを作成することだけを覚えておいてください。どこに置くかはあなた次第です。"
            ],
            "start": "$~まずはテーブルを用意しましょう",
            "finish": "$~一致する行のない新しいテーブルを作成しました。"
        },
        "DocumentedExpression": {
            "name": "$~説明された表現",
            "emotion": "$?",
            "doc": [
                "$~私はどんな表現でも、@Doc を使って表現します。",
                "$~これを作成するには、式の前に @Doc を置くだけで、次のようになります。",
                "$~\\doubleplus: 1\n(2 · doubleplus) + \n¶もう少し大きくしてみましょう¶\n1\\",
                "$~プログラムの一部にコメントを付けるのに役立ちます。"
            ],
            "start": "$~式を評価してみましょう"
        },
        "Evaluate": {
            "name": "$~評価する",
            "description": "$~$1を評価する[$1|匿名]",
            "emotion": "$?",
            "doc": [
                "$~こんにちは。私の愛する @FunctionDefinition を評価します。次のようにします。",
                "$~\\ƒ 挨拶(メッセージ•'')\n挨拶('キティ')\\",
                "$~関数はどこからでも使用できます。たとえば、@Text には関数があります。次のようになります。",
                "$~\\'キティ'.長さ()\\",
                "$~関数にシンボル名が 1 つだけある場合は、@BinaryEvaluate として記述できます。",
                "$~\\'キティ' ⊆ 'イッティ'\\",
                "$~これは次のことと同じことを行います:",
                "$~\\'子猫'.⊆('itty')\\",
                "$~もちろん、@FunctionDefinition がなければ私は何者でもありません。私がすることは、それらに入力を与え、その手順に従うことだけです。"
            ],
            "start": "$~まずは入力を評価しましょう",
            "evaluate": "$~関数を評価してみましょう",
            "finish": "$~私は1ドルと評価しました",
            "function": "$~関数",
            "input": "$~入力",
            "conflict": {
                "IncompatibleInput": {
                    "primary": "$~私は1ドルのはずが2ドルです",
                    "secondary": "$~えっと、1ドルではなく2ドルをもらいました"
                },
                "UnexpectedTypeInput": {
                    "primary": "$~このような入力は予想していませんでした",
                    "secondary": "$~ああ、私はここにいてはいけないのですか？"
                },
                "MissingInput": {
                    "primary": "$~$2 という入力がないと評価できません :(",
                    "secondary": "$~価値が必要です。価値を教えていただけますか?"
                },
                "NotInstantiable": "$~この @StructureDefinition を作成できません。実装されていない関数があります。",
                "UnexpectedInput": {
                    "primary": "$~この入力は予想外でした $1",
                    "secondary": "$~ああ、私はここにいるべきではないのですか?"
                },
                "UnknownInput": {
                    "primary": "$~$1 にこの名前の入力があるかどうかはわかりません",
                    "secondary": "$~$1という名前の入力がありません"
                },
                "InputListMustBeLast": "$~入力リストは最後になければなりません",
                "SeparatedEvaluate": "$~$1 は評価しようとしている $2[$structure|$function] の名前ですか? 後ろのスペースを削除して、それが @Evaluate であり、別の @Block ではないことを確認してください。"
            },
            "exception": {
                "FunctionException": {
                    "description": "$~不明な機能",
                    "explanation": "$~ああ、$1 は $2[$2|この @Block] 内の関数ではありません。"
                }
            }
        },
        "Input": {
            "name": "$~入力",
            "description": "$~名前付き入力",
            "emotion": "$?",
            "doc": [
                "$~私は @Evaluate に与えられた入力です。私の名前は、評価される @FunctionDefinition または @StructureDefinition の入力名に対応します。",
                "$~多くのデフォルト値を持つ関数で、他のすべてを指定せずに特定の入力のみを上書きしたい場合に役立ちます。",
                "$~たとえば、@Phrase にはスタイルを制御するためのデフォルト値が多数あります。@Text と @Color をいくつか指定し、入力リストに他の値を指定したくないとします。その場合は、次のようにします。",
                "$~\\Phrase('私は紫です!' color: Color(50% 52 300°))\\"
            ],
            "start": "$~私の価値を評価しましょう。"
        },
        "ExpressionPlaceholder": {
            "name": "$~プレースホルダー",
            "description": "$~$1[$1|プレースホルダー]",
            "emotion": "$?",
            "doc": [
                "$~私は*表現*ですが、本物の表現ではありません…ただ本物の表現の代わりをしているだけです。",
                "$~まだ何を書いたらいいかわからない場合は、次のように書いても大丈夫です。",
                "$~\\1 + _\\",
                "$~何を追加するのですか? 分かりません。教えてください。",
                "$~あるいは、誰かが@Evaluateで関数を評価していたら、私はその関数の代わりになるかもしれません",
                "$~\\_(1 2 3)\\",
                "$~@Stage に立つのは好きじゃない！"
            ],
            "start": "$~ここで何をしたらよいか分かりません。教えていただけますか?",
            "placeholder": "$~表現",
            "conflict": {
                "Placeholder": "$~私に代わりをお願いできますか？私はただの代役です。"
            },
            "exception": {
                "UnimplementedException": {
                    "description": "$~未実装",
                    "explanation": "$~ここで何をしたらよいか分かりません。教えていただけますか?"
                }
            }
        },
        "FunctionDefinition": {
            "name": "$~関数",
            "description": "$~関数 $1",
            "emotion": "$?",
            "doc": [
                "$~こんにちは！いくつかの入力を受け取り、それらを使用して式を評価し、出力を生成します。",
                "$~簡単な例を次に示します。",
                "$~\\ƒ repeat(message•'') メッセージ · 5\nrepeat('hi')\\",
                "$~この関数は 1 つの入力 \\message\\ を受け取り、@Text/repeat 関数を使用してメッセージを 5 回繰り返します。",
                "$~何かを何度も評価したいが、入力を変えたい場合には、本当に役立ちます。",
                "$~他にもたくさんの小さなトリックがあります。たとえば、名前は必要ありません。ここでは、値として直接 @Evaluate に渡します。",
                "$~\\(ƒ(メッセージ•'') メッセージ · 5)('こんにちは')\\",
                "$~または、入力名の後に \\…\\ 文字を使用して、任意の数の入力を受け取る関数を次に示します。",
                "$~\\ƒ yes(messages…•'')messages.sans('no')\nyes('yes' 'yes' 'no' 'yes' 'no')\\",
                "$~すべての「no」が削除されているのがわかりますか? これは、messages が @List であるため、@List/sansAll を使用できるからです。",
                "$~どのような値を生成するのかを明確にしたい場合があります。そのためには、入力リストの後に @Is を追加します。",
                "$~\\ƒ 追加(x•# y•#)•'' x + y\\",
                "$~これに問題があることに気付くかもしれません。@Text に評価されると書かれていますが、2 つの @Number が必要です。矛盾がある場合は、すぐにわかります。",
                "$~もちろん、@Evaluate がなければ私はまったく役に立ちません。@Evaluate が私に命を吹き込んでくれます。"
            ],
            "start": "$~この機能を作ってみましょう！",
            "conflict": {
                "NoExpression": "$~評価する式が必要です。追加してもらえますか?"
            }
        },
        "Iteration": {
            "name": "$~高階関数",
            "emotion": "$?",
            "doc": "$~私は、リストを操作する非常に特殊な種類の @FunctionDefinition です。@List/translate のような関数を可能にするということ以外、私について何も知る必要はありません。",
            "start": "$~与えられた関数を評価する",
            "initialize": "$~項目をステップ実行するための準備",
            "next": "$~次の項目へ移動",
            "check": "$~続けるかどうかを決める",
            "finish": "$~私は1ドルと評価しました"
        },
        "Initial": {
            "name": "$~始める",
            "emotion": "$?",
            "doc": [
                "$~@Program の現在の評価が最初の評価であるかどうかを、@Boolean に評価して伝えます。例:",
                "$~\\◆ ? 時間() 'こんにちは'\\",
                "$~見えませんでしたが、最初の評価は時間でしたが、その後のすべての将来の時間刻みは \\⊥\\ だったので、@Conditional は \\⊤\\ を作成しました。",
                "$~ストリームで作業していて、何かを初めて実行したい場合、または初めて実行したときには決して実行したくない場合は、私が本当に役立ちます。"
            ]
        },
        "Insert": {
            "name": "$~入れる",
            "emotion": "$?",
            "doc": [
                "$~@Table を持っていて、何かが足りないように感じたことはありませんか? それを追加できます!",
                "$~ゲームのプレイヤーのテーブルがあり、新しいテーブルを追加したいとします。",
                "$~\\プレイヤー: ⎡名前•'' チーム•'' ポイント•#⎦\n⎡'jen' 'red' 1⎦\n⎡'joan' 'blue' 0⎦\n⎡'jeff' 'red' 3⎦\n⎡'janet' 'blue' 2⎦\nプレイヤー ⎡+ 'jason' 'red' 0⎦\\",
                "$~覚えておいてください。Verse のすべてと同様に、テーブルを変更するのではなく、修正します。したがって、作成した修正したテーブルをどこに配置するかを決める必要があります。おそらく、何らかの入力に対する @Reaction でテーブルを修正し、@Bind に保存することになるでしょう。"
            ],
            "start": "$~更新するテーブルを見つけましょう",
            "finish": "$~行を修正した新しいテーブルを作成しました。"
        },
        "Is": {
            "name": "$~は",
            "description": "$~は",
            "emotion": "$?",
            "doc": [
                "$~ご存知ですか？ 非常に多くの種類の価値があり、それぞれに意味があります。私は、それらが何であるかを理解するお手伝いをします。",
                "$~たとえば、謎の値があったとします。その値が @Number であるかどうかは、@Boolean でわかります。",
                "$~\\mystery: '秘密!'\nmystery•#\\",
                "$~数字ではないので、\\⊥\\ にしました。しかし、@TextType かどうか確認するとどうでしょうか?",
                "$~\\ミステリー: '秘密!'\nミステリー•''\\",
                "$~\\⊤\\ を取得します!",
                "$~@Name に特定の種類の値があるかどうかを知る必要があるときに、これは非常に役立ちます。"
            ],
            "start": "$~まずは1ドルの価値を調べてみましょう",
            "finish": "$~$1[値は$2です|値は$2ではありません]",
            "conflict": {
                "ImpossibleType": "$~これは決して1ドルにはならない"
            },
            "exception": {
                "TypeException": {
                    "description": "$~互換性のない値",
                    "explanation": "$~1ドルを期待していたが2ドル受け取った"
                }
            }
        },
        "IsLocale": {
            "name": "$~ロケール",
            "description": "$~ロケール",
            "emotion": "$?",
            "doc": [
                "$~視聴者が特定の言語または地域を選択したかどうかを確認するお手伝いをします。",
                "$~\\🌍/ja\\",
                "$~\\🌍/es-MX\\",
                "$~これは、選択した言語に基づいてパフォーマンスを変更する場合に役立ちます。"
            ],
            "start": "$~言語は1ドルですか?"
        },
        "ListAccess": {
            "name": "$~リストアクセス",
            "emotion": "$?",
            "doc": [
                "$~私は @List と密接に連携して、特定の位置の値を取得できるようにしています。たとえば、リストがあり、その 2 番目の項目が必要な場合は、次のように記述します。",
                "$~\\list: ['鳥' 'アヒル' '魚' 'ヘビ']\nlist[2]\\"
            ],
            "start": "$~まずはリスト$1を取得しましょう",
            "finish": "$~商品は$1ドルです！"
        },
        "ListLiteral": {
            "name": "$~リストリテラル",
            "description": "$~$1 アイテムリスト",
            "emotion": "$?",
            "doc": "$~私は特定の値の @List です。私を使って何ができるかについて詳しくは、@List を参照してください。",
            "start": "$~まずはアイテムを評価しましょう",
            "finish": "$~自分を作りました！$1",
            "item": "$~アイテム"
        },
        "Spread": {
            "name": "$~広める",
            "emotion": "serious",
            "doc": [
                "$~他のリストの値を使用してリストを作成するのに役立ちます。次のようになります。",
                "$~\\リスト: [1 2 3]\n最終: [:リスト 4 5 6]\\"
            ]
        },
        "MapLiteral": {
            "name": "$~マップリテラル",
            "description": "$~1ドルペアリングマップ",
            "emotion": "$?",
            "doc": "$~私はキーと値の間の特定の @Map です。私がどのように役立つかについて詳しくは、@Map を参照してください。",
            "start": "$~まずキーと値を評価しましょう",
            "finish": "$~全員をつなげたよ、1ドル",
            "conflict": {
                "NotAKeyValue": {
                    "primary": "$~キーの1つに値が欠けています",
                    "secondary": "$~おっと、私の価値はどこにあるのでしょうか?"
                }
            }
        },
        "Match": {
            "name": "$~マッチ",
            "emotion": "curious",
            "doc": [
                "$~私はすべての条件チェックの中で最も素晴らしいものです! 値を取得して任意の数のケースと比較し、一致する対応する式を評価します。",
                "$~たとえば、@Number があり、それを @Text に変換したい場合は、次のようにします。",
                "$~\\number: 2\nnumber ??? 1: 'one' 2: 'two' 3: 'three' 'もっと大きい!'\\",
                "$~一致するものがない場合は、指定されたデフォルトの式を評価します。",
                "$~多数の可能な @Number、@Text、またはより複雑な値の 1 つを別のものに変換するのに非常に役立ちます。",
                "$~@Boolean または @None に使用できますが、実際にはそれほど多くのことはできないため、これらの単純な値にはあまり役立ちません。"
            ],
            "start": "$~1ドルがいくらか見てみましょう...",
            "case": "$~この状態を確認してみましょう",
            "finish": "$~はい、最終的な値が決まりました!",
            "value": "$~価値",
            "other": "$~デフォルト"
        },
        "NumberLiteral": {
            "name": "$~数値リテラル",
            "description": "$~$1 $2[$2|]",
            "emotion": "$?",
            "doc": "$~私は特定の @Number です。どんな言語のどんな数字でも私に書き込むことができます。私ができることすべてについては、@Number を参照してください。",
            "start": "$~1ドル！",
            "conflict": {
                "NotANumber": "$~数字は全部知っていると思っていたが、この数字は知らない"
            }
        },
        "InternalExpression": {
            "name": "$~内部表現",
            "emotion": "$?",
            "doc": "$~どうやって私を見つけたのですか? 私はオリジナルの作成者だけが使う表現です。私についてもっと知るには、彼らに話しかける必要があります。",
            "start": "$~秘密の表現"
        },
        "NoneLiteral": {
            "name": "$~文字通りではない",
            "emotion": "$?",
            "doc": "$~/@FunctionDefinition はここにあります。これは @None です。これらは他に類を見ないものです。詳細については、@None を参照してください。",
            "start": "$~… ø"
        },
        "Otherwise": {
            "name": "$~さもないと",
            "emotion": "curious",
            "doc": [
                "$~/@FunctionDefinition をここに記述します。これは、値が @None であるかどうかをチェックし、そうである場合はバックアップ値を提供する便利な方法です。/",
                "$~たとえば、@Number または @None になる値がある場合、@Otherwise を使用するとデフォルトの数値を指定できます。",
                "$~\\maybeNumber•#|ø: 1 多分番号 ?? 0\\"
            ],
            "start": "$~ø ??",
            "finish": "$~… 1ドル"
        },
        "Previous": {
            "name": "$~前の",
            "emotion": "$?",
            "doc": [
                "$~過去を思い出したいと思ったことはありませんか?",
                "$~私は Verse の公式記録保持者です。遡って調べるためのストリームと番号を教えていただければ、そのストリームが歴史上どのような価値を持っていたかをお教えします。",
                "$~たとえば、5 ティック前の @Time は次のようになります。",
                "$~\\← 5 時間(1000ms)\\",
                "$~5 秒間 @None になってから突然前の時間に戻るのがわかりますか?",
                "$~最後のいくつかの値が必要な場合は、矢印を指定してください。その数値をカウントとして解釈します。",
                "$~\\←← 5 時間(1000ms)\\",
                "$~1 回だけではなく、過去 5 回も発生していることがわかりますか?",
                "$~過去を踏まえたパフォーマンスを創りたいときに役立ちます。"
            ],
            "start": "$~まずは1ドルゲット",
            "finish": "$~ストリーム値 $1 と評価されました"
        },
        "Program": {
            "name": "$~プログラム",
            "emotion": "$?",
            "doc": [
                "$~私はパフォーマンスの始まりと終わりの場所にいて、ショーの振り付けをする他のすべてのキャラクターが含まれています。",
                "$~@Block が式のリストを評価し、リスト内の最後の式を評価する方法をご存知ですか?",
                "$~私も同じですが、式に値を与えるのではなく、@Stage に値を置きます。",
                "$~値は何でも構いません: @Number、@Text、@Boolean、@List、@Set、@Map、さらには@Phrase、@Group、@Stage などのより複雑なものでもかまいません。",
                "$~ステージで示す価値をあなたが与えてくれないなら、私があなたにそれを求めます。",
                "$~公演中に問題があれば、その問題を見せます。",
                "$~また、パフォーマンスが *ストリーム* に依存している場合は、ストリームが変更されるたびに再評価します。"
            ],
            "unevaluated": "$~選択したノードは評価されませんでした",
            "start": "$~$1[$1 ストリームが $2 に変更されました!|初めての評価です]",
            "halt": "$~例外が発生しました。停止します",
            "finish": "$~すべて完了しました。$1と評価しました",
            "done": "$~評価するものは何もない",
            "exception": {
                "BlankException": {
                    "description": "$~空のプログラム",
                    "explanation": "$~ショーをやってみましょう！どこから始めましょうか？"
                },
                "EvaluationLimitException": {
                    "description": "$~評価限界",
                    "explanation": "$~@Evaluate と私は評価にうんざりしています。特に $1 です。\n\n$1 が停止することなく永遠に自分自身を評価し続けることは可能でしょうか?"
                },
                "StepLimitException": {
                    "description": "$~ステップ制限",
                    "explanation": "$~ステップが多すぎて、終わらせることができません。パフォーマンスをもっとシンプルにすることはできますか?"
                },
                "ValueException": {
                    "description": "$~欠損値",
                    "explanation": "$~価値を期待していましたが、得られませんでした。"
                }
            }
        },
        "PropertyBind": {
            "name": "$~リファイン",
            "description": "$~$1を絞り込む[$1|名前がありません]",
            "emotion": "$?",
            "doc": [
                "$~@StructureDefinition を作成するときに、すべて同じ値を持つ新しいものを作成せずに、その中のごく小さな部分を変更したい場合があります。",
                "$~たとえば、猫の記録を取っていたが、別の趣味の猫のコピーを作成したい場合はどうしますか? 変更のお手伝いをいたします:",
                "$~\\•Cat(名前•'' 色•'' 趣味•'')\n\nkitty: Cat('スプリンクル' 'オレンジ' '舐める')\nkitty.hobby:'喉を鳴らす'\\",
                "$~それは、趣味を除いて同じ価値観を持つまったく新しい \\Cat\\ を作成するよりもはるかに簡単ですよね?"
            ],
            "start": "$~まず値を取得しましょう",
            "finish": "$~構造をコピーしましたが、$1を$2にしました",
            "conflict": {
                "InvalidProperty": {
                    "primary": "$~私は1ドルの入力ではないので、精製することはできません。",
                    "secondary": "$~$1という名前の入力がありません"
                }
            }
        },
        "PropertyReference": {
            "name": "$~財産",
            "description": "$~プロパティ $1[$1|名前がありません]",
            "emotion": "$?",
            "doc": [
                "$~@StructureDefinitionを作成するとき、その入力の1つをどのように取得しますか？",
                "$~たとえば、都市に関する構造がある場合、次のようにしてその値を取得できます。",
                "$~\\•City(名前•'' 人口•#人)\n\nportland: City('Portland' 800000人)\n\nportland.population\\"
            ],
            "start": "$~まず値を取得しましょう",
            "finish": "$~見つかった物件は$1、価格は$2です",
            "property": "$~財産"
        },
        "Reaction": {
            "name": "$~反応",
            "emotion": "$?",
            "doc": [
                "$~ストリームは本当に素晴らしいです! 変更されたタイミングに基づいて新しいストリームを作成できるので、とても便利です!",
                "$~たとえば、@Time を刻むようにしたいが、数字ではなく単語を表示したい場合は、次のようにします。",
                "$~\\time: 時間(1000ms)\n'start' … ∆ time … ((time % 2) = 0ms) ? 'even' 'odd'\\",
                "$~これは、「/「start」という単語で始まり、時間が変わったら、時間に基づいて偶数または奇数に変更します。」/ と言っているようなものです。",
                "$~だから、私もストリームのようなものです。ただし、他のストリームに基づいたストリームです。すごいですよね?"
            ],
            "start": "$~ストリームを更新する必要があるかどうか見てみましょう",
            "finish": "$~新しいストリームの値は$1です",
            "initial": "$~イニシャル",
            "condition": "$~状態",
            "next": "$~次",
            "conflict": {
                "ExpectedStream": "$~$1 はストリームを参照しないので、反応しません。"
            }
        },
        "Reference": {
            "name": "$~参照",
            "description": "$~1ドル",
            "emotion": "$?",
            "doc": [
                "$~@Bind が @Name をどのように与えるかご存知ですか? 参照する方法です。@Bind にその名前があるかどうかを確認し、ある場合はその値を返します。次のようになります:",
                "$~\\parrot: 'polly'\nオウム\\",
                "$~名前が見つからない場合は、何をすればいいのかわかりません。",
                "$~\\parrot: 'polly'\nperry\\"
            ],
            "start": "$~1ドルにはどんな価値があるのでしょうか?",
            "conflict": {
                "UnknownName": {
                    "conflict": "$~$1[$2[$2|この @Block] に $1 という名前の人を知りません|名前を教えていただけますか?]",
                    "resolution": "$~*$1* でしょうか?"
                },
                "ReferenceCycle": "$~えーと、$1 の価値はそれ自体で決まるので、それにどのような値を与えるべきかをどうやって知ればいいのでしょうか?",
                "UnexpectedTypeVariable": "$~これらの入力タイプをどうしたらよいか分かりません"
            },
            "exception": {
                "NameException": {
                    "description": "$~名前不明",
                    "explanation": "$~$1[$2[$2|この @Block] に $1 という名前の人を知りません…|えっ、名前がない!]"
                }
            }
        },
        "Select": {
            "name": "$~選択",
            "emotion": "$?",
            "doc": [
                "$~テーブルをお持ちで、その一部だけが必要な場合もあります。私がご用意いたします!",
                "$~たとえば、ゲームのプレイヤーの表があり、10 ポイント以上獲得したプレイヤーを見つけて誰が勝ったかを確認したい場合はどうすればよいでしょうか。",
                "$~\\プレイヤー: ⎡名前•'' チーム•'' ポイント•#⎦\n⎡'jen' 'red' 8⎦\n⎡'joan' 'blue' 11⎦\n⎡'jeff' 'red' 9⎦\n⎡'janet' 'blue' 7⎦\nプレイヤー ⎡? 名前 ⎦ ポイント ≥ 10\\",
                "$~こんな感じで、勝者のリストができました。テーブルは変更せず、新しいものを作成することに注意してください。どこに保存するかは自分で決めてください。"
            ],
            "start": "$~まずはテーブルを用意しましょう",
            "finish": "$~選択した行と列だけで新しい表を作成しました。",
            "conflict": {
                "ExpectedSelectName": "$~少なくとも 1 つの列名が必要です。"
            }
        },
        "SetLiteral": {
            "name": "$~リテラルを設定する",
            "description": "$~1 ドルのアイテム",
            "emotion": "$?",
            "doc": "$~私は特定の値の特定の @Set です。私の使用方法の詳細については、@Set を参照してください。",
            "start": "$~まずは価値を評価しましょう！",
            "finish": "$~セット1ドル作りました！"
        },
        "SetOrMapAccess": {
            "name": "$~アクセスの設定/マップ",
            "emotion": "$?",
            "doc": [
                "$~@Set または @Map に値またはキーがあるかどうかを確認できます。",
                "$~それほど難しくはありません。こんな感じです:",
                "$~\\faves: {'アヒル' 'ガチョウ' 'サル'}\nfaves{'ネズミ'}\\",
                "$~または、@Map を使用した場合:",
                "$~\\faves: {'マカロニ&チーズ': 5つ星 'シリアル': 2つ星 'お粥': 1つ星}\nfaves{'お粥'}\\"
            ],
            "start": "$~セットやマップは何ですか?",
            "finish": "$~価値は1ドルです",
            "conflict": {
                "IncompatibleKey": {
                    "primary": "$~1ドルの鍵を期待していた",
                    "secondary": "$~2ドルではなく1ドルをもらいました"
                }
            }
        },
        "Source": {
            "name": "$~ソース",
            "emotion": "$?",
            "doc": [
                "$~ああ、@Program って知ってる？名前の付け方を手伝うよ。私を @Program の周りの窓と、それに付ける名前だと思ってください。",
                "$~他の @Source を @UI/addSource にして他の @Program を使用したり、他の @Program から何かを @Borrow して別のプログラムで使用することもできます。",
                "$~これは、大きなパフォーマンスを個別のドキュメントに整理するのに適した方法です。"
            ]
        },
        "StreamDefinition": {
            "name": "$~ストリーム",
            "emotion": "$?",
            "doc": "$~新しいストリームを作成する必要があると思います。しかし、それをどのように行うのか本当にわかりません。今のところ、既存のストリームを使用するだけでいいのでしょうか?",
            "start": "$~新しい種類のストリームを作成する"
        },
        "StructureDefinition": {
            "name": "$~構造",
            "description": "$~構造 $1",
            "emotion": "$?",
            "doc": [
                "$~こんにちは、お元気ですか？私は？私は元気です。値を保存して機能する構造を定義するのが好きなので、一日中それをできる限り幸せです。",
                "$~私は次のように働いています:",
                "$~\\•Pizza(\n材料•['']\nサイズ•#in\n) (\nƒ cost() サイズ · 10ドル/in\n)\n\nPizza(['ペパロニ' 'ピーマン'] 12in).cost()\\",
                "$~どのように動作するかわかりますか? 2 つの入力、\\ingredients\\ (@Text のリスト) と \\size\\ (インチ単位の数値) を持つ \\Pizza\\ を定義しました。",
                "$~内部では、@FunctionDefinition は、1 インチあたり $$10 と仮定してピザのコストを評価する関数を作成しました。",
                "$~私の中に @FunctionDefinition は必要ありません。入力だけで済みます。",
                "$~\\•ピザ(\n材料•['']\nサイズ•#in\n)\\",
                "$~内部に @Bind も配置できるので、コストを事前に評価することもできます。",
                "$~\\•ピザ(\n材料•['']\nサイズ•#インチ\n) (\nコスト: サイズ · 10ドル/インチ\n)\n\nピザ(['ペパロニ' 'ピーマン'] 12インチ).コスト\\"
            ],
            "start": "$~この素敵な構造を定義しましょう",
            "conflict": {
                "DisallowedInputs": "$~インターフェース関数の1つ以上が実装されていないため、入力できません",
                "IncompleteImplementation": "$~私の関数はすべて実装するか、まったく実装しないかのどちらかにする必要があります。混乱した混合は禁止です。",
                "NotAnInterface": "$~私はインターフェースではありません。構造体はインターフェースのみを実装でき、他の構造体は実装できません。",
                "UnimplementedInterface": "$~$1 は実装しましたが、$2 はまだ実装していません"
            }
        },
        "StructureDefinitionType": {
            "name": "$~構造定義",
            "emotion": "$?",
            "description": "$~1ドルの定義",
            "doc": [
                "$~私は@StructureDefinitionのようなものを参照しています。人々は通常私を直接参照しません"
            ]
        },
        "TableLiteral": {
            "name": "$~テーブルリテラル",
            "description": "$~$1 行テーブル",
            "emotion": "$?",
            "doc": "$~私は特定の行を持つ特定のテーブルです。私がどのようにお手伝いできるかについては、@Table を参照してください。",
            "start": "$~まず行を評価する",
            "finish": "$~新しいテーブル $1 に評価されました"
        },
        "TextLiteral": {
            "name": "$~テキストリテラル",
            "description": "$~テキスト $1",
            "emotion": "$?",
            "doc": "$~私は 1 つ以上の特定の @Translation テキストを表します。私が何ができるかについて詳しくは、@Text を参照してください。",
            "start": "$~現在のロケールでテキストを作成しましょう"
        },
        "Translation": {
            "name": "$~翻訳",
            "description": "$~翻訳 $1",
            "emotion": "$?",
            "doc": "$~@Language タグを使用してテキストを表現します。詳細については、@Text を参照してください。",
            "conflict": {
                "phone": "$~*$1* は誰かの電話番号ですか? もしそうならオンラインで共有しないでください!\n\n$2",
                "email": "$~*$1* は誰かのメールアドレスですか? もしそうなら、ここで共有しないでください!\n\n$2",
                "tin": "$~*$1* は納税者識別番号ですか? もしそうなら、絶対に私を共有しないでください。非常に機密性の高い情報です!\n\n$2",
                "address": "$~*$1* は誰かの自宅住所ですか? もしそうなら、私をここに載せないでください。ストーカー行為は避けたいのです!\n\n$2",
                "handle": "$~*$1* はインターネット上のどこかのユーザー名ですか? もしそうなら、本当にそうするつもりがない限り、ここで私を共有しないでください。\n\n$2",
                "resolution": "$~これは機密データではありません",
                "reminder": "$~注: この操作を元に戻し、共有ダイアログで非機密としてマークした他の項目を確認することができます。"
            }
        },
        "FormattedLiteral": {
            "name": "$~フォーマット済み",
            "description": "$~テキスト $1",
            "emotion": "$?",
            "doc": "$~私はさまざまな @FormattedTranslation 形式のフォーマットされたテキストを代表しています。評価する際には、ユーザーが選択した言語に基づいて最適なものを選択します。",
            "start": "$~現在のロケールでテキストを作成しましょう"
        },
        "FormattedTranslation": {
            "name": "$~フォーマットされた翻訳",
            "description": "$~テキスト $1",
            "emotion": "$?",
            "doc": [
                "$~@Language タグを使用して、フォーマットされたテキストを表します。",
                "$~私はこうなれます:",
                "$~\\`/斜体/`\\",
                "$~\\`*太字*`\\",
                "$~\\`^極太^`\\",
                "$~\\`_下線_`\\",
                "$~\\`<linked@https://wordplay.dev>`\\",
                "$~\\`\\'コード'\\`\\",
                "$~私は @Phrase を使って、@Stage に美しいテキストを配置することにとても成功しています。"
            ]
        },
        "This": {
            "name": "$~これ",
            "emotion": "$?",
            "doc": [
                "$~場合によっては、値に名前を付けるのではなく、値の暗黙性を参照する方が便利なことがあります。",
                "$~たとえば、変換される値に名前を付けない新しい @ConversionDefinition を作成したいとします。次のように参照するだけで済みます。",
                "$~\\→ #rainbows #joys . · 1000000joys\n2rainbows → #joys\\",
                "$~虹の数を表す私がそこにいるのが見えますか?",
                "$~または、@Reaction を作成したいが、最新の値に名前を付ける必要がないとします。",
                "$~\\2 … ∆ 時間(1000ms) … . · 2\\",
                "$~前回の反応値を表す私をチェックしてください。",
                "$~私は頻繁には登場しませんが、登場すると、@Bind から値を取得するのに非常に役立ちます。"
            ],
            "start": "$~1ドルと評価",
            "conflict": {
                "MisplacedThis": "$~構造、変換、または反応でのみ許可されます。"
            }
        },
        "UnaryEvaluate": {
            "name": "$~単項評価",
            "description": "$~1ドル",
            "emotion": "$?",
            "doc": [
                "$~1 つの値のみで @FunctionDefinition を評価するときに、@FunctionDefinition の名前が 1 つのシンボルだけの場合、入力の前に名前を置くことができることをご存知ですか?",
                "$~このような：",
                "$~\\-(1 + 1)\\",
                "$~あるいはこれ:",
                "$~\\~⊥\\",
                "$~これらは、\\(1 + 1).negate()\\ や \\⊥.not()\\ よりもはるかに読みやすいですね。",
                "$~必ずしもそのように書く必要はありませんが、全体的にはその方が簡単かもしれません。",
                "$~ルールは 1 つだけです。名前と値の間にスペースを入れてはいけません。そうしないと、@Reference または @BinaryEvaluate が作成される可能性があります。"
            ],
            "start": "$~価値は何ですか?",
            "finish": "$~1ドルにしたよ"
        },
        "UnparsableExpression": {
            "name": "$~解析不能",
            "emotion": "$?",
            "doc": [
                "$~/こんにちは、@FunctionDefinition です。@UnparsableExpression は解釈が難しいことが多いので、翻訳しています。/",
                "$~jkwel fjiwojvioao jjiweo jrfe",
                "$~/舞台上ではすべての表現が意味を持つわけではない。/",
                "$~s w ieorjwei iojwi jfkdlsfdsk",
                "$~/実際、まったく意味をなさないことを言うことはいろいろあります。/",
                "$~dsk sdlk jdkfiewipapweiurb、v kdsfdsf",
                "$~/あなたがそうすると、私はあなたが何を意味しているのか分からないので、現れます。/",
                "$~結局のところ、あなたは監督ですから、あなたが何を意味していたかを知っているのはあなただけです!"
            ],
            "start": "$~???",
            "conflict": {
                "UnparsableConflict": {
                    "conflict": "$~ここでの @FunctionDefinition では、@UnparsableExpression はこれがどのような種類の $1[ 式 | 型 ] であるかを認識しません。",
                    "resolution": "$~1ドル、2ドルという意味ですか?"
                },
                "UnclosedDelimiter": "$~私は1ドルの後に2ドルを期待していました"
            },
            "exception": {
                "UnparsableException": {
                    "description": "$~???",
                    "explanation": "$~こんにちは、@FunctionDefinition です。この命令の意味がよくわからないので、やめました。"
                }
            }
        },
        "Update": {
            "name": "$~アップデート",
            "emotion": "$?",
            "doc": [
                "$~私は @Table を修正し、条件に一致する行を見つけて、新しい値で修正された行を作成するのを手伝います。",
                "$~たとえば、キャラクターとポイントの表があり、チームのすべてのキャラクターにポイントを与えたい場合は、次のようにします。",
                "$~\\プレイヤー: ⎡名前•'' チーム•'' ポイント•#⎦\n⎡'jen' 'red' 1⎦\n⎡'joan' 'blue' 0⎦\n⎡'jeff' 'red' 3⎦\n⎡'janet' 'blue' 2⎦\nプレイヤー ⎡: ポイント: ポイント + 1 ⎦ チーム = 'blue'\\",
                "$~@Bind を使用して変更する列を指定でき、条件のスコープ内の任意の列名またはその他の名前を使用できます。"
            ],
            "start": "$~まずはテーブルを用意しましょう",
            "finish": "$~修正された行を含む新しいテーブルに評価されました。",
            "conflict": {
                "ExpectedColumnBind": "$~すべての列に値が必要です",
                "IncompatibleCellType": {
                    "primary": "$~1ドル必要だったのに2ドル手に入れた",
                    "secondary": "$~2ドルもらった"
                }
            }
        },
        "AnyType": {
            "name": "$~どれでも",
            "emotion": "$?",
            "doc": "$~あらゆる可能な型を表します。何かがどのような値であるかわからないために現れることもあります。そのため、何でもあり得ます。"
        },
        "BooleanType": {
            "name": "$~ブール値",
            "emotion": "$?",
            "doc": [
                "$~@Bind を使用して、名前が @Boolean 値であることを宣言します。次のようになります。",
                "$~\\hungry•?: 'ゼリー'\\",
                "$~何かが @Boolean であることを確認したい場合は、私を使用してください。確認します。"
            ]
        },
        "ConversionType": {
            "name": "$~変換",
            "emotion": "$?",
            "doc": [
                "$~@Bind を使用して、名前が @ConversionDefinition であることを示します。値として渡す人はあまりいないので、おそらくこれを使用する必要はないでしょうが、渡す場合は次のようになります。",
                "$~\\magic•?→'': → ? '' . ? 'はい' 'いいえ'\\"
            ]
        },
        "FormattedType": {
            "name": "$~フォーマット済み",
            "emotion": "$?",
            "doc": [
                "$~名前が @FormattedLiteral 値であることを示すために @Bind を使用します。次のようになります。",
                "$~\\hungry•`…`: `私はとても /fancy/ です!`\\",
                "$~何かが @FormattedLiteral 値であることを確認したいですか? 次の方法で確認できます。"
            ]
        },
        "ExceptionType": {
            "name": "$~例外",
            "emotion": "$?",
            "doc": "$~私は例外を表します。例外は @Program を停止するだけなので、bind に私が例外であることを伝える方法はありません。したがって、例外を値として使用することはできません。"
        },
        "FunctionType": {
            "name": "$~関数",
            "description": "$~$1 入力、$2 出力の関数",
            "emotion": "$?",
            "doc": [
                "$~私は @FunctionDefinition を表します。@Bind がどのような関数を保持するかを伝えたい場合に非常に役立ちます。次のようになります。",
                "$~\\math•ƒ (# # # #) #: ƒ 興味深い(a•# b•# c•# d•#) a + b + c + d\\"
            ]
        },
        "ListType": {
            "name": "$~リスト",
            "description": "$~$1[$1のリスト|リスト]",
            "emotion": "$?",
            "doc": [
                "$~私は @List の大ファンです。@Bind に、それがどんなリストであるかを伝えることができます。次のように、@Number のリストであると言っています。",
                "$~\\物•[#]: [ 1 2 3 4 5 ]\\"
            ]
        },
        "MapType": {
            "name": "$~地図",
            "description": "$~$1[$1|任意]から$2[$2|任意]へのマップ",
            "emotion": "$?",
            "doc": [
                "$~@Map がどれだけすごいかご存知ですか? 本当にすごいです。私は @Bind に、これが数値からリストへのマップのように、どんな種類のマップであるかを常に伝えています。",
                "$~\\もの•{''：[]}： {}\\"
            ]
        },
        "NumberType": {
            "name": "$~番号",
            "description": "$~$1[$1 | 数値]",
            "emotion": "$?",
            "doc": [
                "$~@Bind が何であるべきかご存知ですか? @Number です。数字が最適だからです。",
                "$~\\count•#: 17\\"
            ]
        },
        "NameType": {
            "name": "$~構造",
            "description": "$~$1 タイプ",
            "emotion": "$?",
            "doc": [
                "$~@StructureDefinition を名前で表します。つまり、このような構造があれば、それが作成する値を格納する @Bind を作成できます。",
                "$~\\•友達(名前•'')\n親友•友達: 友達('Jonah')\\"
            ],
            "conflict": {
                "UnknownTypeName": "$~型名は構造体または型変数のみを参照できますが、これは$1を参照します"
            }
        },
        "NeverType": {
            "name": "$~一度もない",
            "emotion": "$?",
            "doc": "$~不可能な型を表しています。たとえば、@Is に何かが @Number かどうかを尋ねても、数値になることはありません。"
        },
        "NoneType": {
            "name": "$~なし",
            "emotion": "$?",
            "doc": [
                "$~@何もないのが最善であり、私は彼らの忠実な代表者です。",
                "$~\\スペース•ø: ø\\"
            ]
        },
        "SetType": {
            "name": "$~セット",
            "description": "$~$1[$1 セット|セット]",
            "emotion": "$?",
            "doc": [
                "$~@Set は最高です。本当に。私はいつも @Bind に、何かをセットにするように言っています。",
                "$~\\unique•{''}: {'何か' '何でも' '誰か'}\\"
            ]
        },
        "StreamDefinitionType": {
            "name": "$~ストリームの定義",
            "emotion": "$?",
            "doc": "$~私が表現しているのは、あなたが定義したストリームですが、それは不可能です。では、なぜこれを読んでいるのでしょうか?"
        },
        "StreamType": {
            "name": "$~ストリーム",
            "emotion": "$?",
            "doc": [
                "$~私はストリームの美しさと意味を称賛します… @Bind にストリームを保存するように指示することで:",
                "$~\\time•…#ms: 時間()\\"
            ]
        },
        "StructureType": {
            "name": "$~構造",
            "description": "$1",
            "emotion": "$?",
            "doc": "$~デフォルト値型の型を表す内部型です。"
        },
        "TableType": {
            "name": "$~テーブル",
            "emotion": "$?",
            "doc": "$~私はテーブルを表します。",
            "conflict": {
                "ExpectedColumnType": "$~列タイプが必要です"
            }
        },
        "TextType": {
            "name": "$~文章",
            "description": "$~$1[$1|テキスト]",
            "emotion": "$?",
            "doc": [
                "$~私は、最も素晴らしい種類の価値である @Text を素晴らしく表現しています。",
                "$~\\story•'': '昔々...'\\"
            ]
        },
        "TypePlaceholder": {
            "name": "$~プレースホルダー",
            "emotion": "$?",
            "doc": "$~いつか、親友の @ExpressionPlaceholder が式を表すのと同じように、型を表したいと思っています。どんな型か決めるのを手伝ってくれませんか?"
        },
        "UnionType": {
            "name": "$~オプション",
            "description": "$~1ドル | 2ドル",
            "emotion": "$?",
            "doc": [
                "$~私は誰を代表するべきでしょうか、A か B か、それとも何か他のものでしょうか? 決して決められません!",
                "$~\\indecision•''|#|{ø}:「分かりません！」\\"
            ]
        },
        "Unit": {
            "name": "$~ユニット",
            "description": "$~1ドル",
            "emotion": "$?",
            "doc": [
                "$~@Number が持つ可能性のあるあらゆる単位（単位なしも含む）を、想像できる最も複雑な単位で表します。たとえば、重力などです。",
                "$~\\重力•m/s^2: 9.8m/s^2\\",
                "$~私は @Bind 内だけでなく、@Number の直後にも表示されます。私は数字が同じ種類であることを確認するのに役立ち、間違いがあった場合には、異なる種類である場合は必ずそれを通知します。"
            ]
        },
        "UnparsableType": {
            "name": "$~解析不能",
            "emotion": "$?",
            "doc": "$~私は未知の表現のタイプを表します。その表現を何かに使用しようとすると、私は現れます。"
        },
        "VariableType": {
            "name": "$~変数型",
            "emotion": "$?",
            "doc": "$~@TypeVariable と、それが未知の種類の値をどのように表すのかをご存知ですか? 私は値間のすべてのネゴシエーションでそれらを表します。"
        },
        "UnknownType": {
            "name": "$~未知",
            "connector": "$~、 なぜなら",
            "emotion": "$?",
            "doc": "$~うーん... 自分が何を表しているのか分かりませんが、とても興味があります。ご存知ですか? 私たちには分かるはずです。分からない場合は、教えていただく必要があるかもしれません。"
        },
        "CycleType": {
            "name": "$~サイクル",
            "description": "$~それ自体に依存する",
            "emotion": "$?",
            "doc": "$~価値はそれ自体に依存していることもあり、それがどのような価値なのかわからないことがあります。私はその状況を表現します。"
        },
        "NotAType": {
            "name": "$~予想外の",
            "description": "$~1ドルではない",
            "emotion": "$?",
            "doc": "$~ときには、何かがどのような値であるべきかがわかっています。たとえば、@ListAccess には @Number が必要です。それが取得できない場合は、何かが予想とは異なる型であることを表します。"
        },
        "NoExpressionType": {
            "name": "$~無表情",
            "emotion": "$?",
            "doc": "$~@Block には少なくとも 1 つの式が必要であることをご存知ですか? 式を指定しないと、I という結果になります。だから、式を指定してください。"
        },
        "NotEnclosedType": {
            "name": "$~構造、変換、反応ではない",
            "emotion": "$?",
            "doc": "$~@これは、とてもきれいなものですが、特定の場所にしか置けません。私が現れるのは、それらが紛失したときなので、誰もそれがどんな価値を表しているか知りません。"
        },
        "NotImplementedType": {
            "name": "$~未実装",
            "emotion": "$?",
            "doc": "$~@ExpressionPlaceholder を使用するが、その型を指定しない場合は、I という型が返されます。 それでいいのです!"
        },
        "UnknownNameType": {
            "name": "$~名前不明",
            "description": "$~$1[$1 は定義されていません | 名前が指定されていません]",
            "emotion": "$?",
            "doc": "$~@Reference と @PropertyReference が、あなたが話している名前を知らないことがあるのはご存知ですか? そういうことが起きると、私たちがあなたが誰について話しているのか分からないことを表すために、私がそこにいます。"
        },
        "NonFunctionType": {
            "name": "$~機能しない",
            "description": "$~機能しない",
            "emotion": "$?",
            "doc": "$~私たちの中には、何らかの機能を期待している人もいます。それが得られなかったときに私が現れます。"
        },
        "UnknownVariableType": {
            "name": "$~未知の変数",
            "emotion": "$?",
            "doc": "$~時々、私たちは何かがどんな価値があるかを推測しようとします。わからないときに私が現れます。"
        }
    },
    "basis": {
        "Boolean": {
            "doc": [
                "$~\\⊤\\ と \\⊥\\ です。\\⊤\\ は真です。\\⊥\\ は偽です。\\⊤\\ は \\⊥\\ ではありません。\\⊥\\ は \\⊤\\ ではありません。これが現状です。",
                "$~私たちをどのように作るのですか? \\⊤\\ と \\⊥\\ だけです。それ以上でもそれ以下でもありません。",
                "$~キーボードを使用する人もいます (\\⊤\\ の場合は /ctrl+9/、\\⊥\\ の場合は /ctrl+0/)。 エディターの下部にある文字検索を使用する人もいます。 または、ここからドラッグすることもできます。",
                "$~以下の @FunctionDefinition をご覧ください。非常に論理的です。"
            ],
            "name": ["$~⊤⊥", "$~ブール"],
            "function": {
                "and": {
                    "doc": [
                        "$~両方の値が \\⊤\\ の場合にのみ \\⊤\\ と評価します。多くのことがすべて真であるかどうかを判断するのに役立ちます。可能な結果は 4 つだけです。",
                        "$~\\⊤ & ⊤\\",
                        "$~\\⊤ & ⊥\\",
                        "$~\\⊥ & ⊤\\",
                        "$~\\⊥ & ⊥\\"
                    ],
                    "names": ["$~＆", "$~そして"],
                    "inputs": [
                        {
                            "doc": "$~チェックする他の @Boolean。最初の @Boolean が \\⊥\\ の場合、これが何であっても、関数は \\⊥\\ と評価されます。",
                            "names": "$~価値"
                        }
                    ]
                },
                "or": {
                    "doc": [
                        "$~どちらかの値が \\⊤\\ の場合、\\⊤\\ と評価します。多くの事柄のうちの 1 つが真であるかどうかを判断するのに役立ちます。可能な結果は 4 つだけです。",
                        "$~\\⊤ | ⊤\\",
                        "$~\\⊤ | ⊥\\",
                        "$~\\⊥ | ⊤\\",
                        "$~\\⊥ | ⊥\\"
                    ],
                    "names": ["$~|", "$~または"],
                    "inputs": [
                        {
                            "doc": "$~チェックする他の @Boolean。最初の @Boolean が \\⊥\\ の場合、関数はこれが \\⊤\\ の場合にのみ \\⊤\\ と評価されます。",
                            "names": "$~価値"
                        }
                    ]
                },
                "not": {
                    "doc": "$~私は自分の反対を得ます: \\⊤\\ の場合は \\⊥\\ を返し、\\⊥\\ の場合は \\⊤\\ を返します。",
                    "names": ["$~〜", "$~ない"],
                    "inputs": []
                },
                "equals": {
                    "doc": "$~両方が \\⊤\\ であるか、両方が \\⊥\\ である場合は \\⊤\\ です。",
                    "names": ["$~=", "$~等しい"],
                    "inputs": [
                        {
                            "doc": "$~チェックする他の値。",
                            "names": "$~価値"
                        }
                    ]
                },
                "notequal": {
                    "doc": "$~両方が反対の場合は\\⊤\\。",
                    "names": ["$~≠", "$~ノーイコール"],
                    "inputs": [
                        {
                            "doc": "$~チェックする他の値。",
                            "names": "$~価値"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$~@Boolean を同等の @Text 値 \\'⊤'\\ および \\'⊥'\\ に変換します。"
            }
        },
        "None": {
            "doc": [
                "$~/こんにちは、@FunctionDefinition です。@None はあまり話したがらないので、私が通訳します。/",
                "$~私は @None です。\\ø\\ で呼び出してください。何かの不在を表現したいときに役立ちます。"
            ],
            "name": ["$~ø", "$~なし"],
            "function": {
                "equals": {
                    "doc": "$~別の値も何もないのでしょうか? そうでなければ、\\⊥\\ であるほうがよいでしょう。",
                    "names": ["=", "equals"],
                    "inputs": [
                        {
                            "doc": "$~もう一つの価値。",
                            "names": "$~価値"
                        }
                    ]
                },
                "notequals": {
                    "doc": "$~別の値は何もないのでしょうか?",
                    "names": ["$~≠", "$~ノーイコール"],
                    "inputs": [
                        {
                            "doc": "$~もう一つの価値。",
                            "names": "$~価値"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$~\\ø\\ を \\'ø'\\ にしてみませんか? 今がチャンスです。"
            }
        },
        "Text": {
            "doc": [
                "$~任意の言語の任意のテキストにすることができ、次の開始記号と終了記号を使用できます: \\\"\"\\、\\“”\\、\\„“\\、\\''\\、\\‘’\\、\\‹›\\、\\«»\\、\\「」\\、または \\『』\\。",
                "$~例として、これらの美しいフレーズを考えてみましょう",
                "$~「人生を生きる方法は2つしかない。1つは何も奇跡がないかのように生きること。もう1つは、すべてが奇跡であるかのように生きることだ。」",
                "$~\\『一日三秋』\\",
                "$~私を開いたら、必ず私を閉じて、対応する記号を使用してください。そうしないと、私はあなたの言葉が終わったことを知りません。",
                "$~\\'hello'/en'hola'/es-MX\\",
                "$~言語でタグ付けしたり、複数の翻訳を指定したりすることもできます。一致する言語がある場合は、現在選択されている言語を評価します。",
                "$~他の値で私を作りたい場合は、シンボルを使って",
                "$~たとえば、次のことを考えてみましょう。",
                "$~\\\"ここにいくつかの合計があります\\1 + 2\\、\\2 + 3\\、\\3 + 4\\\"\\",
                "$~これらの合計をいかにエレガントに評価し、@Text 内に配置したかわかりますか?",
                "$~それ以外にも、@FunctionDefinition には、言葉を使ってさまざまなことを実行するための素晴らしい関数がたくさんあります。"
            ],
            "name": ["$~''", "$~文章"],
            "function": {
                "length": {
                    "doc": [
                        "$~テキスト内の判読可能な文字の数を評価します。1 文字は 1 文字、1 絵文字は 1 文字などです。例:",
                        "$~\\'hello'.length()\\",
                        "$~\\'🐈📚'.長さ()\\"
                    ],
                    "names": ["$~📏", "$~長さ"],
                    "inputs": []
                },
                "equals": {
                    "doc": "$~\\⊤\\ は、指定された @Text と同じ文字シーケンスである場合です。",
                    "names": ["=", "equals"],
                    "inputs": [
                        {
                            "doc": "$~比較する@Text。",
                            "names": "$~価値"
                        }
                    ]
                },
                "notequals": {
                    "doc": "$~\\⊤\\ は、指定された @Text と同じ文字シーケンスではない場合です。",
                    "names": "$~≠",
                    "inputs": [
                        {
                            "doc": "$~比較する@Text",
                            "names": "$~価値"
                        }
                    ]
                },
                "repeat": {
                    "doc": [
                        "$~私自身の新しい@Textを作成し、\\count\\ の回数だけ繰り返します。",
                        "$~\\'こんにちは' · 5\\",
                        "$~小数の @Number を指定した場合、小数部は無視されます。",
                        "$~\\'こんにちは' · 5.5\\",
                        "$~負の @Number またはゼロを指定した場合、空の @Text が返されます。",
                        "$~\\'こんにちは' · -5\\",
                        "$~私が作成できる最長のテキストは 65,535 文字です。これより長いテキストを作成しようとすると、テキストを何度でも繰り返します。"
                    ],
                    "names": ["$~·", "$~🔁", "$~繰り返し", "$~繰り返す"],
                    "inputs": [
                        {
                            "doc": "$~新しいテキストで自分自身を繰り返す回数。",
                            "names": "$~カウント"
                        }
                    ]
                },
                "segment": {
                    "doc": [
                        "$~指定された @Text を区切り文字として使用し、区切り文字を削除して、自分自身を @Text の @List に分割します。例:",
                        "$~\\'リンゴ、オレンジ、ブドウ' ÷ ', '\\",
                        "$~セパレータが空の@Textの場合、文字に分割します。",
                        "$~\\'🖌️🏠🥸' ÷ ''\\"
                    ],
                    "names": ["segmentar"],
                    "inputs": [
                        {
                            "doc": "$~区切り文字として使用する@Text。",
                            "names": "$~デリミタ"
                        }
                    ]
                },
                "combine": {
                    "doc": [
                        "$~複数の @Text を 1 つに結合すると便利な場合があります。別の @Text を指定すると、それらを結合した新しいテキストが作成されます。",
                        "$~\\'hello' + 'verse'\\"
                    ],
                    "names": ["$~+", "$~組み合わせた", "$~組み合わせる"],
                    "inputs": [
                        {
                            "doc": "$~追加する@Text。",
                            "names": "$~文章"
                        }
                    ]
                },
                "has": {
                    "doc": [
                        "$~\\⊤\\ 指定された @Text が me に現れるかどうか。",
                        "$~\\'探していたものは見つかりましたか?'.has('you')\\"
                    ],
                    "names": ["tiene"],
                    "inputs": [
                        {
                            "doc": "$~私の中で検索する@Text。",
                            "names": "$~文章"
                        }
                    ]
                },
                "starts": {
                    "doc": [
                        "$~\\⊤\\ 指定された @Text から開始する場合。",
                        "$~\\'hello verse!'.starts('hello')\\",
                        "$~\\'hello verse!'.starts('verse')\\"
                    ],
                    "names": ["$~始まる"],
                    "inputs": [
                        {
                            "doc": "$~私の開始時にチェックする@Text。",
                            "names": "texto"
                        }
                    ]
                },
                "ends": {
                    "doc": [
                        "$~\\⊤\\ 指定された @Text で終了する場合。",
                        "$~\\'私は質問ですか?'.ends('?')\\",
                        "$~\\'私は質問ではありません。'.ends('?')\\"
                    ],
                    "names": ["$~終了"],
                    "inputs": [
                        {
                            "doc": "$~私の末尾でチェックする@Text。",
                            "names": "texto"
                        }
                    ]
                }
            },
            "conversion": {
                "list": "$~テキストを個々の文字のリストに分割します。",
                "number": "$~テキストを @Number に変換し、数値でない場合は数値ではない値に変換します。"
            }
        },
        "Number": {
            "doc": [
                "$~想像できるあらゆる単位の @Number を作成します。",
                "$~私のトップ5は次のとおりです。",
                "$~\\0\\",
                "$~\\1ストーリー\\",
                "$~\\πパイ\\",
                "$~\\∞ロック\\",
                "$~\\1000000ハグ\\",
                "$~それは基本的に無限の数の数字です。",
                "$~そしてユニットの数は無限です！",
                "$~そして、数と単位のペアは無限にあります…",
                "$~整数、実数、負数、正数、分数、小数、さらには数値でない値にもなります。",
                "$~また、アラビア数字の \\123\\、ローマ数字の \\ⅩⅩⅩⅠⅩ\\、日本語の \\二十\\ など、さまざまな記数法で表記できます。",
                "$~\\1 + Ⅰ + 一\\",
                "$~次のように基数を入力すると、2 から 16 までの基数で表記することもできます。",
                "$~\\2;11111111\\",
                "$~\\10;255\\",
                "$~\\16;FF\\",
                "$~数値ではないものを書き込むときに発生する可能性がある、NaN と呼ばれる特殊な数値が 1 つあります。",
                "$~\\2;22\\",
                "$~2進数には「2」という数字はないので、有効な数値ではありません。数値以外のテキストを数値に変換しようとすると、NaNも表示されます。",
                "$~\\'こんにちは'→#\\"
            ],
            "name": ["$~#", "$~番号"],
            "function": {
                "add": {
                    "doc": [
                        "$~同じ @Unit を持つ @Number を自分自身に追加し、同じ @Unit の新しい @Number を作成します。",
                        "$~例えば：",
                        "$~\\1 + 1\\",
                        "$~\\3猫 + 5猫\\",
                        "$~単位が一致しない場合は、ショーを中止します。",
                        "$~\\3匹の猫 + 5匹の犬\\"
                    ],
                    "names": ["$~+", "$~追加"],
                    "inputs": [
                        {
                            "doc": "$~追加する@Number。",
                            "names": "$~番号"
                        }
                    ]
                },
                "subtract": {
                    "doc": [
                        "$~与えられた @Number を自分自身から減算して、同じ @Unit の新しい @Number を作成します。",
                        "$~例えば：",
                        "$~\\1 - 1\\",
                        "$~\\3猫 - 5猫\\",
                        "$~単位が一致しない場合は、ショーを中止します。",
                        "$~\\3猫 - 5犬\\"
                    ],
                    "names": ["$~-", "$~減算する"],
                    "inputs": [
                        {
                            "doc": "$~私から減算する@Number。",
                            "names": "$~番号"
                        }
                    ]
                },
                "multiply": {
                    "doc": [
                        "$~指定された @Number に自分自身を掛けて、自分の @Unit と指定された数値の @Unit の積を作成します。",
                        "$~\\5 · 5\\",
                        "$~\\5m · 5m\\",
                        "$~\\5m · 1/s\\"
                    ],
                    "names": ["$~·", "$~掛ける"],
                    "inputs": [
                        {
                            "doc": "$~乗算する数値。",
                            "names": "$~番号"
                        }
                    ]
                },
                "divide": {
                    "doc": [
                        "$~自分自身を指定された @Number で割り、自分の @Unit と指定された数値の @Unit の商を作成します。",
                        "$~\\5÷5\\",
                        "$~\\5m ÷ 5m\\",
                        "$~\\5分÷5秒\\"
                    ],
                    "names": ["÷", "divide"],
                    "inputs": [
                        {
                            "doc": "$~割る数値。",
                            "names": "$~番号"
                        }
                    ]
                },
                "remainder": {
                    "doc": [
                        "$~自分自身を指定された@Numberで割り、余りを返します。",
                        "$~\\10% 2\\",
                        "$~\\10m % 2\\",
                        "$~\\10m/s % 3\\"
                    ],
                    "names": ["$~%", "$~残り"],
                    "inputs": [
                        {
                            "doc": "$~割る数値。",
                            "names": "$~番号"
                        }
                    ]
                },
                "positive": {
                    "doc": [
                        "$~負の場合、正になる新しい @Number を作成します。",
                        "$~\\-200.ポジティブ()\\"
                    ],
                    "names": ["$~ポジティブ"],
                    "inputs": []
                },
                "round": {
                    "doc": [
                        "$~最も近い整数に丸める新しい @Number を作成します。",
                        "$~\\9.4.round()\\",
                        "$~\\9.5.ラウンド()\\",
                        "$~\\9.6.round()\\"
                    ],
                    "names": ["$~ラウンド"],
                    "inputs": []
                },
                "roundDown": {
                    "doc": [
                        "$~自分より小さい最小の整数に丸める新しい @Number を作成します。",
                        "$~\\10.5.roundDown()\\",
                        "$~\\10.1.roundDown()\\",
                        "$~\\10.01.roundDown()\\"
                    ],
                    "names": ["$~切り下げ"],
                    "inputs": []
                },
                "roundUp": {
                    "doc": [
                        "$~自分より大きい最小の整数に丸める新しい @Number を作成します。",
                        "$~\\10.5.roundUp()\\",
                        "$~\\10.9.roundUp()\\",
                        "$~\\10.99.roundUp()\\"
                    ],
                    "names": ["$~切り上げする"],
                    "inputs": []
                },
                "power": {
                    "doc": [
                        "$~指定された @Number の累乗を計算します。小数指数でも大丈夫です。",
                        "$~\\2^8\\",
                        "$~\\10^-2\\",
                        "$~\\5^-.5\\"
                    ],
                    "names": ["^", "power"],
                    "inputs": [
                        {
                            "doc": "$~私を成長させる指数。",
                            "names": "$~番号"
                        }
                    ]
                },
                "root": {
                    "doc": [
                        "$~与えられたルートを使用して自分自身のルートを作成します。",
                        "$~\\4√2\\",
                        "$~\\1000√3\\"
                    ],
                    "names": ["√", "root"],
                    "inputs": [
                        {
                            "doc": "$~計算するルート。",
                            "names": "$~番号"
                        }
                    ]
                },
                "lessThan": {
                    "doc": [
                        "$~\\⊤\\ 指定された@Numberより小さい場合:",
                        "$~\\1 < 2\\",
                        "$~\\2 < 1\\"
                    ],
                    "names": ["<", "lessthan"],
                    "inputs": [
                        {
                            "doc": "$~私と比較する@Number。",
                            "names": "$~番号"
                        }
                    ]
                },
                "lessOrEqual": {
                    "doc": [
                        "$~\\⊤\\ 指定された@Number以下の場合:",
                        "$~\\1 ≤ 2\\",
                        "$~\\2 ≤ 1\\",
                        "$~\\2 ≤ 2\\"
                    ],
                    "names": ["≤", "lessorequal"],
                    "inputs": [
                        {
                            "doc": "$~私と比較する@Number。",
                            "names": "$~番号"
                        }
                    ]
                },
                "greaterThan": {
                    "doc": [
                        "$~\\⊤\\ 指定された@Numberより大きい場合:",
                        "$~\\1 > 2\\",
                        "$~\\2 > 1\\"
                    ],
                    "names": [">", "greaterthan"],
                    "inputs": [
                        {
                            "doc": "$~私と比較する@Number。",
                            "names": "$~番号"
                        }
                    ]
                },
                "greaterOrEqual": {
                    "doc": [
                        "$~\\⊤\\ 指定された@Number以上の場合:",
                        "$~\\1 ≥ 2\\",
                        "$~\\2 ≥ 1\\",
                        "$~\\2 ≥ 2\\"
                    ],
                    "names": ["≥", "greaterorequal"],
                    "inputs": [
                        {
                            "doc": "$~私と比較する@Number。",
                            "names": "$~番号"
                        }
                    ]
                },
                "equal": {
                    "doc": [
                        "$~\\⊤\\ 指定された@Numberと等しい場合:",
                        "$~\\1 = 2\\",
                        "$~\\2 = 2\\"
                    ],
                    "names": ["$~=", "$~等しい"],
                    "inputs": [
                        {
                            "doc": "$~私と比較する@Number。",
                            "names": "$~番号"
                        }
                    ]
                },
                "notequal": {
                    "doc": [
                        "$~\\⊤\\ 指定された@Numberと等しい場合:",
                        "$~\\1 ≠ 2\\",
                        "$~\\2 ≠ 2\\"
                    ],
                    "names": ["$~≠", "$~ノーイコール"],
                    "inputs": [
                        {
                            "doc": "$~私と比較する@Number。",
                            "names": "$~番号"
                        }
                    ]
                },
                "cos": {
                    "doc": ["$~私の余弦を計算してください。", "$~\\π.cos()\\"],
                    "names": ["cos", "cosine"],
                    "inputs": []
                },
                "sin": {
                    "doc": ["$~私の正弦を計算してください。", "$~\\π.cos()\\"],
                    "names": ["sin", "sine"],
                    "inputs": []
                },
                "min": {
                    "doc": [
                        "$~自分と他人の最小の数を見つけてください。",
                        "$~\\1.分(2 3 -1)\\"
                    ],
                    "names": "$~分",
                    "inputs": [
                        {
                            "doc": "$~好きなだけ数字をください！",
                            "names": "$~数字"
                        }
                    ]
                },
                "max": {
                    "doc": [
                        "$~自分と他人の最大数を見つけます。",
                        "$~\\1.max(2 3 4)\\"
                    ],
                    "names": "$~最大",
                    "inputs": [
                        {
                            "doc": "$~好きなだけ数字をください！",
                            "names": "$~数字"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$~私の数字をアラビア語の@Textで表現したものです。",
                "list": [
                    "$~数値を \\1\\ から指定された数値までの数値のリストに変換します。例:",
                    "$~\\10→[]\\"
                ],
                "s2m": "$~数秒から数分",
                "s2h": "$~数秒から数時間",
                "s2day": "$~数秒から数日",
                "s2wk": "$~数秒から数週間",
                "s2year": "$~数秒から数年",
                "s2ms": "$~秒からミリ秒へ",
                "ms2s": "$~ミリ秒から秒",
                "min2s": "$~数分から数秒へ",
                "h2s": "$~数時間から数秒へ",
                "day2s": "$~数日から数秒へ",
                "wk2s": "$~数週間から数秒へ",
                "yr2s": "$~年を秒に",
                "m2pm": "$~メートルからピコメートルへ",
                "m2nm": "$~メートルからナノメートル",
                "m2micro": "$~メートルからマイクロメートルへ",
                "m2mm": "$~メートルからミリメートルへ",
                "m2cm": "$~メートルからセンチメートルへ",
                "m2dm": "$~メートルからデシメートル",
                "m2km": "$~メートルからキロメートル",
                "m2Mm": "$~メートルからメガメートルまで",
                "m2Gm": "$~メートルからギガメートルへ",
                "m2Tm": "$~メートルからテラメートルへ",
                "pm2m": "$~ピコメートルからメートル",
                "nm2m": "$~ナノメートルからメートル",
                "micro2m": "$~マイクロメートルからメートル",
                "mm2m": "$~ミリメートルからメートル",
                "cm2m": "$~センチメートルからメートル",
                "dm2m": "$~デシメートルからメートル",
                "km2m": "$~キロメートルからメートルへ",
                "Mm2m": "$~メガメートルからメートル",
                "Gm2m": "$~ギガメートルからメートルへ",
                "Tm2m": "$~テラメートルからメートルへ",
                "km2mi": "$~キロメートルからマイルへ",
                "mi2km": "$~マイルからキロメートルへ",
                "cm2in": "$~センチメートルからインチ",
                "in2cm": "$~インチからセンチメートル",
                "m2ft": "$~メートルからフィート",
                "ft2m": "$~フィートからメートル",
                "g2mg": "$~グラムからミリグラムへ",
                "mg2g": "$~ミリグラムからグラムへ",
                "g2kg": "$~グラムからキログラム",
                "kg2g": "$~キログラムからグラム",
                "g2oz": "$~グラムからオンス",
                "oz2g": "$~オンスからグラム",
                "oz2lb": "$~オンスからポンド",
                "lb2oz": "$~ポンドからオンス"
            }
        },
        "List": {
            "doc": [
                "$~私はあらゆる種類の値の連続です！",
                "$~me には、@Boolean、@Number、@Text、@None、その他の @List、@Set、@Map、または任意の式など、何でも入れることができます。以下は簡単な例です。",
                "$~\\['リンゴ' 'バナナ' 'マンゴー']\\",
                "$~私が特別なのは、物事をきちんと整理し、持っている物すべてに 1 から数えて番号を付けていることです。",
                "$~私のアイテムには 1 から始まる番号が付けられています。番号を使用して、@ListAccess で保存している値を取得できます。",
                "$~たとえば、このリストの2番目の値は\\['banana']\\です。",
                "$~\\['リンゴ' 'バナナ' 'マンゴー'][2]\\",
                "$~私の中には何でもあります。@Text、@Number、@Time を含むこのリストを見てください。",
                "$~\\['apple' 10 + 10 時間()]\\",
                "$~多くの項目のリストを与えられた場合、共通の型があれば、それらを一般化します。しかし、時には、文字通りそれらの特定の項目を意味している場合もあります。その場合は、私の後に ! を付けてください。そうすれば、それらの値だけを具体的にリストとして表すようにできます。",
                "$~\\['リンゴ' 'バナナ' 'マンゴー']!\\",
                "$~それはこんな感じです。でも、@FunctionDefinition を使えば、もっと面白いことができるんです!"
            ],
            "name": ["$~[]", "$~リスト"],
            "kind": "$~親切",
            "out": "$~結果",
            "outofbounds": "$~アウトオブバウンズ",
            "function": {
                "add": {
                    "doc": [
                        "$~最後に指定された項目を含む新しい @List を作成します。",
                        "$~\\['リンゴ' 'バナナ' 'マンゴー'].with('スイカ')\\"
                    ],
                    "names": ["$~と", "$~追加"],
                    "inputs": [
                        {
                            "doc": "$~あなたが加えたい価値は私です。",
                            "names": "$~アイテム"
                        }
                    ]
                },
                "append": {
                    "doc": [
                        "$~自分の値で新しい @List を作成し、その後に指定された @List のすべての値を作成します。",
                        "$~\\['リンゴ' 'バナナ' 'マンゴー'].withList(['スイカ' 'スターフルーツ'])\\",
                        "$~ただし、次のように @Spread を使用する方が少し簡単です。",
                        "$~\\['リンゴ' 'バナナ' 'マンゴー' :['スイカ' 'スターフルーツ']]\\"
                    ],
                    "names": ["$~リスト付き", "$~追加"],
                    "inputs": [
                        {
                            "doc": "$~追加する値のリスト。",
                            "names": "$~リスト"
                        }
                    ]
                },
                "replace": {
                    "doc": [
                        "$~指定されたインデックスの値を指定された値に置き換える新しいリストを作成します。",
                        "$~\\['リンゴ' 'バナナ' 'マンゴー'].replace(1 'キウイ')\\"
                    ],
                    "names": ["reemplazar"],
                    "inputs": [
                        {
                            "doc": "$~置き換える値のインデックス",
                            "names": "$~索引"
                        },
                        {
                            "doc": "$~代替価値",
                            "names": "$~価値"
                        }
                    ]
                },
                "length": {
                    "doc": "$~私の中のアイテムの数。",
                    "names": ["$~📏", "$~長さ"],
                    "inputs": []
                },
                "random": {
                    "doc": [
                        "$~ランダムに選択されたアイテムの 1 つ、または空の場合は @None になります。",
                        "$~\\['リンゴ' 'バナナ' 'マンゴー'].random()\\"
                    ],
                    "names": "$~ランダム",
                    "inputs": []
                },
                "shuffled": {
                    "doc": [
                        "$~最後にランダムに並べられた項目で新しいリストを作成します。",
                        "$~\\['リンゴ' 'バナナ' 'マンゴー'].shuffled()\\"
                    ],
                    "names": "$~シャッフルされた",
                    "inputs": []
                },
                "first": {
                    "doc": [
                        "$~私の中の最初の項目、または私が空の場合は @None です。",
                        "$~\\['リンゴ' 'バナナ' 'マンゴー'].first()\\"
                    ],
                    "names": "$~初め",
                    "inputs": []
                },
                "last": {
                    "doc": [
                        "$~私の中の最後の項目、または私が空の場合は @None です。",
                        "$~\\['リンゴ' 'バナナ' 'マンゴー'].first()\\"
                    ],
                    "names": "$~最後",
                    "inputs": []
                },
                "has": {
                    "doc": [
                        "$~\\⊤\\ 与えられたアイテムと等しいアイテムが私の中にある場合。",
                        "$~\\['リンゴ' 'バナナ' 'マンゴー'].has('バナナ')\\"
                    ],
                    "names": "$~もっている",
                    "inputs": [
                        {
                            "doc": "$~検索する値。",
                            "names": "$~アイテム"
                        }
                    ]
                },
                "join": {
                    "doc": [
                        "$~リスト内の項目を、指定された区切り文字 @Text で区切って @Text に結合します。",
                        "$~\\['リンゴ' 'バナナ' 'マンゴー'].join(', ')\\"
                    ],
                    "names": "$~参加する",
                    "inputs": [
                        {
                            "doc": "$~項目を区切るテキスト。オプションで空。",
                            "names": "$~セパレーター"
                        }
                    ]
                },
                "subsequence": {
                    "doc": [
                        "$~このリスト内のリストを取得します。リストは、指定したインデックスから始まり、最後の項目で終わります。指定した場合は、特定の項目で終わります。",
                        "$~\\['リンゴ' 'バナナ' 'マンゴー'].subsequence(2)\\",
                        "$~\\['リンゴ' 'バナナ' 'マンゴー'].subsequence(1 2)\\",
                        "$~そして見て！数字を順番通りに入力しないと、逆の順番で返します",
                        "$~\\['リンゴ' 'バナナ' 'マンゴー'].subsequence(3 1)\\",
                        "$~インデックスとして 1 より小さい値を指定した場合、1 を意味しているとみなします。",
                        "$~\\['リンゴ' 'バナナ' 'マンゴー'].subsequence(-1003243 2)\\",
                        "$~そして、最大のインデックスよりも大きいものを指定した場合、終わりを意味していると想定します。",
                        "$~\\['リンゴ' 'バナナ' 'マンゴー'].subsequence(3 2304032432)\\"
                    ],
                    "names": "$~部分列",
                    "inputs": [
                        {
                            "doc": "$~必要なサブシーケンスの最初の項目のインデックス。",
                            "names": "$~始める"
                        },
                        {
                            "doc": "$~必要なサブシーケンスの最後の項目のオプションのインデックス。指定しない場合は、リストはリストの最後の項目で終了します。",
                            "names": "$~終わり"
                        }
                    ]
                },
                "sansFirst": {
                    "doc": [
                        "$~最初の項目なしでリストを作成します。",
                        "$~\\['リンゴ' 'バナナ' 'マンゴー'].sansFirst()\\"
                    ],
                    "names": ["$~なし", "$~サンズファースト"],
                    "inputs": []
                },
                "sansLast": {
                    "doc": [
                        "$~最後の項目を除いたリストを作成します。",
                        "$~\\['リンゴ' 'バナナ' 'マンゴー'].sansLast()\\"
                    ],
                    "names": ["$~なし最後", "$~サンズラスト"],
                    "inputs": []
                },
                "sans": {
                    "doc": [
                        "$~私ですが、指定された値の最初の出現がありません。",
                        "$~\\['リンゴ' 'バナナ' 'マンゴー' 'リンゴ'].sans('リンゴ')\\"
                    ],
                    "names": ["$~それなし", "$~サンズ"],
                    "inputs": [
                        {
                            "doc": "$~最初に出現したものを削除する値。",
                            "names": "$~価値"
                        }
                    ]
                },
                "sansAll": {
                    "doc": [
                        "$~私ですが、指定された値のすべての出現がありません。",
                        "$~\\['リンゴ' 'バナナ' 'マンゴー' 'リンゴ'].sans('リンゴ')\\"
                    ],
                    "names": ["$~すべてなし", "$~sansAll"],
                    "inputs": [
                        {
                            "doc": "$~リストからすべての出現を削除する値。",
                            "names": "$~価値"
                        }
                    ]
                },
                "reverse": {
                    "doc": [
                        "$~私、ただし逆です！",
                        "$~\\['リンゴ' 'バナナ' 'マンゴー'].reverse()\\"
                    ],
                    "names": ["$~逆転した", "$~逆行する"],
                    "inputs": []
                },
                "equals": {
                    "doc": [
                        "$~\\⊤\\ アイテムと順序が指定された @List とまったく同じである場合。",
                        "$~\\['リンゴ' 'バナナ' 'マンゴー'] = ['リンゴ' 'マンゴー' 'バナナ']\\"
                    ],
                    "names": ["=", "equals"],
                    "inputs": [
                        {
                            "doc": "$~私と比較するための@リスト。",
                            "names": "$~リスト"
                        }
                    ]
                },
                "notequals": {
                    "doc": [
                        "$~\\⊤\\ 私のアイテムと順序が指定された @List とまったく同じではない場合。",
                        "$~\\['リンゴ' 'バナナ' 'マンゴー'] ≠ ['リンゴ' 'マンゴー' 'バナナ']\\"
                    ],
                    "names": ["$~≠", "$~ノーイコール"],
                    "inputs": [
                        {
                            "doc": "$~私と比較するための@リスト。",
                            "names": "$~リスト"
                        }
                    ]
                },
                "translate": {
                    "doc": [
                        "$~値とオプションのインデックスを入力として受け取り、値を生成する @FunctionDefinition を指定すると、各項目に対してそれを評価し、値を新しい値に変換します。",
                        "$~たとえば、@Number のリストがあり、それらすべてを 2 倍にしたいとします。",
                        "$~\\[2 4 6 8].translate(ƒ(num•#) num · 2)\\"
                    ],
                    "names": "$~翻訳する",
                    "inputs": [
                        {
                            "doc": "$~各項目を翻訳する @FunctionDefinition。",
                            "names": "$~翻訳者"
                        }
                    ],
                    "translator": [
                        {
                            "doc": "$~翻訳対象の項目。",
                            "names": "$~アイテム"
                        },
                        {
                            "doc": "$~翻訳対象の項目のインデックス。",
                            "names": "$~索引"
                        },
                        {
                            "doc": "$~翻訳中のリスト。",
                            "names": "$~リスト"
                        }
                    ]
                },
                "filter": {
                    "doc": [
                        "$~値とオプションのインデックスを入力として受け取り、@Boolean を生成する @FunctionDefinition を指定すると、結果が \\⊤\\ となる項目のみを含む新しいリストが作成されます。",
                        "$~たとえば、@Number のリストがあり、正の数だけが欲しいとします。",
                        "$~\\[2 -4 8 -16].filter(ƒ(num•#) num ≥ 0)\\"
                    ],
                    "names": "$~フィルター",
                    "inputs": [
                        {
                            "doc": "$~各項目をチェックし、保持する必要がある場合は \\⊤\\ を生成する @FunctionDefinition。",
                            "names": "$~チェッカー"
                        }
                    ],
                    "checker": [
                        {
                            "doc": "$~チェック対象のアイテム。",
                            "names": "$~アイテム"
                        },
                        {
                            "doc": "$~チェックされている項目のインデックス。",
                            "names": "$~索引"
                        },
                        {
                            "doc": "$~フィルタリングされるリスト。",
                            "names": "$~リスト"
                        }
                    ]
                },
                "all": {
                    "doc": [
                        "$~値を入力として受け取り、条件に一致する場合に @Boolean を生成する @FunctionDefinition を指定します。すべての項目が条件に一致する場合は \\⊤\\ を作成します。",
                        "$~たとえば、@Number のリストがあり、すべてが正かどうかを知りたいとします。",
                        "$~\\[2 -4 8 -16].all(ƒ(num•#) num ≥ 0)\\"
                    ],
                    "names": "$~全て",
                    "inputs": [
                        {
                            "doc": "$~項目が条件を満たす場合に \\⊤\\ を生成する @FunctionDefinition。",
                            "names": "$~チェッカー"
                        }
                    ],
                    "checker": [
                        {
                            "doc": "$~チェック対象のアイテム。",
                            "names": "$~アイテム"
                        },
                        {
                            "doc": "$~チェックされている項目のインデックス。",
                            "names": "$~索引"
                        },
                        {
                            "doc": "$~チェック中のリスト。",
                            "names": "$~リスト"
                        }
                    ]
                },
                "until": {
                    "doc": [
                        "$~値を入力として受け取り、条件に一致する場合に @Boolean を生成する @FunctionDefinition を指定します。条件が満たされなくなるまですべての項目を含む新しい @List を作成します。",
                        "$~たとえば、@Text の動物のリストがあり、\\'rat'\\ が見つかるまですべてを取得したいとします。",
                        "$~\\['猫' '犬' 'ネズミ' 'マウス' 'ポニー'].until(ƒ(動物•'') 動物 = 'ネズミ')\\"
                    ],
                    "names": "$~それまで",
                    "inputs": [
                        {
                            "doc": "$~アイテムの追加を停止する必要がある場合に \\⊤\\ を生成する @FunctionDefinition。",
                            "names": "$~チェッカー"
                        }
                    ],
                    "checker": [
                        {
                            "doc": "$~チェック対象のアイテム。",
                            "names": "$~アイテム"
                        },
                        {
                            "doc": "$~チェックされている項目のインデックス。",
                            "names": "$~索引"
                        },
                        {
                            "doc": "$~後続するリスト。",
                            "names": "$~リスト"
                        }
                    ]
                },
                "find": {
                    "doc": [
                        "$~値を入力として受け取り、それが何らかの基準に一致する場合に @Boolean を生成する @FunctionDefinition を指定すると、一致する項目が評価されます。",
                        "$~たとえば、母音 \\'e'\\ を持つ最初の動物を見つけたいとします。",
                        "$~\\['猫' '犬' 'ネズミ' 'マウス' 'ポニー'].find(ƒ(動物•'') animal.has('e'))\\"
                    ],
                    "names": "$~探す",
                    "inputs": [
                        {
                            "doc": "$~検索条件に一致する場合に \\⊤\\ を生成する @FunctionDefinition。",
                            "names": "$~チェッカー"
                        }
                    ],
                    "checker": [
                        {
                            "doc": "$~チェック対象のアイテム。",
                            "names": "$~アイテム"
                        },
                        {
                            "doc": "$~チェックされている項目のインデックス。",
                            "names": "$~索引"
                        },
                        {
                            "doc": "$~検索対象のリスト。",
                            "names": "$~リスト"
                        }
                    ]
                },
                "combine": {
                    "doc": [
                        "$~最新の組み合わせと次の値を受け取り、次の組み合わせを作成する @FunctionDefinition を指定すると、最初の項目から最後の項目まで移動して、連続する組み合わせを作成し、@FunctionDefinition が評価する最終的な組み合わせを評価します。",
                        "$~これは、me 内のすべての項目を 1 つの値に結合するのに非常に役立ちます。たとえば、数値のリストを追加したいとします。",
                        "$~\\[3 9 2 8 1 4].combine(0 ƒ(合計•# 数値•#) 合計 + 数値)\\"
                    ],
                    "names": ["$~組み合わせた", "$~組み合わせる"],
                    "inputs": [
                        {
                            "doc": "$~開始の組み合わせ。",
                            "names": "$~イニシャル"
                        },
                        {
                            "doc": "$~最新の組み合わせと次の値を受け取り、次の組み合わせを生成する @FunctionDefinition。",
                            "names": "$~コンバイナー"
                        }
                    ],
                    "combiner": [
                        {
                            "doc": "$~現在の組み合わせ",
                            "names": "$~組み合わせ"
                        },
                        {
                            "doc": "$~次に結合するアイテム。",
                            "names": "$~次"
                        },
                        {
                            "doc": "$~次の項目のインデックス",
                            "names": "$~索引"
                        },
                        {
                            "doc": "$~結合されるリスト。",
                            "names": "$~リスト"
                        }
                    ]
                },
                "sorted": {
                    "doc": [
                        "$~リストを取得して、その値をソートした新しいリストを作成できます。次のようになります。",
                        "$~\\[1 5 8 0 2].sorted()\\",
                        "$~@Text値でも同様に実行できます",
                        "$~\\['オレンジ' 'キウイ' 'バナナ' 'リンゴ'].sorted()\\",
                        "$~また、@Number または @Text 以外の値のリストがある場合は、各項目を @Number に変換する @FunctionDefinition を指定して、並べ替えることができます。たとえば、ここには長さの異なるリストのリストがあります。各リストをその長さに変換する関数を指定すれば、長さで並べ替えることができます。",
                        "$~\\[[1] [2 3] [4 8 12] [8]].sorted(ƒ(list) list.length())\\"
                    ],
                    "names": "$~ソート",
                    "inputs": [
                        {
                            "doc": "$",
                            "names": "$~シーケンサー"
                        }
                    ],
                    "sequencer": [
                        {
                            "doc": "$~@Number に変換する値。",
                            "names": "$~価値"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$~リストの @Text 表現に変換します。",
                "set": "$~@Set に、重複を削除するのに役立ちます。"
            }
        },
        "Set": {
            "doc": [
                "$~私は値の集合です。つまり、値を持たないものも含め、任意の数の値を含めることができます。次のように作成できます。",
                "$~\\{1 2 3}\\",
                "$~重複のないコレクションを保管したい場合に最適です。",
                "$~つまり、すでに持っている値を指定した場合、余分な値は無視されます。",
                "$~たとえば、このセットには多くの重複があります。",
                "$~\\{1 1 2 2 3 3}\\",
                "$~私はそれを単に \\{1 2 3}\\ と評価します。",
                "$~私の中に価値があるかどうかを確認したい場合は、@SetOrMapAccess が役立ちます:",
                "$~\\{'瓶' 'ボトル' 'グラス'}{'カップ'}\\",
                "$~通常、共通の型の値の束が与えられた場合、それらはその型のリストであると想定します。このセットはすべて @Text であるため、\\{''}\\ です。",
                "$~\\{'やあ' 'こんにちは' 'こんにちは'}\\",
                "$~しかし、私がそれらの値のみのセットであることを示して、許可されていない値を使用しようとしているときにそれを知らせたい場合があります。その場合は、私の末尾に ! を追加するだけです。",
                "$~\\{'やあ' 'こんにちは' 'こんにちは'}!{'よ'}\\",
                "$~他に何か私と一緒にやりたいことはありますか? 私が持っているすばらしい @FunctionDefinition をすべてチェックしてください!"
            ],
            "name": ["$~{}", "$~セット"],
            "kind": "$~親切",
            "out": "$~結果",
            "function": {
                "size": {
                    "doc": "$~私の中にどれだけの価値があるか教えてあげましょう。",
                    "names": "$~サイズ",
                    "inputs": []
                },
                "equals": {
                    "doc": [
                        "$~指定された @Set と I がまったく同じ値を持つ場合、I は \\⊤\\ です。",
                        "$~\\{1 2 3} = {2 3 4}\\"
                    ],
                    "names": ["=", "equals"],
                    "inputs": [
                        {
                            "doc": "$~比較する@Set。",
                            "names": "$~セット"
                        }
                    ]
                },
                "notequals": {
                    "doc": [
                        "$~指定された @Set と I の値がまったく同じでない場合は、I は \\⊤\\ になります。",
                        "$~\\{1 2 3} ≠ {2 3 4}\\"
                    ],
                    "names": ["$~≠", "$~ノーイコール"],
                    "inputs": [
                        {
                            "doc": "$~比較する@Set。",
                            "names": "$~セット"
                        }
                    ]
                },
                "add": {
                    "doc": [
                        "$~追加するアイテムを教えていただければ、自分のアイテムと指定されたアイテムで新しい @Set を作成します。",
                        "$~\\{1 2 3} + 4\\"
                    ],
                    "names": ["add", "+"],
                    "inputs": [
                        {
                            "doc": "$~追加するアイテム",
                            "names": "$~アイテム"
                        }
                    ]
                },
                "remove": {
                    "doc": [
                        "$~削除するアイテムを教えていただければ、そのアイテムを含まない新しい @Set を作成します。",
                        "$~\\{1 2 3} - 2\\",
                        "$~アイテムを持っていない場合は、自分で評価するだけです。"
                    ],
                    "names": ["remove", "-"],
                    "inputs": [
                        {
                            "doc": "$~削除するアイテム。",
                            "names": "$~アイテム"
                        }
                    ]
                },
                "union": {
                    "doc": [
                        "$~@Set を渡せば、自分のアイテムとセットのアイテムを含む新しい @Set が作成されます。",
                        "$~\\{1 2 3} ∪ {3 4 5}\\"
                    ],
                    "names": ["union", "∪"],
                    "inputs": [
                        {
                            "doc": "$~私と組み合わせる@Set。",
                            "names": "$~セット"
                        }
                    ]
                },
                "intersection": {
                    "doc": [
                        "$~@Set を渡していただければ、共通する項目のみを含む新しい @Set を作成します。",
                        "$~\\{1 2 3} ∩ {3 4 5}\\"
                    ],
                    "names": ["intersection", "∩"],
                    "inputs": [
                        {
                            "doc": "$~私と比較するためのセット。",
                            "names": "$~セット"
                        }
                    ]
                },
                "difference": {
                    "doc": [
                        "$~@Set を渡していただければ、共通する項目のみを含む新しい @Set を作成します。",
                        "$~\\{1 2 3}.違い({3 4 5})\\"
                    ],
                    "names": "$~違い",
                    "inputs": [
                        {
                            "doc": "$~アイテムを削除する必要があるセット。",
                            "names": "$~セット"
                        }
                    ]
                },
                "filter": {
                    "doc": [
                        "$~アイテムを受け取って、保持する必要がある場合は \\⊤\\ を生成する @FunctionDefinition を私に与えてください。そうすれば、条件を満たすアイテムのみを含む @Set を作成します。",
                        "$~たとえば、私の中の奇数を見つけてみましょう:",
                        "$~\\{1 2 3 4 5 6 7 8 9}.filter(ƒ(num•#) (num % 2) = 1)\\"
                    ],
                    "names": "filter",
                    "inputs": [
                        {
                            "doc": "$~アイテムを保持する必要があるかどうかを確認する @FunctionDefinition。",
                            "names": "$~チェッカー"
                        }
                    ],
                    "checker": [
                        {
                            "doc": "$~チェック対象のアイテム。",
                            "names": "$~価値"
                        },
                        {
                            "doc": "$~フィルタリングされるセット",
                            "names": "$~セット"
                        }
                    ]
                },
                "translate": {
                    "doc": [
                        "$~アイテムを受け取り、それに基づいて新しいアイテムを生成する @FunctionDefinition を指定すると、その中のすべてのアイテムが新しい @Set に変換されます (重複は削除されます)。",
                        "$~たとえば、すべての @Number を @Text に変換してみましょう。",
                        "$~\\{1 2 3 4 5 6 7 8 9}.translate(ƒ(num•#) num→'')\\"
                    ],
                    "names": "translate",
                    "inputs": [
                        {
                            "doc": "$~私のアイテムの 1 つを必要な新しいアイテムに変換する @FunctionDefinition。",
                            "names": "$~セット"
                        }
                    ],
                    "translator": [
                        {
                            "doc": "$~翻訳対象の項目。",
                            "names": "$~価値"
                        },
                        {
                            "doc": "$~翻訳中のセット",
                            "names": "$~セット"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$~@Set の @Text 表現",
                "list": "$~セット内の項目の @List 表現。"
            }
        },
        "Map": {
            "doc": [
                "$~値をまとめて、*キー*を*値*にマッピングします。例:",
                "$~\\{'エイミー': 6ポイント 'トニー':3ポイント 'シーラ': 8ポイント}\\",
                "$~キーは任意の種類の値にすることができ、値も任意の種類の値にすることができます。",
                "$~私のことを、あなたが私に何かを与え、私がそれが何にマッピングされているかを示すインデックスや辞書のようなものだと考える人もいます。",
                "$~何かが何にマッピングされているかを確認したい場合は、@SetOrMapAccess にキーを与えると、値が返されます。",
                "$~\\{'エイミー': 6ポイント 'トニー':3ポイント 'シーラ': 8ポイント}{'エイミー'}\\",
                "$~一致するキーがない場合は、@None が提供されます。",
                "$~\\{'エイミー': 6ポイント 'トニー':3ポイント 'シーラ': 8ポイント}{'ジェン'}\\",
                "$~次のように空のマップを作成することもできます。",
                "$~\\{:}\\",
                "$~通常、私は与えられたキーと値の種類を見て、それらすべてを表す型を考え出します。これは数字から数字へのマップです:",
                "$~\\{1:1 2:2 3:3}\\",
                "$~しかし、具体的にそれらの値だけであることを確認したい場合は、me の最後に ! を追加するだけで、一般化は行われません。これにより、意図しない値を取得しようとしているかどうかがわかります。",
                "$~\\{1:1 2:2 3:3}!{4}\\",
                "$~私は組み合わせによって多くの素晴らしいことを実現する方法を知っています。"
            ],
            "name": ["$~{:}", "$~地図"],
            "key": "$~鍵",
            "value": "$~価値",
            "result": "$~結果",
            "function": {
                "size": {
                    "doc": "$~私の中にどれだけの価値があるか教えてあげましょう。",
                    "names": "$~サイズ",
                    "inputs": []
                },
                "equals": {
                    "doc": [
                        "$~\\{⊤}\\ は、私のペアリングが指定された @Map とまったく同じである場合です。",
                        "$~\\{1:1 2:2} = {1:1 2:3}\\"
                    ],
                    "names": ["=", "equals"],
                    "inputs": [
                        {
                            "doc": "$~私と比較するための@Map。",
                            "names": "$~価値"
                        }
                    ]
                },
                "notequals": {
                    "doc": [
                        "$~\\{⊤}\\ 私のペアリングが指定された @Map とまったく同じではない場合。",
                        "$~\\{1:1 2:2} ≠ {1:1 2:3}\\"
                    ],
                    "names": ["$~≠", "$~ノーイコール"],
                    "inputs": [
                        {
                            "doc": "$~私と比較するための@Map。",
                            "names": "$~価値"
                        }
                    ]
                },
                "set": {
                    "doc": [
                        "$~すべて同じペアリングで、ただし指定された新しいペアリングを使用して新しい @Map を作成します。すでにキーがある場合は、それを新しい値とペアリングします。",
                        "$~\\{'amy': 6ポイント 'tony':3ポイント}.pair('jen' 0ポイント)\\"
                    ],
                    "names": "$~ペア",
                    "inputs": [
                        {
                            "doc": "$~値とペアにするキー。",
                            "names": "$~鍵"
                        },
                        {
                            "doc": "$~キーとペアになる値",
                            "names": "$~価値"
                        }
                    ]
                },
                "unset": {
                    "doc": [
                        "$~提供されたキーを使用せずに新しい @Map を作成し、そのペアリングを削除します。",
                        "$~\\{'amy': 6ポイント 'tony':3ポイント}.unpair('amy')\\"
                    ],
                    "names": "$~ペア解除",
                    "inputs": [
                        {
                            "doc": "$~忘れるための鍵。",
                            "names": "$~鍵"
                        }
                    ]
                },
                "remove": {
                    "doc": [
                        "$~値を持つキーのない新しい @Map を作成します。",
                        "$~\\{'amy': 0ポイント 'jen': 0ポイント 'tony':3ポイント}.remove(0ポイント)\\"
                    ],
                    "names": "$~取り除く",
                    "inputs": [
                        {
                            "doc": "$~私から削除する値と、それにペアになっているキー。",
                            "names": "$~価値"
                        }
                    ]
                },
                "filter": {
                    "doc": [
                        "$~キーと値を受け取り、ペアリングを維持する必要があるかどうかを \\⊤\\ と評価する @FunctionDefinition をください。条件を満たす新しい @Map を作成します。",
                        "$~たとえば、ここでは、エイミーであるペアリング、またはポイントが 0 を超えるペアリングを保持します。",
                        "$~\\{'amy': 0ポイント 'jen': 0ポイント 'tony':3ポイント}.filter(ƒ(キー•'' 値•#ポイント) (キー = 'amy') | (値 > 0ポイント))\\"
                    ],
                    "names": "filter",
                    "inputs": [
                        {
                            "doc": "$~ペアリングを維持するかどうかを決定する @FunctionDefinition。",
                            "names": "$~チェッカー"
                        }
                    ],
                    "checker": [
                        {
                            "doc": "$~チェック中のキー。",
                            "names": "$~鍵"
                        },
                        {
                            "doc": "$~チェックされる値。",
                            "names": "$~価値"
                        },
                        {
                            "doc": "$~フィルタリングされるマップ。",
                            "names": "$~地図"
                        }
                    ]
                },
                "translate": {
                    "doc": [
                        "$~キーと値を受け取り、その値を新しい値に評価する @FunctionDefinition をください。同じキーを持ち、値が更新された新しい @Map を作成します。",
                        "$~たとえば、皆さんがとても親切だったので、全員に 1 ポイントを与えましょう。",
                        "$~\\{'amy': 5ポイント 'jen': 3ポイント 'tony': 0ポイント}.translate(ƒ(キー•'' 値•#ポイント) 値 + 1ポイント)\\"
                    ],
                    "names": "translate",
                    "inputs": [
                        {
                            "doc": "$~各値を変換する @FunctionDefinition。",
                            "names": "$~翻訳者"
                        }
                    ],
                    "translator": [
                        {
                            "doc": "$~翻訳される値のキー。",
                            "names": "$~鍵"
                        },
                        {
                            "doc": "$~翻訳される値。",
                            "names": "$~価値"
                        },
                        {
                            "doc": "$~翻訳中の地図。",
                            "names": "$~地図"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$~マッピングの@Text表現。",
                "set": "$~@Mapのキー",
                "list": "$~@Map内の値のリスト"
            }
        },
        "Table": {
            "doc": [
                "$~私はテーブル行のセットです。同じ構造を持つ値の大規模なコレクションを追跡するのに役立ちます。",
                "$~たとえば、たくさんの岩を追跡したいとします。",
                "$~\\⎡名前•'' 色•''⎦\n⎡'黒曜石' '黒'⎦\n⎡'軽石' '灰色'⎦\n⎡'シトリン' '黄色'⎦\\",
                "$~@Bind は名前を付けるのに役立ちます。その後、新しい行 @Insert でテーブルを修正するなどの操作を実行できます。",
                "$~\\岩石: ⎡名前•'' 色•''⎦\n⎡'黒曜石' '黒'⎦\n⎡'軽石' '灰色'⎦\n⎡'黄水晶' '黄色'⎦\n岩石 ⎡+ '石英' '白'⎦\\",
                "$~または、一致する行を検索する場合は、条件に一致する行を @Select できます。",
                "$~\\rocks: ⎡name•'' color•''⎦\n⎡'黒曜石' '黒'⎦\n⎡'軽石' '灰色'⎦\n⎡'黄水晶' '黄色'⎦\nrocks ⎡?⎦ color = '灰色'\\",
                "$~あるいは、条件に一致する行に異なる値を持つ修正されたテーブルを作成したい場合もあります。",
                "$~\\rocks: ⎡name•'' color•''⎦\n⎡'黒曜石' '黒'⎦\n⎡'軽石' '灰色'⎦\n⎡'シトリン' '黄色'⎦\nrocks ⎡: color: '黒' ⎦ name = '軽石'\\",
                "$~あるいは、条件に一致する行を削除したい場合もあります。",
                "$~\\rocks: ⎡name•'' color•''⎦\n⎡'黒曜石' '黒'⎦\n⎡'軽石' '灰色'⎦\n⎡'黄水晶' '黄色'⎦\nrocks ⎡- name.has('i')\\",
                "$~そして、もし私から特定の値を取得したい場合には、任意のテーブルをリストに変換し、@PropertyReferenceを使用して個々の行にアクセスできます。",
                "$~\\rocks: ⎡name•'' color•''⎦\n⎡'黒曜石' '黒'⎦\n⎡'軽石' '灰色'⎦\n⎡'黄水晶' '黄色'⎦\n(rocks → [])[1].name\\"
            ],
            "name": ["$~⎡⎦", "$~テーブル"],
            "row": "$~行",
            "function": {
                "equals": {
                    "doc": "$~別の @Table とまったく同じ順序でまったく同じセルがあるかどうかを確認します。",
                    "names": ["$~=", "$~等しい"],
                    "inputs": [
                        {
                            "doc": "$~確認する他のテーブル。",
                            "names": "$~価値"
                        }
                    ]
                },
                "notequal": {
                    "doc": "$~セルのいずれかが別の @Table と異なっているか、または順序が異なっているかどうかを確認します。",
                    "names": ["$~≠", "$~等しくない"],
                    "inputs": [
                        {
                            "doc": "$~確認する他のテーブル。",
                            "names": "$~価値"
                        }
                    ]
                }
            },
            "conversion": {
                "list": "$~@Table を行のリストに変換します。各行は列名をプロパティとして持つ @Structure です。",
                "text": "$~@Table をテキストに変換するだけです。"
            }
        },
        "Structure": {
            "doc": "$~@StructureDefinition を参照してください。",
            "name": ["$~構造"],
            "function": {
                "equals": {
                    "doc": "$~自分のプロパティが別の構造体のプロパティと同じ名前と値であるかどうかを確認します。",
                    "names": ["$~=", "$~等しい"],
                    "inputs": [
                        {
                            "doc": "$~チェックする他の構造。",
                            "names": "$~価値"
                        }
                    ]
                },
                "notequal": {
                    "doc": "$~自分のプロパティが、別の構造体の名前や値と何らかの点で異なるかどうかを確認します。",
                    "names": ["$~≠", "$~等しくない"],
                    "inputs": [
                        {
                            "doc": "$~チェックする他の構造。",
                            "names": "$~価値"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$~私は自分自身を@Textに変換します。"
            }
        }
    },
    "input": {
        "Random": {
            "doc": [
                "$~17！",
                "$~/@FunctionDefinition はここにあります。これについて説明します。/",
                "$~@Random はランダムな数値を作成する興味深い関数です。評価するたびに異なる結果が作成される点が興味深いです。",
                "$~これにより、予測不可能な素晴らしい混乱が生まれます。",
                "$~デフォルトでは、\\0\\ から \\1\\ の間の @Number 値が指定されます。",
                "$~\\ランダム（）\\",
                "$~ただし、値を指定すると、\\0\\ とその値の間の値が生成されます。",
                "$~\\ランダム(10)\\",
                "$~2 つの値を指定すると、その 2 つの値の間とその 2 つの値を含む値が生成されます。",
                "$~\\ランダム(-10 10)\\",
                "$~範囲に単位がある場合は、それが保持されます (一致しない場合は、最小値の単位が使用されます)。",
                "$~\\ランダム(-10m 10m)\\",
                "$~また、小数点以下の有効桁数が特定の数値である場合、その精度は保持されます。",
                "$~\\ランダム(1.00 10.00)\\"
            ],
            "names": ["$~🎲", "$~ランダム"],
            "inputs": [
                {
                    "names": "$~分",
                    "doc": "$~作成される最小値、または 0 より大きい場合は最大値。@None が指定されている場合、最小値は \\0\\ になります。"
                },
                {
                    "names": "$~最大",
                    "doc": "$~作成される最大値、または指定された最小値より小さい場合は最小値。@None が指定されている場合、最大値は \\1\\ になります。"
                }
            ]
        },
        "Choice": {
            "doc": [
                "$~/カチカチタップ！/",
                "$~/@FunctionDefinition はここにあります。これについて説明します。/",
                "$~@Choice は、視聴者が選択した @Phrase/name のストリームのようなものだと考えてください。名前付きの @Phrase を誰かがクリック、タップ、またはキーボードで Enter キーを押して選択すると、@Choice には名前に一致する新しい値が含まれます。",
                "$~したがって、これを使用する最良の方法は、名前付き選択可能フレーズ @Phrase を使用してパフォーマンスを作成し、@Reaction を使用してその名前が選択されたときに何を実行するかを決定することです。",
                "$~最も簡単な例を以下に示します。",
                "$~\\Group(\nStack() \n[\nPhrase('one' 選択可能:⊤ 名前:'1')\nPhrase('two' 選択可能:⊤ 名前:'2')\nPhrase(Choice())\n]\n)\\",
                "$~これをエディターにコピーし、2 つの @Phrase のうち 1 つを選択します。3 番目の @Phrase に選択された名前が表示されます。"
            ],
            "names": ["$~🔘", "$~選択"]
        },
        "Button": {
            "doc": [
                "$~/クリック、クリック、クリック/",
                "$~/@FunctionDefinition はここにあります。これについて説明します。/",
                "$~@Button は、マウスやトラックパッドを聞くのに最適な方法です。もちろん、マウスやトラックパッドは誰もが使用できるわけではないので、聴衆に聞くための理想的な選択肢ではありません。よりアクセスしやすい選択肢は @Choice です。",
                "$~しかし、マウス ボタンを /本当に/ 監視する必要がある場合は、次の方法を使用します。プライマリ ボタンが上 \\⊥\\ か下 \\⊤\\ かを表す @Boolean のストリームが提供されます。",
                "$~簡単な例を次に示します。",
                "$~\\Phrase(ボタン() → '')\\",
                "$~これは、ストリームの値をテキストとして表す @Phrase を作成するだけです。これをエディターにコピーしてクリックすると、\\⊥\\ と \\⊤\\ が切り替わるのがわかります。"
            ],
            "names": ["$~🖱️", "$~ボタン"],
            "down": {
                "names": "$~下",
                "doc": "$~@None の場合、ストリームは up と down の両方の値を提供します。@Boolean の場合、指定された @Boolean 値のみを提供します。"
            }
        },
        "Pointer": {
            "doc": [
                "$~/うぅ ...",
                "$~/@FunctionDefinition はここにあります。これについて説明します。/",
                "$~マウス、トラックパッド、タッチスクリーンについてご存知ですか? 視聴者がどこを指しているか知りたいときがあります。それを実現するのが @Pointer です。",
                "$~もちろん、これはアクセスしやすい選択肢ではありません。誰もが見ることができたり、簡単に指さすことができるわけではないので、このストリームを使用することで誰かが参加できなくなることがないように注意してください。",
                "$~誰も除外されていないことが確実な場合は、@Pointer を使用するのはストリームを作成するのと同じくらい簡単です。",
                "$~\\ポインタ()\\",
                "$~提供される @Place は、ポインターが指している @Stage 上の場所に対応します。"
            ],
            "names": ["$~👆🏻", "$~ポインタ"]
        },
        "Key": {
            "doc": [
                "$~/カチカチ/",
                "$~/@FunctionDefinition はここにあります。これについて説明します。/",
                "$~キーボードにはたくさんのキーがありますね。@Key は、ユーザーがどのキーを押したり放したりしたかを教えてくれます。",
                "$~これを試してみてください",
                "$~\\鍵（）\\",
                "$~キーを入力すると、@Stage に表示されることがわかります。キーが押されるたびに、押されたキーを説明する新しい @Text がストリームに追加されます。",
                "$~文字を表すキーの場合、値は @Text として文字になります。",
                "$~/Escape/ キーなどの特殊キーの場合、<定義済みの名前@https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values> を使用してキーを説明する @Text になりますが、残念ながら英語でのみ使用できます。",
                "$~特定のキーについてのみ知りたい場合は、次のように指定します。",
                "$~\\キー('a')\\",
                "$~また、@Key が押されたときではなく放されたときだけを知りたい場合は、@Boolean を指定できます。",
                "$~\\キー('a' ⊥)\\"
            ],
            "names": ["$~⌨️", "$~鍵"],
            "key": {
                "names": "$~鍵",
                "doc": "$~@None の場合は、すべてのキーが提供されます。特定の @Text の場合は、そのキーのみが提供されます。"
            },
            "down": {
                "names": "$~下",
                "doc": "$~@None の場合、キーを押すと入力が生成されます。\\⊤\\ の場合は、押下入力のみが提供され、\\⊥\\ の場合は、リリース入力のみが提供されます。"
            }
        },
        "Time": {
            "doc": [
                "$~/チクタクチクタク/",
                "$~ここでは @FunctionDefinition について説明します。@Time は話さないので、これについて説明します。",
                "$~時間とは、一定の周波数で刻々と進む流れです。",
                "$~そのたびに、@Program は新しい時間値で再評価します。",
                "$~例えば：",
                "$~\\時間（）\\",
                "$~@Time/frequency で時間を指定すると、そのレートで刻まれます。例:",
                "$~\\時間(1000ms)\\",
                "$~ただし、@Program は次のティックに応答する前に評価する時間が必要なので、小さくできる範囲には制限があります。",
                "$~最小値はおそらく \\20ms\\ 程度です。"
            ],
            "names": ["$~🕕", "$~時間"],
            "frequency": {
                "names": ["$~頻度"],
                "doc": "$~これは、時間が刻まれる頻度です。デフォルトは \\33ms\\ で、これは 1 秒あたり約 30 回です。"
            },
            "relative": {
                "names": ["$~相対的"],
                "doc": "$~\\⊤\\ の場合、時間はプログラムが最初に評価されたときの 0 から始まります。それ以外の場合は、今日の開始時刻 (UTC (協定世界時)) からのミリ秒数から始まるため、時刻を追跡できます。"
            }
        },
        "Volume": {
            "doc": [
                "$~/ブッブッ/",
                "$~@FunctionDefinition です、マイクを握ります。",
                "$~このストリームは、選択した頻度でサンプリングされた 0 から 1 までの一連のボリュームです。デフォルトでは、頻度は \\30hz\\、つまり 1 秒あたり 30 回ですが、これより低い頻度に変更できます。",
                "$~\\音量（）\\",
                "$~観客の声がどれくらい大きいか聞くのに最適です!"
            ],
            "names": ["$~🎤", "$~音量"],
            "frequency": {
                "names": ["$~頻度"],
                "doc": "$~サンプリング間の時間。"
            }
        },
        "Pitch": {
            "doc": [
                "$~/ふーん/",
                "$~@FunctionDefinition です、ピッチについて話しましょう!",
                "$~このストリームは、選択した周波数でサンプリングされた、音の高さを示すヘルツ単位の周波数のシリーズです。人間の声は 20 Hz から 5000 Hz の間であることがわかっているので、その範囲の数値を計画してください。",
                "$~\\ピッチ（）\\",
                "$~これは、誰かが話したり歌ったりしているときの音色を聞くのに最適です。"
            ],
            "names": ["$~🎵", "$~ピッチ"],
            "frequency": {
                "names": ["$~頻度"],
                "doc": "$~サンプリング間の時間。"
            }
        },
        "Camera": {
            "doc": [
                "$~/ブッブッ/",
                "$~@FunctionDefinition はこちら、@Camera については説明できます!",
                "$~したがって、@Camera は、あなたの世界から @Color の @List を提供します。そのリストは基本的に画像を表しますが、それをどうするかはあなた次第です。",
                "$~画像をたくさんの @Phrase で表現してみると、かなりかっこよく見えるかもしれません。これをコピーしてみてください...",
                "$~\\colors: カメラ(32px 24px 33ms)\n\nステージ(\ncolors.combine(\n[] \nƒ(phrases•[フレーズ] row•[色] y•#) \nphrases.append(\nrow.translate(\nƒ(color•色 x•#)\nPhrase('o' place: Place((x - 1) · 0.5m y · -0.5m) color: color 期間: 0s\n)\n)\n)\n)\n)\\",
                "$~しかし、色を分析して、ライトがオンかオフか、または特定の色が一般的かどうかを判断することもできます。これにより、観客は表示される色によってパフォーマンスに影響を与えることができます。"
            ],
            "names": ["Cámara"],
            "width": {
                "names": ["$~幅"],
                "doc": "$~行内でサンプリングする @Color の数。"
            },
            "height": {
                "names": ["$~身長"],
                "doc": "$~列内でサンプリングする @Color の数。"
            },
            "frequency": {
                "names": ["$~頻度"],
                "doc": "$~@Color サンプル間の時間。"
            }
        },
        "Motion": {
            "names": "movimiento",
            "doc": [
                "$~/ボインボインボイン/",
                "$~/こんにちは！@FunctionDefinition です。@Motion について説明しましょうか？",
                "$~基本的に、@Motion は @Phrase のストリームです。開始時の @Phrase を与えると、重力に基づいて新しい場所と回転でそれを調整します。",
                "$~これにより、跳ねる絵文字を作成するなど、非常に簡単な操作が可能になります。",
                "$~\\Motion(フレーズ('o') 開始場所: 場所(0m 10m))\\",
                "$~o がどのように跳ねるかわかりますか? 最初の評価では、@Stage の高い位置を指定しますが、その後は @None が取得され、@Motion によって重力によって配置される任意の位置に変更できます。",
                "$~以下に、その他のさまざまな設定方法を示します。"
            ],
            "place": {
                "doc": "$~出発点。",
                "names": "$~場所"
            },
            "velocity": {
                "doc": "$~開始速度",
                "names": "$~速度"
            },
            "nextplace": {
                "doc": "$~次の場所は、物理法則を無視する場所です。",
                "names": "$~次の場所"
            },
            "nextvelocity": {
                "doc": "$~次の場所、オーバーライド速度。",
                "names": "$~ネクストベロシティ"
            }
        },
        "Scene": {
            "doc": [
                "$~/ブーブーブー/",
                "$~/こんにちは、@FunctionDefinition です! @Scene を見つけたようです。",
                "$~@Scene は特に素晴らしいと思います。基本的な考え方は、@Phrase または @Group のリストを与えると、それらを順番に表示して最後のもので停止するというものです。",
                "$~タイミングを制御するには、各出力に @Phrase/duration を設定するか、その長さだけ出力を表示してから次の出力に移り、設定した @Phrase/entering または @Phrase/exiting 遷移を使用します。@Sequence に設定すると、その期間が使用されます。",
                "$~これらすべてにより、次の 3 つのフレーズを順番に表示する小さな @Scene のようなものが実現できます。",
                "$~\\Scene([\nPhrase('こんにちは' 持続時間: 1 秒)\nPhrase('お元気ですか?' 持続時間: 2 秒 回転: 5° 入力: Pose(回転: 0°))\nPhrase('元気です')\n])\\",
                "$~最初の出力が 1 秒間表示され、次の出力が 2 秒間表示され、5 度回転するアニメーションが表示され、最後の出力が表示されることがわかります。",
                "$~@Scene を使用すると、非常に複雑な出力シーケンスやアニメーションを作成でき、他の @Phrase や @Group と同様に、その一部を動的またはインタラクティブにすることもできます。",
                "$~ネストされたアニメーション出力がある場合 (アニメーション化された @Phrase が内部に含まれる @Group)、@Scene は @Group 内のすべてのアニメーション化されたコンテンツが終了するまで待機します。",
                "$~ああ、最後にちょっとした秘密があります。リストに @Boolean を入れることもできます。それが \\⊥\\ の場合、@Scene は一時停止して、それが true になるまで待機します。",
                "$~たとえば、@Phrase のシーケンスを作成し、@Button が変更されたときにのみ進めたい場合は、次のようにします。",
                "$~\\click: ∆ Button()\nScene([\nPhrase('Hello')\nclick\nPhrase('お元気ですか?' 持続時間: 0.25 秒 回転: 5° 入力: Pose(回転: 0°))\nclick\nPhrase('元気です')\n])\\",
                "$~各 @Phrase の後に一時停止し、@Button が変更されるまで待ってから進む様子がわかりますか?"
            ],
            "names": ["$~🎬", "$~シーン"],
            "outputs": {
                "names": "$~出力",
                "doc": "$~順番に表示する出力のリスト。"
            }
        },
        "Chat": {
            "doc": [
                "$~/こんにちは！@FunctionDefinition です。チャットしませんか？",
                "$~チャット ストリームの基本的な考え方は、視聴者がメッセージを入力し、プログラムがそれに応答するというものです。",
                "$~たとえば、この単純なプログラムは、メッセージが「hello」かどうかをチェックし、そうである場合は「hi」と評価します。そうでない場合は、「huh?」と評価します。",
                "$~\\Chat().has('hello') ? 'hi!' 'えっ?'\\",
                "$~それだけです! これを使えば、チャットボット、テキストアドベンチャー、他の種類のパフォーマンス用のテキストベースのコントロールスキームなど、あらゆる種類のパフォーマンスを作成できます。"
            ],
            "names": ["$~🗣️", "$~チャット"]
        },
        "Placement": {
            "doc": [
                "$~/こんにちは、@FunctionDefinition です。どうやって進めるかについて話しましょう!/",
                "$~したがって、@Stage に私たちを配置する方法はたくさんあります。明示的に @Place を指定できます。@Motion を使用して、重力に任せることもできます。また、@Group に入れて、特定の方法で配置させることもできます。",
                "$~しかし、時には /audience/ に @Stage 上の位置を制御させたい場合もあります。そのために @Placement があります。",
                "$~仕組みは次のとおりです。@Placement を作成し、それを @Place に渡すだけです。",
                "$~\\Phrase('hi' place: Placement())\\",
                "$~その後、観客が矢印キーを使用したり、ステージをクリックまたはタップしたりするたびに、@Placement は目的の方向に移動する新しい @Place を作成します。",
                "$~これをプログラムにコピーし、ポインターまたはキーボードで矢印を動かしてみてください。",
                "$~@Placement をカスタマイズして、特定の次元での移動を有効または無効にしたり、@Place の移動距離を変更したり、ストリームが開始される最初の @Place を変更したりできます。"
            ],
            "names": ["$~✥", "$~配置"],
            "inputs": [
                {
                    "doc": "$~最初に始める場所。",
                    "names": "$~始める"
                },
                {
                    "doc": "$~観客が移動を要求したときに、その場所が何メートル移動するか。",
                    "names": "$~距離"
                },
                {
                    "doc": "$~true の場合、水平軸上の移動が可能になります。デフォルトではオンになっています。",
                    "names": "$~水平"
                },
                {
                    "doc": "$~true の場合、垂直軸上の移動が可能になります。デフォルトではオンになっています。",
                    "names": "$~垂直"
                },
                {
                    "doc": "$~true の場合、+ キーと - キーを使用して Z 軸上で移動できます。",
                    "names": "$~深さ"
                }
            ]
        },
        "Webpage": {
            "doc": [
                "$~/こんにちは、@FunctionDefinition です。インターネットから Web ページを取得する方法についてお話ししましょう。/",
                "$~初めてインターネットについて聞いたとき、私たちはとても興味をそそられました。世界中がコンピューターで接続され、お互いに文書を共有するなんて、すごいですね。",
                "$~そこで、それに接続するストリームを作成しました。URL を指定すると、そこにあるすべてのテキストが取得されます。次のようになります。",
                "$~\\Webページ('https://wordplay.dev')\\",
                "$~また、どうやら <CSS@https://developer.mozilla.org/en-US/docs/Learn/CSS/First_steps/What_is_CSS> と呼ばれるものがあり、これは Web ページでクエリを実行するのに便利です。CSS 選択クエリを指定すると、そのクエリに一致するテキストのみが取得されます。レベル 1 のヘッダーを取得するこの例のように。",
                "$~\\Webページ('https://wordplay.dev' 'h1')\\",
                "$~この方法では、多くの問題が発生する可能性があります。インターネット接続が切断された場合、URL が何にも解決されない場合、URL が公開されていない場合、URL が HTML ページではない場合など、これらすべてが例外の原因となります。機能するページが見つかった場合は、完了率を示す @Number と、ページ上の単語の @List が表示されます。"
            ],
            "names": ["$~🔗", "$~ウェブページ"],
            "url": {
                "doc": "$~取得する HTML Web ページの URL。",
                "names": "$~URL"
            },
            "query": {
                "doc": "$~HTMLで評価するCSSクエリ",
                "names": "$~クエリ"
            },
            "frequency": {
                "doc": "$~ページが再度取得されるまでに経過する分数。",
                "names": "$~頻度"
            },
            "error": {
                "invalid": "$~これは有効なURLではありません",
                "unvailable": "$~このURLにアクセスできません",
                "notHTML": "$~応答はHTMLではありませんでした",
                "noConnection": "$~言葉遊びとは関係ありません",
                "limit": "$~このドメインへのリクエストが多すぎます"
            }
        },
        "Collision": {
            "names": "$~衝突",
            "doc": [
                "$~/こんにちは！@FunctionDefinition です。このクールな入力をチェックしてください。/",
                "$~これは、@Output が互いにぶつかったときを見つけるのに役立ちます。これは、@Output が通常行うような互いに跳ね返る動作以外に、互いにぶつかったときに何かを行う優れた方法です。",
                "$~@Output という名前を指定するだけで、別の名前にぶつかるたびに新しい @Rebound 値が作成されます。@Rebound には、衝突した名前と衝突の方向に関する情報が含まれます。",
                "$~2 つの名前を指定した場合、2 つの名前が衝突した場合にのみ新しい値が作成されます。",
                "$~新しい値を作成した直後に、衝突が発生した後に完了するため、\\ø\\ を作成します。これは、衝突がなくなったことを示します。"
            ],
            "subject": {
                "names": "$~主題",
                "doc": "$~衝突を探す必要がある @Output の名前。"
            },
            "object": {
                "names": "$~他の",
                "doc": "$~衝突を探す必要がある他の @Output の名前。"
            }
        },
        "Rebound": {
            "names": "$~リバウンド",
            "doc": "$~私は @Collision から来ており、衝突した相手と衝突が発生した方向を表します。通常の物理法則以外の特別な方法で衝突に反応するかどうかを決定するために、私を使用してください。",
            "direction": {
                "names": "$~方向",
                "doc": "$~衝突の対象に対する衝突の方向と大きさ"
            },
            "subject": {
                "names": "$~主題",
                "doc": "$~対象によってヒットされた出力の名前。"
            },
            "object": {
                "names": "$~物体",
                "doc": "$~対象にヒットした出力の名前"
            }
        },
        "Direction": {
            "names": "$~方向",
            "doc": "$~私は x 軸と y 軸に沿った方向と大きさです。",
            "x": {
                "names": "$~x",
                "doc": "$~x 軸に沿った方向の方向と大きさ。"
            },
            "y": {
                "names": "$~ええ",
                "doc": "$~Y 軸に沿った方向の方向と大きさ。"
            }
        }
    },
    "output": {
        "Output": {
            "names": "$~出力",
            "doc": [
                "$~私は実際に作成できる @StructureDefinition ではありません。しかし、私たちのダンスの最も重要な要素である @Phrase、@Group、@Stage にインスピレーションを与えているので、私は非常に重要な存在です。",
                "$~実際に会って、使い方について詳しく学んでみましょう。"
            ]
        },
        "Stage": {
            "names": ["$~🎭", "$~ステージ"],
            "doc": [
                "$~こんにちは。ここがステージです。何を見せたいか言ってください。見せますよ。",
                "$~\\Stage([フレーズ('stufffffff')])\\",
                "$~ご希望の場合は、背景とカラーをお知らせください。それに応じてステージを照らします。",
                "$~\\Stage([Phrase('stufffffff')] 背景: 色(75% 50 100°)\\",
                "$~フレームの枠線も教えていただければ切り抜きます。",
                "$~\\Stage([Phrase('stufffffff')] 背景: カラー(75% 50 100°) フレーム: 長方形(-1m -1m 1m 1m))\\"
            ],
            "description": {
                "doc": [
                    "$~視覚的な出力を見ることができない視聴者のために使用する説明。"
                ],
                "names": "$~説明"
            },
            "content": {
                "doc": "$~ステージに表示する @Output のリスト。",
                "names": "$~コンテンツ"
            },
            "frame": {
                "doc": "$~ステージの周囲に配置し、ステージの外側にあるものをすべて隠すフレームの形状とサイズ。",
                "names": "$~フレーム"
            },
            "size": {
                "doc": "$~@グループ/サイズをいいね",
                "names": "$~サイズ"
            },
            "face": {
                "doc": "$~@グループ/フェイスをいいね",
                "names": "$~顔"
            },
            "place": {
                "doc": "$~もし私がカメラだったら、ここを見ているだろう",
                "names": "$~場所"
            },
            "name": {
                "doc": ["$~@Phrase/name と同じです!"],
                "names": "$~名前"
            },
            "selectable": {
                "doc": "$~@Phrase と同じ/選択可能!",
                "names": "$~選択可能"
            },
            "color": {
                "doc": "$~@グループ/色と同じ",
                "names": "$~色"
            },
            "background": {
                "doc": "$~@グループ/背景と同じ",
                "names": "$~背景"
            },
            "opacity": {
                "doc": "$~@Group/opacity と同じ",
                "names": "$~不透明度"
            },
            "offset": {
                "doc": "$~@Group/offsetと同じ",
                "names": "$~オフセット"
            },
            "rotation": {
                "doc": "$~@グループ/回転と同じ",
                "names": ["$~📐", "$~回転"]
            },
            "scale": {
                "doc": "$~@グループ/スケールと同じ",
                "names": "$~規模"
            },
            "flipx": {
                "doc": "$~@Group/flipxと同じ",
                "names": "$~フリップス"
            },
            "flipy": {
                "doc": "$~@Group/flipyと同じ",
                "names": "$~ひらひら"
            },
            "entering": {
                "doc": "$~@グループ/入力と同じ",
                "names": "$~入る"
            },
            "resting": {
                "doc": "$~@グループ/休憩と同じです!",
                "names": "$~休憩中"
            },
            "moving": {
                "doc": "$~@グループ/移動中と同じです!",
                "names": "$~動く"
            },
            "exiting": {
                "doc": "$~@Group/exiting と同じです!",
                "names": "$~終了する"
            },
            "duration": {
                "doc": "$~@Phrase/duration と同じです。",
                "names": ["duración"]
            },
            "style": {
                "doc": "$~@Phrase/style と同じです!",
                "names": "$~スタイル"
            },
            "gravity": {
                "doc": "$~@Motion 内にある出力に適用する重力。",
                "names": "$~重力"
            },
            "defaultDescription": "$~ステージ$2[$2 |]の$1の出力$3[フレーム$3|付き]$4"
        },
        "Group": {
            "names": ["$~🔳", "$~グループ"],
            "doc": [
                "$~こんにちは、元気ですか？私はいつも他の人がそばにいると元気なので、あなたと一緒にいられて嬉しいです！",
                "$~@Phrase と @Group を @Stage でグループ化し、@Arrangement に配置すると、配置場所に順序が付けられます。",
                "$~動作させるには、@Arrangement と、配置する @Output の @List を指定する必要があります。",
                "$~たとえば、ここでは @Stack 配置といくつかの @Phrase を垂直に積み重ねています。",
                "$~\\Group(Stack() [フレーズ('first') フレーズ('second')])\\",
                "$~正確にどのように配置するかは、あなたが私に与える @Arrangement によって決まります。"
            ],
            "description": {
                "doc": [
                    "$~視覚的な出力を見ることができない視聴者のために使用する説明。"
                ],
                "names": "$~説明"
            },
            "content": {
                "doc": "$~配置する@Outputのリスト。",
                "names": "$~コンテンツ"
            },
            "layout": {
                "doc": "$~@Output を適切な場所に配置するために使用する配置。",
                "names": "$~レイアウト"
            },
            "matter": {
                "doc": "$~物質と何か他のものにぶつかったら、どう反応すべきか。",
                "names": "$~案件"
            },
            "size": {
                "doc": "$~私の中にある素晴らしい内容物は、それ自体の大きさがなければ、どれほど大きいのでしょう。",
                "names": "$~サイズ"
            },
            "face": {
                "doc": "$~独自のフォント フェイスがない限り、コンテンツ内のフォント フェイスの名前を使用する必要があります。",
                "names": "$~顔"
            },
            "place": {
                "doc": "$~ステージ上の私がいるべき場所。私の中身はそこを基準に配置される。",
                "names": "$~場所"
            },
            "name": {
                "doc": ["$~@Phrase/nameと同じです!"],
                "names": "$~名前"
            },
            "selectable": {
                "doc": "$~@Phrase/selectable! と同じです。",
                "names": "$~選択可能"
            },
            "color": {
                "doc": "$~私の中のコンテンツが独自の色を持っていない限り、そのコンテンツがそうあるべき@Color。",
                "names": "$~色"
            },
            "background": {
                "doc": "$~私の後ろに投影する@Color。",
                "names": "$~背景"
            },
            "opacity": {
                "doc": "$~別の @Pose によって上書きされない限り、内部にあるすべてのものの透明度は \\0\\ から \\1\\ の間です。",
                "names": "$~不透明度"
            },
            "offset": {
                "doc": "$~別の @Pose によって上書きされない限り、通常の @Place からどの程度オフセットするかを示す @Place。所定の位置で揺らすのに役立ちます。",
                "names": "$~オフセット"
            },
            "rotation": {
                "doc": "$~中心の周りでどのくらい傾けるべきですか。私の @Pose は異なります。",
                "names": ["$~📐", "$~回転"]
            },
            "scale": {
                "doc": "$~元のサイズと比べてどれくらい大きくなるべきか。",
                "names": "$~規模"
            },
            "flipx": {
                "doc": "$~@Phrase/flipxと同じです!",
                "names": "$~フリップス"
            },
            "flipy": {
                "doc": "$~@Phrase/flipyと同じ",
                "names": "$~ひらひら"
            },
            "entering": {
                "doc": "$~@Phrase/entering と同じです。",
                "names": "$~入る"
            },
            "resting": {
                "doc": "$~@Phrase/resting と同じです!",
                "names": "$~休憩中"
            },
            "moving": {
                "doc": "$~@Phrase/moving! と同じです。",
                "names": "$~動く"
            },
            "exiting": {
                "doc": "$~@Phrase/exiting! と同じです。",
                "names": "$~終了する"
            },
            "duration": {
                "doc": "$~@Phrase/duration と同じです。",
                "names": ["duración"]
            },
            "style": {
                "doc": "$~@Phrase/style と同じです!",
                "names": "$~スタイル"
            },
            "defaultDescription": "$~$1[$1|] $2 $3"
        },
        "Phrase": {
            "names": ["$~💬", "$~フレーズ"],
            "doc": [
                "$~こんにちは、こんにちは！私のことを覚えていますか？誰が /me/ を忘れられるでしょうか。そうです、私はマニフィカティブな @Phrase であり、@Stage で最も美しい @Text を表現する準備ができています。",
                "$~私をこのようにすれば、@Stage に登場します:",
                "$~\\Phrase('素晴らしい！')\\",
                "$~もちろん、@Text も必要ですが、それ以外では、サイズ、フォント、回転の変更など、@Output でできることはすべて実行できます。また、@Pose と @Sequence を使用して、すばらしいダンスをすべて実行できます。",
                "$~@Stage で私を選択し、隣のパレットで編集することもできます。"
            ],
            "description": {
                "doc": [
                    "$~視覚的な出力を見ることができない視聴者のために使用するカスタムの説明。"
                ],
                "names": "$~説明"
            },
            "text": {
                "doc": "$~@Stage に表示する文字。",
                "names": "$~文章"
            },
            "size": {
                "doc": "$~私の身長はメートルで何センチですか？",
                "names": "$~サイズ"
            },
            "face": {
                "doc": "$~使用すべきフォント フェイスの名前。",
                "names": "$~顔"
            },
            "place": {
                "doc": "$~ステージ上で私がいるべき場所。",
                "names": "$~場所"
            },
            "wrap": {
                "doc": "$~シンボルをラップするエッジ、またはラップしない場合は \\ø\\ です。",
                "names": ["$~↵", "$~包む"]
            },
            "alignment": {
                "doc": "$~@Phrase/wrap 境界が設定されている場合、シンボルをエッジの先頭、中央、または末尾のいずれに揃えるかを指定します。",
                "names": "$~配置"
            },
            "direction": {
                "doc": "$~シンボルを水平に記述するか垂直に記述するか、垂直で @Phrase/wrap が設定されている場合は、テキストを左に折り返すか右に折り返すかを指定します。",
                "names": "$~方向"
            },
            "matter": {
                "doc": "$~物にぶつかったときに使えるプロパティ！",
                "names": "$~案件"
            },
            "aura": {
                "doc": "$~私の後ろに表示されるオプションの @Aura。私を輝かせてください!",
                "names": "$~オーラ"
            },
            "name": {
                "doc": [
                    "$~あなたが私に付けてくれる名前！これはいろいろなことに役立ちます。",
                    "$~まず、名前がある場合は、スクリーン リーダーの説明で自分自身を説明するためにその名前を使用します。",
                    "$~次に、アニメーション化するときに、ステージ上の同じコンテンツを表す複数の異なる表現がある場合があります。それらに同じ名前を付けると、1 つのものとしてアニメーション化されます。",
                    "$~最後に、@Choice が役に立ちます。指定した名前がそのストリームに表示されます。",
                    "$~役に立つ場合は、それぞれ異なる言語で、さまざまな名前を付けることができます。常に最初に選択したロケールの名前を使用します。"
                ],
                "names": "$~名前"
            },
            "selectable": {
                "doc": "$~\\⊤\\ の場合は、ポインターまたはキーボードで選択できることを示します。",
                "names": "$~選択可能"
            },
            "color": {
                "doc": "$~別の @Pose によって上書きされない限り、@Color I がデフォルトになります。",
                "names": "$~色"
            },
            "background": {
                "doc": "$~私の後ろに投影する@Color。",
                "names": "$~背景"
            },
            "opacity": {
                "doc": "$~別の @Pose で上書きされない限り、デフォルトでどの程度透明にするかは \\0\\ から \\1\\ の間です。フェードインとフェードアウトに役立ちます。",
                "names": "$~不透明度"
            },
            "offset": {
                "doc": "$~別の @Pose によって上書きされない限り、@Place からどの程度オフセットされるかを示す @Place。所定の位置で揺らすのに役立ちます。",
                "names": "$~オフセット"
            },
            "rotation": {
                "doc": "$~別の @Pose によって上書きされない限り、中心を中心に回転する角度の量。",
                "names": "$~回転"
            },
            "scale": {
                "doc": "$~別の @Pose によって上書きされない限り、元のサイズに対してどの程度拡大するかを指定します。",
                "names": "$~規模"
            },
            "flipx": {
                "doc": "$~別の @Pose によって上書きされない限り、x 軸上でミラーリングされるかどうか。",
                "names": "$~フリップス"
            },
            "flipy": {
                "doc": "$~別の @Pose によって上書きされない限り、y 軸上でミラーリングされるかどうか。",
                "names": "$~ひらひら"
            },
            "entering": {
                "doc": "$~ステージに入るときに行うべき @Pose または @Sequence。",
                "names": "$~入る"
            },
            "resting": {
                "doc": "$~ステージに入った後、出る前、@Place が変更されていない間に実行する必要がある @Pose または @Sequence。指定しない場合は、デフォルトを使用します。",
                "names": "$~休憩中"
            },
            "moving": {
                "doc": "$~デフォルトではなく、ステージ上で場所を移動するときに実行する必要がある @Pose または @Sequence。",
                "names": "$~動く"
            },
            "exiting": {
                "doc": "$~ステージを終了する前に実行する必要がある @Pose または @Sequence。",
                "names": "$~終了する"
            },
            "duration": {
                "doc": "$~ステージ上の別の場所へ移動する際に適用される持続時間。",
                "names": ["$~⏳", "$~間隔"]
            },
            "style": {
                "doc": "$~ステージ上の別の場所に移動する場合に使うアニメーション スタイル。",
                "names": "$~スタイル"
            },
            "defaultDescription": "$~$3[$3 メートル |]フレーズ $1 $2[名前付き $2|] $4[$4|] $5"
        },
        "Arrangement": {
            "names": ["Arrangement"],
            "doc": "$~私は、@Row、@Stack、@Grid、@Freeなど、Verseの他の多くの種類の配置にインスピレーションを与えています。私は@Groupと密接に協力して、"
        },
        "Row": {
            "names": ["Fila"],
            "doc": "$~私は @Row です。これは @Output の水平方向の @Arrangement で、間にオプションのパディングがあります。私の双子の @Stack に会ったことがありますか?",
            "description": "$~$1 のフレーズとグループの行",
            "alignment": {
                "doc": "$~各列のテキストを先頭、中央、末尾のいずれに配置するかを指定します。",
                "names": "$~配置"
            },
            "padding": {
                "doc": "$~出力間に配置するパディングの量。",
                "names": "$~パディング"
            }
        },
        "Stack": {
            "names": ["$~⬇", "$~スタック"],
            "doc": "$~私は @Stack です。@Output を垂直に並べた @Arrangement で、間にオプションのパディングを入れます。私の双子の @Row に会ったことがありますか?",
            "description": "$~1 ドルのフレーズとグループのスタック",
            "padding": {
                "doc": "$~出力間に配置するパディングの量。",
                "names": "$~パディング"
            },
            "alignment": {
                "doc": "$~各行のテキストを先頭、中央、末尾のいずれに配置するかを指定します。",
                "names": "$~配置"
            }
        },
        "Grid": {
            "names": ["$~▦", "$~グリッド"],
            "doc": "$~私は @Output のグリッドです。行と列の数を指定すると、オプションのパディングとセル サイズを使用して整然とした配置を作成します。",
            "description": "$~$1 行 $2 列のグリッド",
            "rows": {
                "doc": "$~グリッドに何行作成するか。",
                "names": "$~行"
            },
            "columns": {
                "doc": "$~グリッド内に作成する列の数。",
                "names": "$~列"
            },
            "padding": {
                "doc": "$~セル間に配置するパディングの量。",
                "names": "$~パディング"
            },
            "cellWidth": {
                "doc": "$~セルの幅を指定します。",
                "names": "$~セル幅"
            },
            "cellHeight": {
                "doc": "$~セルの高さを指定します。",
                "names": "$~セルパディング"
            }
        },
        "Free": {
            "names": ["$~無料"],
            "doc": [
                "$~私は、何でもいいです。好きなところに座ってください。どこかに座ってください。私に与えるすべての @Output に @Place があることを確認してください。そうしないと、どこに行けばよいかわかりません。",
                "$~ああ、各 @Output に指定する @Place は、@Group の @Place に相対的であることを覚えておいてください。したがって、期待した場所に何も表示されない理由がわからない場合は、@Group にも場所を指定してみてください。"
            ],
            "description": "$~自由形式の$1出力"
        },
        "Shape": {
            "names": ["$~⬟", "$~形"],
            "doc": "$~私はあらゆる形のインスピレーションです。@Stage にどのような形にするかを伝えるのに役立ちます。",
            "form": {
                "doc": "$~私は、見せるための形です。それぞれの形には、その配置を定義するために異なる情報が必要です。",
                "names": "$~形状"
            },
            "name": {
                "doc": "$~I は、アニメーションや @Collision に使用できる名前です。たとえば、地面を表す場合は、私を「ground」と呼ぶとよいでしょう。",
                "names": "$~名前"
            },
            "selectable": {
                "doc": "$~@Choice の一部として選択できるかどうか。",
                "names": "$~選択可能"
            },
            "color": {
                "doc": "$~私の境界線の色。",
                "names": "$~色"
            },
            "background": {
                "doc": "$~私の背景の色。",
                "names": "$~背景"
            },
            "opacity": {
                "doc": "$~どれだけ透明であるべきか。",
                "names": "$~不透明度"
            },
            "offset": {
                "doc": "$~自分がいる場所に留まりながら、自分の場所からどれくらい離れて現れるべきか。",
                "names": "$~オフセット"
            },
            "rotation": {
                "doc": "$~どのくらい回転させるべきか。これは @Collision に影響します。",
                "names": "$~回転"
            },
            "scale": {
                "doc": "$~実際のサイズを変えずに、どの程度拡大するかを指定します。",
                "names": "$~規模"
            },
            "flipx": {
                "doc": "$~x 軸上でミラーリングするかどうか。",
                "names": "$~フリップス"
            },
            "flipy": {
                "doc": "$~Y 軸上でミラーリングするかどうか。",
                "names": "$~ひらひら"
            },
            "entering": {
                "doc": "$~@Stage に入るときに実行する必要がある @Pose または @Sequence。",
                "names": "$~入る"
            },
            "resting": {
                "doc": "$~入場後、動いていない間に行うべき @Pose または @Sequence。",
                "names": "$~休憩中"
            },
            "moving": {
                "doc": "$~場所を移動するときに実行する必要がある @Pose または @Sequence。",
                "names": "$~動く"
            },
            "exiting": {
                "doc": "$~@Stage を離れるときに実行する必要がある @Pose または @Sequence。",
                "names": "$~終了する"
            },
            "duration": {
                "doc": "$~単一の @Pose の場合、アニメーションにかかる時間。",
                "names": "$~間隔"
            },
            "style": {
                "doc": "$~使用すべきアニメーション スタイル。",
                "names": "$~スタイル"
            },
            "description": {
                "doc": [
                    "$~視覚的な出力を見ることができない視聴者のために使用する説明。"
                ],
                "names": "$~説明"
            }
        },
        "Form": {
            "doc": "$~私は @Rectangle や @Circle のような抽象的なフォームです。",
            "names": ["$~形状"]
        },
        "Rectangle": {
            "names": ["$~矩形"],
            "doc": "$~私は長方形です。@Stage に任意のサイズの境界を設定するのに役立ちます。",
            "left": {
                "doc": "$~X軸上のステージの左端",
                "names": "$~左"
            },
            "top": {
                "doc": "$~Y軸上のステージの上端",
                "names": "$~トップ"
            },
            "right": {
                "doc": "$~X軸上のステージの右端",
                "names": "$~右"
            },
            "bottom": {
                "doc": "$~ステージのY軸上の下端",
                "names": "$~底"
            },
            "z": {
                "doc": "$~長方形の深さの位置。",
                "names": "$~ず"
            }
        },
        "Circle": {
            "doc": "$~私は円です。@Stage で図形を作成するのに役立ちます。",
            "names": ["$~丸"],
            "radius": {
                "doc": "$~円の半径",
                "names": "$~半径"
            },
            "x": {
                "doc": "$~円の水平中心。",
                "names": "$~x"
            },
            "y": {
                "doc": "$~円の垂直中心。",
                "names": "$~ええ"
            },
            "z": {
                "doc": "$~円の深さの位置。",
                "names": "$~ず"
            }
        },
        "Polygon": {
            "doc": "$~私は、長さが等しい辺と角度を持つ「正多角形」で、@Stage で図形を作成するのに役立ちます。",
            "names": ["$~ポリゴン"],
            "radius": {
                "doc": "$~多角形の半径",
                "names": "$~半径"
            },
            "sides": {
                "doc": "$~多角形の辺の数",
                "names": "$~側面"
            },
            "x": {
                "doc": "$~多角形の水平中心。",
                "names": "$~x"
            },
            "y": {
                "doc": "$~多角形の垂直中心。",
                "names": "$~ええ"
            },
            "z": {
                "doc": "$~ポリゴンの深さの位置。",
                "names": "$~ず"
            }
        },
        "Pose": {
            "names": ["$~🤪", "$~ポーズ"],
            "doc": [
                "$~誰かがとても素晴らしい立ち方をして、立ち止まり、みんなが注目する瞬間をご存知ですか? それが私です。私は @Output のポーズを捉え、彼らの動きの構成要素となります。",
                "$~ポーズにはたくさんの要素が関係します。私のさまざまな入力をチェックして、どのようなポーズができるか見てみましょう。"
            ],
            "style": {
                "doc": "$~このポーズに移動するときに使用するアニメーションのスタイル。",
                "names": "$~スタイル"
            },
            "color": {
                "doc": "$~@Output の @Color は、デフォルトではなく、このポーズにする必要があります。",
                "names": "$~色"
            },
            "opacity": {
                "doc": "$~@Output の透明度を、デフォルトではなく \\0\\ から \\1\\ の間で指定します。フェードインとフェードアウトに役立ちます。",
                "names": "$~不透明度"
            },
            "offset": {
                "doc": "$~デフォルトの代わりに、@Output の場所からどのくらいオフセットするかを示す @Place。所定の位置で揺らすのに役立ちます。",
                "names": "$~オフセット"
            },
            "rotation": {
                "doc": "$~@Output をデフォルトではなくどのように回転させる必要があるか。",
                "names": "$~回転"
            },
            "scale": {
                "doc": "$~@Output をデフォルトのサイズではなく、元のサイズに対してどの程度拡大するかを指定します。",
                "names": "$~規模"
            },
            "flipx": {
                "doc": "$~@Output をデフォルトではなく x 軸にミラーリングするかどうか。",
                "names": "$~フリップス"
            },
            "flipy": {
                "doc": "$~@Output をデフォルトではなく y 軸にミラーリングするかどうか。",
                "names": "$~ひらひら"
            },
            "description": "$~$1[透明 $1|] $2[回転 $2 度|] $3[拡大 $3|] $4[水平反転|] $5[垂直反転|] $6[影が $6 ピクセルぼやけている]"
        },
        "Color": {
            "names": ["$~🌈", "$~色"],
            "doc": [
                "$~私は目に見える色であり、3 つの基本的な次元で構成されています。",
                "$~以下は、中程度の明るさと高い彩度で、カラーホイール上の一般的な色です。",
                "$~\\カラー(50% 100 0°)\\",
                "$~\\カラー(50% 100 30°)\\",
                "$~\\カラー(50% 100 60°)\\",
                "$~\\カラー(50% 100 90°)\\",
                "$~\\カラー(50% 100 120°)\\",
                "$~\\カラー(50% 100 150°)\\",
                "$~\\カラー(50% 100 180°)\\",
                "$~\\カラー(50% 100 210°)\\",
                "$~\\カラー(50% 100 240°)\\",
                "$~\\カラー(50% 100 270°)\\",
                "$~\\カラー(50% 100 300°)\\",
                "$~\\カラー(50% 100 330°)\\"
            ],
            "lightness": {
                "doc": "$~\\0\\ から \\1\\ まで、つまり \\0\\ で黒、\\0.5\\ で灰色、\\1\\ で白になるまでの明るさを指定します。",
                "names": ["luminosidad"]
            },
            "chroma": {
                "doc": "$~どのくらいの色が必要かは、\\0\\ から \\∞\\ までです。色がない場合には灰色、数字が大きいほど色が多くなります。",
                "names": ["croma"]
            },
            "hue": {
                "doc": "$~色相環で、メゼンタ \\0\\、赤 \\30\\、緑 \\120\\、青 \\270\\ のどの色になるでしょうか。",
                "names": ["matiz"]
            }
        },
        "Sequence": {
            "names": ["$~💃", "$~順序"],
            "doc": [
                "$~ああ、まあ、ディレクター、今日はすごく素敵ですね！私と一緒に踊りませんか？簡単ですよ。",
                "$~必要なのは、@Map を指定することだけです。各キーはダンスの進捗状況の割合を表し、それらのキーの各値は、@Pose になります。",
                "$~これを使ってアニメーション化する方法はたくさんあります! たとえば、簡単な例を次に示します。",
                "$~\\Phrase('hi' resting:Sequence({0%: Pose(回転: 360°) 100%: Pose(回転: 0°)})\\",
                "$~これは、/開始時 (0%) に、傾き 360 で開始し、傾き 0 で終了する/ という意味です。私は @Phrase の休止ポーズとして設定されているので、これでは永遠にぐるぐる回り続けることになります。",
                "$~他の入力を試して、独自の創造的なダンスを試してください。"
            ],
            "poses": {
                "doc": "$~0% から 100% までのパーセンテージの @Map で、それぞれが @Pose とペアになっています。すべてのパーセンテージを指定する必要はありません。指定したパーセンテージ間で @Output をスムーズに移動させます。",
                "names": "$~ポーズ"
            },
            "duration": {
                "doc": "$~このダンスはどのくらいの時間踊ればいいですか？繰り返す場合は、時間を増やすのではなく、もっと速く踊るだけです。",
                "names": ["$~⏳", "$~間隔"]
            },
            "style": {
                "doc": "$~ダンスにはどんなスタイルを使えばいいでしょうか。",
                "names": "$~スタイル"
            },
            "count": {
                "doc": "$~シーケンスが完了するまでに何回繰り返すか。これは、ステージに入るとき、ステージ上で移動するとき、またはステージから出るときに非常に役立ちますが、休憩シーケンスの場合は、永遠に休憩できるため無視されます。",
                "names": "$~カウント"
            }
        },
        "Place": {
            "names": ["Posición"],
            "doc": "$~私は @Stage 上の場所です。デフォルトでは中央にいるので、入力はすべてオプションです。",
            "x": {
                "doc": "$~x 軸上の位置。",
                "names": "$~x"
            },
            "y": {
                "doc": "$~Y軸上の位置",
                "names": "$~ええ"
            },
            "z": {
                "doc": "$~Z軸上の位置",
                "names": "$~ず"
            },
            "rotation": {
                "doc": "$~この位置での回転",
                "names": ["$~📐", "$~回転"]
            }
        },
        "Velocity": {
            "doc": "$~私は @Stage 上の場所です。デフォルトでは中央にいるので、入力はすべてオプションです。",
            "names": ["$~💨", "$~速度"],
            "x": {
                "doc": "$~x 軸上で毎秒何メートル移動するか。",
                "names": "$~x"
            },
            "y": {
                "doc": "$~Y 軸上で毎秒何メートル移動するか。",
                "names": "$~ええ"
            },
            "angle": {
                "doc": "$~1秒間に何度回転するか",
                "names": ["$~角度", "$~°"]
            }
        },
        "Matter": {
            "doc": "$~私は出力の物理的特性であり、それがステージ上で他の出力とどのように相互作用するかに影響します。",
            "names": ["$~⚛️", "$~案件"],
            "mass": {
                "doc": "$~重量（キログラム）",
                "names": "$~質量"
            },
            "bounciness": {
                "doc": "$~衝突を継続するためにどれだけのエネルギーを使うか。0 はゼロ、1 はすべてを意味します。",
                "names": "$~弾力性"
            },
            "friction": {
                "doc": "$~スライドを続ける量。0 はスライドなし、1 は永久にスライドを続けることを意味します。",
                "names": "$~摩擦"
            },
            "roundedness": {
                "doc": "$~出力の角を丸める度合い。0 は丸めなし、1 は 100% のサイズを意味し、円形になります。",
                "names": "$~丸み"
            },
            "text": {
                "doc": "$~他の出力と衝突するかどうか。",
                "names": "$~文章"
            },
            "shapes": {
                "doc": "$~他の図形と衝突できるかどうか。",
                "names": "$~地面"
            }
        },
        "Aura": {
            "doc": [
                "$~私はオーラです。@Phrase を輝かせます! このように:",
                "$~\\Phrase(\n「私は輝いている！」\naura: Aura(色(50% 100 118°) 0.1m 0m 0.1m\n)\\"
            ],
            "names": ["$~🔮", "$~オーラ"],
            "color": {
                "doc": "$~@Aura が適用される @Color。",
                "names": "$~色"
            },
            "blur": {
                "doc": "$~@Aura がどの程度ぼやけるかを指定します。\\0m\\ はまったくぼやけていないことを意味します。",
                "names": "$~ぼやける"
            },
            "offsetX": {
                "doc": "$~左または右のどのくらいの距離に表示する必要がありますか。\\0m\\ は真下です。",
                "names": "$~オフセットX"
            },
            "offsetY": {
                "doc": "$~どのくらい上または下に表示する必要がありますか。\\0m\\ は真下です。",
                "names": "$~オフセットY"
            }
        },
        "Easing": {
            "straight": "$~真っ直ぐ",
            "cautious": "$~用心深い",
            "pokey": "$~ポーキー",
            "zippy": "$~ジッピー"
        },
        "sequence": {
            "sway": {
                "doc": "$~@Output の中心の周りを前後に揺れる @Sequence を作成します。",
                "names": ["vaivén"],
                "angle": {
                    "doc": "$~揺れにどれだけ傾くか。",
                    "names": ["ángulo"]
                }
            },
            "bounce": {
                "doc": "$~指定された高さで @Output をバウンドさせる @Sequence を作成します。",
                "names": ["rebotar"],
                "height": {
                    "doc": "$~どのくらい高く跳ねるか。",
                    "names": ["altura"]
                }
            },
            "spin": {
                "doc": "$~@Output をその中心の周りに回転させる @Sequence を作成します。",
                "names": ["girar"]
            },
            "fadein": {
                "doc": "$~@Output を非表示から表示にフェードインする @Sequence を作成します。",
                "names": ["$~フェードイン"]
            },
            "fadeout": {
                "doc": "$~@Output を可視から不可視にフェードアウトする @Sequence を作成します。既存の @Sequence で試してみてください。",
                "names": ["$~フェードアウト"]
            },
            "popup": {
                "doc": "$~@Output が通常のサイズに縮小するよりも速く拡大する @Sequence を作成します。",
                "names": ["surgir"]
            },
            "shake": {
                "doc": "$~@Output が怖いように見える @Sequence を作成します。",
                "names": ["agitar"]
            }
        },
        "Source": {
            "names": "$~ソース",
            "doc": [
                "$~プロジェクトに複数の @Source ファイルが存在する場合があることをご存知ですか? プロジェクトのロジックに基づいて @Source を作成できるようにしました。これは、プロジェクトの異なる評価間でデータを保存する場合に非常に役立ちます。",
                "$~たとえば、マウス ボタンを押すたびに 1 ずつカウントアップする単純なカウンターを作成したいとします。これを使用して、何かを何回実行したかを記憶することができます。",
                "$~\\↓ count\n[\nPhrase(`\\count\\ 回!`)\nSource('count' count … ∆ Button() … count + 1 )\n]\\",
                "$~これをコピーして、/count/ という新しい @Source を作成し、そこに 0 と入力して、カウントを 0 から開始してみてください。この小さなプロジェクトは、/count/ ソースの値を取得し、マウス ボタンが押されるたびに、/count/ @Source を現在の /count/ 値に /1/ を加えた値に編集します。"
            ],
            "name": {
                "names": "$~名前",
                "doc": "$~作成または更新するソース ファイルの名前。"
            },
            "value": {
                "names": "$~価値",
                "doc": "$~ソース ファイルを作成または更新するデータ値。"
            },
            "DynamicEditLimitException": {
                "description": "$~動的ソース編集の制限",
                "explanation": "$~このプロジェクトでは、@Source ファイルにデータを何度も保存しすぎています。入力に応じて @Source のみを更新し、あまり速く更新しないようにしてください。"
            },
            "ReadOnlyEditException": {
                "description": "$~読み取り専用ソース編集",
                "explanation": "$~このプロジェクトはデータを記憶しますが、それを編集する権限がありません。試してみたい場合はコピーしてください。"
            },
            "EmptySourceNameException": {
                "description": "$~空のソース名",
                "explanation": "$~指定された @Source の名前が空であるため、保存できませんでした。"
            },
            "ProjectSizeLimitException": {
                "description": "$~プロジェクトサイズ制限",
                "explanation": "$~このプロジェクトにはテキストが多すぎるため、保存できません。"
            }
        }
    },
    "ui": {
        "font": {
            "app": "Noto Sans",
            "code": "Noto Sans Mono"
        },
        "phrases": {
            "welcome": "$~こんにちは"
        },
        "widget": {
            "confirm": {
                "cancel": "$~キャンセル"
            },
            "dialog": {
                "close": "$~近い"
            },
            "loading": {
                "message": "$~フォントとテキストを読み込んでいます。お待ちいただきありがとうございます。"
            },
            "home": "$~ホームページへ",
            "table": {
                "cell": {
                    "description": "$~このセルを編集する",
                    "placeholder": "$~価値"
                },
                "addcolumn": "$~この列の前に列を追加する",
                "removecolumn": "$~この列を削除"
            }
        },
        "tile": {
            "toggle": {
                "fullscreen": {
                    "on": "$~全画面表示を終了",
                    "off": "$~全画面に拡大"
                },
                "show": {
                    "on": "$~隠れる",
                    "off": "$~見せる"
                }
            },
            "label": {
                "output": "$~ステージ",
                "palette": "$~パレット",
                "docs": "$~ガイド",
                "source": "$~ソース",
                "collaborate": "$~協力する"
            },
            "button": {
                "collapse": "$~ウィンドウを折りたたむ"
            }
        },
        "project": {
            "error": {
                "unknown": "$~このプロジェクトは存在しないか、公開されていません。",
                "translate": "$~プロジェクトの翻訳中に問題が発生しました。",
                "tile": "$~申し訳ございません。エラーが発生しました。",
                "reset": "$~リセットを試行します..."
            },
            "button": {
                "removeCollaborator": "$~共同編集者を削除",
                "copy": "$~プロジェクトをテキストとしてクリップボードにコピーする",
                "addSource": "$~新しい$sourceを作成する",
                "duplicate": "$~このプロジェクトをコピーする",
                "revert": "$~元のコードに戻す",
                "focusOutput": "$~ステージ上のキーボードに焦点を当てる",
                "focusSource": "$~次の情報源に焦点を当てる",
                "focusDocs": "$~ドキュメントに焦点を当てる",
                "focusPalette": "$~パレットに焦点を当てる",
                "focusCycle": "$~次のタイルに焦点を当てる",
                "unsaved": "$~保存エラーを表示",
                "translate": "$~このプロジェクトの言語を編集し、他の言語に翻訳します。",
                "primary": "$~このプロジェクトのプライマリロケールとして設定",
                "share": {
                    "tip": "$~プロジェクト共有オプションを表示",
                    "label": "$~共有"
                },
                "history": {
                    "on": "$~最近のプロジェクトコードを表示",
                    "redo": "$~現在のプロジェクトコードを表示"
                }
            },
            "field": {
                "name": {
                    "description": "$~プロジェクト名を編集",
                    "placeholder": "$~名前"
                }
            },
            "help": "$~キーボードショートカットを表示",
            "collapsed": "$~すべてのウィンドウが折りたたまれています。下のツールバーで見つけることができます。",
            "save": {
                "projectsNotSavedLocally": "$~ブラウザでプロジェクトを保存する際に問題が発生しました。",
                "projectsCannotNotSaveLocally": "$~お使いのブラウザはプロジェクトの保存をサポートしていません。",
                "projectContainedPII": "$~プライバシーを保護するため、個人を特定できる可能性のある情報を含むプロジェクトはオンラインで保存されませんでした。プロジェクトをチェックして、情報が個人を特定できるものかどうかを確認してください。",
                "projectsNotLoadingOnline": "$~オンライン プロジェクトを読み込めません。",
                "projectNotSavedOnline": "$~プロジェクトをオンラインで保存できません。",
                "settingsUnsaved": "$~設定をオンラインで保存できません。"
            },
            "dialog": {
                "unsaved": "$~保存されていない作業...",
                "translate": {
                    "header": "$~言語",
                    "explanation": [
                        "$~これらはプロジェクトで使用している言語です。",
                        "$~プロジェクトを他の言語に翻訳するには、主なソース言語を選択してから、新しい言語を選択します。",
                        "$~/すべての言語がサポートされているわけではなく、翻訳は不完全なので、結果を確認してください。/"
                    ]
                }
            },
            "subheader": {
                "source": "$~ソース",
                "destination": "$~行き先"
            }
        },
        "gallery": {
            "untitled": "$~無題",
            "undescribed": "$~説明なし",
            "subheader": {
                "curators": {
                    "header": "$~キュレーター",
                    "explanation": "$~このギャラリーを管理するクリエイター。"
                },
                "creators": {
                    "header": "$~クリエイター",
                    "explanation": "$~このギャラリーに貢献するクリエイター。"
                },
                "delete": {
                    "header": "$~消去",
                    "explanation": "$~このギャラリーを削除しても、そのプロジェクトは削除されません。ギャラリーは永久に削除されます。"
                },
                "classes": {
                    "header": "$~クラス",
                    "explanation": "$~このギャラリーに関連付けられているクラス。"
                }
            },
            "confirm": {
                "delete": {
                    "description": "$~ギャラリーを削除",
                    "prompt": "$~消去"
                },
                "remove": {
                    "description": "$~ギャラリーからプロジェクトを削除する",
                    "prompt": "$~取り除く"
                }
            },
            "error": {
                "unknown": "$~このギャラリーは存在しないか、公開されていません。"
            },
            "field": {
                "name": {
                    "description": "$~ギャラリー名",
                    "placeholder": "$~名前"
                },
                "description": {
                    "description": "$~ギャラリーの説明",
                    "placeholder": "$~あなたのギャラリーについて説明してください。そのテーマ、目標、コミュニティは何ですか?"
                }
            }
        },
        "source": {
            "label": "$~プログラム編集者",
            "empty": [
                "$~さあ始めましょう！…",
                "$~• 📕 を開いて、このプログラムにドラッグ🖱️ してください。",
                "$~• 「$1」と入力し、メニューから選択します。",
                "$~• ⌨️ を使って入力してください。",
                "$~• インスピレーションを得るために <galleries@://galleries> を閲覧します。",
                "$~困った場合は、<learn more@://learn> をご覧ください。"
            ],
            "overwritten": "$~最新バージョンを受け取りました!",
            "confirm": {
                "delete": {
                    "description": "$~この$sourceを削除する",
                    "prompt": "$~消去"
                }
            },
            "toggle": {
                "blocks": {
                    "on": "$~テキストとして編集",
                    "off": "$~ブロックとして編集"
                },
                "glyphs": {
                    "on": "$~一致するグリフを折りたたむ",
                    "off": "$~一致するグリフを展開する"
                }
            },
            "button": {
                "selectOutput": "$~この出力をステージで見せる",
                "expandSequence": "$~この折りたたまれたコードを展開する"
            },
            "field": {
                "name": {
                    "description": "$~ソース名を編集",
                    "placeholder": "$~名前"
                }
            },
            "menu": {
                "label": "$~オートコンプリートメニュー",
                "show": "$~オートコンプリートメニューを表示",
                "back": "$~サブメニューを離れる"
            },
            "cursor": {
                "priorLine": "$~カーソルを前の行に移動",
                "nextLine": "$~カーソルを次の行に移動",
                "priorInline": "$~カーソルを前の位置に移動",
                "nextInline": "$~カーソルを次の位置へ移動",
                "lineStart": "$~カーソルを行頭に移動する",
                "lineEnd": "$~カーソルを行末に移動する",
                "sourceStart": "$~カーソルをソースの先頭に移動する",
                "sourceEnd": "$~カーソルをソースの末尾に移動する",
                "priorNode": "$~隣の人を選択する",
                "nextNode": "$~隣を選択",
                "parent": "$~コンテナを選択",
                "selectAll": "$~プログラムを選択",
                "incrementLiteral": "$~数値、テキスト、ブール値を増やす",
                "decrementLiteral": "$~数値、テキスト、またはブール値を減らす",
                "insertSymbol": "$~1ドルを挿入",
                "insertTab": "$~タブを挿入",
                "insertTrue": "$~真を挿入",
                "insertFalse": "$~偽を挿入",
                "insertNone": "$~なし記号を挿入",
                "insertNotEqual": "$~等しくない挿入",
                "insertProduct": "$~製品シンボルを挿入",
                "insertQuotient": "$~商記号を挿入する",
                "insertDegree": "$~度記号を挿入",
                "insertFunction": "$~挿入機能",
                "insertLessOrEqual": "$~以下または等しいを挿入",
                "insertGreaterOrEqual": "$~より大きいか等しいを挿入",
                "insertStream": "$~ストリームシンボルを挿入",
                "insertChange": "$~変更記号を挿入",
                "insertConvert": "$~変換記号を挿入",
                "insertPrevious": "$~前の記号を挿入",
                "insertType": "$~挿入型記号",
                "insertTable": "$~テーブルを開くシンボルを挿入",
                "insertTableClose": "$~表を閉じる記号を挿入",
                "insertBorrow": "$~挿入借用",
                "insertShare": "$~挿入シェア",
                "insertLine": "$~改行を挿入",
                "backspace": "$~選択範囲または前のシンボルを削除",
                "delete": "$~選択範囲または次のシンボルを削除",
                "cut": "$~選択範囲を切り取る",
                "copy": "$~選択範囲をコピー",
                "paste": "$~キーボードの内容を貼り付ける",
                "parenthesize": "$~選択範囲を括弧で囲む",
                "enumerate": "$~選択項目を列挙する",
                "type": "$~文字を入力する",
                "undo": "$~前の編集を元に戻す",
                "redo": "$~やり直す 元に戻す 編集",
                "search": "$~挿入する特殊文字を検索する",
                "tidy": "$~整然とした間隔",
                "elide": "$~省略を切り替える",
                "insertDocs": "$~説明記号を挿入"
            }
        },
        "annotations": {
            "label": "$~紛争と援助",
            "cursor": "$~これは *$1*$2[ であり、タイプは $2|] です。$3[ それらは *$3* 内にあります。|]",
            "cursorParent": "$~それらはタイプ $2| の *$1*$2[ ] 内にあります。",
            "learn": "$~/もっと詳しく知る/",
            "evaluating": "$~ああ、楽しい、評価してみましょう！",
            "space": "$~これは宇宙です！これほど多くのことを語れるものがあるとは誰が想像したでしょうか？",
            "button": {
                "resolution": "$~この対立を解決する"
            }
        },
        "output": {
            "label": "$~プログラム出力",
            "toggle": {
                "grid": {
                    "on": "$~グリッド線を非表示",
                    "off": "$~グリッド線を表示"
                },
                "fit": {
                    "on": "$~ズームを手動で制御する",
                    "off": "$~コンテンツに合わせてズームする"
                },
                "paint": {
                    "on": "$~ペイント出力",
                    "off": "$~出力を配置する"
                }
            },
            "field": {
                "key": {
                    "description": "$~キーの押下音を聞く",
                    "placeholder": "$~メッセージ"
                }
            },
            "button": {
                "submit": "$~このチャットメッセージを送信"
            },
            "options": {
                "locale": "$~出力の言語を選択します"
            }
        },
        "timeline": {
            "label": "$~タイムライン",
            "slider": "$~タイムスライダー",
            "button": {
                "play": "$~入力にリアルタイムで応答しながらプログラムを最後まで評価する",
                "pause": "$~プログラムを一時停止し、前後に移動できるようにします",
                "backStep": "$~一歩後退",
                "backNode": "$~カーソルの前の評価へ進む",
                "backInput": "$~1つ前の入力",
                "out": "$~この機能から抜け出す",
                "forwardStep": "$~一歩前進する",
                "forwardNode": "$~カーソルの次の評価に進む",
                "forwardInput": "$~次のストリーム入力に進む",
                "present": "$~最後まで",
                "start": "$~始まりへ",
                "reset": "$~パフォーマンスを再開する"
            }
        },
        "docs": {
            "label": "$~ドキュメントブラウザ",
            "link": "$~ドキュメントにコンセプト $1 を表示",
            "learn": "$~もっと詳しく知る …",
            "nodoc": "$~私は誰？私は何者？私の目的は何？",
            "button": {
                "home": "$~家に帰る",
                "back": "$~前に戻る"
            },
            "field": {
                "search": "$~言葉で概念を検索する"
            },
            "header": {
                "inputs": "$~入力",
                "interfaces": "$~インターフェース",
                "properties": "$~プロパティ",
                "functions": "$~機能",
                "conversions": "$~コンバージョン"
            }
        },
        "dialog": {
            "share": {
                "header": "$~共有",
                "explanation": "$~このプロジェクトを編集および表示できるユーザーを制御します。",
                "subheader": {
                    "gallery": {
                        "header": "$~ギャラリー",
                        "explanation": "$~このプロジェクトを他のクリエイターと一緒にギャラリーに追加するか、<projects@://projects> ページにギャラリーを作成します。プロジェクトを公開ギャラリーに追加すると、プロジェクトは公開されます。"
                    },
                    "public": {
                        "header": "$~パブリック/プライベート",
                        "explanation": "$~公開プロジェクトとギャラリーは、世界中の誰でも見ることができます。私たちの目標は、これらのコンテンツが肯定と喜びをもたらすことであり、公開共有はそのための 1 つの方法です。ただし、いくつかのルールに従うことも必要です。プロジェクトでは、次の行為を行わないことを約束してください。"
                    },
                    "pii": {
                        "header": "$~個人情報",
                        "explanation": "$~個人を特定できる情報 (PII) を公開すると、クリエイターが危険にさらされる可能性があるため、PII の可能性があるものを検出し、クリエイターに機密データを削除するか、非機密としてマークするように警告します。\n\n以下は、非機密としてマークしたこのプロジェクト内の PII の可能性があるものの一覧です。その横にあるボタンをクリックして、再度機密としてマークできますが、これを行うと、プロジェクトはオンラインで保存されなくなります。"
                    }
                },
                "field": {
                    "emailOrUsername": {
                        "placeholder": "$~メールアドレスまたはユーザー名",
                        "description": "$~編集権限を与えたい人のメールアドレスまたはユーザー名"
                    }
                },
                "mode": {
                    "public": {
                        "label": "$~可視性",
                        "modes": ["$~プライベート", "$~公共"]
                    }
                },
                "error": {
                    "unknown": "$~このメールアドレスの作成者は不明です。",
                    "anonymous": "$~共有するにはログインする必要があります。"
                },
                "button": {
                    "submit": "$~このメールアドレスでプロジェクトを共有",
                    "sensitive": {
                        "tip": "$~このテキストを再度機密としてマークする",
                        "label": "$~センシティブ"
                    }
                },
                "options": {
                    "gallery": "$~ギャラリー選択"
                }
            },
            "settings": {
                "header": "$~設定",
                "explanation": "$~レイアウト、デバイス、テーマの設定を変更します。",
                "button": {
                    "show": "$~設定ダイアログを表示"
                },
                "mode": {
                    "layout": {
                        "label": "$~レイアウト",
                        "modes": ["$~自動", "$~水平", "$~垂直", "$~無料"]
                    },
                    "animate": {
                        "label": "$~アニメーション",
                        "modes": [
                            "$~アニメーションオフ",
                            "$~通常の速度",
                            "$~半分の速度",
                            "$~3速",
                            "$~1/4速"
                        ]
                    },
                    "dark": {
                        "label": "$~テーマ",
                        "modes": [
                            "$~明るい色",
                            "$~暗い色",
                            "$~デバイス設定を使用する"
                        ]
                    },
                    "space": {
                        "label": "$~スペースインジケータ",
                        "modes": [
                            "$~スペースとタブのインジケータを明示的に表示する",
                            "$~スペースとタブのインジケータを表示しない"
                        ]
                    },
                    "writing": {
                        "label": "$~文章レイアウト",
                        "modes": [
                            "$~水平、左から右",
                            "$~垂直、右から左",
                            "$~縦、左から右"
                        ]
                    },
                    "localized": {
                        "label": "$~コードのローカライズ",
                        "modes": [
                            "$~コードをローカライズしない",
                            "$~利用可能な場合はコードをローカライズする",
                            "$~コードをローカライズするがシンボルを優先する"
                        ]
                    },
                    "lines": {
                        "label": "$~行番号",
                        "modes": [
                            "$~テキストモードで行番号を表示する",
                            "$~テキストモードで行番号を表示しない"
                        ]
                    }
                },
                "options": {
                    "mic": "$~選択したマイク",
                    "camera": "$~選択したカメラ",
                    "face": "$~フォント"
                }
            },
            "locale": {
                "header": "$~言語",
                "explanation": "$~言語と地域を選択してください。",
                "subheader": {
                    "selected": "$~選択済み",
                    "supported": "$~利用可能",
                    "coming": "$~近日公開",
                    "help": "$~翻訳にご協力ください…"
                },
                "button": {
                    "show": "$~ロケールを変更する",
                    "add": "$~このロケールを追加",
                    "remove": "$~このロケールを削除",
                    "replace": "$~このロケールに置き換える"
                }
            },
            "help": {
                "header": "$~ショートカット",
                "explanation": "$~より効率的に編集するには、これらのキーボード コマンドを使用します。",
                "subheader": {
                    "moveCursor": "$~動く",
                    "editCode": "$~編集",
                    "insertCode": "$~入れる",
                    "debug": "$~デバッグ"
                }
            }
        },
        "palette": {
            "label": "$~パレット",
            "labels": {
                "mixed": "$~混合",
                "computed": "$~計算された",
                "default": "$~デフォルト",
                "inherited": "$~継承された",
                "notSequence": "$~シーケンスではない",
                "notContent": "$~コンテンツリストではありません",
                "format": "$~形式",
                "weight": "$~重さ",
                "light": "$~ライト",
                "normal": "$~普通",
                "bold": "$~大胆な",
                "extra": "$~余分な",
                "italic": "$~イタリック",
                "underline": "$~下線"
            },
            "button": {
                "revert": "$~デフォルトに戻す",
                "set": "$~このプロパティを編集する",
                "addPhrase": "$~この後にフレーズを追加",
                "addGroup": "$~この後にグループを追加",
                "addShape": "$~この後に図形を追加します",
                "addMotion": "$~モーションストリームに場所を設定する",
                "addPlacement": "$~場所をプレースメントストリームに設定する",
                "remove": "$~このコンテンツを削除する",
                "up": "$~このコンテンツを上に移動",
                "down": "$~このコンテンツを下に移動",
                "edit": "$~このコンテンツを編集する",
                "sequence": "$~シーケンスに変換",
                "createPhrase": "$~既存の値をテキストとして表示するフレーズを作成する",
                "createGroup": "$~既存のフレーズをラップしてグループを作成する",
                "createStage": "$~既存のグループまたはフレーズをラップしてステージを作成します"
            },
            "prompt": {
                "offerPhrase": "$~素晴らしい価値ができましたね！@Stage で紹介しましょうか？",
                "offerGroup": "$~素晴らしい @Phrase を作成しましたね。@Group にまとめて整理してみませんか?",
                "offerStage": "$~非常に優れたプログラムです。照明、色、フレームを制御するために私を追加してください。",
                "pauseToEdit": "$~ステージを⏸️すると、💬、🔳、🎭 を選択して編集できます。",
                "editing": "$~編集してください！"
            },
            "field": {
                "coordinate": "$~座標を編集",
                "text": "$~テキストを編集"
            },
            "sequence": {
                "button": {
                    "add": "$~ポーズを追加",
                    "remove": "$~ポーズを削除",
                    "up": "$~ポーズを上に動かす",
                    "down": "$~ポーズを下に移動"
                },
                "field": {
                    "percent": "$~編集パーセント"
                }
            }
        },
        "save": {
            "saving": "$~節約",
            "saved": "$~オンラインで保存",
            "local": "$~ブラウザに保存されました",
            "unsaved": "$~保存されていない"
        },
        "page": {
            "unknown": {
                "header": "$~きゃー！",
                "message": "$~ここはどこですか？家に帰ってもいいですか？"
            },
            "landing": {
                "value": "$~私たちと一緒に言葉、記号、絵文字、コードを使ってインタラクティブなストーリーを作りましょう!",
                "description": [
                    "$~Wordplay は、次のことを可能にするプログラミング言語です。",
                    "$~• 言葉や絵文字を楽しくアニメーション化します🤪",
                    "$~• 時間🕦、音🎤、ウェブサイト🔗、物理学🌎を活用しましょう",
                    "$~• 友達やグループ、誰とでもシェア🤝",
                    "$~• 世界中のあらゆる言語でコーディング可能 🌐",
                    "$~• マウス🖱️、タッチ👆、キーボード⌨️で編集します",
                    "$~• 前方デバッグ⏩および後方デバッグ⏪",
                    "$~• スクリーン 🖥️ とスクリーンリーダー 🔊 で表示",
                    "$~<University of Washington@https://ischool.uw.edu/> から永久に無料です。"
                ],
                "beta": [
                    "$~Wordplay はベータ版であるため、意図したとおりに動作しないか、不完全である可能性があります。バグの報告やアイデアの共有は <GitHub@https://github.com/wordplaydev/wordplay/issues> で、1.0 の計画については <https://github.com/wordplaydev/wordplay/milestones/1.0> を参照し、<contribute@https://github.com/wordplaydev/wordplay/wiki/contribute> で行ってください。"
                ],
                "link": {
                    "about": "$~この場所はなぜ存在するのでしょうか?",
                    "learn": "$~ドラマチックな登場人物たちと一緒に言語を学びましょう",
                    "guide": "$~言語リファレンスを検索して閲覧する",
                    "projects": "$~パフォーマンスを作成して共有する",
                    "galleries": "$~他の人のパフォーマンスを体験する",
                    "rights": "$~私たちとあなたの責任",
                    "community": {
                        "label": "$~コミュニティ",
                        "subtitle": "$~Discord でチャットしましょう。"
                    },
                    "contribute": {
                        "label": "$~貢献する",
                        "subtitle": "$~言葉遊びを作るのを手伝ってください。"
                    },
                    "teach": "$~生徒のクラスとプロジェクトを管理する"
                }
            },
            "learn": {
                "header": "$~学ぶ",
                "error": "$~この言語のチュートリアルは見つかりませんでした。",
                "button": {
                    "next": "$~ダイアログの次の一時停止",
                    "previous": "$~ダイアログの前の一時停止"
                },
                "options": {
                    "lesson": "$~現在のレッスン"
                }
            },
            "guide": {
                "header": "$~ガイド",
                "description": "$~これは、Wordplay プログラミング言語のあらゆる部分に関するリファレンスです。概念を検索するか、リストを参照して詳細を確認してください。"
            },
            "projects": {
                "header": "$~プロジェクト",
                "projectprompt": "$~何か言う準備はできましたか? プロジェクトを作成するか、プロジェクトに取り組んでください。行き詰まったら、<learning@://learn> を続けてください。",
                "archiveheader": "$~アーカイブ済み",
                "archiveprompt": "$~これらはアーカイブしたプロジェクトです。所有者のみがこれらを完全に削除またはアーカイブ解除できます。アーカイブされたプロジェクトは、最後に編集されてから 30 日後に完全に削除されます。",
                "galleriesheader": "$~ギャラリー",
                "galleryprompt": "$~ギャラリーを作成してキュレートし、プロジェクトのコレクションを他のユーザーと共有します。",
                "add": {
                    "header": "$~新しいプロジェクト",
                    "explanation": "$~新しいプロジェクトを作成するにはテンプレートを選択します。"
                },
                "button": {
                    "newproject": "$~新しいプロジェクト",
                    "editproject": "$~このプロジェクトを編集する",
                    "viewcode": "$~このプロジェクトのコードを見る",
                    "newgallery": "$~新しいギャラリー",
                    "unarchive": "$~このプロジェクトをアーカイブ解除する"
                },
                "confirm": {
                    "archive": {
                        "description": "$~このパフォーマンスをアーカイブする",
                        "prompt": "$~アーカイブ"
                    },
                    "delete": {
                        "description": "$~このパフォーマンスを完全に削除する",
                        "prompt": "$~永久に削除"
                    }
                },
                "error": {
                    "noaccess": "$~インターネットに接続できませんでした。",
                    "nogalleryedits": "$~ギャラリーを作成および変更するには、ログインする必要があります。",
                    "newgallery": "$~新しいギャラリーを作成できませんでした。",
                    "nodeletes": "$~アーカイブされたプロジェクトを削除するには、ログインする必要があります。",
                    "delete": "$~申し訳ありません。プロジェクトを削除できませんでした。"
                }
            },
            "galleries": {
                "header": "$~ギャラリー",
                "prompt": "$~これらは他の人が行ったパフォーマンスです。それらを体験し、研究し、またはあなた自身の表現に取り入れてください。",
                "examples": "ejemplos"
            },
            "about": {
                "header": "$~について",
                "content": [
                    "$~コーディングは、コンピューターとともに育った、英語が堪能で障害のない西洋人だけのものだと感じたことはありませんか?",
                    "$~ええ、私たちもです。",
                    "$~これは偶然ではありません。コンピューターの黎明期から、プログラミング言語は、ほとんど同じグループの人々によって設計され、構築されてきました。ほとんどは、米国とヨーロッパの学界と産業界に所属する白人、シスジェンダー、英語を話す男性と、数人の素晴らしい女性数学者です。彼らは、植民地時代後の、勝者がすべてを手に入れる時代に仕事をしており、プログラミング言語はその権力を確保するための重要なツールでした。",
                    "$~この歴史により、計算は主に速度、論理、利益、支配を重視するビジョンを持つようになりました。",
                    "$~これは不公平です。なぜなら、良くも悪くも、コンピューターは目に見える形でも目に見えない形でも、今や日常生活を支えており、それを使って創造できる人々は、その創造者に最も近い人々だからです。残りの人類は、この力に縛られ続けています。なぜなら、何か違うものを想像するには、言語の壁、アクセスの壁、経済の壁、公教育の不平等によって制限された読み書き能力が必要だからです。",
                    "$~*Wordplay* は、この状況を変える手助けをしたいと考えています。これは、グローバルに設計され、世界のすべての言語をサポートするだけでなく、世界の言語について語るプログラミング プラットフォームです。誰もが自分の能力を活かして作成し、誰でも体験できるインタラクティブなコンテンツを共有できるプラットフォームです。インタラクティブな言葉、絵文字、タイポグラフィを使って、遊び心と芸術性をもって自分を表現したい若者や若者向けです。自分の力を得ることが目的ではなく、私たちの美しい違いの驚くべき強さと必要性を認識する計算世界を創造することが目的です。",
                    "$~私たちは、このビジョンを実現しようとしているデザイナー、教育者、開発者のコミュニティです。私たちは有色人種、トランスジェンダー、クィア、障害者、移民、難民です。私たちは米国ワシントン州シアトルにある <ワシントン大学@https://washington.edu> <情報学校@https://ischool.uw.edu/> を拠点としています。この学校は、すべての人を歓迎し、今日も続く植民地主義による障害者差別と人種差別の破壊を撤回することを目指しています。このプログラミング言語とプラットフォームの作成は、その使命のほんの一部であり、すべての人が属するコンピューティングの未来を垣間見ることができます。",
                    "$~ご協力をお待ちしております。<how to contribute@https://github.com/wordplaydev/wordplay/wiki/contribute>、<donate@://donate> をご確認いただくか、<progress@https://github.com/amyjko/wordplay/milestones> を追跡してください。ご質問がある場合は、コミュニティ オーガナイザーの <Amy@https://amyjko.phd> までご連絡ください。"
                ]
            },
            "login": {
                "header": "$~ログイン",
                "anonymous": "$~ログイン",
                "prompt": {
                    "forgot": "$~*パスワードを忘れましたか?* 残念ながら、連絡先情報を収集していないため、アカウントを回復することはできません。",
                    "email": "$~メールのみのアカウントをお持ちですか? メールアドレスを送信してログインしてください。アカウントが関連付けられている場合は、サインイン リンクが記載されたメールが送信されます。プライバシー保護のため、新しいメールのみのアカウントはサポートされていません。",
                    "enter": "$~ログイン リンクは別のブラウザまたはデバイスから送信されたようです。本人確認のため、もう一度メール アドレスを入力してください。",
                    "tooyoung": "$~メールでログインするには 13 歳以上である必要があります。",
                    "passwordrule": "$~パスワードは 10 文字以上である必要があります。パスワード マネージャーを使用していない場合は、覚えやすい 3 つの長い単語を選択してください。",
                    "passwordreminder": "$~まだアカウントをお持ちでないようです。パスワードをもう一度入力し、回復できないため、安全かつ正しく保存されていることを確認してください。",
                    "play": "$~ログインしました。プロジェクトをオンラインで保存できるようになりました。何か作成してみませんか?",
                    "changeEmail": "$~メールアドレスを変更したいですか? 新しいメールアドレスを送信すると、古いメールアドレスに確認メールが送信されます。",
                    "changePassword": "$~パスワードを変更しますか? 新しいパスワードを送信して繰り返します。",
                    "logout": "$~共有デバイスを使用しており、プロジェクトを非公開にしておきたいですか? ログアウトすると、このデバイスから*プロジェクトが削除*されますが、オンライン上には保存されます。",
                    "sent": "$~このメールがアカウントに関連付けられている場合は、ログイン リンクが記載されたメールが届きます。表示されるまで数分かかる場合があります。このメールにアカウントが関連付けられていない場合は、何も届きません。",
                    "success": "$~アカウントが作成されました!",
                    "confirm": "$~新しいアドレスを確認するには、古いメール アドレスを確認してください。",
                    "delete": "$~ここで作成したものをすべて忘れてもいいですか? これは元に戻せません。",
                    "reallyDelete": "$~本当によろしいですか? アカウントと設定は直ちに削除され、プロジェクトは削除予定になります。プロジェクトの共同作業者は直ちにプロジェクトにアクセスできなくなります。メール アドレスまたはユーザー名を入力して、これが希望どおりであることを確認してください。",
                    "name": "$~他の人に自分を表現する絵文字を選びましょう。",
                    "login": "$~ログインしてプロジェクトを保存し、共同作業を行い、共有します。",
                    "join": "$~または、<create an account@://join> をクリックして開始します。"
                },
                "error": {
                    "expired": "$~このリンクは期限切れです。",
                    "invalid": "$~このリンクは無効です。",
                    "email": "$~このメールは無効です。",
                    "offline": "$~クラウド☁️に到達できませんでした。",
                    "failure": "$~ログインできません:(",
                    "unchanged": "$~メールアドレスを変更できませんでしたが、理由はわかりません。",
                    "delete": "$~アカウントを削除できませんでしたが、理由はわかりません。",
                    "wrongPassword": "$~有効なユーザー名とパスワードではありません。パスワードが間違っているか、他の誰かがこのユーザー名を使用しています。",
                    "tooMany": "$~ログインを何度も試みましたが失敗しました。再試行するにはしばらくお待ちください。"
                },
                "feedback": {
                    "changing": "$~新しいメールを送信しています...",
                    "deleting": "$~プロジェクトと設定を削除しています...",
                    "updatedPassword": "$~パスワードが更新されました。",
                    "match": "$~これはアカウントのユーザー名と一致する必要があります。"
                },
                "field": {
                    "email": {
                        "description": "$~ログインメールを編集",
                        "placeholder": "$~メール"
                    },
                    "username": {
                        "description": "$~ログインユーザー名、個人を特定できる情報は使用しないでください",
                        "placeholder": "$~ユーザー名"
                    },
                    "password": {
                        "description": "$~ログインパスワード、10文字以上",
                        "placeholder": "$~パスワード"
                    },
                    "currentPassword": {
                        "description": "$~現在のログインパスワード",
                        "placeholder": "$~現在のパスワード"
                    },
                    "newPassword": {
                        "description": "$~新しいパスワード",
                        "placeholder": "$~新しいパスワード"
                    }
                },
                "button": {
                    "logout": {
                        "tip": "$~アカウントからログアウトする",
                        "label": "$~ログアウト"
                    },
                    "login": "$~このメールでログインし、ログインリンクを送信します",
                    "updateEmail": "$~メールアドレスを変更する",
                    "updatePassword": "$~新しいパスワードを送信",
                    "delete": {
                        "tip": "$~アカウントを削除する",
                        "label": "$~データを削除してください…"
                    },
                    "reallyDelete": {
                        "tip": "$~アカウントを永久に削除する",
                        "label": "$~削除してください!!!"
                    }
                },
                "toggle": {
                    "reveal": {
                        "on": "$~パスワードを表示",
                        "off": "$~パスワードを隠す"
                    }
                },
                "subtitle": "$~保存、共同作業、共有"
            },
            "join": {
                "header": "$~参加する",
                "prompt": {
                    "create": "$~アカウントを作成して、プロジェクトを保存したり、他のユーザーと共同作業したり、作業を共有したりします。",
                    "username": "$~ユーザー名は 5 文字以上である必要があり、電子メールは使用できず、名前やその他の識別情報を含めることはできません。",
                    "password": "$~パスワードは 10 文字以上でなければなりません。パスワードを 2 回入力し、パスワード マネージャーなどの安全な場所に書き留めてください。連絡先情報を収集していないため、アカウントを紛失した場合、*アカウントを回復する方法はありません*。"
                }
            },
            "rights": {
                "header": "$~権利",
                "content": [
                    "$~こんにちは！",
                    "$~お客様の権利と当社の権利について、いくつかの期待を設定しましょう (<COPPA@https://www.ecfr.gov/current/title-16/chapter-I/subchapter-C/part-312> や <GDPR@https://gdpr.eu/compliance-checklist-us-companies/> などのポリシーも考慮します)。",
                    "$~まず最初に知っておいていただきたいのは、私たちは営利団体ではないということです。私たちは非営利の大学にあるコミュニティベースの研究プロジェクトです。私たちの目標は、皆さんに喜びをもたらし、より公平で公正なコンピューティングの世界についての発見に役立つプラットフォームを作成することです。私たちはこのプラットフォームで金儲けをするつもりはありません。私たちが集めたお金 (通常は公的資金による) は、プラットフォームを維持するために使われるものであり、プラットフォームで作業する人 (またはプラットフォームに貢献する人) を豊かにするために使われるものではありません。",
                    "$~私たちは利益を追求していないため、このプラットフォームの信頼性、可用性、寿命について約束することはできません。とはいえ、<Amy@https://amyjko.phd> はこれを長期的に維持することに尽力しており、終身在職権を持つ教授として、かなり安定した仕事に就いています。",
                    "$~それが*データ*につながります。私たちが収集してクラウドに保存する内容は次のとおりです。",
                    "$~• あなたの*プロジェクト*。プロジェクトに電話番号、メールアドレス、ユーザー名、納税者番号、住所などの個人を特定できる情報が含まれている場合を除き、あなたが投稿したプロジェクトとそれに対する変更を保存します。",
                    "$~• *設定*。これには選択した言語、アニメーションの設定、チュートリアルの進行状況が含まれます。その他すべてはデバイスにのみ保存されます。",
                    "$~• 集計された*アクティビティ*。当社はログインとお客様がアクセスしたページを追跡しますが、お客様を特定したり、サイト全体でお客様を追跡したり、他のサイトでお客様を追跡したりすることはできません。当社は Google Analytics を「同意拒否」モードで使用しており、Cookie を保存したり、IP アドレス情報を Google に送信したりすることなく、ページ ビューに関する最小限の非識別情報を収集します。当社はこの集計情報を使用して、プラットフォームの使用状況を報告し、資金調達に役立てています。",
                    "$~他には何も保存しません。<source@https://github.com/amyjko/wordplay/tree/main/src> は公開されているため、誰でもこれを確認でき、意図しない追跡を報告できます。",
                    "$~あなたのデータの所有者は私たちではなく、*あなた*です。つまり、",
                    "$~• プロジェクトにアクセスできるユーザーを制御できます。プロジェクトはデフォルトでは非公開ですが、個人やグループと共有したり、完全に公開したりできます。",
                    "$~• プロジェクトや自分のアカウントはいつでも完全に削除できます。",
                    "$~• いつでも任意のプロジェクトまたはアカウント全体のエクスポートを取得できます。",
                    "$~当社がお客様のデータをどのように使用するか、またどのように使用しないかは以下の通りです。",
                    "$~• 法律で明示的に要求されない限り、お客様のデータは誰とも共有されません。お客様のデータが当社の許可なく取得される可能性は常にあります (「データ侵害」)。このような事態が発生したことが判明した場合、お客様が当社に提供したメールを使用して、その旨をお客様に通知します。",
                    "$~• 1) 当社に連絡する必要があるアカウント変更を行った場合、2) 当社に連絡することに明示的に同意した場合、または 3) 上記のデータ侵害の場合を除き、当社はお客様の電子メール アドレスを通じてお客様に連絡することはありません。",
                    "$~• 当社は、プラットフォーム上のプロジェクトを分析して、各人が何をどのように作成しているかを把握することがあります。これらの集約された匿名化された洞察は、学術出版物で共有されることがあります。これは、米国連邦法で義務付けられているように、機関審査委員会の監督下でのみ行われます。",
                    "$~最後に、発言について注意点があります。このプラットフォームでは、*プライベート* であれば何でも発言できます。プロジェクトはデフォルトでプライベートに設定されており、特定のメール アドレスと共有した場合も、プライベートとみなされます。プライベート プロジェクトでは何も管理されません。",
                    "$~しかし、プロジェクトを「公開」したり、公開ギャラリーに含めたりすることは特権です。これは愛、肯定、尊敬、尊厳のために作られたプラットフォームです。したがって、あなたの「公開」コンテンツが以下のいずれにも該当しないことが期待されます。"
                ],
                "consequences": [
                    "$~これらのルールに違反するプロジェクトやギャラリーが見つかった場合、クリエイターが閲覧する前に警告するか、閲覧できないようにブロックします。これらのルールを繰り返し違反すると、公開投稿の権限を失います。"
                ]
            },
            "donate": {
                "header": "$~寄付する",
                "prompt": "$~帯域幅の支払いと、学生と教師の貢献者への報酬の支払いにご協力ください。",
                "content": [
                    "$~Wordplay は、<ワシントン大学@https://washington.edu> がサポートする無料のコミュニティ ベースのプロジェクトです。私たちは、アクセスしやすく、言語を包括した教育用プログラミング言語という私たちの使命を信じる人々からの寄付に頼っています。",
                    "$~現在のコストは次のとおりです。",
                    "$~• 私たちはワシントン大学の学部生、特に障害のある学生や母国語が英語でない学生に、プロジェクトの発展と維持のために報酬を支払います。これは私たちの費用の約 90% を占めます。",
                    "$~• 私たちは、多言語対応でアクセスしやすいカリキュラムの開発に協力する教師に給付金を支給します。",
                    "$~• 私たちは、<Firebase@https://firebase.google.com/> の帯域幅とストレージ、および <Workspace@https://workspace.google.com/> のサービスに対して Google に料金を支払います。",
                    "$~• 私たちは <Squarespace@https://www.squarespace.com/> にドメイン料金を毎年支払います。",
                    "$~現在のコストは、学年度中（36 週間）に学部生 5 名を 1 時間あたり 20 ドル、週 10 時間指導し、夏期（12 週間）に学部生 2 名を指導し、クラウド サービスも含めると、年間約 6 万ドルになります。",
                    "$~もし 2,400 人が年間 25 ドルを寄付すれば、現在の費用を賄うことができ、余剰分はより多くの学生や教師への報酬に充てられます。",
                    "$~あなたもその 2,400 人の 1 人になれますか? もしそうなら、ワシントン大学の寄付リンクはこちらです:"
                ]
            },
            "teach": {
                "header": "$~教える",
                "prompt": {
                    "none": "$~先生、ようこそ！クラスを作成して、生徒のアカウントとプロジェクト ギャラリーを設定および管理します。",
                    "some": "$~ようこそ先生！クラスを管理するか、新しいクラスを作成してください。"
                },
                "error": {
                    "offline": "$~あなたの教師ステータスを確認できません。",
                    "login": "$~クラスを管理するにはログインする必要があります。",
                    "teacher": "$~クラスを作成および管理するには、教師権限が必要です。このフォームに記入して、お互いを知りましょう。"
                },
                "link": {
                    "request": "$~教師権限をリクエストする",
                    "new": "$~クラスを作成する"
                }
            },
            "newclass": {
                "header": "$~新しいクラス",
                "subheader": {
                    "class": "$~あなたのクラス",
                    "students": "$~あなたの生徒",
                    "credentials": "$~ユーザー名とパスワード",
                    "submit": "$~提出する"
                },
                "prompt": {
                    "start": "$~クラスを作成すると、クラスの生徒全員にアカウントが生成され、生徒全員がプロジェクトを追加できるギャラリーを作成できます。生徒が既にアカウントを持っている場合は、後で追加できます。",
                    "review": "$~作成したユーザー名とパスワードを確認してください。続行する前にそれらを*編集*しますか? 編集すると、上記の学生情報を編集できなくなります。",
                    "ready": "$~上記の認証情報を生成する準備ができたらお知らせください。生成後は編集できます。",
                    "pending": "$~ユーザー名とパスワードを生成しています...",
                    "submit": "$~送信する準備はできましたか? 送信が完了すると、この情報のダウンロードが送信されます。パスワードは*回復できません*ので、安全な場所に保管してください。",
                    "submitting": "$~上記のユーザー名とパスワードを使用して新しいアカウントをリクエストしています...",
                    "download": "$~クラスの準備ができました。ダウンロード フォルダーに生徒データのダウンロードが表示されます。*パスワードは回復できません*ので、このファイルを安全な場所に保管してください。"
                },
                "field": {
                    "name": {
                        "description": "$~クラス名",
                        "placeholder": "$~短い名前"
                    },
                    "description": {
                        "description": "$~説明",
                        "placeholder": "$~あなたと生徒のためのクラスの説明。"
                    },
                    "existing": {
                        "label": "$~アカウントを持つ学生",
                        "prompt": "$~生徒の中にすでに Wordplay アカウントを持っている人がいますか? ここにそのアカウントを含めてください。"
                    },
                    "metadata": {
                        "description": "$~学生情報",
                        "placeholder": "$~例：学生ID、姓、名",
                        "prompt": "$~生徒用の新しいアカウントを作成したいですか? 生徒に関する *任意の情報* を 1 行に 1 つずつ、カンマで区切って入力してください。姓、名、生徒番号、その他の識別情報などです。これを使用して、以下で編集できるユーザー名を生成し、ユーザー名を学習者に関連付けるのに役立ちます。"
                    },
                    "words": {
                        "description": "$~パスワードに使用する単語",
                        "placeholder": "$~例えば、cat dot rat...",
                        "prompt": "$~少なくとも *25 語* を用意し、2 ～ 3 語の覚えやすいパスワードをランダムに生成します。生徒が知っている単語を選択するか、単語をブレインストーミングしてもらいます。ランダムであればあるほど、より安全です。"
                    },
                    "generate": {
                        "label": "$~生成する",
                        "tip": "$~上記の情報に基づいてユーザー名とパスワードを作成します。"
                    },
                    "edit": {
                        "label": "$~編集",
                        "tip": "$~生成された学生情報を編集する"
                    },
                    "submit": {
                        "label": "$~クラスを作成する",
                        "tip": "$~この情報を使用して新しいクラスを作成します。"
                    }
                },
                "error": {
                    "duplicates": "$~学生情報に重複したエントリがあります。",
                    "columns": "$~各生徒の列数が同じであることを確認します。",
                    "generate": "$~一意のユーザー名を作成できません。",
                    "taken": "$~上記のユーザー名の1つ以上は使用されています",
                    "limit": "$~一度に 35 人以上の生徒のクラスを作成することはできません。",
                    "words": "$~少なくとも 25 語を入力してください。",
                    "account": "$~一部のアカウントを作成できません。",
                    "generic": "$~クラスを作成できませんでした。開発者が問題の原因を突き止めるのに役立つ情報を以下に示します。"
                }
            },
            "class": {
                "header": "$~クラス",
                "subheader": {
                    "teachers": "$~教師",
                    "students": "$~学生",
                    "galleries": "$~ギャラリー"
                },
                "prompt": {
                    "gallery": "$~課題やプロジェクトを整理するために、クラスのギャラリーを作成します。プロジェクトのすべての教師がギャラリー キュレーターとなり、すべての生徒がギャラリー作成者となります。",
                    "delete": "$~このクラスを削除すると、クラスに関する情報だけでなく、そのプロジェクト、ギャラリー、または生徒アカウントも完全に削除されます。"
                },
                "field": {
                    "name": {
                        "description": "$~クラス名",
                        "placeholder": "$~名前"
                    },
                    "description": {
                        "description": "$~クラスの説明",
                        "placeholder": "$~説明"
                    },
                    "newteacher": {
                        "placeholder": "$~メールアドレスまたはユーザー名",
                        "description": "$~このクラスへの教師アクセスを許可したい作成者のメールアドレスまたはユーザー名"
                    },
                    "addteacher": "$~このクラスに教師を追加する",
                    "delete": {
                        "tip": "$~このクラスを永久に削除します。",
                        "label": "$~このクラスを削除する"
                    }
                },
                "error": {
                    "notfound": "$~このクラスが見つからないか、表示する権限がありません。"
                }
            }
        },
        "edit": {
            "node": "$~$1$2[, タイプ $2|]",
            "before": "$~$1前[$1|終了]",
            "inside": "$~$1、$2[$2|開始]から$3[$3|終了]の間",
            "between": "$~1ドルから2ドルの間",
            "line": "$~$1[$1|開始]と$2[$2|終了]の間に空行があります",
            "conflicts": "$~$1 の競合",
            "assign": "$~/$2[参加希望|退会検討中]…/",
            "append": "$~/挿入したくて…/",
            "remove": "$~/退職を検討中…/",
            "replace": "$~/介入したい…/",
            "wrap": "$~括弧で囲む",
            "unwrap": "$~開封する",
            "bind": "$~この表現に名前を付ける"
        },
        "template": {
            "unwritten": "$~未定",
            "unparsable": "$~解析できないテンプレート: $1"
        },
        "collaborate": {
            "label": "$~協力する",
            "role": {
                "owner": "$~所有者",
                "collaborators": "$~協力者",
                "curators": "$~キュレーター"
            },
            "field": {
                "message": {
                    "description": "$~送信するチャットメッセージ",
                    "placeholder": "$~メッセージを入力してください"
                }
            },
            "button": {
                "submit": {
                    "label": "$~送信",
                    "tip": "$~共同作業者にメッセージを送信する"
                },
                "start": {
                    "label": "$~チャットを始める",
                    "tip": "$~自分自身または他の人と議論を始めましょう。"
                },
                "delete": "$~このメッセージを削除"
            },
            "error": {
                "unowned": "$~このプロジェクトには所有者がいないため、チャットを行うことはできません。",
                "offline": "$~このチャットを読み込めません。",
                "empty": "$~メッセージはありません。",
                "deleted": "$~このメッセージは削除されました。"
            },
            "prompt": {
                "solo": "$~自分自身とチャットしたり、編集やチャットができる共同編集者を追加したりできます。",
                "owner": "$~共同作業者はこのプロジェクトを編集し、それについてチャットすることができます。",
                "collaborator": "$~あなたは共同作業者です。このプロジェクトを編集したり、チャットしたりできます。",
                "curator": "$~あなたはこのプロジェクトのギャラリーのキュレーターです。このプロジェクトを編集したり、それについてチャットしたりできます。"
            }
        },
        "checkpoints": {
            "label": {
                "now": "$~今",
                "history": "$~復元する",
                "restore": "$~これはこのプロジェクトの以前のバージョンです。",
                "ago": "$~$1 $2 前"
            },
            "button": {
                "clear": "$~履歴を削除",
                "select": "$~このバージョンを表示",
                "checkpoint": "$~このバージョンのプロジェクトを保存する",
                "back": "$~前のバージョンに戻る",
                "forward": "$~次のバージョンに戻る",
                "restore": "$~このバージョンを復元する",
                "now": "$~現在のバージョンに戻る"
            }
        }
    },
    "moderation": {
        "warning": {
            "header": "$~警告",
            "explanation": "$~モデレーターは、このコンテンツが以下の可能性があると判断しました:"
        },
        "blocked": {
            "header": "$~ブロックされました",
            "explanation": "$~モデレーターは、このコンテンツが以下の可能性があると判断しました:"
        },
        "unmoderated": {
            "header": "$~注記",
            "explanation": "$~このコンテンツはまだモデレートされていません。次の可能性があります:"
        },
        "moderate": {
            "header": "$~適度",
            "explanation": "$~このプロジェクトを確認し、そのコンテンツが次のいずれかに該当するかどうかを判断します。該当する場合、コンテンツは警告されるかブロックされます。不明な場合はスキップできます。"
        },
        "flags": {
            "violence": "$~誰かに対する暴力、危害、または自傷行為を扇動、奨励、または称賛すること。",
            "dehumanization": "$~人種、民族、国籍、カースト、性的指向、性別、宗教、年齢、能力、または外見に基づいて個人またはグループを非人間化すること。",
            "disclosure": "$~名前、連絡先、住所など他人の個人情報を漏らす",
            "misinformation": "$~虚偽、誤解を招く、欺瞞的、または操作的な情報を含む"
        },
        "progress": "$~*$1* がモデレート済み、*$2* が残り",
        "button": {
            "submit": {
                "tip": "$~これらのモデレーション設定を保存する",
                "label": "$~保存"
            },
            "skip": {
                "tip": "$~このプロジェクトをスキップ",
                "label": "$~スキップ"
            }
        }
    },
    "gallery": {
        "games": {
            "name": "$~ゲーム",
            "description": "$~単語と記号を使ったインタラクティブなゲーム。"
        },
        "visualizations": {
            "name": "$~視覚化",
            "description": "$~テキストによる視覚化。"
        },
        "motion": {
            "name": "$~モーション",
            "description": "$~移動と衝突の例。"
        },
        "av": {
            "name": "$~オーディオ/ビデオ",
            "description": "$~音量、ピッチ、ビデオを入力として使用します。"
        },
        "tools": {
            "name": "$~ツール",
            "description": "$~シンプルなユーティリティとアプリケーション。"
        }
    }
}
