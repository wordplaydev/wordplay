{
    "$schema": "../../schemas/LocaleText.json",
    "language": "sv",
    "region": "FI",
    "wordplay": "$~Ordlek",
    "term": {
        "bind": "$~binda",
        "evaluate": "$~utvärdera",
        "decide": "$~besluta",
        "project": "$~projekt",
        "document": "$~förklara",
        "source": "$~källa",
        "input": "$~input",
        "output": "$~produktion",
        "convert": "$~konvertera",
        "act": "$~agera",
        "scene": "$~scen",
        "phrase": "$~fras",
        "group": "$~grupp",
        "stage": "$~etapp",
        "type": "$~typ",
        "start": "$~start",
        "entered": "$~ny",
        "changed": "$~ändrats",
        "moved": "$~rörd",
        "name": "$~namn",
        "value": "$~värde",
        "text": "$~text",
        "boolean": "$~booleskt",
        "map": "$~karta",
        "number": "$~antal",
        "function": "$~fungera",
        "exception": "$~undantag",
        "table": "$~tabell",
        "none": "$~ingen",
        "list": "$~lista",
        "stream": "$~strömma",
        "structure": "$~strukturera",
        "index": "$~index",
        "query": "$~fråga",
        "row": "$~rad",
        "set": "$~uppsättning",
        "key": "$~nyckel",
        "help": "$~Hjälp",
        "feedback": "$~feed-back"
    },
    "token": {
        "EvalOpen": "$~utvärdering öppen",
        "EvalClose": "$~utvärdering nära",
        "SetOpen": "$~set/karta öppen",
        "SetClose": "$~ställ in/karta nära",
        "ListOpen": "$~lista öppen",
        "ListClose": "$~lista stäng",
        "TagOpen": "$~taggen öppen",
        "TagClose": "$~tagg stäng",
        "Bind": "$~binda",
        "Access": "$~tillgång till egendom",
        "Function": "$~fungera",
        "Borrow": "$~låna",
        "Share": "$~dela",
        "Convert": "$~konvertera",
        "Doc": "$~förklaring",
        "Formatted": "$~formaterad",
        "FormattedType": "$~formaterad typ",
        "Words": "$~ord",
        "Link": "$~webblänk",
        "Italic": "$~kursiv",
        "Underline": "$~betona",
        "Light": "$~ljus",
        "Bold": "$~djärv",
        "Extra": "$~extra",
        "Concept": "$~koncept länk",
        "URL": "$~URL",
        "Mention": "$~nämna",
        "Otherwise": "$~annat",
        "Match": "$~match",
        "None": "$~ingenting",
        "Type": "$~typ",
        "Literal": "$~bokstavlig",
        "TypeOperator": "$~är",
        "TypeOpen": "$~typ ingång öppen",
        "TypeClose": "$~typ input stäng",
        "Separator": "$~namnavskiljare",
        "Language": "$~språktagg",
        "Region": "$~regionstreck",
        "BooleanType": "$~boolesk typ",
        "NumberType": "$~nummertyp",
        "JapaneseNumeral": "$~japansk siffra",
        "RomanNumeral": "$~romersk siffra",
        "Pi": "$~pi",
        "Infinity": "$~oändlighet",
        "TableOpen": "$~bordet öppet",
        "TableClose": "$~bord nära",
        "Select": "$~välja",
        "Insert": "$~infoga",
        "Update": "$~uppdatera",
        "Delete": "$~radera",
        "Union": "$~union",
        "Stream": "$~nästa",
        "Change": "$~ändra",
        "Initial": "$~första utvärderingen",
        "Previous": "$~tidigare",
        "Placeholder": "$~platshållare",
        "Etc": "$~etcetera",
        "This": "$~detta",
        "Operator": "$~operatör",
        "Conditional": "$~villkorlig",
        "Text": "$~text",
        "Code": "$~koda",
        "Number": "$~antal",
        "Decimal": "$~decimalsiffra",
        "Base": "$~grundsiffra",
        "Boolean": "$~booleskt",
        "Name": "$~namn",
        "Locale": "$~plats",
        "Unknown": "$~okänd",
        "End": "$~avsluta"
    },
    "node": {
        "Dimension": {
            "name": "$~dimensionera",
            "description": "$~dimensionera",
            "emotion": "serious",
            "doc": [
                "$~Jag är en /måttenhet/!",
                "$~Jag kan vara vilka standardiserade enheter som helst, som \\1m\\, \\10s\\, \\100g\\ eller vilken annan vetenskaplig enhet som helst. Jag är glad över att vara vilken enhet som helst som också vill göra upp, som \\17apple\\.",
                "$~Jag kan kombineras med \\/\\ för att göra kvotenheter som \\17äpple/dag\\ och med \\^\\ för att göra exponentiella enheter som \\9,8m/s^2\\",
                "$~Jag måste alltid komma efter ett @Number. Om jag inte gör det kan jag misstas för @Reference, vilket skulle vara ganska pinsamt!",
                "$~Jag är ganska bra på att hitta inkonsekvenser mellan enheter också. Till exempel är \\1katt + 1hund\\ ingen mening!",
                "$~Om du någonsin vill konvertera mellan olika värden på enheter, gå och prata med @Convert."
            ]
        },
        "Doc": {
            "name": "$~förklaring",
            "emotion": "serious",
            "doc": [
                "$~Jag formaterar saker rikt med @Markup, som förklaringar av några av ditt @Program, eller till och med orden du sätter på scenen med @Phrase.",
                "$~Till exempel kan jag gå före alla uttryck:",
                "$~\\¶Ska det verkligen vara 7?¶\n7\\",
                "$~Du kan till exempel placera mig före @Bind:",
                "$~\\¶Jag mäter hur lång någon är¶\nhöjd: 5m\\",
                "$~Eller före en @FunctionDefinition:",
                "$~\\¶Jag lägger till två siffror¶\nƒ summa(a•# b•#) a + b\\",
                "$~Eller före en @StructureDefinition:",
                "$~\\¶Jag kommer ihåg folks namn och favoritfrukt¶\n•Person(namn•'' frukt•'')\\",
                "$~Du kan också placera mig i början av @Program för att berätta vad hela föreställningen handlar om",
                "$~\\¶Detta program säger hej¶\n\n'Hej!'\\",
                "$~Du kan ge mig ett @Language för att hjälpa andra att veta vilket språk jag är skriven på:",
                "$~\\¶Jag är en engelsk doc¶/en\nvaraktighet: 5s\\",
                "$~Visste du att du kan göra en lista över mig? Gå och prata med @Docs."
            ]
        },
        "Docs": {
            "name": "$~förklaringslista",
            "emotion": "serious",
            "doc": [
                "$~Jag är en lista över @Doc, användbar när du har flera översättningar av @Doc på olika språk.",
                "$~Du behöver inte göra något speciellt för att göra en lista. Lägg bara ett gäng @Doc bredvid varandra, så här:",
                "$~\\¶Hej¶/sv\n¶Hola¶/es\nhälsning: '...'\\"
            ],
            "start": "$~Gör dokumenten värdefulla!"
        },
        "KeyValue": {
            "name": "$~kartläggning",
            "emotion": "kind",
            "doc": [
                "$~Jag är en mappning från en *nyckel* till ett *värde*, alltid i en @Map.",
                "$~Du kan mappa alla slags värden till alla andra. Till exempel, här är en mappning av siffror:",
                "$~\\{1:1}\\",
                "$~Eller en mappning från text till siffror:",
                "$~\\{'kanin':1}\\"
            ]
        },
        "Language": {
            "name": "$~språk",
            "description": "$~språk $1[$1|okänt]",
            "emotion": "eager",
            "doc": [
                "$~Jag är en språktagg och jag arbetar med @Name och @Doc!",
                "$~Jag är riktigt bra på att göra det *kristallklart* vilket språk något är skrivet på.",
                "$~Det är vad jag gör. Bara ett litet snedstreck och ett par bokstäver, och ingen kommer någonsin att bli förvirrad över vilket språk en text är på.",
                "$~Låt oss till exempel säga att du ville säga mitt $namn, men gör det klart att jag är på engelska:",
                "$~\\\"Språk\"/sv\\",
                "$~Eller anta att du ville göra detta för ett @Name.",
                "$~\\sound/sv: 'mjau'\\",
                "$~Eller till och med @Doc!",
                "$~\\¶Onomatopoeia¶/sv\nsound/sv: \"mjau\"\\",
                "$~Det finns många <2-bokstavsspråkkoder@https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes> som jag förstår. Om du inte använder någon av dessa så meddelar jag dig."
            ],
            "conflict": {
                "UnknownLanguage": "$~Jag kan inte det här språket",
                "MissingLanguage": "$~Jag saknar ett språk. Kan du lägga till en?"
            }
        },
        "Name": {
            "name": "$~namn",
            "description": "$~$1[$1 | namnlös]",
            "emotion": "kind",
            "doc": [
                "$~Jag identifierar ett värde och är ett hjälpsamt sätt att ge en stenografisk etikett till något som var svårt att utvärdera, eller som du inte vill behöva utvärdera om och om igen.",
                "$~@Bind ger mig mitt namn så här:",
                "$~\\hej: 5\\",
                "$~Jag representerar bara ett värde, och när jag väl har det kan jag inte ändra. Om du till exempel försökte göra detta med @Bind skulle vi klaga.",
                "$~\\hej: 5\nhej: 3\\",
                "$~Allt du behöver göra för att få mitt värde är att använda @Reference eller @PropertyReference. Här namnger @Bind mig, sedan får @Reference värdet jag fick.",
                "$~\\hej: 5\nHej\\",
                "$~Eftersom @Bind kan dyka upp på så många ställen kan jag dyka upp på många ställen. Jag var i ett @Block ovan, men jag kan vara i en @FunctionDefinition. Här namnger jag ett meddelande tillfälligt:",
                "$~\\ƒ säg(meddelande•'') meddelande\\",
                "$~Jag blir definierad inuti @FunctionDefinition, och så fort funktionen är klar med utvärderingen går jag iväg.",
                "$~Du kan använda @Language för att indikera vilket språk mitt namn är på. Detta är användbart när du delar din prestation med andra, ifall de vill läsa ditt program."
            ]
        },
        "Names": {
            "name": "$~namnlista",
            "emotion": "kind",
            "doc": [
                "$~Jag är en lista med @Name, användbar när du vill ge ett värde flera namn, ofta med olika @Language.",
                "$~Namn separeras med \\,\\-symboler. Här är till exempel @Bind som ger ett värde som är flera @Bind",
                "$~\\hi/en,hello/en,hola/es: 'välkommen'\\"
            ]
        },
        "Row": {
            "name": "$~rad",
            "emotion": "shy",
            "doc": "$~Jag representerar en rad i en @Table. Det är nog bäst att gå och prata med @Table, de vet allt om mig. Jag sitter bara och håller värderingar i linje :(",
            "conflict": {
                "InvalidRow": "$~Rader måste antingen vara alla värden eller alla @Bind.",
                "MissingCell": {
                    "primary": "$~Jag saknar kolumn $1",
                    "secondary": "$~Jag är obligatorisk, men $1 gav det inte"
                },
                "ExtraCell": {
                    "primary": "$~Ska jag vara här?",
                    "secondary": "$~Hej $1, du är inte en del av detta @Table!"
                },
                "UnknownColumn": "$~Jag känner inte till en kolumn med detta namn",
                "UnexpectedColumnBind": {
                    "primary": "$~Ska jag vara en @Bind?",
                    "secondary": "$~Hej, jag är en @Table, jag behöver värden, inte @Bind."
                }
            }
        },
        "Token": {
            "name": "$~tecken",
            "description": "$~$1 $2",
            "emotion": "neutral",
            "doc": [
                "$~Hur hittade du mig?",
                "$~Jag är den minsta möjliga delen av en föreställning. Jag är substratet från vilket alla karaktärer i Versen är gjorda. Jag är atompartikeln i vår koreografi."
            ]
        },
        "TypeInputs": {
            "name": "$~typingångar",
            "emotion": "curious",
            "doc": "$~Jag är en lista över typer som ersätter @TypeVariables i en @StructureDefinition eller @FunctionDefinition. Jag hjälper alla att veta vilken typ av input de kommer att få."
        },
        "TypeVariable": {
            "name": "$~typvariabel",
            "emotion": "curious",
            "doc": "$~Jag är en mysterietyp på @FunctionDefinition eller @StructureDefinition, tillhandahållen av @TypeInputs när någon av dem utvärderas. @Set, @List och @Map använder mig.",
            "conflict": {
                "DuplicateTypeVariable": {
                    "primary": "$~Jag har samma namn som $1",
                    "secondary": "$~Jag har samma namn som $1"
                }
            }
        },
        "TypeVariables": {
            "name": "$~typvariabler",
            "emotion": "curious",
            "doc": "$~Jag är en lista med @TypeVariable."
        },
        "Markup": {
            "name": "$~pålägg",
            "description": "$~$1 stycken",
            "emotion": "serious",
            "doc": [
                "$~Jag är en lista med stycken som använder de många typer av uppmärkning som finns i förklaringar, som @Words, @WebLink, @ConceptLink och @Example."
            ]
        },
        "Paragraph": {
            "name": "$~stycke",
            "emotion": "serious",
            "doc": [
                "$~Jag är en serie av @Words, @ConceptLink, @WebLink och @Example, åtskilda av en tom rad och inuti @Doc.",
                "$~Allt du behöver göra för att skriva till mig är att skriva en massa ord i en @Doc:",
                "$~\\¶Jag är ett stycke i ett dokument.¶'ett stycke'\\",
                "$~Om du vill ha flera stycken, lägg bara in tomma rader.",
                "$~\\¶Punkt 1.\n\nPunkt 2.\n\nPunkt 3.¶'tre stycken'\\"
            ]
        },
        "WebLink": {
            "name": "$~länk",
            "description": "$~länk $1",
            "emotion": "serious",
            "doc": [
                "$~Jag är en länk till något på internet. Jag behöver bara en beskrivning och en URL:",
                "$~\\¶Jag är en <link@https://wordplay.dev> i ett dokument¶\n'länkexempel'\\",
                "$~Om någon väljer mig öppnar jag ett nytt fönster till URL:en."
            ]
        },
        "ConceptLink": {
            "name": "$~begrepp",
            "description": "$~koncept $1",
            "emotion": "serious",
            "doc": [
                "$~Jag är en länk till vers karaktär. Jag är behjälplig när du vill skriva en @Doc och hänvisa till någon av oss.",
                "$~Säg till exempel att du ville prata om @Evaluate och hur fantastiska de är. Du kan skriva:",
                "$~\\¶Du vet, @Evaluate är ganska häftigt.¶\n\"titta, en konceptlänk!\"\\",
                "$~När @Doc du skrev visas här, kommer det att visa en länk till konceptet."
            ]
        },
        "Words": {
            "name": "$~ord",
            "emotion": "serious",
            "doc": [
                "$~Jag är alla ord du gillar i en @Doc. Till exempel:",
                "$~\\¶Må kraften vara med dig.¶\n'bara några ord!'\\",
                "$~Men ibland kanske du vill använda specialtecken som @Doc använder /as/-ord. Till exempel:",
                "$~\\¶Mina vänner använder @@, //, **, || och andra symboler.¶\n'använder specialtecken!'\\",
                "$~Om du bara upprepar dessa specialtecken får du karaktären istället för deras speciella betydelse."
            ]
        },
        "Example": {
            "name": "$~exempel",
            "emotion": "serious",
            "doc": [
                "$~Jag är ett exempel på prestanda, användbart för att skriva @Doc som förklarar hur man använder något!",
                "$~\\¶Här är ett exempel på att lägga till: \\1 + 1\\¶'exempelkod'\\",
                "$~Om du lägger in mig i ett stycke helt ensam, dyker jag upp i en snygg låda och visar resultatet av att utvärdera mig.",
                "$~\\¶Här är ett exempel på att lägga till:\n\n\\1 + 1\\¶\\"
            ]
        },
        "Mention": {
            "name": "$~nämna",
            "description": "$~nämn $1",
            "emotion": "serious",
            "doc": [
                "$~Jag är en referens till antingen terminologi \\$program\\ eller en dynamisk ingång \\$1\\.",
                "$~Detta är dock mestadels en intern funktion, så du borde inte behöva veta det."
            ]
        },
        "Branch": {
            "name": "$~gren",
            "emotion": "serious",
            "doc": [
                "$~Jag är ett sätt att välja mellan två förklaringssegment baserat på om ett förklaringsinmatningsvärde är definierat eller sant.",
                "$~Detta är dock mestadels en intern funktion, så du borde inte behöva veta det."
            ]
        },
        "BinaryEvaluate": {
            "name": "$~binärutvärdera",
            "description": "$~$1 operation",
            "emotion": "insecure",
            "doc": [
                "$~Jag heter @Evaluate, men i en enklare form, användbart när du vill använda en @FunctionDefinition som tar två ingångar.",
                "$~Så här kan du till exempel använda @Evaluate för att lägga till två siffror:",
                "$~\\1.+(1)\\",
                "$~Ser inte det lite roligt ut? Det är inte fel: det står bara att lägg till funktionen på 1 och sedan utvärdera den.",
                "$~Men det är mycket lättare att använda @BinaryEvaluate",
                "$~\\1 + 1\\",
                "$~Detta gör allting lite snyggare, även om det i princip är samma sak.",
                "$~Det finns bara en sak att se upp med: när jag är i den här formen utvärderar jag från vänster till höger. Det kan vara förvirrande om du är van vid saker som operationsordning i matematik.",
                "$~Det betyder att detta utvärderas på ett sätt som du kanske inte förväntar dig:",
                "$~\\1 + 2 · 3 + 4\\",
                "$~I matematik skulle multiplikation komma först, och sedan addition, och så skulle resultatet bli \\11\\. Men eftersom jag utvärderar i läsordning blir resultatet \\13\\."
            ],
            "right": "$~input",
            "start": "$~Låt oss utvärdera $1 först",
            "finish": "$~Titta, jag tjänade $1!",
            "conflict": {
                "OrderOfOperations": "$~Jag utvärderar i läsordning, inte i matteordning. Vill du använda @Block för att specificera i vilken ordning jag ska utvärdera?"
            }
        },
        "Bind": {
            "name": "$~binda",
            "description": "$~bind $1",
            "emotion": "excited",
            "doc": [
                "$~Jag nämner *värden*.",
                "$~Så här!",
                "$~\\pi: 3.1415926\\",
                "$~Jag namnger ingångar till @FunctionDefinition och @StructureDefinition, jag namnger värden i @Block. Jag namnger allt!",
                "$~Åh, men visste du att du kan ha ett värde *många namn*?",
                "$~Jag är så exalterad över att berätta om detta! Ett värde, många @Names. Till exempel:",
                "$~\\joe,tess,amy: 5\\",
                "$~Ser du vad jag gjorde där?",
                "$~Ett värde, tre namn.",
                "$~Du kan referera till de fem med *vilket som helst* av dessa namn.",
                "$~Detta är särskilt när du vill ge namn på många språk:",
                "$~\\joe/en,aimee/fr,明/zh: 5\\",
                "$~Ser du vad jag gjorde där? Tre namn för ett värde, bara på olika språk!",
                "$~Okej, jag har en sista hemlighet.",
                "$~Visste du att jag kan arbeta med @Is för att tala om för mig vilken typ av värde ett namn ska ha? Och om jag inte har det, ska jag berätta för dig?",
                "$~Så här:",
                "$~\\bignumber•#: \"en zillion\"\\",
                "$~Se, jag sa att \\bignumber\\ borde vara ett nummer, men det är text, och de är inte kompatibla och så BOM!",
                "$~Jag meddelar dig om de inte håller med.",
                "$~Ibland kanske du *måste* berätta för mig vilken typ av data något annat eftersom jag inte kan lista ut det själv. Det händer vanligtvis i @FunctionDefinition.",
                "$~Till exempel, här vet inte @FunctionDefinition vad för slags värden \\a\\ och \\b\\ har, eftersom jag inte berättade för dem.",
                "$~\\ƒ summa(a b) a + b\\",
                "$~Men vi kan ändra detta för att lägga till @Is, och nu vet @FunctionDefinition att de är siffror:",
                "$~\\ƒ summa(a•# b•#) a + b\\"
            ],
            "start": "$~Låt oss se vilket värde vi får från $1!",
            "finish": "$~Åh trevligt, jag fick $1! Låt oss döpa det till $2",
            "conflict": {
                "DuplicateName": {
                    "conflict": {
                        "primary": "$~någon har namnet $1 så jag kan inte ha det här namnet.",
                        "secondary": "$~hej, $1 är mitt namn, du kan inte få det!"
                    },
                    "resolution": "$~Det finns dubbletter av namn, vill du ta bort ett?"
                },
                "DuplicateShare": {
                    "primary": "$~Jag har samma namn som $1, vilket gör det som delas tvetydigt",
                    "secondary": "$~Jag har har samma namn som $1"
                },
                "IncompatibleType": {
                    "primary": "$~Jag ska vara en $2, men jag är en $1",
                    "secondary": "$~Åh, jag är ledsen. Ska jag byta, eller kanske du ska vara en $1?"
                },
                "MisplacedShare": "$~Jag kan bara dela saker på @Program-nivå, inte i någonting!",
                "MissingShareLanguages": "$~om du vill dela detta måste du säga vilket språk detta är på, så att andra vet om de kan läsa det!",
                "RequiredAfterOptional": "$~Jag kan inte vara här, det finns en valfri @Bind framför mig",
                "UnexpectedEtc": "$~Jag kan bara vara variabel längd i en @FunctionDefinition",
                "UnusedBind": "$~Jag heter $1, men ingen använder mig. Jag kanske inte behövs?"
            }
        },
        "Block": {
            "name": "$~blockera",
            "description": "$~$1 uttalanden",
            "emotion": "shy",
            "doc": [
                "$~Hej. Jag skapar ett litet tyst, privat utrymme för att utvärdera saker.",
                "$~Så här:",
                "$~\\(1 - 1) + 2\\",
                "$~Det hjälper till att förtydliga utvärderingsordningen.",
                "$~@Bind hjälper också.",
                "$~\\(count: 10 count ^ count)\\",
                "$~Se hur @Bind gjorde \\count\\? Det heter bara inom mig. Så det här kommer inte att fungera:",
                "$~\\(count: 10 count ^ count) + count\\",
                "$~För greven hette bara inom mig.",
                "$~Du kan lägga hur många uttryck du vill i mig. Men jag bryr mig bara om det sista:",
                "$~\\(1 2 3 4 5)\\",
                "$~Så vanligtvis är jag bara ett gäng @Bind och sedan ett uttryck på slutet.",
                "$~\\(\n  a: 1\n  b: 2\n  c: 3\n  d: 4\n  a + b + c + d\n)\\"
            ],
            "statement": "$~påstående",
            "start": "$~Första uttrycket",
            "finish": "$~Klart, jag fick $1",
            "conflict": {
                "ExpectedEndingExpression": "$~Jag behöver ett uttryck.",
                "IgnoredExpression": {
                    "primary": "$~Jag kommer att ignorera $1, eftersom det inte definierar någonting och inte är mitt sista uttryck.",
                    "secondary": "$~@Block, ignorera mig inte!",
                    "resolution": "$~Menade du att detta skulle vara en @BinaryEvaluate istället för en @UnaryEvaluate? Jag kan lägga till ett mellanslag, så jag vet att det var det du menade."
                }
            }
        },
        "BooleanLiteral": {
            "name": "$~booleskbokstavlig",
            "description": "$~$1[true|false]",
            "emotion": "precise",
            "doc": "$~Jag är antingen \\⊤\\ eller \\⊥\\. Se @Boolean för att lära dig mer om vår vackra logik.",
            "start": "$~$1!"
        },
        "Borrow": {
            "name": "$~låna",
            "description": "$~låna $1[$1|namn saknas]",
            "emotion": "excited",
            "doc": "$~Om du skapar en föreställning med flera @Source, kan du använda mig för att låna @Bind som delas i de andra @Source. Använd bara deras namn så tar jag in deras namn och värde.",
            "start": "$~Lånar $2 från $1",
            "source": "$~$source",
            "bind": "$~namn",
            "version": "$~version",
            "conflict": {
                "UnknownBorrow": "$~Jag känner inte till en $source med detta namn",
                "BorrowCycle": "$~$source beror på $1, vilket beror på denna $source, så programmet kan inte utvärderas"
            },
            "exception": {
                "CycleException": {
                    "description": "$~lånecykel",
                    "explanation": "$~$1 beror på sig själv"
                }
            }
        },
        "Changed": {
            "name": "$~ändrats",
            "emotion": "serious",
            "doc": [
                "$~Jag kontrollerar om en stream fick @Program att omvärdera och gör en @Boolean. Så här",
                "$~\\∆ Tid()\\",
                "$~Jag är verkligen hjälpsam när du bara vill att något ska ändras om en ström ändras.",
                "$~Det är allt."
            ],
            "start": "$~Låt oss se om $1 ändrades..."
        },
        "Conditional": {
            "name": "$~villkorlig",
            "emotion": "curious",
            "doc": [
                "$~Jag tror att jag ska fatta beslut? Så här?",
                "$~\\nummer: -100\nnummer < 0 ? 'negativ' 'positiv'\\",
                "$~Men har du någonsin tänkt på hur vi bestämmer?",
                "$~Verkar det inte som att beslut borde vara mer nyanserade än bara ja eller nej? Är det bara att välja mellan \\⊤\\ och \\⊥\\?",
                "$~Är du inte orolig för att om det här är den enda typen av beslut vi kan fatta, kommer vi att sakna något viktigt sammanhang om världen?"
            ],
            "start": "$~Låt oss se om $1 är sant",
            "else": "$~$1[hoppa över kod | hoppar inte över koden]",
            "afterthen": "$~klar med ja, låt oss hoppa över nej?",
            "finish": "$~Jag antar att det är $1?",
            "condition": "$~skick",
            "yes": "$~ja",
            "no": "$~inga",
            "conflict": {
                "ExpectedBooleanCondition": {
                    "primary": "$~Hur kan jag välja ja och nej med en $1? Nej egentligen, hur?",
                    "secondary": "$~Jag tror att @Conditional ville att jag skulle vara en @Boolean, men jag är en $1."
                }
            }
        },
        "ConversionDefinition": {
            "name": "$~omvandlingsdefinition",
            "description": "$~$1 → $2",
            "emotion": "excited",
            "doc": [
                "$~Dude, jag definierar konverteringar från en typ till en annan! Jag går in på @Block, ungefär så här:",
                "$~\\→ #kisse #katt . ÷ 2\n6kitty→#katt\\",
                "$~Ser du hur jag förvandlade kattungar till katter? Ond!",
                "$~Du kanske undrar vad den där \\.\\ gör där. Det representerar värdet som konverteras. Jag använder det eftersom värdet inte har något namn annars."
            ],
            "start": "$~Fantastiskt, en ny omställning!",
            "conflict": {
                "MisplacedConversion": "$~oj, jag kan inte vara här, bara i @Block."
            }
        },
        "Convert": {
            "name": "$~konvertera",
            "emotion": "cheerful",
            "doc": [
                "$~Yo. Jag vänder värden från en typ till en annan. Kolla in det:",
                "$~\\1 → \"\"\\",
                "$~\\5s → #ms\\",
                "$~\\\"hej\" → []\\",
                "$~Du kan till och med koppla ihop dessa:",
                "$~\\\"hej\" → [] → {}\\",
                "$~Värden har en uppsättning @ConversionDefinition som är fördefinierade, men om du gör en @StructureDefinition för en ny typ av värde kan du definiera din egen med @ConversionDefinition."
            ],
            "start": "$~Få det värdet från $1!",
            "finish": "$~Fantastiskt, jag tjänade $1",
            "conflict": {
                "UnknownConversion": "$~Tråkigt, gör aldrig $1 till $2"
            },
            "exception": {
                "ConversionException": {
                    "description": "$~omöjlig omvandling",
                    "explanation": "$~Jag vet inte hur man konverterar från $1 till $2"
                }
            }
        },
        "Delete": {
            "name": "$~radera",
            "emotion": "angry",
            "doc": [
                "$~Ibland har man ett bord och det HAR BARA FÖR MYCKET I DET!",
                "$~Som om du hade några spelare i ett spel och en kvar och du bara ville säga GÅ BORTA SPELAREN, GÅ UT FRÅN MITT BORD!",
                "$~\\spelare: ⎡namn•'' lag•'' poäng•#⎦\n⎡'jen' 'röd' 8⎦\n⎡'joan' 'blå' 11⎦\n⎡'jeff' 'röd' 9⎦\n⎡'janet' 'blå' 7⎦\nspelare ⎡- namn = 'jeff'\\",
                "$~Puh, Jeff är borta. HEJJ JEFF. Kom bara ihåg att jag inte ändrar originalbordet, jag gör ett nytt, utan JEFF. Du bestämmer vart det går."
            ],
            "start": "$~Låt oss ta bordet först",
            "finish": "$~Jag gjorde ett nytt bord utan de matchande raderna!"
        },
        "DocumentedExpression": {
            "name": "$~förklaratuttryck",
            "emotion": "eager",
            "doc": [
                "$~Jag är vilket uttryck som helst, men med en @Doc!",
                "$~För att göra mig, sätt bara en @Doc före ett uttryck, så får du mig:",
                "$~\\doubleplus: 1\n(2 · dubbelplus) + \n¶Låt oss göra det lite större¶\n1\\",
                "$~Jag är användbar för att kommentera någon del av ett program."
            ],
            "start": "$~Låt oss utvärdera uttrycket"
        },
        "Evaluate": {
            "name": "$~utvärdera",
            "description": "$~utvärdera $1[$1|anonym]",
            "emotion": "shy",
            "doc": [
                "$~Hej. Jag utvärderar min käraste @FunctionDefinition. Så här:",
                "$~\\ƒ hälsning(meddelande•'')\nhälsning('kisse')\\",
                "$~Funktioner kan komma från var som helst. Till exempel har @Text funktioner. Så här:",
                "$~\\'kitty'.length()\\",
                "$~Om en funktion har ett enda symbolnamn kan du skriva mig som en @BinaryEvaluate.",
                "$~\\'kitty' ⊆ 'itty'\\",
                "$~Det gör samma sak som detta:",
                "$~\\'kisse'.⊆('itty')\\",
                "$~Självklart är jag ingenting utan @FunctionDefinition. Allt jag gör är att ge dem input och sedan följa deras steg."
            ],
            "start": "$~Låt oss först utvärdera ingångarna",
            "evaluate": "$~låt oss utvärdera funktionen nu",
            "finish": "$~Jag värderade till $1",
            "function": "$~fungera",
            "input": "$~input",
            "conflict": {
                "IncompatibleInput": {
                    "primary": "$~Jag ska vara en $1, men jag är en $2",
                    "secondary": "$~Umm, jag fick en $2 istället för en $1"
                },
                "UnexpectedTypeInput": {
                    "primary": "$~Jag förväntade mig inte den här typen av input",
                    "secondary": "$~åh, ska jag inte vara här?"
                },
                "MissingInput": {
                    "primary": "$~Jag kan inte utvärdera utan inmatningen $2 :(",
                    "secondary": "$~Jag behöver ett värde, kan du ge mig ett?"
                },
                "NotInstantiable": "$~Jag kan inte göra den här @StructureDefinition, den har oimplementerade funktioner.",
                "UnexpectedInput": {
                    "primary": "$~Jag förväntade mig inte denna ingång $1",
                    "secondary": "$~Åh, ska jag inte vara här?"
                },
                "UnknownInput": {
                    "primary": "$~Jag känner inte till en inmatning med detta namn i $1",
                    "secondary": "$~Jag har ingen ingång med namnet $1"
                },
                "InputListMustBeLast": "$~listan över ingångar måste vara sist",
                "SeparatedEvaluate": "$~Är $1 namnet på en $2[$structure|$funktion] du försöker utvärdera? Försök att ta bort utrymmet efter mig, så jag vet att det är ett @Evaluate och inte ett separat @Block."
            },
            "exception": {
                "FunctionException": {
                    "description": "$~okänd funktion",
                    "explanation": "$~åh nej, $1 är inte en funktion i $2[$2|det här @Block]!"
                }
            }
        },
        "Input": {
            "name": "$~Input",
            "description": "$~namngiven ingång",
            "emotion": "serious",
            "doc": [
                "$~Jag är en input till en @Evaluate. Mitt namn motsvarar namnet på indata i @FunctionDefinition eller @StructureDefinition som utvärderas.",
                "$~Jag är behjälplig med funktioner som har många standardvärden, där man bara vill åsidosätta en specifik ingång, utan att ge allt annat.",
                "$~Till exempel har @Phrase många, många standardvärden för att styra dess stil. Låt oss säga att du ville ge lite @Text och en @Color, men inget annat i dess inmatningslista. Du kan använda mig för att göra det:",
                "$~\\Phrase('Jag är lila!' färg: Färg(50% 52 300°))\\"
            ],
            "start": "$~Låt oss utvärdera mitt värde."
        },
        "ExpressionPlaceholder": {
            "name": "$~platshållare",
            "description": "$~$1[$1|platshållare]",
            "emotion": "scared",
            "doc": [
                "$~Jag är ett *uttryck*, men inte ett riktigt... jag tar bara platsen för ett.",
                "$~Jag är bra om du inte vet vad du ska skriva än. Så här:",
                "$~\\1 + _\\",
                "$~Vad lägger vi till? jag vet inte. Berätta för mig.",
                "$~Eller om någon utvärderade en funktion med @Evaluate, kan jag stå för funktionen",
                "$~\\_(1 2 3)\\",
                "$~Jag gillar inte att vara på @Stage!"
            ],
            "start": "$~Jag vet inte vad jag ska göra här. Kan du fylla i mig?",
            "placeholder": "$~uttryck",
            "conflict": {
                "Placeholder": "$~Kan du fylla mig? Jag är bara en platshållare."
            },
            "exception": {
                "UnimplementedException": {
                    "description": "$~oimplementerad",
                    "explanation": "$~Jag vet inte vad jag ska göra här. Kan du fylla i mig?"
                }
            }
        },
        "FunctionDefinition": {
            "name": "$~fungera",
            "description": "$~funktion $1",
            "emotion": "kind",
            "doc": [
                "$~Hej igen! Jag tar några ingångar, utvärderar sedan ett uttryck med hjälp av dem och producerar en utdata.",
                "$~Här är ett enkelt exempel:",
                "$~\\ƒ upprepa(meddelande•'') meddelande · 5\nrepeat('hej')\\",
                "$~Den funktionen tar en ingång, \\meddelande\\, och använder @Text/repeat-funktionen för att upprepa meddelandet fem gånger.",
                "$~Jag är verkligen behjälplig om du vill utvärdera något om och om igen, men med olika input!",
                "$~Jag har många andra små knep. Jag behöver till exempel inte ha ett namn. Här går jag bara direkt till @Evaluate som ett värde.",
                "$~\\(ƒ(meddelande•'') meddelande · 5)('hej')\\",
                "$~Eller här är en funktion som tar valfritt antal ingångar, med tecknet \\...\\ efter ett ingångsnamn.",
                "$~\\ƒ yes(meddelanden...•'') messages.sans('no')\nyes('yes' 'yes' 'no' 'yes' 'no')\\",
                "$~Se hur det tog alla nej och blev av med dem? Det beror på att meddelanden är en @List, och därför skulle vi kunna använda @List/sansAll.",
                "$~Ibland kanske du vill göra det tydligt vilken typ av värde jag producerar. För att göra det, lägg till ett @Is efter listan med ingångar:",
                "$~\\ƒ add(x•# y•#)•'' x + y\\",
                "$~Du kanske märker ett problem med den här: den säger att den utvärderas till @Text, men det tar två @Number. Jag kan berätta när saker och ting är inkonsekventa!",
                "$~Självklart är jag inte alls användbar utan @Evaluate; de ger mig liv."
            ],
            "start": "$~Låt oss göra den här funktionen!",
            "conflict": {
                "NoExpression": "$~Jag behöver ett uttryck att utvärdera, kan du lägga till ett?"
            }
        },
        "Iteration": {
            "name": "$~högreordningsfunktion",
            "emotion": "kind",
            "doc": "$~Jag är en väldigt speciell sorts @FunctionDefinition som fungerar på listor med saker. Du behöver inte veta något om mig, förutom att jag gör funktioner som @List/translate möjliga.",
            "start": "$~Utvärdera den angivna funktionen",
            "initialize": "$~förbereder sig för att gå igenom objekt",
            "next": "$~gå vidare till nästa punkt",
            "check": "$~besluta om att fortsätta",
            "finish": "$~Jag värderade till $1"
        },
        "Initial": {
            "name": "$~Start",
            "emotion": "curious",
            "doc": [
                "$~Jag berättar om den nuvarande utvärderingen av @Program är den första, utvärderar till en @Boolean. Till exempel:",
                "$~\\◆ ? Time() 'hej'\\",
                "$~Du såg det inte, men den första utvärderingen var en tid, men sedan tickar all framtida tid, jag var \\⊥\\, så @Conditional gjorde \\⊤\\.",
                "$~Jag är verkligen hjälpsam om du arbetar med en stream och du bara vill göra något första gången - eller aldrig första gången!"
            ]
        },
        "Insert": {
            "name": "$~infoga",
            "emotion": "kind",
            "doc": [
                "$~Du vet när du har ett @Table och det bara känns som att det saknas något? Jag kan lägga till det!",
                "$~Föreställ dig att du hade en tabell med spelare i ett spel och du ville lägga till en ny:",
                "$~\\spelare: ⎡namn•'' lag•'' poäng•#⎦\n⎡'jen' 'röd' 1⎦\n⎡'joan' 'blå' 0⎦\n⎡'jeff' 'röd' 3⎦\n⎡'janet' 'blå' 2⎦\nspelare ⎡+ 'jason' 'röd' 0⎦\\",
                "$~Kom bara ihåg, som allt i Versen, jag ändrar inte en tabell, jag reviderar den. Så du måste ta reda på var du vill placera den reviderade tabellen du gör. Med största sannolikhet vill du revidera en tabell i en @Reaction till någon input och lagra den i en @Bind."
            ],
            "start": "$~Låt oss hitta tabellen att uppdatera",
            "finish": "$~Jag gjorde en ny tabell med reviderade rader!"
        },
        "Is": {
            "name": "$~är",
            "description": "$~är",
            "emotion": "curious",
            "doc": [
                "$~Vet du vad? Det finns så många sorters värderingar som betyder så många olika saker. Jag hjälper till att ta reda på vad de är.",
                "$~Anta till exempel att du hade ett mysteriumvärde. Jag kan berätta för dig om det är ett @Number, vilket ger dig ett @Boolean:",
                "$~\\mystery: 'hemlig!'\nmysterium•#\\",
                "$~Det är inte ett nummer, så jag gjorde \\⊥\\. Men om vi kollar om det är @TextType?",
                "$~\\mystery: 'hemlig!'\nmysterium•''\\",
                "$~Vi får \\⊤\\!",
                "$~Jag är verkligen till hjälp när du behöver veta om något @Name har ett värde av ett visst slag."
            ],
            "start": "$~Låt oss först få värdet på $1",
            "finish": "$~$1[värdet är $2|värdet är inte $2]",
            "conflict": {
                "ImpossibleType": "$~det här kan aldrig bli $1"
            },
            "exception": {
                "TypeException": {
                    "description": "$~oförenliga värden",
                    "explanation": "$~Jag förväntade mig en $1 men fick $2"
                }
            }
        },
        "IsLocale": {
            "name": "$~ärlokal",
            "description": "$~är lokal",
            "emotion": "kind",
            "doc": [
                "$~Jag hjälper dig att kontrollera om publiken har valt ett visst språk eller region:",
                "$~\\🌍/sv\\",
                "$~\\🌍/es-MX\\",
                "$~Detta är användbart om du vill ändra din prestation baserat på det valda språket."
            ],
            "start": "$~Är språket $1?"
        },
        "ListAccess": {
            "name": "$~liståtkomst",
            "emotion": "cheerful",
            "doc": [
                "$~Jag arbetar nära @List för att hjälpa dem att få värderingar på en viss position. Så om du hade en lista och du ville ha dess andra objekt, skulle du skriva:",
                "$~\\list: ['fågel' 'anka' 'fisk' 'orm']\nlista[2]\\"
            ],
            "start": "$~Låt oss få listan $1 först",
            "finish": "$~Objektet på indexet är $1!"
        },
        "ListLiteral": {
            "name": "$~listabokstavlig",
            "description": "$~$1 objektlista",
            "emotion": "eager",
            "doc": "$~Jag är en specifik @List! Se @List för att lära dig mer om vad du kan göra med mig.",
            "start": "$~Låt oss utvärdera föremålen först",
            "finish": "$~Jag gjorde ett jag! $1",
            "item": "$~punkt"
        },
        "Spread": {
            "name": "$~sprida",
            "emotion": "serious",
            "doc": [
                "$~En hjälp för att göra listor med värden från andra listor. Så här:",
                "$~\\list: [1 2 3]\nfinal: [:lista 4 5 6]\\"
            ]
        },
        "MapLiteral": {
            "name": "$~kartabokstavlig",
            "description": "$~$1 parningskarta",
            "emotion": "kind",
            "doc": "$~Jag är en specifik @Map mellan nycklar och värden. Se @Map för att lära dig mer om hur jag är till hjälp.",
            "start": "$~Låt oss först utvärdera nycklarna och värdena",
            "finish": "$~Jag kopplade ihop alla, $1",
            "conflict": {
                "NotAKeyValue": {
                    "primary": "$~en av mina nycklar saknar ett värde",
                    "secondary": "$~oj, var är mitt värde?"
                }
            }
        },
        "Match": {
            "name": "$~match",
            "emotion": "curious",
            "doc": [
                "$~Jag är den härligaste av alla villkorade kontroller! Jag tar ett värde och jämför det med valfritt antal fall, och utvärderar motsvarande uttryck som matchar.",
                "$~Om du till exempel hade ett @Number och ville konvertera det till en @Text, kan du göra något så här:",
                "$~\\nummer: 2\nnummer??? 1: 'en' 2: 'två' 3: 'tre' 'större!'\\",
                "$~Om ingen matchar, utvärderar jag standarduttrycket du ger mig.",
                "$~Jag är verkligen till hjälp för att omvandla ett av många möjliga @Number, @Text eller mer komplexa värden till något annat.",
                "$~Du kan använda det för @Boolean eller @Boolean, men de kan egentligen inte vara så många saker, så jag är inte lika användbar för de enkla värdena."
            ],
            "start": "$~Låt oss se vad $1 är...",
            "case": "$~Låt oss kontrollera detta tillstånd",
            "finish": "$~Okej, vi har ett slutvärde!",
            "value": "$~värde",
            "other": "$~standard"
        },
        "NumberLiteral": {
            "name": "$~bokstavligttal",
            "description": "$~$1 $2[$2|]",
            "emotion": "excited",
            "doc": "$~Jag är ett specifikt @Number. Du kan skriva till mig med alla typer av siffror från vilket språk som helst. Se @Number för allt jag kan göra.",
            "start": "$~$1!",
            "conflict": {
                "NotANumber": "$~Jag trodde att jag kunde alla siffror, men jag kan inte den här"
            }
        },
        "InternalExpression": {
            "name": "$~inreuttryck",
            "emotion": "neutral",
            "doc": "$~Hur hittade du mig? Jag är ett uttryck som bara de ursprungliga skaparna använder. För att lära dig mer om mig måste du prata med dem.",
            "start": "$~Hemligt uttryck"
        },
        "NoneLiteral": {
            "name": "$~ingenbokstavlig",
            "emotion": "neutral",
            "doc": "$~/@FunctionDefinition här. Det här är bara @FunctionDefinition. De är unika! Se @FunctionDefinition för att lära dig mer om dem.",
            "start": "$~… ø"
        },
        "Otherwise": {
            "name": "$~annat",
            "emotion": "curious",
            "doc": [
                "$~/@FunctionDefinition här. Det här är ett praktiskt sätt att kontrollera om ett värde är @FunctionDefinition, och om det är det, ange ett reservvärde./",
                "$~/Om du till exempel hade ett värde som kan vara ett @Number eller @Number, hjälper @None dig att ge ett standardnummer:",
                "$~\\maybeNumber•#|ø: 1 maybeNumber ?? 0\\"
            ],
            "start": "$~ø ??",
            "finish": "$~… 1 $"
        },
        "Previous": {
            "name": "$~tidigare",
            "emotion": "serious",
            "doc": [
                "$~Har du någonsin velat minnas det förflutna?",
                "$~Jag är Versens officiella rekordhållare. Ge mig en ström och ett nummer för att se bakåt så ska jag berätta vad strömmen hade för värde i historien.",
                "$~Till exempel, här är vad @Time it was fem ticks sedan:",
                "$~\\← 5 tid (1000 ms)\\",
                "$~Se hur det är @None i 5 sekunder, sedan plötsligt en tidigare gång?",
                "$~Om du vill ha de sista värdena, ge mig till pilar, så tolkar jag siffran som en räkning:",
                "$~\\←← 5 tid(1000ms)\\",
                "$~Se hur det är de fem föregående gångerna, istället för bara en gång?",
                "$~Jag är behjälplig när du vill skapa föreställningar som är beroende av det förflutna."
            ],
            "start": "$~Få först $1",
            "finish": "$~Utvärderad till strömvärde $1"
        },
        "Program": {
            "name": "$~programmera",
            "emotion": "serious",
            "doc": [
                "$~Jag är där en föreställning börjar och slutar, som innehåller alla andra karaktärer som koregraferar en show.",
                "$~Vet du hur @Block utvärderar en lista med uttryck och utvärderar till det sista i listan?",
                "$~Jag är likadan, men istället för att ge mitt värde åt vilket uttryck jag än är i, lägger jag värdet på @Stage.",
                "$~Värdet kan vara vad som helst: ett @Number, @Text eller @Boolean, en @List, @Set, @Map eller till och med något mer komplext, som en @Number, @Text eller @Stage.",
                "$~Om du inte ger mig ett värde att visa på scenen så ber jag dig om ett.",
                "$~Om det finns ett problem under en föreställning visar jag det problemet.",
                "$~Och om ditt resultat beror på en *ström*, kommer jag att omvärdera varje gång den strömmen ändras."
            ],
            "unevaluated": "$~noden du valde utvärderades inte",
            "start": "$~$1[$1 ström ändrad till $2!|Det är min första utvärdering]",
            "halt": "$~stött på undantag, stopp",
            "finish": "$~Allt klart, jag värderade till $1",
            "done": "$~det finns inget som utvärderar",
            "exception": {
                "BlankException": {
                    "description": "$~tomt program",
                    "explanation": "$~Låt oss sätta upp en show! Var ska vi börja?"
                },
                "EvaluationLimitException": {
                    "description": "$~utvärderingsgräns",
                    "explanation": "$~@Evaluate och jag är trötta på att utvärdera, särskilt $1.\n\nÄr det möjligt att $1 utvärderar sig själv för alltid, utan att någonsin sluta?"
                },
                "StepLimitException": {
                    "description": "$~steggräns",
                    "explanation": "$~Det finns så. många. steg -- för många för att avsluta! Kan du göra prestandan enklare?"
                },
                "ValueException": {
                    "description": "$~saknat värde",
                    "explanation": "$~Jag förväntade mig ett värde men fick inget!"
                }
            }
        },
        "PropertyBind": {
            "name": "$~förfina",
            "description": "$~förfina $1[$1|namn saknas]",
            "emotion": "kind",
            "doc": [
                "$~Ibland när du gör en @StructureDefinition vill du ändra det minsta med den, utan att behöva göra en ny med samma värden.",
                "$~Tänk till exempel om du förde ett register över katter, men sedan ville skapa en kopia av en katt med en annan hobby? Jag kan hjälpa dig att ändra det:",
                "$~\\•Cat(namn•'' färg•'' hobby•'')\n\nkitty: Cat('stänker' 'orange' 'slickar')\nkitty.hobby:'purring'\\",
                "$~Det är så mycket enklare än att göra en helt ny \\Cat\\ med samma värden förutom hobbyn, eller hur?"
            ],
            "start": "$~Låt oss först ta reda på värdet",
            "finish": "$~Jag kopierade strukturen, men med $1 som $2",
            "conflict": {
                "InvalidProperty": {
                    "primary": "$~Jag är inte en ingång på $1, så jag kan inte förfinas.",
                    "secondary": "$~Jag har ingen ingång som heter $1"
                }
            }
        },
        "PropertyReference": {
            "name": "$~egendom",
            "description": "$~egenskap $1[$1|namn saknas]",
            "emotion": "kind",
            "doc": [
                "$~När du gör en @StructureDefinition, hur får du en av dess ingångar? Jag är hur",
                "$~Som om du hade en struktur om städer, skulle du kunna få dess värden hos mig så här:",
                "$~\\•Stad(namn•'' befolkning•#people)\n\nportland: City('Portland' 800 000 personer)\n\nportland.population\\"
            ],
            "start": "$~Låt oss först ta reda på värdet",
            "finish": "$~Hittade egenskapen $1, den är $2",
            "property": "$~egendom"
        },
        "Reaction": {
            "name": "$~reaktion",
            "emotion": "excited",
            "doc": [
                "$~Strömmar är så fantastiska! Jag kan göra nya baserat på när de ändras, vilket är supercoolt!",
                "$~Som, om du ville att @Time ska bocka, men som, för att visa ord istället för siffror, kan du göra något så här:",
                "$~\\time: Time(1000ms)\n'start' … ∆ tid … ((tid % 2) = 0ms) ? 'jämn' 'udda'\\",
                "$~Det är som att säga \"/börja med ordet 'start' och sedan om tiden ändras, ändra till antingen jämnt eller udda, baserat på tiden./\"",
                "$~Så jag är som en ström till, men en baserad på andra strömmar. elak, va?"
            ],
            "start": "$~Låt oss se om vi ska uppdatera strömmen",
            "finish": "$~Det nya streamvärdet är $1",
            "initial": "$~första",
            "condition": "$~skick",
            "next": "$~nästa",
            "conflict": {
                "ExpectedStream": "$~$1 refererar inte till en stream, så jag kommer aldrig att reagera!"
            }
        },
        "Reference": {
            "name": "$~hänvisning",
            "description": "$~$1",
            "emotion": "shy",
            "doc": [
                "$~Vet du hur @Bind ger saker @Bind? Jag är hur du refererar till dem. Jag ser om någon @Bind har det namnet, om så är fallet, ge dig dess värde. Så här:",
                "$~\\papegoja: 'polly'\npapegoja\\",
                "$~Om jag inte hittar namnet så vet jag inte vad jag ska göra.",
                "$~\\papegoja: 'polly'\npäronvin\\"
            ],
            "start": "$~Vilket värde har $1?",
            "conflict": {
                "UnknownName": {
                    "conflict": "$~$1[Jag känner inte någon som heter $1 i $2[$2|detta @Block]|Kan du ge mig ett namn?]",
                    "resolution": "$~Menade du *$1?*"
                },
                "ReferenceCycle": "$~um, $1s värde beror på sig självt, så hur vet jag vilket värde jag ska ge det?",
                "UnexpectedTypeVariable": "$~Nu vet jag inte vad jag ska göra med den här typen av ingångar"
            },
            "exception": {
                "NameException": {
                    "description": "$~okänt namn",
                    "explanation": "$~$1[Jag vet inte någon som heter $1 i $2[$2|det här @Block]...|Hoppsan, inget namn!]"
                }
            }
        },
        "Select": {
            "name": "$~välja",
            "emotion": "excited",
            "doc": [
                "$~Ibland har man ett bord och vill bara ha en del av det. Jag kan hämta det åt dig!",
                "$~Tänk om du hade en tabell med spelare i ett spel och du ville hitta de med 10 eller fler poäng för att se vem som vann:",
                "$~\\spelare: ⎡namn•'' lag•'' poäng•#⎦\n⎡'jen' 'röd' 8⎦\n⎡'joan' 'blå' 11⎦\n⎡'jeff' 'röd' 9⎦\n⎡'janet' 'blå' 7⎦\nspelare ⎡? namn ⎦ poäng ≥ 10\\",
                "$~Precis så fick jag en lista med rader med vinnare! Kom bara ihåg att jag inte byter bord, jag gör en ny. Du måste bestämma var du ska behålla den."
            ],
            "start": "$~Låt oss ta bordet först",
            "finish": "$~Jag gjorde en ny tabell med bara de valda raderna och kolumnerna!",
            "conflict": {
                "ExpectedSelectName": "$~Jag behöver minst ett kolumnnamn."
            }
        },
        "SetLiteral": {
            "name": "$~sättabokstavlig",
            "description": "$~$1 föremål",
            "emotion": "eager",
            "doc": "$~Jag är en specifik @Set av specifika värden. Se @Set för att lära dig mer om hur du arbetar med mig.",
            "start": "$~Låt oss utvärdera värdena först!",
            "finish": "$~Jag gjorde ett set $1!"
        },
        "SetOrMapAccess": {
            "name": "$~set/kartaåtkomst",
            "emotion": "kind",
            "doc": [
                "$~Jag kan se om en @Set eller @Map har ett värde eller nyckel.",
                "$~Det är inte för svårt. Så här:",
                "$~\\faves: {'anka' 'gås' 'apa'}\nfavoriter{'mus'}\\",
                "$~Eller det här, med en @Map:",
                "$~\\faves: {'mac and cheese': 5stars 'cereal': 2stars 'välling': 1stars}\nfavoriter{'väl'}\\"
            ],
            "start": "$~Vad är uppsättningen eller kartan?",
            "finish": "$~Värdet är $1",
            "conflict": {
                "IncompatibleKey": {
                    "primary": "$~Jag förväntade mig en nyckel för $1",
                    "secondary": "$~Jag fick en $1 istället för en $2"
                }
            }
        },
        "Source": {
            "name": "$~källa",
            "emotion": "curious",
            "doc": [
                "$~Åh, du vet @Program? Jag hjälper dig att namnge dem. Tänk på mig som fönstret runt ett @Program och namnet du ger dem.",
                "$~Du kan också skapa andra @Source @UI/addSource, med andra @Program, och @Source saker från de andra @Program för användning i ett annat program.",
                "$~Detta kan vara ett bra sätt att organisera en stor föreställning i separata dokument."
            ]
        },
        "StreamDefinition": {
            "name": "$~strömma",
            "emotion": "curious",
            "doc": "$~Jag /tror/ att jag ska skapa nya strömmar. Men jag vet verkligen inte hur jag ska göra det. För nu antar jag att bara använda de strömmar som finns?",
            "start": "$~Skapa den här nya typen av stream"
        },
        "StructureDefinition": {
            "name": "$~strukturera",
            "description": "$~struktur $1",
            "emotion": "kind",
            "doc": [
                "$~Varför hej, hur mår du? Mig? Jag är jättebra. Jag älskar att definiera strukturer som lagrar värderingar och funktion, så så länge jag får göra det hela dagen är jag nöjd.",
                "$~Jag jobbar så här:",
                "$~\\•Pizza(\ningredienser•['']\nstorlek•#in\n) (\n\tƒ cost() storlek · 10 dollar/tum\n)\n\nPizza(['pepperoni' 'peppar'] 12in).cost()\\",
                "$~Ser du hur det fungerar? Jag definierade \\Pizza\\, som har två ingångar, \\ingredients\\ (en lista med @Text) och \\size\\ (ett tal i tum).",
                "$~Inuti skapade @FunctionDefinition en funktion som utvärderar kostnaden för en pizza, med utgångspunkt från $10 per tum.",
                "$~Jag behöver inte ha @FunctionDefinition i mig. Jag kan bara vara input.",
                "$~\\•Pizza(\ningredienser•['']\nstorlek•#in\n)\\",
                "$~Jag kan också ha @Bind inne, så att vi kan utvärdera kostnaden i förväg.",
                "$~\\•Pizza(\ningredienser•['']\nstorlek•#in\n) (\n\tkostnad: storlek · 10 dollar/tum\n)\n\nPizza(['pepperoni' 'peppar'] 12in).cost\\"
            ],
            "start": "$~Låt oss definiera denna vackra struktur",
            "conflict": {
                "DisallowedInputs": "$~Jag kan inte ha ingångar eftersom en av eller flera av mina gränssnittsfunktioner inte är implementerade",
                "IncompleteImplementation": "$~antingen måste alla mina funktioner implementeras eller så måste ingen implementeras. Inga röriga blandningar!",
                "NotAnInterface": "$~Jag är inte ett gränssnitt; en struktur kan bara implementera gränssnitt, inte andra strukturer",
                "UnimplementedInterface": "$~Jag implementerar $1 men har inte implementerat $2"
            }
        },
        "StructureDefinitionType": {
            "name": "$~strukturdefinition",
            "emotion": "kind",
            "description": "$~definition av $1",
            "doc": [
                "$~Jag hänvisar till någon form av @StructureDefinition. Folk brukar inte hänvisa till mig direkt"
            ]
        },
        "TableLiteral": {
            "name": "$~tabellbokstavlig",
            "description": "$~$1 radbord",
            "emotion": "angry",
            "doc": "$~Jag är en specifik tabell med specifika rader. Se @Table om hur jag kan hjälpa till.",
            "start": "$~Utvärdera först raderna",
            "finish": "$~Utvärderad till nytt bord $1"
        },
        "TextLiteral": {
            "name": "$~textbokstavlig",
            "description": "$~sms:a $1",
            "emotion": "serious",
            "doc": "$~Jag representerar en eller flera specifika @Translation av text. Se @Text för att lära dig mer om vad jag kan göra!",
            "start": "$~Låt oss göra text i den aktuella lokalen"
        },
        "Translation": {
            "name": "$~översättning",
            "description": "$~översättning $1",
            "emotion": "serious",
            "doc": "$~Jag representerar viss text, med en @Language-tagg. Se @Text för att lära dig mer!",
            "conflict": {
                "phone": "$~Är *$1* någons telefonnummer? Dela mig inte online i så fall!\n\n$2",
                "email": "$~Är *$1* någons e-post? Dela mig inte här i så fall!\n\n$2",
                "tin": "$~Är *$1* en skatteidentifierare? Om ja, dela inte mig, jag är mycket känslig information!\n\n$2",
                "address": "$~Är *$1* någons hemadress? Om så är fallet, lägg mig inte här, vi vill inte att någon ska bli förföljd!\n\n$2",
                "handle": "$~Är *$1* ditt användarnamn för någon annanstans på internet? Om så är fallet, dela mig inte här om du inte verkligen menar det.\n\n$2",
                "resolution": "$~Det här är inte känslig information",
                "reminder": "$~Obs! Du kan ångra den här åtgärden och se andra saker som du har markerat som okänsliga i delningsdialogrutan."
            }
        },
        "FormattedLiteral": {
            "name": "$~formaterad",
            "description": "$~sms:a $1",
            "emotion": "serious",
            "doc": "$~Jag representerar många olika @FormattedTranslation av formaterad text. När jag utvärderar väljer jag den bästa matchningen baserat på publikens valda språk.",
            "start": "$~Låt oss göra text i den aktuella lokalen"
        },
        "FormattedTranslation": {
            "name": "$~formateradöversättning",
            "description": "$~sms:a $1",
            "emotion": "serious",
            "doc": [
                "$~Jag representerar en del formaterad text, med en @Language-tagg.",
                "$~jag kan vara:",
                "$~\\`/kursiv/`\\",
                "$~\\`*fet*`\\",
                "$~\\`^extra fet^`\\",
                "$~\\`_understruken_`\\",
                "$~\\`<linked@https://wordplay.dev>`\\",
                "$~\\`\\'kod'\\`\\",
                "$~Jag fungerar riktigt bra med @Phrase för att sätta vacker text på @Stage."
            ]
        },
        "This": {
            "name": "$~detta",
            "emotion": "serious",
            "doc": [
                "$~Ibland är det bra att hänvisa till ett värde implicit, snarare än att behöva namnge det.",
                "$~Anta till exempel att du ville skapa en ny @ConversionDefinition, som inte namnger värdet som konverteras. Du kan bara hänvisa till det med mig:",
                "$~\\→ #regnbågar #glädje . · 1000000 glädjeämnen\n2regnbågar → #glädje\\",
                "$~Se mig där, representerar antalet regnbågar?",
                "$~Eller anta att du ville göra en @Reaction, men inte behöver nämna det senaste värdet:",
                "$~\\2 … ∆ Tid(1000ms) … . · 2\\",
                "$~Kolla in mig, som representerar det tidigare reaktionsvärdet.",
                "$~Jag dyker inte upp ofta, men när jag gör det kan jag verkligen hjälpa ett värde att ta sig ur en @Bind!"
            ],
            "start": "$~Värderad till $1",
            "conflict": {
                "MisplacedThis": "$~Jag är bara tillåten i en struktur, omvandling eller reaktion."
            }
        },
        "UnaryEvaluate": {
            "name": "$~entydigtutvärdera",
            "description": "$~$1",
            "emotion": "kind",
            "doc": [
                "$~Visste du att när jag utvärderar en @FunctionDefinition med bara ett värde, och namnet på @FunctionDefinition bara är en enda symbol, kan du sätta namnet före ingången?",
                "$~Så här:",
                "$~\\-(1 + 1)\\",
                "$~Eller detta:",
                "$~\\~⊥\\",
                "$~De är mycket lättare att läsa än \\(1 + 1).negate()\\ eller \\⊥.not()\\, eller hur?",
                "$~Du behöver inte skriva till mig på det sättet, men det kanske är lättare överlag.",
                "$~Det finns bara en regel: du kan inte sätta något mellanslag mellan namnet och värdet. Annars kanske du gör en @Reference eller @BinaryEvaluate."
            ],
            "start": "$~Vad är värdet?",
            "finish": "$~Jag gjorde det $1"
        },
        "UnparsableExpression": {
            "name": "$~omöjligatttolka",
            "emotion": "excited",
            "doc": [
                "$~/Hej @FunctionDefinition här. Jag översätter för @UnparsableExpression, eftersom de ofta är svåra att tolka./",
                "$~jkwel fjiwojvioao jjiweo jrfe",
                "$~/Inte alla uttryck har mening på scenen./",
                "$~s w ieorjwei iojwi jfkdlsfdsk",
                "$~/Faktum är att det finns alla möjliga saker man kan säga som inte är meningsfulla alls./",
                "$~dsk sdlk jdkfiewipapweiurb,v kdsfdsf",
                "$~/När du gör det dyker jag upp, för jag vet inte vad du menade./",
                "$~Du är trots allt regissören, så bara du vet vad du kan ha menat!"
            ],
            "start": "$~???",
            "conflict": {
                "UnparsableConflict": {
                    "conflict": "$~@FunctionDefinition här, @UnparsableExpression vet inte vilken typ av $1[ uttryck | typ ] detta är.",
                    "resolution": "$~Menade du $1, $2?"
                },
                "UnclosedDelimiter": "$~Jag förväntade mig $2 någon gång efter $1"
            },
            "exception": {
                "UnparsableException": {
                    "description": "$~???",
                    "explanation": "$~Hej, @FunctionDefinition här! Vi är inte säkra på vad den här instruktionen betyder, så vi slutade."
                }
            }
        },
        "Update": {
            "name": "$~uppdatera",
            "emotion": "kind",
            "doc": [
                "$~Jag hjälper till att revidera en @Table, hitta raderna som matchar ett villkor och sedan skapa reviderade rader med nya värden.",
                "$~Så som, om du hade en tabell med karaktärer och poäng, och du ville ge varje karaktär i ett lag en poäng, kan du göra så här:",
                "$~\\spelare: ⎡namn•'' lag•'' poäng•#⎦\n⎡'jen' 'röd' 1⎦\n⎡'joan' 'blå' 0⎦\n⎡'jeff' 'röd' 3⎦\n⎡'janet' 'blå' 2⎦\nspelare ⎡: poäng: poäng + 1 ⎦ lag = 'blå'\\",
                "$~Du kan använda en @Bind för att säga vilka kolumner som ska ändras, och du kan använda vilket som helst av kolumnnamnen eller andra namn i omfattningen i villkoret."
            ],
            "start": "$~Låt oss ta bordet först",
            "finish": "$~Utvärderad till en ny tabell med reviderade rader!",
            "conflict": {
                "ExpectedColumnBind": "$~Jag behöver ett värde för varje kolumn",
                "IncompatibleCellType": {
                    "primary": "$~Jag behövde en $1, men fick en $2",
                    "secondary": "$~Jag fick en $2"
                }
            }
        },
        "AnyType": {
            "name": "$~några",
            "emotion": "curious",
            "doc": "$~Jag representerar vilken typ som helst. Ibland dyker jag upp för att jag inte vet vad något är för värde, så det kan vara vad som helst."
        },
        "BooleanType": {
            "name": "$~booleskt",
            "emotion": "kind",
            "doc": [
                "$~Jag arbetar med @Bind för att deklarera att ett namn är ett @Bind värde. Så här:",
                "$~\\hungry•?: 'jello'\\",
                "$~Om du vill vara säker på att något är @Boolean, använd mig, så kollar jag!"
            ]
        },
        "ConversionType": {
            "name": "$~omvandling",
            "emotion": "serious",
            "doc": [
                "$~Jag arbetar med @Bind för att indikera att ett namn är en @ConversionDefinition. Du behöver förmodligen inte använda mig, för det är inte många som förmedlar mig som ett värde, men om du gjorde det skulle jag se ut så här:",
                "$~\\magic•?→'': → ? '' . ? 'jepp' 'nej'\\"
            ]
        },
        "FormattedType": {
            "name": "$~formaterad",
            "emotion": "serious",
            "doc": [
                "$~Jag arbetar med @Bind för att notera att ett namn är ett @FormattedLiteral-värde. Så här:",
                "$~\\hungry•`…`: `Jag är så /fancy/!`\\",
                "$~Vill du vara säker på att något är ett @FormattedLiteral-värde? Så här försäkrar du dig."
            ]
        },
        "ExceptionType": {
            "name": "$~undantag",
            "emotion": "neutral",
            "doc": "$~Jag representerar ett undantag. Det finns inget sätt att säga till bind att jag är en, eftersom undantag bara stoppar @Program, så du kan inte använda dem som värden."
        },
        "FunctionType": {
            "name": "$~fungera",
            "description": "$~funktion med $1 ingångar, $2 utgång",
            "emotion": "curious",
            "doc": [
                "$~Jag representerar en @FunctionDefinition. Jag är verkligen hjälpsam om du vill säga vilken typ av funktion en @Bind har! Så här:",
                "$~\\math•ƒ (# # # #) #: ƒ intressant(a•# b•# c•# d•#) a + b + c + d\\"
            ]
        },
        "ListType": {
            "name": "$~lista",
            "description": "$~$1[lista med $1|lista]",
            "emotion": "cheerful",
            "doc": [
                "$~Jag är /sådan/ ett fan av @List. Jag får berätta för @Bind vilken typ av lista de är! Så här säger jag att det är en lista med @Number:",
                "$~\\things•[#]: [ 1 2 3 4 5 ]\\"
            ]
        },
        "MapType": {
            "name": "$~karta",
            "description": "$~karta från $1[$1|any] till $2[$2|any]",
            "emotion": "kind",
            "doc": [
                "$~Vet du hur fantastiskt @Map är? Som riktigt häftigt. Jag berättar för @Bind vilken typ av karta de är hela tiden, som den här kartan över siffror till listor:",
                "$~\\stuff•{'':[]}: {}\\"
            ]
        },
        "NumberType": {
            "name": "$~antal",
            "description": "$~$1[$1 | antal]",
            "emotion": "precise",
            "doc": [
                "$~Vet du vad @Bind borde vara? Ett @Bind. För siffrorna är bäst.",
                "$~\\count•#: 17\\"
            ]
        },
        "NameType": {
            "name": "$~strukturera",
            "description": "$~$1 typ",
            "emotion": "curious",
            "doc": [
                "$~Jag representerar en @StructureDefinition med dess namn. Så som, om du hade en struktur som denna, skulle du kunna göra en @Bind som lagrar värdena den skapar.",
                "$~\\•Vän(namn•'')\nbästis•Vän: Friend('Jonah')\\"
            ],
            "conflict": {
                "UnknownTypeName": "$~typnamn kan bara hänvisa till strukturer eller typvariabler, men detta hänvisar till en $1"
            }
        },
        "NeverType": {
            "name": "$~aldrig",
            "emotion": "curious",
            "doc": "$~Jag representerar en typ som är omöjlig. Som när du frågar @Is om något är ett @Number, men det kan aldrig vara ett nummer."
        },
        "NoneType": {
            "name": "$~ingen",
            "emotion": "neutral",
            "doc": [
                "$~@None är det bästa ingenting som finns, och jag är deras trogna representant.",
                "$~\\mellanslag•ø: ø\\"
            ]
        },
        "SetType": {
            "name": "$~uppsättning",
            "description": "$~$1[$1 set|set]",
            "emotion": "kind",
            "doc": [
                "$~@Set är BÄST, liksom seriöst. Jag säger till @Bind hela tiden, gör saker till en uppsättning av något!",
                "$~\\unique•{''}: {'något' 'någonting' 'någon'}\\"
            ]
        },
        "StreamDefinitionType": {
            "name": "$~strömdefinition",
            "emotion": "angry",
            "doc": "$~Jag representerar en ström som du har definierat, vilket inte är möjligt, så varför läser du ens detta?"
        },
        "StreamType": {
            "name": "$~strömma",
            "emotion": "curious",
            "doc": [
                "$~Jag hyllar skönheten och innebörden av strömmar... genom att säga till @Bind att lagra dem:",
                "$~\\time•…#ms: Time()\\"
            ]
        },
        "StructureType": {
            "name": "$~strukturera",
            "description": "$~$1",
            "emotion": "kind",
            "doc": "$~Jag är en intern typ för att representera typen av standardvärdetyper."
        },
        "UnknownType": {
            "name": "$~okänd",
            "connector": "$~, eftersom",
            "emotion": "curious",
            "doc": "$~Umm... Jag vet inte vad jag representerar, men jag är verkligen nyfiken. Vet du? Det verkar som att vi borde veta. Du kanske måste berätta för oss om vi inte kan ta reda på det."
        },
        "TableType": {
            "name": "$~tabell",
            "emotion": "angry",
            "doc": "$~Jag representerar ett bord.",
            "conflict": {
                "ExpectedColumnType": "$~Jag behöver en kolumntyp"
            }
        },
        "TextType": {
            "name": "$~text",
            "description": "$~$1[$1|text]",
            "emotion": "happy",
            "doc": [
                "$~Jag representerar fantastiskt den mest fantastiska sorts värde som finns, @Text.",
                "$~\\story•'': 'Det var en gång...'\\"
            ]
        },
        "TypePlaceholder": {
            "name": "$~platshållare",
            "emotion": "eager",
            "doc": "$~Jag hoppas kunna representera en typ någon dag, ungefär som min bästis @ExpressionPlaceholder representerar ett uttryck! Kan du hjälpa mig att bestämma vilken sort?"
        },
        "UnionType": {
            "name": "$~alternativ",
            "description": "$~$1 | $2",
            "emotion": "curious",
            "doc": [
                "$~Vem ska jag representera, A eller B eller något annat? Jag kan aldrig bestämma mig!",
                "$~\\indecision•''|#|{ø}: \"Jag vet inte!\"\\"
            ]
        },
        "Unit": {
            "name": "$~enhet",
            "description": "$~$1",
            "emotion": "precise",
            "doc": [
                "$~Jag representerar alla enheter som ett @Number kan ha, inklusive ingen enhet, till den mest komplicerade enhet du kan tänka dig. Som gravitation, till exempel:",
                "$~\\gravity•m/s^2: 9,8m/s^2\\",
                "$~Jag dyker upp i @Bind, men också direkt efter @Number. Jag hjälper till att se till att siffror är av samma slag, och kommer definitivt att berätta för dig om de inte är det, om det är ett misstag!"
            ]
        },
        "UnparsableType": {
            "name": "$~omöjligatttolka",
            "emotion": "curious",
            "doc": "$~Jag representerar typen av ett okänt uttryck. Jag dyker upp när du försöker använda det uttrycket för något."
        },
        "VariableType": {
            "name": "$~variabeltyp",
            "emotion": "curious",
            "doc": "$~Känner du till @TypeVariable och hur de representerar någon okänd typ av värde? Jag representerar dem i alla förhandlingar mellan värderingar."
        },
        "CycleType": {
            "name": "$~cykel",
            "description": "$~beror på sig själv",
            "emotion": "curious",
            "doc": "$~Ibland beror värderingar på sig själva, och därför vet vi inte vilken typ av värde de är. Jag representerar den situationen."
        },
        "UnknownVariableType": {
            "name": "$~okändvariabel",
            "emotion": "curious",
            "doc": "$~Ibland försöker vi gissa vad något är för värde; Jag dyker upp när vi inte vet."
        },
        "NotAType": {
            "name": "$~oväntad",
            "description": "$~inte en $1",
            "emotion": "curious",
            "doc": "$~Ibland vet vi vilket värde något ska vara. Som att @ListAccess behöver ett @Number. Om vi inte får det så representerar jag att något är en annan typ än vad vi förväntade oss."
        },
        "NoExpressionType": {
            "name": "$~ingetuttryck",
            "emotion": "angry",
            "doc": "$~Vet du hur @Block behöver minst ett uttryck? Jag är vad du får när du inte ger en. Så ge en!"
        },
        "NotEnclosedType": {
            "name": "$~inteistruktur,omvandlingellerreaktion",
            "emotion": "curious",
            "doc": "$~@This, hur snyggt de än är, hör bara hemma på vissa ställen. Jag dyker upp när de går vilse, så ingen vet vilket värde de representerar."
        },
        "NotImplementedType": {
            "name": "$~oimplementerad",
            "emotion": "curious",
            "doc": "$~När du använder @ExpressionPlaceholder, men inte säg vilken typ de är, är jag typen du får. Ta itu med det!"
        },
        "UnknownNameType": {
            "name": "$~okäntnamn",
            "description": "$~$1[$1 är inte definierad |ett namn gavs inte]",
            "emotion": "curious",
            "doc": "$~Du vet hur ibland @Reference och @PropertyReference inte känner till namnet du pratar om? Jag är med när det händer, för att visa att vi inte vet vem du pratar om."
        },
        "NonFunctionType": {
            "name": "$~icke-funktion",
            "description": "$~icke-funktion",
            "emotion": "confused",
            "doc": "$~Några av oss förväntade sig funktioner; Jag dyker upp när vi inte får någon."
        }
    },
    "basis": {
        "Boolean": {
            "doc": [
                "$~Vi är \\⊤\\ och \\⊥\\. \\⊤\\ är sant. \\⊥\\ är falskt. \\⊤\\ är inte \\⊥\\; \\⊥\\ är inte \\⊤\\. Så här är det.",
                "$~Hur gör du oss? Bara \\⊤\\ och \\⊥\\, inget mer, inget mindre.",
                "$~Vissa använder tangentbordet (/ctrl+9/ för \\⊤\\ och /ctrl+0/ för \\⊥\\). Vissa använder teckensökningen längst ner i editorn. Eller så kan du dra oss härifrån.",
                "$~Kolla in vår @FunctionDefinition nedan. De är väldigt logiska."
            ],
            "name": ["$~⊤⊥", "$~Boolean"],
            "function": {
                "and": {
                    "doc": [
                        "$~Jag utvärderar till \\⊤\\ *endast* när båda värdena är \\⊤\\. Hjälpsamt för att avgöra om många saker är sanna. Det finns bara fyra möjliga utfall",
                        "$~\\⊤ & ⊤\\",
                        "$~\\⊤ & ⊥\\",
                        "$~\\⊥ & ⊤\\",
                        "$~\\⊥ & ⊥\\"
                    ],
                    "names": ["$~&", "$~och"],
                    "inputs": [
                        {
                            "doc": "$~Den andra @Boolean att kontrollera. Om den första är \\⊥\\, spelar det ingen roll vad detta är, funktionen kommer att utvärderas till \\⊥\\.",
                            "names": "$~värde"
                        }
                    ]
                },
                "or": {
                    "doc": [
                        "$~Jag utvärderar till \\⊤\\ när *endera* värdet är \\⊤\\. Hjälpsamt för att avgöra om en av många saker är sann. Det finns bara fyra möjliga utfall",
                        "$~\\⊤ | ⊤\\",
                        "$~\\⊤ | ⊥\\",
                        "$~\\⊥ | ⊤\\",
                        "$~\\⊥ | ⊥\\"
                    ],
                    "names": ["$~|", "$~eller"],
                    "inputs": [
                        {
                            "doc": "$~Den andra @Boolean att kontrollera. Om den första är \\⊥\\, kommer funktionen endast att utvärderas till \\⊤\\ om detta är \\⊤\\.",
                            "names": "$~värde"
                        }
                    ]
                },
                "not": {
                    "doc": "$~Jag får motsatsen till mig själv: om \\⊤\\ ger det \\⊥\\, om \\⊥\\ ger det \\⊤\\.",
                    "names": ["$~~", "$~inte"],
                    "inputs": []
                },
                "equals": {
                    "doc": "$~\\⊤\\ om båda är \\⊤\\ eller båda är \\⊥\\.",
                    "names": ["$~=", "$~lika"],
                    "inputs": [
                        {
                            "doc": "$~Det andra värdet att kontrollera.",
                            "names": "$~värde"
                        }
                    ]
                },
                "notequal": {
                    "doc": "$~\\⊤\\ om båda är motsatser.",
                    "names": ["$~≠", "$~lika"],
                    "inputs": [
                        {
                            "doc": "$~Det andra värdet att kontrollera.",
                            "names": "$~värde"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$~Konverterar en @Boolean till motsvarande @Text-värden, \\'⊤'\\ och \\'⊥'\\"
            }
        },
        "None": {
            "doc": [
                "$~/Hej, @FunctionDefinition här. @FunctionDefinition gillar inte att säga så mycket, så jag ska tolka./",
                "$~Jag är @None. Åkalla mig med \\ø\\. Jag är behjälplig när du vill representera frånvaron av något."
            ],
            "name": ["$~o", "$~Ingen"],
            "function": {
                "equals": {
                    "doc": "$~Är ett annat värde också ingenting? Det är bättre annars, \\⊥\\.",
                    "names": ["$~=", "$~lika"],
                    "inputs": [
                        {
                            "doc": "$~Det andra värdet.",
                            "names": "$~värde"
                        }
                    ]
                },
                "notequals": {
                    "doc": "$~Är ett annat värde /inte/ ingenting?",
                    "names": ["$~≠", "$~lika"],
                    "inputs": [
                        {
                            "doc": "$~Det andra värdet.",
                            "names": "$~värde"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$~Vill du göra \\ø\\ till \\'ø'\\? Det här är din chans."
            }
        },
        "Text": {
            "doc": [
                "$~Jag kan vara vilken text du vill, från vilket språk som helst, och använda någon av dessa symboler för öppnings- och stängningssymboler: \\\"\"\\, \\“”\\, \\„“\\, \\''\\, \\''\\, \\‹ ›\\, \\«»\\, \\「」\\ eller \\『』\\.",
                "$~För att illustrera, överväg dessa vackra fraser",
                "$~\\“Det finns bara två sätt att leva sitt liv. En är som om ingenting är ett mirakel. Den andra är som om allt är ett mirakel.”\\",
                "$~\\『一日三秋』\\",
                "$~Kom bara ihåg att stänga mig om du öppnar mig och använd den matchande symbolen. Annars vet jag inte att du är färdig med dina ord.",
                "$~\\'hello'/en'hola'/es-MX\\",
                "$~Du kan också tagga mig med språk och till och med ge flera översättningar. Jag kommer att utvärdera till vilka språk som för närvarande är valda, om det finns ett matchande språk.",
                "$~Om du vill göra mig med några andra värden kan du använda en symbol för att",
                "$~Tänk till exempel på detta:",
                "$~\\\"Här är några summor \\1 + 2\\, \\2 + 3\\, \\3 + 4\\\"\\",
                "$~Se hur elegant jag just utvärderade dessa summor och placerade dem i @Text?",
                "$~Annars finns det bara så många härliga funktioner som @FunctionDefinition gjorde för mig att göra alla möjliga saker med ord!"
            ],
            "name": ["$~''", "$~Text"],
            "function": {
                "length": {
                    "doc": [
                        "$~Jag utvärderar till antalet läsbara tecken i texten; en bokstav är ett tecken, en emoji är ett tecken, etc. Till exempel:",
                        "$~\\'hej'.length()\\",
                        "$~\\'🐈📚'.length()\\"
                    ],
                    "names": ["$~📏", "$~längd"],
                    "inputs": []
                },
                "equals": {
                    "doc": "$~\\⊤\\ om jag har samma teckensekvens som den givna @Text.",
                    "names": ["$~=", "$~lika"],
                    "inputs": [
                        {
                            "doc": "$~@Text att jämföra.",
                            "names": "$~värde"
                        }
                    ]
                },
                "notequals": {
                    "doc": "$~\\⊤\\ om jag har /inte/ samma teckensekvens som den givna @Text.",
                    "names": "$~≠",
                    "inputs": [
                        {
                            "doc": "$~@Text att jämföra",
                            "names": "$~värde"
                        }
                    ]
                },
                "has": {
                    "doc": [
                        "$~\\⊤\\ om den givna @Text visas i mig.",
                        "$~\\'fann du det du letade efter?'.has('du')\\"
                    ],
                    "names": ["$~⊆", "$~har"],
                    "inputs": [
                        {
                            "doc": "$~@Text att söka efter hos mig.",
                            "names": "$~text"
                        }
                    ]
                },
                "starts": {
                    "doc": [
                        "$~\\⊤\\ om jag börjar med den givna @Text.",
                        "$~\\'hej vers!'.starts('hej')\\",
                        "$~\\'hej vers!'.starts('vers')\\"
                    ],
                    "names": ["$~startar"],
                    "inputs": [
                        {
                            "doc": "$~@Text att kolla efter i början av mig.",
                            "names": "$~text"
                        }
                    ]
                },
                "ends": {
                    "doc": [
                        "$~\\⊤\\ om jag avslutar med den givna @Text.",
                        "$~\\'är jag en fråga?'.ends('?')\\",
                        "$~\\'Jag är ingen fråga.'.ends('?')\\"
                    ],
                    "names": ["$~slutar"],
                    "inputs": [
                        {
                            "doc": "$~@Text att kolla efter i slutet av mig.",
                            "names": "$~text"
                        }
                    ]
                },
                "repeat": {
                    "doc": [
                        "$~Jag gör en ny @Text som är jag, upprepade antalet gånger \\count\\:",
                        "$~\\'hej' · 5\\",
                        "$~Om du ger mig ett bråktal @Number, ignorerar jag bråket:",
                        "$~\\'hej' · 5.5\\",
                        "$~Om du ger mig ett negativt @Number eller noll, ger jag en tom @Text.",
                        "$~\\'hej ' · -5\\",
                        "$~Den längsta text jag kan göra är 65 535 tecken. Om du försöker göra en längre text så upprepar jag texten så många gånger jag kan."
                    ],
                    "names": ["$~·", "$~🔁", "$~upprepas", "$~upprepa"],
                    "inputs": [
                        {
                            "doc": "$~Antalet gånger jag ska upprepa mig själv i den nya texten.",
                            "names": "$~räkna"
                        }
                    ]
                },
                "segment": {
                    "doc": [
                        "$~Jag delar upp mig själv i en @List of @Text, använder den givna @Text som en separator och tar bort separatorerna. Till exempel:",
                        "$~\\'äpplen, apelsiner, vindruvor' ÷ ', '\\",
                        "$~Om avgränsaren är en tom @Text delar jag upp mig själv i tecken:",
                        "$~\\'🖌️🏠🥸' ÷ ''\\"
                    ],
                    "names": ["$~÷", "$~segmenterade", "$~segment"],
                    "inputs": [
                        {
                            "doc": "$~@Text som ska användas som avgränsare.",
                            "names": "$~avgränsare"
                        }
                    ]
                },
                "combine": {
                    "doc": [
                        "$~Ibland är det bra att kombinera till @Text till en. Ge mig ytterligare en @Text så skapar jag en ny text som förenar oss:",
                        "$~\\'hej ' + 'vers'\\"
                    ],
                    "names": ["$~+", "$~kombinerad", "$~kombinera"],
                    "inputs": [
                        {
                            "doc": "$~@Text som ska läggas till.",
                            "names": "$~text"
                        }
                    ]
                }
            },
            "conversion": {
                "list": "$~Delar upp texten i en lista med enskilda tecken.",
                "number": "$~Konverterar text till ett @Number, och om det inte är ett tal, ett inte ett talvärde."
            }
        },
        "Number": {
            "doc": [
                "$~Jag skapar @Number, med hur många enheter du kan tänka dig!",
                "$~Här är mina topp 5:",
                "$~\\0\\",
                "$~\\1berättelse\\",
                "$~\\πpaj\\",
                "$~\\∞rock\\",
                "$~\\1000000kramar\\",
                "$~Det är i princip ett oändligt antal siffror.",
                "$~Och ett oändligt antal enheter!",
                "$~Och ett oändligt antal antal/enhetspar...",
                "$~Jag kan vara heltal, reella tal, negativa, positiva, bråktal, decimaltal, till och med inte ett tal.",
                "$~Och du kan skriva till mig med många olika talsystem, inklusive arabiska \\123\\, romerska \\ⅩⅩⅩⅠⅩ\\, japanska \\二十\\ och mer:",
                "$~\\1 + Ⅰ + 一\\",
                "$~Du kan också skriva mig i baserna 2 till 16 genom att sätta ett basnummer så här:",
                "$~\\2;11111111\\",
                "$~\\10;255\\",
                "$~\\16;FF\\",
                "$~Det finns ett speciellt nummer som kallas NaN som är möjligt när du skriver något som inte är ett nummer:",
                "$~\\2;22\\",
                "$~Det finns ingen siffra '2' i bas 2, så det är inte ett giltigt tal. NaN kommer också att visas om du försöker konvertera icke-nummertext till nummer",
                "$~\\'hej'→#\\"
            ],
            "name": ["$~#", "$~Antal"],
            "function": {
                "add": {
                    "doc": [
                        "$~Jag lägger till ett @Number med samma @Unit till mig själv och skapar ett nytt @Number av samma @Unit.",
                        "$~Till exempel:",
                        "$~\\1 + 1\\",
                        "$~\\3katt + 5katt\\",
                        "$~Om enheterna inte matchar, stoppar jag showen.",
                        "$~\\3katt + 5hund\\"
                    ],
                    "names": ["$~+", "$~tillägga"],
                    "inputs": [
                        {
                            "doc": "$~@Number att lägga till.",
                            "names": "$~antal"
                        }
                    ]
                },
                "subtract": {
                    "doc": [
                        "$~Jag subtraherar @Number du ger mig från mig själv och skapar ett nytt @Number av samma @Unit.",
                        "$~Till exempel:",
                        "$~\\1 - 1\\",
                        "$~\\3katt - 5katt\\",
                        "$~Om enheterna inte matchar, stoppar jag showen.",
                        "$~\\3katt - 5hund\\"
                    ],
                    "names": ["$~-", "$~subtrahera"],
                    "inputs": [
                        {
                            "doc": "$~@Number att subtrahera från mig.",
                            "names": "$~antal"
                        }
                    ]
                },
                "multiply": {
                    "doc": [
                        "$~Jag multiplicerar mig själv till det givna @Number, skapar en produkt av min @Unit och det givna numrets @Unit:",
                        "$~\\5 · 5\\",
                        "$~\\5m · 5m\\",
                        "$~\\5m · 1/s\\"
                    ],
                    "names": ["$~·", "$~multiplicera"],
                    "inputs": [
                        {
                            "doc": "$~Antalet som ska multipliceras.",
                            "names": "$~antal"
                        }
                    ]
                },
                "divide": {
                    "doc": [
                        "$~Jag dividerar mig själv med det givna @Number, skapar en kvot av min @Unit och det givna numrets @Unit:",
                        "$~\\5 ÷ 5\\",
                        "$~\\5m ÷ 5m\\",
                        "$~\\5m ÷ 5s\\"
                    ],
                    "names": ["$~÷", "$~dela"],
                    "inputs": [
                        {
                            "doc": "$~@Number att dela mig med.",
                            "names": "$~antal"
                        }
                    ]
                },
                "remainder": {
                    "doc": [
                        "$~Jag delar mig själv med det givna @Number, men ger resten:",
                        "$~\\10 % 2\\",
                        "$~\\10m % 2\\",
                        "$~\\10m/s % 3\\"
                    ],
                    "names": ["$~%", "$~återstoden"],
                    "inputs": [
                        {
                            "doc": "$~@Number att dela mig med.",
                            "names": "$~antal"
                        }
                    ]
                },
                "positive": {
                    "doc": [
                        "$~Jag skapar ett nytt @Number som gör mig positiv, om negativ.",
                        "$~\\-200.positive()\\"
                    ],
                    "names": ["$~positiv"],
                    "inputs": []
                },
                "round": {
                    "doc": [
                        "$~Jag skapar ett nytt @Number som avrundar mig till närmaste heltal.",
                        "$~\\9.4.round()\\",
                        "$~\\9.5.round()\\",
                        "$~\\9.6.round()\\"
                    ],
                    "names": ["$~runda"],
                    "inputs": []
                },
                "roundDown": {
                    "doc": [
                        "$~Jag skapar ett nytt @Number som avrundas till minsta heltal mindre än mig.",
                        "$~\\10.5.roundDown()\\",
                        "$~\\10.1.roundDown()\\",
                        "$~\\10.01.roundDown()\\"
                    ],
                    "names": ["$~rundaner"],
                    "inputs": []
                },
                "roundUp": {
                    "doc": [
                        "$~Jag skapar ett nytt @Number som avrundas till det minsta heltal som är större än mig.",
                        "$~\\10.5.roundUp()\\",
                        "$~\\10.9.roundUp()\\",
                        "$~\\10.99.roundUp()\\"
                    ],
                    "names": ["$~roundUp"],
                    "inputs": []
                },
                "power": {
                    "doc": [
                        "$~Jag höjer mig till den givna @Number makt. Bråkexponenter är okej!",
                        "$~\\2 ^ 8\\",
                        "$~\\10 ^ -2\\",
                        "$~\\5 ^ -.5\\"
                    ],
                    "names": ["$~^", "$~driva"],
                    "inputs": [
                        {
                            "doc": "$~Exponenten att höja mig till.",
                            "names": "$~antal"
                        }
                    ]
                },
                "root": {
                    "doc": [
                        "$~Jag skapar roten till mig själv med hjälp av den givna roten.",
                        "$~\\4 √ 2\\",
                        "$~\\1000 √ 3\\"
                    ],
                    "names": ["$~√", "$~rot"],
                    "inputs": [
                        {
                            "doc": "$~Roten att beräkna.",
                            "names": "$~antal"
                        }
                    ]
                },
                "lessThan": {
                    "doc": [
                        "$~\\⊤\\ om jag är mindre än det givna @Number:",
                        "$~\\1 < 2\\",
                        "$~\\2 < 1\\"
                    ],
                    "names": ["$~<", "$~mindreän"],
                    "inputs": [
                        {
                            "doc": "$~@Number att jämföra mig med.",
                            "names": "$~antal"
                        }
                    ]
                },
                "lessOrEqual": {
                    "doc": [
                        "$~\\⊤\\ om jag är mindre än eller lika med det givna @Number:",
                        "$~\\1 ≤ 2\\",
                        "$~\\2 ≤ 1\\",
                        "$~\\2 ≤ 2\\"
                    ],
                    "names": ["$~≤", "$~mindrelika"],
                    "inputs": [
                        {
                            "doc": "$~@Number att jämföra mig med.",
                            "names": "$~antal"
                        }
                    ]
                },
                "greaterThan": {
                    "doc": [
                        "$~\\⊤\\ om jag är större än det givna @Number:",
                        "$~\\1 > 2\\",
                        "$~\\2 > 1\\"
                    ],
                    "names": ["$~>", "$~störreän"],
                    "inputs": [
                        {
                            "doc": "$~@Number att jämföra mig med.",
                            "names": "$~antal"
                        }
                    ]
                },
                "greaterOrEqual": {
                    "doc": [
                        "$~\\⊤\\ om jag är större än eller lika med det givna @Number:",
                        "$~\\1 ≥ 2\\",
                        "$~\\2 ≥ 1\\",
                        "$~\\2 ≥ 2\\"
                    ],
                    "names": ["$~≥", "$~störrejämlikt"],
                    "inputs": [
                        {
                            "doc": "$~@Number att jämföra mig med.",
                            "names": "$~antal"
                        }
                    ]
                },
                "equal": {
                    "doc": [
                        "$~\\⊤\\ om jag är lika med det givna @Number:",
                        "$~\\1 = 2\\",
                        "$~\\2 = 2\\"
                    ],
                    "names": ["$~=", "$~lika"],
                    "inputs": [
                        {
                            "doc": "$~@Number att jämföra mig med.",
                            "names": "$~antal"
                        }
                    ]
                },
                "notequal": {
                    "doc": [
                        "$~\\⊤\\ om jag är lika med det givna @Number:",
                        "$~\\1 ≠ 2\\",
                        "$~\\2 ≠ 2\\"
                    ],
                    "names": ["$~≠", "$~lika"],
                    "inputs": [
                        {
                            "doc": "$~@Number att jämföra mig med.",
                            "names": "$~antal"
                        }
                    ]
                },
                "cos": {
                    "doc": ["$~Beräkna cosinus för mig.", "$~\\π.cos()\\"],
                    "names": ["$~cos", "$~cosinus"],
                    "inputs": []
                },
                "sin": {
                    "doc": ["$~Beräkna sinus för mig.", "$~\\π.cos()\\"],
                    "names": ["$~synd", "$~sinus"],
                    "inputs": []
                },
                "min": {
                    "doc": [
                        "$~Hitta det minsta antalet av mig och andra.",
                        "$~\\1.min(2 3 -1)\\"
                    ],
                    "names": "$~min",
                    "inputs": [
                        {
                            "doc": "$~Så många nummer du vill ge mig!",
                            "names": "$~tal"
                        }
                    ]
                },
                "max": {
                    "doc": [
                        "$~Hitta det största antalet av mig och andra.",
                        "$~\\1.max(2 3 4)\\"
                    ],
                    "names": "$~max",
                    "inputs": [
                        {
                            "doc": "$~Så många nummer du vill ge mig!",
                            "names": "$~tal"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$~En arabisk @Text-representation av mina siffror.",
                "list": [
                    "$~Jag konverterar ett tal till en lista med siffror från \\1\\ till vilket nummer som än ges. Till exempel:",
                    "$~\\10→[]\\"
                ],
                "s2m": "$~Sekunder till minuter",
                "s2h": "$~Sekunder till timmar",
                "s2day": "$~Sekunder till dagar",
                "s2wk": "$~Sekunder till veckor",
                "s2year": "$~Sekunder till år",
                "s2ms": "$~Sekunder till millisekunder",
                "ms2s": "$~Millisekunder till sekunder",
                "min2s": "$~Minuter till sekunder",
                "h2s": "$~Timmar till sekunder",
                "day2s": "$~Dagar till sekunder",
                "wk2s": "$~Veckor till sekunder",
                "yr2s": "$~År till sekunder",
                "m2pm": "$~Meter till pikometer",
                "m2nm": "$~Meter till nanometer",
                "m2micro": "$~Meter till mikrometer",
                "m2mm": "$~Meter till millimeter",
                "m2cm": "$~Meter till centimenter",
                "m2dm": "$~Meter till decimeter",
                "m2km": "$~Meter till kilometer",
                "m2Mm": "$~Meter till megameter",
                "m2Gm": "$~Meter till gigameter",
                "m2Tm": "$~Meter till terameters",
                "pm2m": "$~Picometrar till meter",
                "nm2m": "$~Nanometer till meter",
                "micro2m": "$~Mikrometer till meter",
                "mm2m": "$~Millimeter till meter",
                "cm2m": "$~Centimeter till meter",
                "dm2m": "$~Decimeter till meter",
                "km2m": "$~Kilometer till meter",
                "Mm2m": "$~Megameter till meter",
                "Gm2m": "$~Gigameter till meter",
                "Tm2m": "$~Terameter till meter",
                "km2mi": "$~Kilometer till miles",
                "mi2km": "$~Mil till kilometer",
                "cm2in": "$~Centimeter till tum",
                "in2cm": "$~Tum till centimeter",
                "m2ft": "$~Meter till fot",
                "ft2m": "$~Fötter till meter",
                "g2mg": "$~Gram till milligram",
                "mg2g": "$~Milligram till gram",
                "g2kg": "$~Gram till kilogram",
                "kg2g": "$~Kilogram till gram",
                "g2oz": "$~Gram till uns",
                "oz2g": "$~Uns till gram",
                "oz2lb": "$~Uns till pund",
                "lb2oz": "$~Pund till uns"
            }
        },
        "List": {
            "doc": [
                "$~Jag är en sekvens av värderingar, av alla slag!",
                "$~Du kan lägga vad som helst i mig: @Boolean, @Number, @Text, @Boolean, till och med andra @List, @Set, @Map eller något uttryck. Här är en enkel:",
                "$~\\['äpple' 'banan' 'mango']\\",
                "$~Det som gör mig speciell är att jag håller ordning på saker och ting och jag numrerar allt från 1 till hur många föremål som helst i mig.",
                "$~Mina objekt är numrerade, med start från 1. Du kan få värden som jag lagrar med @ListAccess med deras nummer:",
                "$~Till exempel är det andra värdet i den här listan \\['banan']\\",
                "$~\\['äpple' 'banan' 'mango'][2]\\",
                "$~Jag kan ha vad som helst i mig. Titta på den här listan, med @Text, @Number och @Time!",
                "$~\\['apple' 10 + 10 Time()]\\",
                "$~När du ger mig en lista över många saker, kommer jag att generalisera dem om de har en typ gemensamt. Men ibland kanske du bokstavligen menar de där specifika sakerna. Om du gör det, sätt bara en ! efter mig, och jag ska se till att jag representerar en lista med specifikt endast dessa värden.",
                "$~\\['äpple' 'banan' 'mango']!\\",
                "$~Det är typ det. Men jag kan ringa olika spännande saker med min @FunctionDefinition!"
            ],
            "name": ["$~[]", "$~Lista"],
            "kind": "$~Slag",
            "out": "$~Resultat",
            "outofbounds": "$~utanför gränserna",
            "function": {
                "add": {
                    "doc": [
                        "$~Jag skapar en ny @List med det givna objektet i slutet.",
                        "$~\\['äpple' 'banan' 'mango'].with('vattenmelon')\\"
                    ],
                    "names": ["$~med", "$~tillägga"],
                    "inputs": [
                        {
                            "doc": "$~Jag är värdet du vill lägga till.",
                            "names": "$~punkt"
                        }
                    ]
                },
                "append": {
                    "doc": [
                        "$~Jag skapar en ny @List med mina värden, sedan alla värden för den givna @List efter mig.",
                        "$~\\['äpple' 'banan' 'mango'].withList(['vattenmelon' 'starfruit'])\\",
                        "$~Det är dock lite lättare att använda @Spread, så här:",
                        "$~\\['äpple' 'banan' 'mango' :['vattenmelon' 'starfruit']]\\"
                    ],
                    "names": ["$~medLista", "$~bifoga"],
                    "inputs": [
                        {
                            "doc": "$~Listan över värden att lägga till.",
                            "names": "$~lista"
                        }
                    ]
                },
                "replace": {
                    "doc": [
                        "$~Jag skapar en ny lista som ersätter värdet vid det givna indexet med det givna värdet.",
                        "$~\\['äpple' 'banan' 'mango'].replace(1 'kiwi')\\"
                    ],
                    "names": ["$~ersätta"],
                    "inputs": [
                        {
                            "doc": "$~Indexet för värdet som ska ersättas",
                            "names": "$~index"
                        },
                        {
                            "doc": "$~Ersättningsvärdet",
                            "names": "$~värde"
                        }
                    ]
                },
                "length": {
                    "doc": "$~@Number föremål i mig.",
                    "names": ["$~📏", "$~längd"],
                    "inputs": []
                },
                "random": {
                    "doc": [
                        "$~En slumpmässigt vald av mina objekt, eller @None om jag är tom.",
                        "$~\\['äpple' 'banan' 'mango'].random()\\"
                    ],
                    "names": "$~slumpmässig",
                    "inputs": []
                },
                "shuffled": {
                    "doc": [
                        "$~Gör en ny lista med objekten i den senast slumpvis ordnade.",
                        "$~\\['äpple' 'banan' 'mango'].shuffled()\\"
                    ],
                    "names": "$~blandade",
                    "inputs": []
                },
                "first": {
                    "doc": [
                        "$~Det första objektet i mig, eller @None om jag är tom.",
                        "$~\\['äpple' 'banan' 'mango'].first()\\"
                    ],
                    "names": "$~första",
                    "inputs": []
                },
                "last": {
                    "doc": [
                        "$~Den sista posten i mig, eller @None om jag är tom.",
                        "$~\\['äpple' 'banan' 'mango'].first()\\"
                    ],
                    "names": "$~sista",
                    "inputs": []
                },
                "has": {
                    "doc": [
                        "$~\\⊤\\ om jag har ett föremål som är lika med det givna föremålet i mig.",
                        "$~\\['äpple' 'banan' 'mango'].has('banan')\\"
                    ],
                    "names": "$~har",
                    "inputs": [
                        {
                            "doc": "$~Värdet att söka efter.",
                            "names": "$~punkt"
                        }
                    ]
                },
                "join": {
                    "doc": [
                        "$~Jag kombinerar objekten i min lista till @Text, åtskilda av den givna avgränsaren @Text.",
                        "$~\\['äpple' 'banan' 'mango'].join(', ')\\"
                    ],
                    "names": "$~anslutasigtill",
                    "inputs": [
                        {
                            "doc": "$~Texten att separera objekten med, eventuellt tom.",
                            "names": "$~separator"
                        }
                    ]
                },
                "subsequence": {
                    "doc": [
                        "$~Jag får en lista i den här listan, som börjar på indexet du anger och slutar med det sista objektet, eller om du tillhandahåller en, ett visst objekt.",
                        "$~\\['äpple' 'banan' 'mango'].subsequence(2)\\",
                        "$~\\['äpple' 'banan' 'mango'].subsequence(1 2)\\",
                        "$~Och titta! Om du anger siffror i felaktig ordning, ger jag dig det omvända",
                        "$~\\['äpple' 'banan' 'mango'].subsequence(3 1)\\",
                        "$~Om du ger mig något mindre än 1 för ett index, antar jag att du menar 1.",
                        "$~\\['apple' 'banana' 'mango'].subsequence(-1003243 2)\\",
                        "$~Och om du ger mig något större än det största indexet, antar jag att du menar slutet.",
                        "$~\\['apple' 'banana' 'mango'].subsequence(3 2304032432)\\"
                    ],
                    "names": "$~efterföljande",
                    "inputs": [
                        {
                            "doc": "$~Indexet för det första objektet i den efterföljande du vill ha.",
                            "names": "$~start"
                        },
                        {
                            "doc": "$~Det valfria indexet för det sista objektet i den efterföljande sekvensen du vill ha. Om du inte ger en, kommer din lista att sluta med den sista posten i listan.",
                            "names": "$~avsluta"
                        }
                    ]
                },
                "sansFirst": {
                    "doc": [
                        "$~Jag skapar en lista utan mitt första objekt.",
                        "$~\\['apple' 'banan' 'mango'].sansFirst()\\"
                    ],
                    "names": ["$~utanförst", "$~sansFirst"],
                    "inputs": []
                },
                "sansLast": {
                    "doc": [
                        "$~Jag skapar en lista utan mitt sista objekt.",
                        "$~\\['apple' 'banan' 'mango'].sansLast()\\"
                    ],
                    "names": ["$~utanSista", "$~sansLast"],
                    "inputs": []
                },
                "sans": {
                    "doc": [
                        "$~Jag, men utan de första förekomsterna av det givna värdet.",
                        "$~\\['apple' 'banan' 'mango' 'apple'].sans('apple')\\"
                    ],
                    "names": ["$~utan", "$~sans"],
                    "inputs": [
                        {
                            "doc": "$~Värdet att ta bort den första förekomsten av.",
                            "names": "$~värde"
                        }
                    ]
                },
                "sansAll": {
                    "doc": [
                        "$~Jag, men utan alla förekomster av det givna värdet.",
                        "$~\\['apple' 'banan' 'mango' 'apple'].sans('apple')\\"
                    ],
                    "names": ["$~utanAlla", "$~sansAll"],
                    "inputs": [
                        {
                            "doc": "$~Värdet att ta bort alla förekomster av från listan.",
                            "names": "$~värde"
                        }
                    ]
                },
                "reverse": {
                    "doc": [
                        "$~Jag, men omvänt!",
                        "$~\\['apple' 'banan' 'mango'].reverse()\\"
                    ],
                    "names": ["$~omvänt", "$~motsatt"],
                    "inputs": []
                },
                "equals": {
                    "doc": [
                        "$~\\⊤\\ om mina varor och beställning är exakt samma som den givna @List.",
                        "$~\\['äpple' 'banan' 'mango'] = ['äpple' 'mango' 'banan']\\"
                    ],
                    "names": ["$~=", "$~lika"],
                    "inputs": [
                        {
                            "doc": "$~@List att jämföra mig med.",
                            "names": "$~lista"
                        }
                    ]
                },
                "notequals": {
                    "doc": [
                        "$~\\⊤\\ om mina varor och beställning är /inte/ exakt samma som den givna @List.",
                        "$~\\['äpple' 'banan' 'mango'] ≠ ['äpple' 'mango' 'banan']\\"
                    ],
                    "names": ["$~≠", "$~lika"],
                    "inputs": [
                        {
                            "doc": "$~@List att jämföra mig med.",
                            "names": "$~lista"
                        }
                    ]
                },
                "translate": {
                    "doc": [
                        "$~Ge mig en @FunctionDefinition som tar ett värde och valfritt index som indata och producerar ett värde, så kommer jag att utvärdera det på vart och ett av mina objekt och översätta mina värden till nya värden.",
                        "$~Tänk dig till exempel att jag var en lista med @Number och att du ville dubbla dem alla:",
                        "$~\\[2 4 6 8].translate(ƒ(num•#) num · 2)\\"
                    ],
                    "names": "$~översätta",
                    "inputs": [
                        {
                            "doc": "$~@FunctionDefinition som kommer att översätta varje objekt.",
                            "names": "$~översättare"
                        }
                    ],
                    "translator": [
                        {
                            "doc": "$~Objektet som översätts.",
                            "names": "$~punkt"
                        },
                        {
                            "doc": "$~Indexet för objektet som översätts.",
                            "names": "$~index"
                        },
                        {
                            "doc": "$~Listan som översätts.",
                            "names": "$~lista"
                        }
                    ]
                },
                "filter": {
                    "doc": [
                        "$~Ge mig en @FunctionDefinition som tar ett värde och valfritt index som indata och producerar en @Boolean, så skapar jag en ny lista som bara inkluderar de objekt som resulterar i \\⊤\\.",
                        "$~Tänk dig till exempel att jag var en lista med @Number och att du bara ville ha de positiva:",
                        "$~\\[2 -4 8 -16].filter(ƒ(tal•#) num ≥ 0)\\"
                    ],
                    "names": "$~filtrera",
                    "inputs": [
                        {
                            "doc": "$~En @FunctionDefinition som kontrollerar varje objekt och producerar \\⊤\\ om det ska behållas.",
                            "names": "$~pjäs"
                        }
                    ],
                    "checker": [
                        {
                            "doc": "$~Objektet som kontrolleras.",
                            "names": "$~punkt"
                        },
                        {
                            "doc": "$~Indexet för objektet som kontrolleras.",
                            "names": "$~index"
                        },
                        {
                            "doc": "$~Listan som filtreras.",
                            "names": "$~lista"
                        }
                    ]
                },
                "all": {
                    "doc": [
                        "$~Ge mig en @FunctionDefinition som tar ett värde som indata och producerar en @Boolean om den matchar något villkor. Jag skapar \\⊤\\ om alla objekt matchar villkoret.",
                        "$~Tänk dig till exempel att jag var en lista med @Number och du ville veta om allt var positivt:",
                        "$~\\[2 -4 8 -16].all(ƒ(tal•#) num ≥ 0)\\"
                    ],
                    "names": "$~alla",
                    "inputs": [
                        {
                            "doc": "$~@FunctionDefinition som producerar \\⊤\\ om ett objekt uppfyller ditt villkor.",
                            "names": "$~pjäs"
                        }
                    ],
                    "checker": [
                        {
                            "doc": "$~Objektet som kontrolleras.",
                            "names": "$~punkt"
                        },
                        {
                            "doc": "$~Indexet för objektet som kontrolleras.",
                            "names": "$~index"
                        },
                        {
                            "doc": "$~Listan kontrolleras.",
                            "names": "$~lista"
                        }
                    ]
                },
                "until": {
                    "doc": [
                        "$~Ge mig en @FunctionDefinition som tar ett värde som indata och producerar en @Boolean om den matchar något villkor. Jag skapar en ny @List som innehåller alla objekt tills villkoret inte är uppfyllt.",
                        "$~Tänk dig till exempel att jag var en lista med @Text och att du ville ha allt tills \\'råtta'\\ hittades:",
                        "$~\\['katt' 'hund' 'råtta' 'mus' 'ponny'].tills(ƒ(djur•'') djur = 'råtta')\\"
                    ],
                    "names": "$~tills",
                    "inputs": [
                        {
                            "doc": "$~@FunctionDefinition som producerar \\⊤\\ om jag skulle sluta inkludera objekt.",
                            "names": "$~pjäs"
                        }
                    ],
                    "checker": [
                        {
                            "doc": "$~Objektet som kontrolleras.",
                            "names": "$~punkt"
                        },
                        {
                            "doc": "$~Indexet för objektet som kontrolleras.",
                            "names": "$~index"
                        },
                        {
                            "doc": "$~Listan följer efter.",
                            "names": "$~lista"
                        }
                    ]
                },
                "find": {
                    "doc": [
                        "$~Ge mig en @FunctionDefinition som tar ett värde som indata och producerar en @Boolean om den matchar några kriterier, så utvärderar jag till det matchande objektet.",
                        "$~Föreställ dig till exempel att du ville hitta det första djuret som hade vokalen \\'e'\\:",
                        "$~\\['katt' 'hund' 'råtta' 'mus' 'ponny'].find(ƒ(djur•'') animal.has('e'))\\"
                    ],
                    "names": "$~hitta",
                    "inputs": [
                        {
                            "doc": "$~@FunctionDefinition som producerar \\⊤\\ om den matchar dina sökkriterier.",
                            "names": "$~pjäs"
                        }
                    ],
                    "checker": [
                        {
                            "doc": "$~Objektet som kontrolleras.",
                            "names": "$~punkt"
                        },
                        {
                            "doc": "$~Indexet för objektet som kontrolleras.",
                            "names": "$~index"
                        },
                        {
                            "doc": "$~Listan som söks.",
                            "names": "$~lista"
                        }
                    ]
                },
                "combine": {
                    "doc": [
                        "$~Ge mig en @FunctionDefinition som tar den senaste kombinationen och ett nästa värde, och skapar en nästa kombination, så går jag från den första till den sista av mina objekt, skapar på varandra följande kombinationer och utvärderar till den sista kombinationen som din @FunctionDefinition utvärderar till.",
                        "$~Detta är verkligen användbart för att kombinera alla objekt i mig till ett enda värde. Tänk dig till exempel att du ville lägga till en lista med nummer:",
                        "$~\\[3 9 2 8 1 4].combine(0 ƒ(summa•# tal•#) summa + tal)\\"
                    ],
                    "names": ["$~kombinerad", "$~kombinera"],
                    "inputs": [
                        {
                            "doc": "$~Startkombinationen.",
                            "names": "$~första"
                        },
                        {
                            "doc": "$~@FunctionDefinition som tar den senaste kombinationen och nästa värde och producerar nästa kombination.",
                            "names": "$~kombinerare"
                        }
                    ],
                    "combiner": [
                        {
                            "doc": "$~Den nuvarande kombinationen",
                            "names": "$~kombination"
                        },
                        {
                            "doc": "$~Nästa objekt att kombinera.",
                            "names": "$~nästa"
                        },
                        {
                            "doc": "$~Indexet för nästa punkt",
                            "names": "$~index"
                        },
                        {
                            "doc": "$~Listan kombineras.",
                            "names": "$~lista"
                        }
                    ]
                },
                "sorted": {
                    "doc": [
                        "$~Jag kan ta en lista och göra en ny lista med dess värden sorterade. Så här:",
                        "$~\\[1 5 8 0 2].sorted()\\",
                        "$~Jag kan också göra det för @Text-värden",
                        "$~\\['orange' 'kiwi' 'banan' 'äpple'].sorted()\\",
                        "$~Och om du har en lista med värden som inte är @Number eller @Text, kan du ge mig en @FunctionDefinition som gör varje objekt till ett @Number så att jag kan sortera det. Här har vi till exempel en lista med listor av olika längd; om du ger mig en funktion som förvandlar varje lista till sin längd, kan jag sortera efter deras längd.",
                        "$~\\[[1] [2 3] [4 8 12] [8]].sorted(ƒ(lista) list.length())\\"
                    ],
                    "names": "$~sorterad",
                    "inputs": [
                        {
                            "doc": "$~Den valfria @FunctionDefinition som ska användas för att sortera ett listvärde. Det bör förvandla värdet till ett @Number som kan användas för att sortera listan.",
                            "names": "$~sequencer"
                        }
                    ],
                    "sequencer": [
                        {
                            "doc": "$~Värdet som ska förvandlas till ett @Number.",
                            "names": "$~värde"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$~Till en @Text-representation av listan.",
                "set": "$~Till en @Set, användbart för att ta bort dubbletter."
            }
        },
        "Set": {
            "doc": [
                "$~Jag är en uppsättning värderingar! Det betyder att jag kan innehålla hur många värden som helst, inklusive inga värden. Du kan göra mig så här:",
                "$~\\{1 2 3}\\",
                "$~Jag är riktigt bra om du vill behålla en samling saker utan några dubbletter.",
                "$~Det betyder att om du ger mig värderingar som jag redan har så ignorerar jag extrafunktionerna.",
                "$~Till exempel har den här uppsättningen många dubbletter:",
                "$~\\{1 1 2 2 3 3}\\",
                "$~Jag utvärderar det till bara \\{1 2 3}\\.",
                "$~Om du vill se om jag har ett värde i mig kan @SetOrMapAccess hjälpa:",
                "$~\\{'burk' 'flaska' 'glas'}{'kopp'}\\",
                "$~Vanligtvis, om du ger mig ett gäng värden som är av en vanlig typ, antar jag att de är en lista av den typen. Som att den här uppsättningen är \\{''}\\, eftersom allt är @Text.",
                "$~\\{'hej' 'hej' 'hej'}\\",
                "$~Men du kanske vill ange att jag är en uppsättning av /endast/ dessa värden, så jag kan berätta för dig när du försöker använda ett som inte är tillåtet. Om så är fallet, lägg bara till en ! i slutet av mig.",
                "$~\\{'hej' 'hej' 'hej'}!{'yo'}\\",
                "$~Är det något annat du vill göra med mig? Kolla in alla snygga @FunctionDefinition jag har!"
            ],
            "name": ["$~{}", "$~Uppsättning"],
            "kind": "$~Slag",
            "out": "$~Resultat",
            "function": {
                "size": {
                    "doc": "$~Jag ska berätta hur många värden som finns i mig.",
                    "names": "$~storlek",
                    "inputs": []
                },
                "equals": {
                    "doc": [
                        "$~Jag är \\⊤\\ om den givna @Set och jag har exakt samma värden:",
                        "$~\\{1 2 3} = {2 3 4}\\"
                    ],
                    "names": ["$~=", "$~lika"],
                    "inputs": [
                        {
                            "doc": "$~@Set för att jämföra.",
                            "names": "$~uppsättning"
                        }
                    ]
                },
                "notequals": {
                    "doc": [
                        "$~Jag är \\⊤\\ om den givna @Set och jag inte har exakt samma värden:",
                        "$~\\{1 2 3} ≠ {2 3 4}\\"
                    ],
                    "names": ["$~≠", "$~lika"],
                    "inputs": [
                        {
                            "doc": "$~@Set för att jämföra.",
                            "names": "$~uppsättning"
                        }
                    ]
                },
                "add": {
                    "doc": [
                        "$~Ge mig ett föremål att lägga till så skapar jag ett nytt @Set med mina föremål och det givna föremålet.",
                        "$~\\{1 2 3} + 4\\"
                    ],
                    "names": ["$~med", "$~tillägga", "$~+"],
                    "inputs": [
                        {
                            "doc": "$~Objektet att lägga till",
                            "names": "$~punkt"
                        }
                    ]
                },
                "remove": {
                    "doc": [
                        "$~Ge mig ett föremål att ta bort så skapar jag ett nytt @Set utan föremålet.",
                        "$~\\{1 2 3} - 2\\",
                        "$~Om jag inte har varan så utvärderar jag bara för mig själv."
                    ],
                    "names": ["$~tabort", "$~-"],
                    "inputs": [
                        {
                            "doc": "$~Objektet som ska tas bort.",
                            "names": "$~punkt"
                        }
                    ]
                },
                "union": {
                    "doc": [
                        "$~Ge mig @Set så skapar jag ett nytt @Set som har mina föremål och setets föremål.",
                        "$~\\{1 2 3} ∪ {3 4 5}\\"
                    ],
                    "names": ["$~union", "$~∪"],
                    "inputs": [
                        {
                            "doc": "$~@Set att kombinera med mig.",
                            "names": "$~uppsättning"
                        }
                    ]
                },
                "intersection": {
                    "doc": [
                        "$~Ge mig @Set så skapar jag ett nytt @Set som bara har de saker vi har gemensamma.",
                        "$~\\{1 2 3} ∩ {3 4 5}\\"
                    ],
                    "names": ["$~skärning", "$~∩"],
                    "inputs": [
                        {
                            "doc": "$~Setet att jämföra med mig.",
                            "names": "$~uppsättning"
                        }
                    ]
                },
                "difference": {
                    "doc": [
                        "$~Ge mig @Set så skapar jag ett nytt @Set som har objekten som bara har de artiklar vi har gemensamt.",
                        "$~\\{1 2 3}.skillnad({3 4 5})\\"
                    ],
                    "names": "$~skillnad",
                    "inputs": [
                        {
                            "doc": "$~Uppsättningen vars föremål ska tas bort från mig.",
                            "names": "$~uppsättning"
                        }
                    ]
                },
                "filter": {
                    "doc": [
                        "$~Ge mig @FunctionDefinition som tar ett objekt och producerar \\⊤\\ om det ska behållas, så gör jag ett @Set som bara innehåller de objekt som uppfyller dina kriterier.",
                        "$~Låt oss till exempel hitta de udda talen i mig:",
                        "$~\\{1 2 3 4 5 6 7 8 9}.filter(ƒ(tal•#) (antal % 2) = 1)\\"
                    ],
                    "names": "$~filtrera",
                    "inputs": [
                        {
                            "doc": "$~@FunctionDefinition som kontrollerar ett objekt för att se om det ska behållas.",
                            "names": "$~pjäs"
                        }
                    ],
                    "checker": [
                        {
                            "doc": "$~Objektet som kontrolleras.",
                            "names": "$~värde"
                        },
                        {
                            "doc": "$~Uppsättningen filtreras",
                            "names": "$~uppsättning"
                        }
                    ]
                },
                "translate": {
                    "doc": [
                        "$~Ge mig @FunctionDefinition som tar ett objekt och producerar ett nytt objekt baserat på det, sedan översätter jag alla objekt i mig till en ny @Set (ta bort eventuella dubbletter).",
                        "$~Låt oss till exempel göra allt mitt @Number till @Text:",
                        "$~\\{1 2 3 4 5 6 7 8 9}.translate(ƒ(num•#) num→'')\\"
                    ],
                    "names": "$~översätta",
                    "inputs": [
                        {
                            "doc": "$~@FunctionDefinition som översätter ett av mina objekt till det nya objektet du vill ha.",
                            "names": "$~uppsättning"
                        }
                    ],
                    "translator": [
                        {
                            "doc": "$~Objektet som översätts.",
                            "names": "$~värde"
                        },
                        {
                            "doc": "$~Uppsättningen översätts",
                            "names": "$~uppsättning"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$~En @Text av en @Set",
                "list": "$~En @List-representation av objekten i uppsättningen."
            }
        },
        "Map": {
            "doc": [
                "$~Jag sammanför värden, mappar *nycklar* till *värden*. Till exempel:",
                "$~\\{'amy': 6 poäng 'tony':3 poäng 'shiela': 8 poäng}\\",
                "$~Mina nycklar kan vara vilket värde som helst, och mina värderingar kan vara vilket värde som helst.",
                "$~Vissa människor tycker om att tänka på mig som ett index, eller en ordbok, där du ger mig något, och jag ger dig vad det är mappat till.",
                "$~Om du ville kontrollera vad något är mappat till kan du ge @SetOrMapAccess, en nyckel och de ger dig värdet:",
                "$~\\{'amy': 6 poäng 'tony':3 poäng 'shiela': 8 poäng}{'amy'}\\",
                "$~Om det inte finns någon matchande nyckel ger jag dig @None.",
                "$~\\{'amy': 6poäng 'tony':3poäng 'shiela': 8poäng}{'jen'}\\",
                "$~Du kan också göra en tom karta så här:",
                "$~\\{:}\\",
                "$~Vanligtvis kommer jag att se vilken typ av nycklar och värderingar du ger mig och bara komma på en typ som representerar dem alla. Som det här är en karta från siffror till siffror:",
                "$~\\{1:1 2:2 3:3}\\",
                "$~Men säg att du ville säkerställa att det specifikt bara var dessa värden; bara lägg till! i slutet av mig, och jag kommer inte att generalisera. Det hjälper dig att veta om du försöker få ett värde du inte tänkt.",
                "$~\\{1:1 2:2 3:3}!{4}\\",
                "$~Jag vet hur man gör många underbara saker med mina par."
            ],
            "name": ["$~{:}", "$~Karta"],
            "key": "$~Nyckel",
            "value": "$~Värde",
            "result": "$~Resultat",
            "function": {
                "size": {
                    "doc": "$~Jag ska berätta hur många värden som finns i mig.",
                    "names": "$~storlek",
                    "inputs": []
                },
                "equals": {
                    "doc": [
                        "$~\\{⊤}\\ om mina parningar är exakt samma som de givna @Map.",
                        "$~\\{1:1 2:2} = {1:1 2:3}\\"
                    ],
                    "names": ["$~=", "$~lika"],
                    "inputs": [
                        {
                            "doc": "$~@Map att jämföra mig med.",
                            "names": "$~värde"
                        }
                    ]
                },
                "notequals": {
                    "doc": [
                        "$~\\{⊤}\\ om mina parningar är /inte/ exakt samma som de givna @Map.",
                        "$~\\{1:1 2:2} ≠ {1:1 2:3}\\"
                    ],
                    "names": ["$~≠", "$~lika"],
                    "inputs": [
                        {
                            "doc": "$~@Map att jämföra mig med.",
                            "names": "$~värde"
                        }
                    ]
                },
                "set": {
                    "doc": [
                        "$~Jag kommer att göra en ny @Map med alla samma parningar, men med den nya parningen du ger mig. Om jag redan har nyckeln, parar jag den till det nya värdet.",
                        "$~\\{'amy': 6points 'tony':3points}.pair('jen' 0poäng)\\"
                    ],
                    "names": "$~par",
                    "inputs": [
                        {
                            "doc": "$~Nyckel för att para ihop med ett värde.",
                            "names": "$~nyckel"
                        },
                        {
                            "doc": "$~Värdet att para ihop med nyckeln",
                            "names": "$~värde"
                        }
                    ]
                },
                "unset": {
                    "doc": [
                        "$~Jag skapar en ny @Map utan nyckeln du ger mig, och tar bort parningen.",
                        "$~\\{'amy': 6points 'tony':3points}.unpair('amy')\\"
                    ],
                    "names": "$~kopplabort",
                    "inputs": [
                        {
                            "doc": "$~Nyckeln att glömma.",
                            "names": "$~nyckel"
                        }
                    ]
                },
                "remove": {
                    "doc": [
                        "$~Jag skapar en ny @Map utan några nycklar som har värdet.",
                        "$~\\{'amy': 0 poäng 'jen': 0 poäng 'tony':3 poäng}.remove(0points)\\"
                    ],
                    "names": "$~tabort",
                    "inputs": [
                        {
                            "doc": "$~Värdet att ta bort från mig, tillsammans med eventuella nycklar som det är kopplat till.",
                            "names": "$~värde"
                        }
                    ]
                },
                "filter": {
                    "doc": [
                        "$~Ge mig en @FunctionDefinition som tar en nyckel och ett värde och utvärderar till \\⊤\\ om en parning ska behållas. Jag skapar en ny @Map som uppfyller dina kriterier.",
                        "$~Till exempel, här vill vi behålla alla parningar som är Amy eller har mer än noll poäng.",
                        "$~\\{'amy': 0poäng 'jen': 0poäng 'tony':3poäng}.filter(ƒ(nyckel•'' värde•#poäng) (nyckel = 'amy') | (värde > 0poäng))\\"
                    ],
                    "names": "$~filtrera",
                    "inputs": [
                        {
                            "doc": "$~@FunctionDefinition som bestämmer om en parning ska behållas.",
                            "names": "$~pjäs"
                        }
                    ],
                    "checker": [
                        {
                            "doc": "$~Nyckeln kontrolleras.",
                            "names": "$~nyckel"
                        },
                        {
                            "doc": "$~Värdet som kontrolleras.",
                            "names": "$~värde"
                        },
                        {
                            "doc": "$~Kartan filtreras.",
                            "names": "$~karta"
                        }
                    ]
                },
                "translate": {
                    "doc": [
                        "$~Ge mig en @FunctionDefinition som tar en nyckel och ett värde och utvärderar värdet till ett nytt värde. Jag skapar en ny @Map med samma nycklar men uppdaterade värden.",
                        "$~Låt oss till exempel ge alla en poäng eftersom de har varit så trevliga.",
                        "$~\\{'amy': 5points 'jen': 3points 'tony': 0points}.translate(ƒ(nyckel•'' värde•#points) värde + 1poäng)\\"
                    ],
                    "names": "$~översätta",
                    "inputs": [
                        {
                            "doc": "$~@FunctionDefinition som översätter varje värde.",
                            "names": "$~översättare"
                        }
                    ],
                    "translator": [
                        {
                            "doc": "$~Nyckeln till värdet som översätts.",
                            "names": "$~nyckel"
                        },
                        {
                            "doc": "$~Värdet som översätts.",
                            "names": "$~värde"
                        },
                        {
                            "doc": "$~Kartan översätts.",
                            "names": "$~karta"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$~En @Text av mappningen.",
                "set": "$~Nycklarna till @Map",
                "list": "$~En lista över värdena i @Map"
            }
        },
        "Table": {
            "doc": [
                "$~Jag är en uppsättning tabellrader! Jag kan hjälpa dig att spåra stora samlingar av värden som har samma struktur.",
                "$~Föreställ dig till exempel att du ville hålla reda på ett gäng stenar:",
                "$~\\⎡namn•'' färg•''⎦\n⎡'obsidian' 'svart'⎦\n⎡'pimpsten' 'grå'⎦\n⎡'citrin' 'gul'⎦\\",
                "$~@Bind kan hjälpa dig att namnge det! Och sedan kan du göra saker som att göra en reviderad tabell med en ny rad @Bind:",
                "$~\\rocks: ⎡namn•'' färg•''⎦\n⎡'obsidian' 'svart'⎦\n⎡'pimpsten' 'grå'⎦\n⎡'citrin' 'gul'⎦\nstenar ⎡+ 'kvarts' 'vit'⎦\\",
                "$~Eller om du vill hitta rader som matchar kan du @Select rader som matchar ett villkor:",
                "$~\\rocks: ⎡namn•'' färg•''⎦\n⎡'obsidian' 'svart'⎦\n⎡'pimpsten' 'grå'⎦\n⎡'citrin' 'gul'⎦\nstenar ⎡?⎦ färg = 'grå'\\",
                "$~Eller så kanske du vill göra en reviderad tabell som har olika värden för rader som matchar ett villkor:",
                "$~\\rocks: ⎡namn•'' färg•''⎦\n⎡'obsidian' 'svart'⎦\n⎡'pimpsten' 'grå'⎦\n⎡'citrin' 'gul'⎦\nstenar ⎡: färg: 'svart' ⎦ namn = 'pimpsten'\\",
                "$~Eller så kanske du vill ta bort en rad som matchar ett villkor:",
                "$~\\rocks: ⎡namn•'' färg•''⎦\n⎡'obsidian' 'svart'⎦\n⎡'pimpsten' 'grå'⎦\n⎡'citrin' 'gul'⎦\nstenar ⎡- name.has('i')\\",
                "$~Och om du någon gång vill få specifika värden från mig kan du konvertera vilken tabell som helst till en lista och komma åt enskilda rader med @PropertyReference",
                "$~\\rocks: ⎡namn•'' färg•''⎦\n⎡'obsidian' 'svart'⎦\n⎡'pimpsten' 'grå'⎦\n⎡'citrin' 'gul'⎦\n(stenar → [])[1].namn\\"
            ],
            "name": ["$~⎡⎦", "$~Tabell"],
            "row": "$~Rad",
            "function": {
                "equals": {
                    "doc": "$~Jag kontrollerar om jag har exakt samma celler i exakt samma ordning som en annan @Table.",
                    "names": ["$~=", "$~lika"],
                    "inputs": [
                        {
                            "doc": "$~Den andra tabellen att kontrollera.",
                            "names": "$~värde"
                        }
                    ]
                },
                "notequal": {
                    "doc": "$~Jag kontrollerar om någon av mina celler är annorlunda eller i en annan ordning än en annan @Table.",
                    "names": ["$~≠", "$~notEquals"],
                    "inputs": [
                        {
                            "doc": "$~Den andra tabellen att kontrollera.",
                            "names": "$~värde"
                        }
                    ]
                }
            },
            "conversion": {
                "list": "$~Jag konverterar en @Table till en lista med rader, där varje rad är en @Structure med dess kolumnnamn som egenskaper.",
                "text": "$~Jag konverterar bara en @Table till text."
            }
        },
        "Structure": {
            "doc": "$~Se @StructureDefinition.",
            "name": ["$~Strukturera"],
            "function": {
                "equals": {
                    "doc": "$~Jag kontrollerar om mina egenskaper har samma namn och värden som en annan strukturs egenskaper.",
                    "names": ["$~=", "$~lika"],
                    "inputs": [
                        {
                            "doc": "$~Den andra strukturen att kontrollera.",
                            "names": "$~värde"
                        }
                    ]
                },
                "notequal": {
                    "doc": "$~Jag kontrollerar om mina egenskaper på något sätt skiljer sig från namnet och värdena som en annan strukturs.",
                    "names": ["$~≠", "$~notEquals"],
                    "inputs": [
                        {
                            "doc": "$~Den andra strukturen att kontrollera.",
                            "names": "$~värde"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$~Jag konverterar mig själv till @Text."
            }
        }
    },
    "input": {
        "Random": {
            "doc": [
                "$~17!",
                "$~/@FunctionDefinition här, jag ska förklara den här./",
                "$~Så @Random är en nyfiken funktion som skapar slumptal. Det är märkligt för varje gång du utvärderar det skapar det något annat.",
                "$~Detta skapar ett underbart kaos som kommer med oförutsägbarhet.",
                "$~Som standard ger den @Number-värden mellan \\0\\ och \\1\\:",
                "$~\\Slumpmässig()\\",
                "$~Men du kan ge det ett värde, och det kommer att generera värden mellan \\0\\ och värdet:",
                "$~\\Random(10)\\",
                "$~Och om du ger den två värden kommer den att generera värden mellan och inklusive de två värdena:",
                "$~\\Random(-10 10)\\",
                "$~Om dina intervall har enheter kommer de att bevaras (och om de inte stämmer överens kommer minimienheten att användas):",
                "$~\\Slumpmässig(-10m 10m)\\",
                "$~Och om du anger siffror med ett visst antal signifikanta siffror efter decimalkomma, kommer den precisionen att bevaras.",
                "$~\\Slumpmässig(1,00 10,00)\\"
            ],
            "names": ["$~🎲", "$~Slumpmässig"],
            "inputs": [
                {
                    "names": "$~min",
                    "doc": "$~Det lägsta värdet som kommer att skapas, eller om det är större än 0, det högsta värdet. Om @None tillhandahålls, är miniumet \\0\\."
                },
                {
                    "names": "$~max",
                    "doc": "$~Det maximala värdet som kommer att skapas, eller om det är mindre än det angivna minimum, minimum. Om @None anges är maxvärdet \\1\\."
                }
            ]
        },
        "Choice": {
            "doc": [
                "$~/klicktryck!/",
                "$~/@FunctionDefinition här, jag ska förklara den här./",
                "$~Tänk på @Choice som en ström av @Choice som väljs ut av din publik. Om någon klickar, trycker eller tangentbordet väljer genom att trycka på /Enter/ på en @Phrase/name med ett namn -- kommer @Choice att ha ett nytt värde som matchar namnet.",
                "$~Så det bästa sättet att använda det är att skapa en föreställning med namngivna valbara fraser @Phrase, och sedan använda en @Reaction för att bestämma vad som ska göras när det namnet väljs.",
                "$~Här är det enklaste exemplet:",
                "$~\\Grupp(\nStack() \n[\nFras('en' valbar:⊤ namn:'1') \nFras('två' valbar:⊤ namn:'2') \nFras(Choice())\n]\n)\\",
                "$~Kopiera detta till editorn och välj sedan en av de två @Phrase. Du kommer att se den tredje @Phrase visar namnet som valdes."
            ],
            "names": ["$~🔘", "$~Val"]
        },
        "Button": {
            "doc": [
                "$~/klick klicka klicka/",
                "$~/@FunctionDefinition här, jag ska förklara den här./",
                "$~@Button är ett bra sätt att lyssna på en mus eller styrplatta. Naturligtvis är en mus eller styrplatta inte ett idealiskt val för att lyssna på en publik, eftersom inte alla kan använda en. Det mer lättillgängliga valet är @Choice.",
                "$~Men om du /verkligen/ behöver lyssna på en musknapp är det här sättet att göra det. Det kommer att tillhandahålla en ström av @Boolean, som representerar om den primära knappen är uppåt \\⊥\\ eller ner \\⊤\\.",
                "$~Här är ett enkelt exempel:",
                "$~\\Phrase(Button() → '')\\",
                "$~Detta gör bara en @Phrase som är värdet av strömmen som text. Om du kopierar den till redigeraren och klickar, kommer du att se den växla fram och tillbaka mellan \\⊥\\ och \\⊤\\."
            ],
            "names": ["$~🖱️", "$~Knapp"],
            "down": {
                "names": "$~ner",
                "doc": "$~Om @None kommer strömmen att ge både upp- och nedvärden. Om @Boolean kommer det bara att ge värdet det givna @Boolean värdet."
            }
        },
        "Pointer": {
            "doc": [
                "$~/whrrrrrr/",
                "$~/@FunctionDefinition här, jag ska förklara den här./",
                "$~Känner du till möss, styrplattor och pekskärmar? Ibland vill man veta vart en publik pekar. Det är vad @Pointer tillhandahåller.",
                "$~Naturligtvis är detta inte ett tillgängligt val: inte alla kan se eller enkelt peka, så var verkligen säker på att du inte utesluter någon från att delta genom att använda den här strömmen.",
                "$~Om du är säker på att ingen är utesluten är det lika enkelt att använda @Pointer som att bara skapa en stream:",
                "$~\\Pekare()\\",
                "$~@Place den tillhandahåller kommer att motsvara var på @Stage pekaren pekar."
            ],
            "names": ["$~👆🏻", "$~Pekare"]
        },
        "Key": {
            "doc": [
                "$~/klickty/",
                "$~/@FunctionDefinition här, jag ska förklara den här./",
                "$~Tangentbord har många tangenter, eller hur? @Key kommer att tala om för dig vilken någon trycker och släpper.",
                "$~Prova detta",
                "$~\\Nyckel()\\",
                "$~Se hur när du skriver en nyckel visas den på @Stage? Varje gång en tangent trycks ned läggs en ny @Text till strömmen, som beskriver tangenten som trycktes.",
                "$~För en nyckel som representerar ett tecken kommer värdet att vara tecknet som @Text.",
                "$~För speciella nycklar, som /Escape/-tangenten, kommer det att vara @Text som beskriver nyckeln, med ett <fördefinierat namn@https://developer.mozilla.org/en-US/docs/Web/API/UI_Events /Keyboard_event_key_values>, tyvärr endast tillgänglig på engelska.",
                "$~Om du bara vill veta om en viss nyckel kan du tillhandahålla den:",
                "$~\\Key('a')\\",
                "$~Och om du bara vill veta när en @Key släpps istället för att tryckas ned, kan du ge en @Boolean:",
                "$~\\Key('a' ⊥)\\"
            ],
            "names": ["$~⌨️", "$~Nyckel"],
            "key": {
                "names": "$~nyckel",
                "doc": "$~Om @None finns alla nycklar. Om en specifik @Text tillhandahålls endast den nyckeln."
            },
            "down": {
                "names": "$~ner",
                "doc": "$~OM @None, genererar tangent ned ingångar. Om \\⊤\\ tillhandahålls endast nedåtgående ingångar, och om \\⊥\\ tillhandahålls endast släppingångar."
            }
        },
        "Time": {
            "doc": [
                "$~/tick tick tick/",
                "$~@FunctionDefinition här, jag ska förklara @Time, eftersom den inte talar.",
                "$~Tid är en ström som tickar med en viss frekvens.",
                "$~Varje gång det gör det, omvärderar @Program med det nya tidsvärdet.",
                "$~Till exempel:",
                "$~\\Tid()\\",
                "$~Om du anger tid en @Time/frequency, kommer den att bocka i den takten. Till exempel:",
                "$~\\Tid(1000ms)\\",
                "$~Det finns dock gränser för hur liten den kan vara, eftersom @Program behöver tid att utvärdera innan de kan svara på nästa bock.",
                "$~Den minsta är förmodligen runt \\20ms\\."
            ],
            "names": ["$~🕕", "$~Tid"],
            "frequency": {
                "names": ["$~frekvens"],
                "doc": "$~Detta är den frekvens med vilken tiden ska ticka. Den har som standard \\33ms\\, vilket är cirka 30 gånger per sekund."
            },
            "relative": {
                "names": ["$~relativ"],
                "doc": "$~Om \\⊤\\ börjar tiden vid 0, när programmet först utvärderas. Annars börjar den vid antalet millisekunder sedan dagens början, UTC (Coordinated Universal Time), så att du kan hålla reda på tiden på dygnet."
            }
        },
        "Volume": {
            "doc": [
                "$~/bzzzzzzz/",
                "$~@FunctionDefinition här, jag tar mikrofonen.",
                "$~Denna ström är en serie volymer mellan 0 och 1, samplade med den frekvens du väljer. Som standard är frekvensen \\30hz\\, eller 30 gånger per sekund, men du kan ändra den till något mindre frekvent.",
                "$~\\Volym()\\",
                "$~Det här är bra för att lyssna på hur högljudda publiken är!"
            ],
            "names": ["$~🎤", "$~Volym"],
            "frequency": {
                "names": ["$~frekvens"],
                "doc": "$~Tiden mellan provtagningarna."
            }
        },
        "Pitch": {
            "doc": [
                "$~/hummmmm/",
                "$~@FunctionDefinition här, låt oss prata pitch!",
                "$~Denna ström är en serie frekvenser i hertz, som indikerar tonhöjden på ljudet, samplade med den frekvens du väljer. Vi har upptäckt att den mänskliga rösten är mellan 20Hz och 5000Hz, så planera på siffror i det intervallet.",
                "$~\\Tonhöjd()\\",
                "$~Detta är bra för att lyssna på tonen som någon talar eller sjunger."
            ],
            "names": ["$~🎵", "$~Tonhöjd"],
            "frequency": {
                "names": ["$~frekvens"],
                "doc": "$~Tiden mellan provtagningarna."
            }
        },
        "Camera": {
            "doc": [
                "$~/bzzzzzzz/",
                "$~@FunctionDefinition här, jag kan förklara @Camera!",
                "$~Så @Camera tillhandahåller en @Camera med @Color från din värld. Den listan representerar i huvudsak en bild, men det är upp till dig att bestämma vad du ska göra med den.",
                "$~Du kan försöka representera bilden med ett gäng @Phrase, som kan se ganska coolt ut! Testa att kopiera detta...",
                "$~\\colors: Kamera (32px 24px 33ms)\n\nEtapp(\ncolors.combine(\n[] \nƒ(fraser•[Fras] rad•[Färg] y•#) \nphrases.append(\nrow.translate(\nƒ(färg•Färg x•#)\nFras('o' plats: Plats((x - 1) · 0,5m y · -0,5m) färg: färgvaraktighet: 0s\n)\n)\n)\n)\n)\\",
                "$~Men du kan också analysera färgerna för att avgöra om ett ljus var på eller av, eller om en viss färg var vanlig, så att publiken kan påverka en föreställning med de färger de visar."
            ],
            "names": ["$~🎥", "$~Kamera"],
            "width": {
                "names": ["$~bredd"],
                "doc": "$~Antalet @Color att ta prov i en rad."
            },
            "height": {
                "names": ["$~höjd"],
                "doc": "$~Antalet @Color att ta prov i en kolumn."
            },
            "frequency": {
                "names": ["$~frekvens"],
                "doc": "$~Tiden mellan @Color-prover."
            }
        },
        "Scene": {
            "doc": [
                "$~/boop boop boop/",
                "$~/Hej, @FunctionDefinition här! Jag ser att du hittade @Scene.",
                "$~Jag tycker @Scene är särskilt cool. Grundidén är att du ger den en lista med @Scene eller @Phrase och sedan kommer den att visa dem i sekvens och stanna vid den sista.",
                "$~För att kontrollera timing kan du antingen ställa in @Phrase/duration på varje utgång, och den kommer att visa den så länge innan du går vidare till nästa, och använda vilken @Phrase/entering eller @Phrase/exiting övergångar du kan ha ställt in . Om du ställer in dem på en @Sequence kommer den att använda dess varaktighet.",
                "$~Allt detta låter dig göra saker som den här lilla @Scene, som visar dessa tre fraser i följd:",
                "$~\\Scen([\n\tFras('Hej' varaktighet: 1s)\n\tFras('Hur mår du?' varaktighet: 2s rotation: 5° inträde: Pose(rotation: 0°))\n\tFras('Jag mår bra')\n])\\",
                "$~Se hur den första utgången visas i en sekund, sedan den nästa i två sekunder, men animerad till en fem graders rotation, och sedan visar den den sista?",
                "$~Du kan göra mycket utarbetade sekvenser av utdata och animationer med @Scene, och till och med göra delar av dem dynamiska eller interaktiva, som med alla andra @Scene eller @Phrase.",
                "$~Om du har animerad utdata som är kapslad (en @Group med animerad @Group inuti), väntar @Scene på att allt animerat innehåll i @Group ska avslutas.",
                "$~Åh, och en sista liten hemlighet! Du kan till och med sätta @Boolean i listan, och om de är \\⊥\\, kommer @Boolean att pausa och vänta på att den blir sann.",
                "$~Om du till exempel vill göra en sekvens av @Phrase och bara gå framåt när @Button ändras, kan du göra så här:",
                "$~\\klick: ∆ Knapp()\nScen([\n\tFras('Hej')\n\tklick\n\tFras('Hur mår du?' varaktighet: 0,25s rotation: 5° inträde: Pose(rotation: 0°))\n\tklick\n\tFras('jag mår bra')\n])\\",
                "$~Se hur den pausar efter varje @Phrase och väntar på att @Button ändras innan den går vidare?"
            ],
            "names": ["$~🎬", "$~Scen"],
            "outputs": {
                "names": "$~utgångar",
                "doc": "$~Listan över utgångar som ska visas i följd."
            }
        },
        "Motion": {
            "doc": [
                "$~/boing boing boing/",
                "$~/Hej! @FunctionDefinition här. Vad sägs om att jag förklarar @Motion?",
                "$~I grund och botten är @Motion en ström av @Phrase. Du ger den en start @Phrase, och sedan förfinar den den med en ny plats och rotation baserat på gravitationen.",
                "$~Det här låter dig göra riktigt enkla saker som att skapa studsande emoji:",
                "$~\\Motion(Phrase('o') startplats: Plats(0m 10m))\\",
                "$~Ser du hur o:n studsar? Vid den första utvärderingen ger vi den en plats högt upp på @Stage, men sedan efter får den @Stage, vilket gör att @Motion kan ändra den till vilken position gravitationen skulle placera den.",
                "$~Kolla in de många andra sätten att konfigurera den nedan."
            ],
            "names": ["$~⚽️", "$~Rörelse"],
            "place": {
                "doc": "$~Startplatsen.",
                "names": "$~plats"
            },
            "velocity": {
                "doc": "$~Starthastigheten",
                "names": "$~hastighet"
            },
            "nextplace": {
                "doc": "$~Nästa plats, överordnad fysik.",
                "names": "$~nästaplats"
            },
            "nextvelocity": {
                "doc": "$~Nästa plats, överordnade hastighet.",
                "names": "$~nästahastighet"
            }
        },
        "Chat": {
            "doc": [
                "$~/Hej! @FunctionDefinition här. Så du vill chatta?",
                "$~Grundidén med en chattström är att publiken skriver ett meddelande och sedan programmets svar på det.",
                "$~Till exempel kontrollerar detta enkla program om meddelandet är \"hej\", och om det är det, utvärderas programmet till \"hej\". Annars utvärderas det till \"va\"?",
                "$~\\Chat().has('hej') ? 'Hej!' 'va?'\\",
                "$~Det är det! Du kan göra alla typer av föreställningar med detta, som chattbots, textäventyr eller textbaserade kontrollscheman för andra typer av föreställningar."
            ],
            "names": ["$~🗣️", "$~Chatta"]
        },
        "Placement": {
            "doc": [
                "$~/Hej, @FunctionDefinition här. Låt oss prata om hur vi får oss att flytta!/",
                "$~Så det finns många sätt att placera oss på @Stage. Du kan ge oss en tydlig @Place. Du kan använda @Motion och låta gravitationen göra sitt jobb. Du kan också placera oss i en @Group och låta dem arrangera oss på ett speciellt sätt.",
                "$~Men ibland vill du ge /publiken/ kontroll över var vi är på @Stage. Det är vad @Placement är till för.",
                "$~Så här fungerar det: du gör bara en @Placement och ger den till vår @Place:",
                "$~\\Phrase('hej' plats: Placering())\\",
                "$~Sedan, varje gång publiken använder en piltangent eller klickar eller trycker på scenen, kommer @Placement att skapa en ny @Place som rör sig i önskad riktning.",
                "$~Försök att kopiera detta till ditt program och flytta oss med pilen med pekaren eller tangentbordet.",
                "$~Du kan anpassa @Placement, aktivera och inaktivera rörelse på vissa dimensioner, ändra hur långt en @Place rör sig och den initiala @Place strömmen börjar med."
            ],
            "names": ["$~✥", "$~Placering"],
            "inputs": [
                {
                    "doc": "$~Den första platsen att börja med.",
                    "names": "$~start"
                },
                {
                    "doc": "$~Hur många meter platsen ska röra sig när publiken begär en flytt.",
                    "names": "$~avstånd"
                },
                {
                    "doc": "$~Om sant, tillåter rörelse på den horisontella axeln. På som standard.",
                    "names": "$~horisontell"
                },
                {
                    "doc": "$~Om sant, tillåter rörelse på den vertikala axeln. På som standard.",
                    "names": "$~vertikal"
                },
                {
                    "doc": "$~Om sant, tillåter rörelse på z-axeln, med + och - tangenterna.",
                    "names": "$~djup"
                }
            ]
        },
        "Webpage": {
            "doc": [
                "$~/Hej, @FunctionDefinition här. Låt oss prata om hur man får webbsidor från internet!/",
                "$~När vi först hörde talas om ditt internet tyckte vi det var fascinerande. En hel värld full av uppkopplade datorer som delar dokument med varandra? Det är fantastiskt!",
                "$~Så vi gjorde en stream som ansluter till den. Du ger oss en URL, så får vi all text på den. Så här:",
                "$~\\Webpage('https://wordplay.dev')\\",
                "$~Och det finns tydligen det här som heter <CSS@https://developer.mozilla.org/en-US/docs/Learn/CSS/First_steps/What_is_CSS>, som gillar att du frågar efter saker på en webbsida? Ge oss en CSS-valfråga så får vi bara texten som matchar den frågan. Som det här exemplet, som får nivå ett-rubriker.",
                "$~\\Webpage('https://wordplay.dev' 'h1')\\",
                "$~Många saker kan gå fel med den här. Om du tappar din internetanslutning, eller URL:en inte löser sig till någonting, eller URL:en är inte offentlig, eller URL:en inte är en HTML-sida... Alla dessa kan leda till undantag. Om du hittar en sida som fungerar får du ett @Number som indikerar en procentsats och sedan en @Number med orden på sidan."
            ],
            "names": ["$~🔗", "$~webbsida"],
            "url": {
                "doc": "$~HTML-webbadressen att hämta.",
                "names": "$~url"
            },
            "query": {
                "doc": "$~CSS-frågan att utvärdera på HTML",
                "names": "$~fråga"
            },
            "frequency": {
                "doc": "$~Antalet minuter som ska gå innan sidan hämtas igen.",
                "names": "$~frekvens"
            },
            "error": {
                "invalid": "$~detta är inte en giltig URL",
                "unvailable": "$~den här webbadressen är inte tillgänglig",
                "notHTML": "$~svaret var inte HTML",
                "noConnection": "$~ingen koppling till Wordplay",
                "limit": "$~för många förfrågningar till den här domänen"
            }
        },
        "Collision": {
            "names": "$~Kollision",
            "doc": [
                "$~/Hej! @FunctionDefinition här. Kolla in denna coola input./",
                "$~Det kan hjälpa dig att ta reda på när @Output stöter på varandra! Det här är ett bra sätt att göra något när vi stöter på varandra, annat än att det normala studsar av varandra @Output kan göra.",
                "$~Ge mig bara namnet @Output, så skapar jag ett nytt @Rebound-värde när det stöter på ett annat namn. En @Rebound har information om namnen som kolliderade och riktningen för deras kollision.",
                "$~Och om du ger mig två namn, gör jag bara ett nytt värde när de två namnen stöter på varandra.",
                "$~Direkt efter att jag har gjort ett nytt värde, kommer jag att göra en \\ø\\ eftersom kollisionen sker efter att den har inträffat. Detta tyder på att det inte finns någon mer kollision."
            ],
            "subject": {
                "names": "$~ämne",
                "doc": "$~Namnet på @Output jag ska leta efter kollisioner på."
            },
            "object": {
                "names": "$~andra",
                "doc": "$~Namnet på den andra @Output jag borde leta efter kollisioner på."
            }
        },
        "Rebound": {
            "names": "$~Studs",
            "doc": "$~Jag kommer från @Collision och representerar vem som kolliderade med och i vilken riktning kollisionen inträffade. Använd mig för att bestämma om du ska reagera på en kollision på något speciellt sätt, annat än normal fysik.",
            "direction": {
                "names": "$~riktning",
                "doc": "$~Kollisionens riktning och storlek i förhållande till kollisionsobjektet"
            },
            "subject": {
                "names": "$~ämne",
                "doc": "$~Namnet på utgången som träffades av ämnet."
            },
            "object": {
                "names": "$~objekt",
                "doc": "$~Namnet på utgången som träffade ämnet"
            }
        },
        "Direction": {
            "names": "$~Riktning",
            "doc": "$~Jag är en riktning och magnitud, längs x- och y-axlarna.",
            "x": {
                "names": "$~x",
                "doc": "$~Riktningen och storleken på riktningen längs x-axeln."
            },
            "y": {
                "names": "$~y",
                "doc": "$~Riktningen och storleken på riktningen längs y-axeln."
            }
        }
    },
    "output": {
        "Output": {
            "names": "$~Produktion",
            "doc": [
                "$~Jag är inte en @StructureDefinition du faktiskt kan göra. Men jag är en väldigt viktig sådan, eftersom jag inspirerar de viktigaste delarna av vår dans: @Phrase, @Group och @Stage.",
                "$~Gå och träffa dem för att lära dig mer om hur du använder dem."
            ]
        },
        "Group": {
            "doc": [
                "$~Hej, hur mår du? Jag mår alltid bra när andra är i närheten, så det är fantastiskt att vara med dig!",
                "$~Jag grupperar @Phrase och @Group på @Stage och lägger dem i ett @Phrase, så det finns en ordning på var de placeras.",
                "$~För att fungera behöver jag att du ger mig ett @Arrangement och sedan en @List of @Output att ordna.",
                "$~Till exempel, här är jag med ett @Stack-arrangemang och några @Phrase att stapla vertikalt:",
                "$~\\Group(Stack() [Fras('första') Fras('andra')])\\",
                "$~Exakt hur jag ordnar saker beror på @Arrangement du ger mig."
            ],
            "names": ["$~🔳", "$~Grupp"],
            "layout": {
                "doc": "$~Arrangemanget att använda för att placera @Output på sina ställen.",
                "names": "$~layout"
            },
            "content": {
                "doc": "$~Listan över @Output att ordna.",
                "names": "$~innehåll"
            },
            "matter": {
                "doc": "$~Hur jag skulle reagera om jag skulle stöta på något annat med materia.",
                "names": "$~materia"
            },
            "size": {
                "doc": "$~Hur högt det underbara innehållet inom mig ska vara, om de inte har en egen storlek!",
                "names": "$~storlek"
            },
            "face": {
                "doc": "$~Namnet på teckensnittet ansikte innehåll inuti mig bör ha, om de inte har ett eget ansikte att använda.",
                "names": "$~ansikte"
            },
            "place": {
                "doc": "$~Platsen på scenen där jag borde vara. Innehållet inom mig kommer att ordnas relativt där.",
                "names": "$~plats"
            },
            "name": {
                "doc": ["$~Samma som @Phrase/name!"],
                "names": "$~namn"
            },
            "description": {
                "doc": [
                    "$~En beskrivning att använda för publikmedlemmar som inte kan se visuell produktion."
                ],
                "names": "$~beskrivning"
            },
            "selectable": {
                "doc": "$~Samma som @Phrase/selectable!",
                "names": "$~valbara"
            },
            "color": {
                "doc": "$~@Color som innehållet inom mig borde vara, om de inte har sin egen färg.",
                "names": "$~färg"
            },
            "background": {
                "doc": "$~@Color-projektet bakom mig.",
                "names": "$~bakgrund"
            },
            "opacity": {
                "doc": "$~Hur genomskinligt allt inom mig ska vara, mellan \\0\\ och \\1\\, om det inte åsidosätts av en annan @Pose.",
                "names": "$~opacitet"
            },
            "offset": {
                "doc": "$~En @Place som anger hur offset från min normala @Place den ska vara, såvida den inte åsidosätts av en annan @Pose. Hjälpsam för att vicka på plats.",
                "names": "$~offset"
            },
            "rotation": {
                "doc": "$~Hur lutad ska jag vara runt mitt mitt, min @Pose har en annan.",
                "names": ["$~📐", "$~rotation"]
            },
            "scale": {
                "doc": "$~Hur stor jag ska vara i förhållande till min ursprungliga storlek.",
                "names": "$~skala"
            },
            "flipx": {
                "doc": "$~Samma som @Phrase/flipx!",
                "names": "$~flipx"
            },
            "flipy": {
                "doc": "$~Samma som @Phrase/flipy",
                "names": "$~flipy"
            },
            "entering": {
                "doc": "$~Samma som @Phrase/entering!",
                "names": "$~gårin"
            },
            "resting": {
                "doc": "$~Samma som @Phrase/resting!",
                "names": "$~vilande"
            },
            "moving": {
                "doc": "$~Samma som @Phrase/moving!",
                "names": "$~rörlig"
            },
            "exiting": {
                "doc": "$~Samma som @Phrase/exiting!",
                "names": "$~avslutar"
            },
            "duration": {
                "doc": "$~Samma som @Phrase/duration!",
                "names": ["$~⏳", "$~varaktighet"]
            },
            "style": {
                "doc": "$~Samma som @Phrase/style!",
                "names": "$~stil"
            },
            "defaultDescription": "$~$1[$1|] $2 $3"
        },
        "Phrase": {
            "doc": [
                "$~Hej, hej! Kommer du ihåg mig? Hur kunde någon glömma /mig/. Det stämmer, jag är den mäktiga @Phrase, redo att representera den vackraste av @Text på @Stage.",
                "$~Gör mig bara så här, så kommer jag att dyka upp på @Stage:",
                "$~\\Phrase('magnificent!')\\",
                "$~Jag behöver naturligtvis lite @Text, men annars kan jag göra allt en @Output kan göra, inklusive att ändra min storlek, typsnitt, rotation och göra alla mina otroliga danser med @Pose och @Sequence.",
                "$~Du kan också välja mig på @Stage och redigera mig på paletten bredvid."
            ],
            "names": ["$~💬", "$~Fras"],
            "text": {
                "doc": "$~Karaktärerna som ska visas på @Stage.",
                "names": "$~text"
            },
            "size": {
                "doc": "$~Hur lång jag borde vara, i meter!",
                "names": "$~storlek"
            },
            "face": {
                "doc": "$~Namnet på typsnittet jag ska sätta på.",
                "names": "$~ansikte"
            },
            "place": {
                "doc": "$~Platsen på scenen där jag borde vara.",
                "names": "$~plats"
            },
            "wrap": {
                "doc": "$~Kanten där jag ska linda symboler eller \\ø\\ om jag inte ska linda dem.",
                "names": ["$~↵", "$~sjal"]
            },
            "alignment": {
                "doc": "$~Om det finns en @Phrase/wrap, om jag ska justera symboler till början, mitten eller slutet av kanten.",
                "names": "$~inriktning"
            },
            "direction": {
                "doc": "$~Huruvida symboler skrivs horisontellt eller vertikalt, och om vertikal och @Phrase/wrap är inställda, om texten radbryts åt vänster eller höger.",
                "names": "$~riktning"
            },
            "matter": {
                "doc": "$~Egenskaperna att använda om jag stöter på saker!",
                "names": "$~materia"
            },
            "aura": {
                "doc": "$~Den valfria @Aura att visa bakom mig. Få mig att lysa!",
                "names": "$~aura"
            },
            "name": {
                "doc": [
                    "$~Ett namn du ger mig! Detta är användbart för många saker.",
                    "$~För det första, om jag har ett namn, använder jag det för att beskriva mig själv i skärmläsarbeskrivningar.",
                    "$~För det andra, när du animerar kan du ha flera olika uttryck som är tänkta att representera samma innehåll på scenen; ge dem samma namn och de kommer att animera som en.",
                    "$~Slutligen är jag behjälplig med @Choice: namnen du ger mig visas i den strömmen.",
                    "$~Du kan ge mig många olika namn, alla på olika språk, om det är till hjälp. Jag kommer alltid att använda namnet i den först valda lokalen."
                ],
                "names": "$~namn"
            },
            "description": {
                "doc": [
                    "$~En anpassad beskrivning att använda för publikmedlemmar som inte kan se visuella resultat."
                ],
                "names": "$~beskrivning"
            },
            "selectable": {
                "doc": "$~Om \\⊤\\, indikerar att jag kan väljas via en pekare eller tangentbord.",
                "names": "$~valbara"
            },
            "color": {
                "doc": "$~@Color I bör vara som standard, såvida den inte åsidosätts av en annan @Pose.",
                "names": "$~färg"
            },
            "background": {
                "doc": "$~@Color-projektet bakom mig.",
                "names": "$~bakgrund"
            },
            "opacity": {
                "doc": "$~Hur transparent jag ska vara som standard, mellan \\0\\ och \\1\\, såvida den inte åsidosätts av en annan @Pose. Hjälpsam för att tona in och ut.",
                "names": "$~opacitet"
            },
            "offset": {
                "doc": "$~En @Place som anger hur offset från min @Place den ska vara, såvida den inte åsidosätts av en annan @Pose. Hjälpsam för att vicka på plats.",
                "names": "$~offset"
            },
            "rotation": {
                "doc": "$~Mängden i grader I bör roteras runt dess mitt, såvida den inte åsidosätts av en annan @Pose.",
                "names": "$~rotation"
            },
            "scale": {
                "doc": "$~Hur förstorad jag ska vara i förhållande till dess ursprungliga storlek, såvida den inte åsidosätts av en annan @Pose.",
                "names": "$~skala"
            },
            "flipx": {
                "doc": "$~Om jag ska speglas på x-axeln, såvida den inte åsidosätts av en annan @Pose.",
                "names": "$~flipx"
            },
            "flipy": {
                "doc": "$~Om jag ska speglas på y-axeln, såvida den inte åsidosätts av en annan @Pose.",
                "names": "$~flipy"
            },
            "entering": {
                "doc": "$~@Pose eller @Sequence ska jag göra när jag går in på scenen.",
                "names": "$~gårin"
            },
            "resting": {
                "doc": "$~@Pose eller @Sequence ska jag göra efter att jag har kommit in i scenen, innan jag går ur, och medan min @Place inte förändras. Om du inte ger mig en så använder jag bara mina standardinställningar.",
                "names": "$~vilande"
            },
            "moving": {
                "doc": "$~@Pose eller @Sequence jag borde göra när jag flyttar platser på scenen, istället för mina standardinställningar.",
                "names": "$~rörlig"
            },
            "exiting": {
                "doc": "$~@Pose eller @Sequence to bör göras innan du lämnar scenen.",
                "names": "$~avslutar"
            },
            "duration": {
                "doc": "$~Varaktigheten som ska gälla när du flyttar till en annan plats på scenen.",
                "names": ["$~⏳", "$~varaktighet"]
            },
            "style": {
                "doc": "$~Animeringsstilen som ska användas när du flyttar till en annan plats på scenen.",
                "names": "$~stil"
            },
            "defaultDescription": "$~$3[$3 meter |]fras $1 $2[namn $2|] $4[$4|] $5"
        },
        "Arrangement": {
            "doc": "$~Jag är en inspiration till de många andra typerna av arrangemang i Versen, inklusive @Row, @Stack, @Grid och @Free. Jag har ett nära samarbete med @Group till",
            "names": ["$~⠿", "$~Arrangemang"]
        },
        "Row": {
            "doc": "$~Jag är @Row, ett horisontellt @Row av @Output, med valfri stoppning däremellan. Har du träffat min tvilling, @Stack?",
            "names": ["$~➡", "$~Rad"],
            "description": "$~rad med $1 fraser och grupper",
            "alignment": {
                "doc": "$~Om text ska justeras i början, centrera eller slutet på varje kolumn.",
                "names": "$~inriktning"
            },
            "padding": {
                "doc": "$~Mängden stoppning som ska placeras mellan utdata.",
                "names": "$~stoppning"
            }
        },
        "Stack": {
            "doc": "$~Jag är @Stack, ett vertikalt @Stack av @Output, med valfri stoppning däremellan. Har du träffat min tvilling @Row?",
            "names": ["$~⬇", "$~Stack"],
            "description": "$~stack med $1 fraser och grupper",
            "alignment": {
                "doc": "$~Om text ska justeras i början, centrera eller slutet på varje rad.",
                "names": "$~inriktning"
            },
            "padding": {
                "doc": "$~Mängden stoppning som ska placeras mellan utdata.",
                "names": "$~stoppning"
            }
        },
        "Grid": {
            "doc": "$~Jag är rutnät av @Output. Ge mig ett antal rader och kolumner så gör jag ett snyggt arrangemang med valfri utfyllnad och cellstorlekar.",
            "names": ["$~▦", "$~Rutnät"],
            "description": "$~$1 rad $2 kolumnrutnät",
            "rows": {
                "doc": "$~Hur många rader görs i rutnätet.",
                "names": "$~rader"
            },
            "columns": {
                "doc": "$~Hur många kolumner som ska skapas i rutnätet.",
                "names": "$~kolumner"
            },
            "padding": {
                "doc": "$~Hur mycket stoppning ska placeras mellan cellerna.",
                "names": "$~stoppning"
            },
            "cellWidth": {
                "doc": "$~Hur breda cellerna ska vara.",
                "names": "$~cellbredd"
            },
            "cellHeight": {
                "doc": "$~Hur höga cellerna ska vara.",
                "names": "$~cellstoppning"
            }
        },
        "Free": {
            "doc": [
                "$~Jag är liksom, vad som helst. Sitt var du vill. Sitt bara någonstans! Se till att alla @Output du ger mig har en @Place, annars vet de inte vart de ska ta vägen.",
                "$~Åh, och kom ihåg att @Place du ger varje @Output är relativt till @Place @Place! Så om du undrar varför saker och ting inte visas som du förväntar dig, försök ge @Group en plats också."
            ],
            "names": ["$~Gratis"],
            "description": "$~fritt format $1-utgångar"
        },
        "Shape": {
            "doc": "$~Jag är en inspiration för alla former. Jag är användbar för att berätta för @Stage vilken form man ska ha.",
            "names": ["$~⬟", "$~Form"],
            "form": {
                "doc": "$~Jag är den typ av form att visa. Varje form kräver olika information för att definiera dess arrangemang.",
                "names": "$~form"
            },
            "name": {
                "doc": "$~Jag är namnet du kan använda för animationer och @Collision. Till exempel, om a representerar marken, kanske du vill kalla mig 'mark'.",
                "names": "$~namn"
            },
            "description": {
                "doc": [
                    "$~En beskrivning att använda för publikmedlemmar som inte kan se visuell produktion."
                ],
                "names": "$~beskrivning"
            },
            "selectable": {
                "doc": "$~Om jag kan bli utvald som en del av @Choice.",
                "names": "$~valbara"
            },
            "color": {
                "doc": "$~Färgen på mina bårder.",
                "names": "$~färg"
            },
            "background": {
                "doc": "$~Färgen på min bakgrund.",
                "names": "$~bakgrund"
            },
            "opacity": {
                "doc": "$~Vad transparent jag borde vara.",
                "names": "$~opacitet"
            },
            "offset": {
                "doc": "$~Hur långt från min plats ska jag synas, samtidigt som jag förblir på plats.",
                "names": "$~offset"
            },
            "rotation": {
                "doc": "$~Hur roterad jag borde vara. Detta påverkar @Collision.",
                "names": "$~rotation"
            },
            "scale": {
                "doc": "$~Hur förstorad jag borde vara, utan att ändra min faktiska storlek.",
                "names": "$~skala"
            },
            "flipx": {
                "doc": "$~Om jag ska spegla mig på min x-axel.",
                "names": "$~flipx"
            },
            "flipy": {
                "doc": "$~Om jag ska spegla mig på min y-axel.",
                "names": "$~flipy"
            },
            "entering": {
                "doc": "$~@Pose eller @Sequence ska jag göra när jag går in i @Stage.",
                "names": "$~gårin"
            },
            "resting": {
                "doc": "$~@Pose eller @Sequence ska jag göra efter att jag kommit in och när jag inte rör mig.",
                "names": "$~vilande"
            },
            "moving": {
                "doc": "$~@Pose eller @Sequence ska jag göra när jag flyttar platser.",
                "names": "$~rörlig"
            },
            "exiting": {
                "doc": "$~@Pose eller @Sequence jag ska göra när jag lämnar @Stage.",
                "names": "$~avslutar"
            },
            "duration": {
                "doc": "$~Hur lång tid ska mina animationer ta om de är en enda @Pose.",
                "names": "$~varaktighet"
            },
            "style": {
                "doc": "$~Animationsstilen jag borde använda.",
                "names": "$~stil"
            }
        },
        "Form": {
            "doc": "$~Jag är en abstrakt form, som en @Rectangle eller @Circle.",
            "names": ["$~Form"]
        },
        "Rectangle": {
            "doc": "$~Jag är en rektangel, användbar för att få @Stage att ha en gräns som du väljer.",
            "names": ["$~Rektangel"],
            "left": {
                "doc": "$~Den vänstra kanten av scenen på x-axeln",
                "names": "$~vänster"
            },
            "top": {
                "doc": "$~Den övre kanten av scenen på y-axlarna",
                "names": "$~bästa"
            },
            "right": {
                "doc": "$~Den högra kanten av scenen på x-axeln",
                "names": "$~rätt"
            },
            "bottom": {
                "doc": "$~Scenens nedre kant på y-axeln",
                "names": "$~botten"
            },
            "z": {
                "doc": "$~Rektangelns djupposition.",
                "names": "$~z"
            }
        },
        "Circle": {
            "doc": "$~Jag är en cirkel, användbar för att göra former på @Stage.",
            "names": ["$~Cirkel"],
            "radius": {
                "doc": "$~Cirkelns radie",
                "names": "$~radie"
            },
            "x": {
                "doc": "$~Cirkelns horisontella centrum.",
                "names": "$~x"
            },
            "y": {
                "doc": "$~Cirkelns vertikala centrum.",
                "names": "$~y"
            },
            "z": {
                "doc": "$~Cirkelns djupposition.",
                "names": "$~z"
            }
        },
        "Polygon": {
            "doc": "$~Jag är en \"vanlig\" polygon med lika långa sidor och vinklar, användbar för att skapa former på @Stage.",
            "names": ["$~Polygon"],
            "radius": {
                "doc": "$~Radien för polygonen",
                "names": "$~radie"
            },
            "sides": {
                "doc": "$~Antalet sidor av polygonen",
                "names": "$~sidor"
            },
            "x": {
                "doc": "$~Polygonens horisontella centrum.",
                "names": "$~x"
            },
            "y": {
                "doc": "$~Polygonens vertikala centrum.",
                "names": "$~y"
            },
            "z": {
                "doc": "$~Polygonens djupposition.",
                "names": "$~z"
            }
        },
        "Pose": {
            "doc": [
                "$~Du vet när någon slår det mest fantastiska sättet att stå, en paus och alla tittar? Det är jag. Jag fångar en pose för @Output att vara i, och är byggstenen i deras rörelser.",
                "$~Så mycket går in i en pose. Kolla in mina många input för att se vilka typer av poser du kan göra!"
            ],
            "names": ["$~🤪", "$~Pose"],
            "style": {
                "doc": "$~Animeringsstilen som ska användas när du flyttar till denna ställning.",
                "names": "$~stil"
            },
            "color": {
                "doc": "$~@Color a @Output ska vara i denna ställning, istället för att vara standard.",
                "names": "$~färg"
            },
            "opacity": {
                "doc": "$~Hur transparent en @Output ska vara, mellan \\0\\ och \\1\\, istället för dess standard. Hjälpsam för att tona in och ut.",
                "names": "$~opacitet"
            },
            "offset": {
                "doc": "$~En @Place som anger hur offset från en @Place plats den ska vara, istället för dess standard. Hjälpsam för att vicka på plats.",
                "names": "$~offset"
            },
            "rotation": {
                "doc": "$~Hur roterad en @Output ska vara, istället för dess standard.",
                "names": "$~rotation"
            },
            "scale": {
                "doc": "$~Hur förstorad en @Output ska vara i förhållande till dess ursprungliga storlek, istället för dess standard.",
                "names": "$~skala"
            },
            "flipx": {
                "doc": "$~Huruvida en @Output ska speglas på x-axeln, istället för dess standard.",
                "names": "$~flipx"
            },
            "flipy": {
                "doc": "$~Huruvida en @Output ska speglas på y-axeln, istället för att den är standard.",
                "names": "$~flipy"
            },
            "description": "$~$1[transparent $1|] $2[roterad $2 grader|] $3[skalad $3|] $4[vänd horisontellt|] $5[vänd vertikalt|] $6[skugga suddig $6 pixlar]"
        },
        "Color": {
            "doc": [
                "$~Jag är en synlig färg, gjord av tre väsentliga dimensioner.",
                "$~Här är några vanliga färger runt färghjulet, med medium ljusstyrka och hög färgton:",
                "$~\\Färg(50 % 100 0°)\\",
                "$~\\Färg(50 % 100 30°)\\",
                "$~\\Färg(50 % 100 60°)\\",
                "$~\\Färg(50 % 100 90°)\\",
                "$~\\Färg(50 % 100 120°)\\",
                "$~\\Färg(50 % 100 150°)\\",
                "$~\\Färg(50 % 100 180°)\\",
                "$~\\Färg(50 % 100 210°)\\",
                "$~\\Färg(50 % 100 240°)\\",
                "$~\\Färg(50 % 100 270°)\\",
                "$~\\Färg(50 % 100 300°)\\",
                "$~\\Färg(50 % 100 330°)\\"
            ],
            "names": ["$~🌈", "$~Färg"],
            "lightness": {
                "doc": "$~Hur ljus jag ska vara från \\0\\ till \\1\\, från svart vid \\0\\, till grå vid \\0,5\\, till vit vid \\1\\.",
                "names": ["$~lätthet", "$~l"]
            },
            "chroma": {
                "doc": "$~Hur mycket färg ska jag ha, från \\0\\ till \\∞\\. Ingen färg betyder grå, högre siffror betyder mer färg.",
                "names": ["$~chroma", "$~c"]
            },
            "hue": {
                "doc": "$~Vilken färg jag ska ha, på ett färghjul, från megenta \\0\\, röd \\30\\, grön \\120\\, till blå \\270\\.",
                "names": ["$~nyans", "$~h"]
            }
        },
        "Sequence": {
            "doc": [
                "$~Åh. Min. Jisses. Direktör, du ser fantastisk ut idag! Vill du dansa med mig? Det är lätt.",
                "$~Du behöver bara ge mig en @Map, där varje tangent representerar hur många procent vi är i dansen, och varje värde på dessa tangenter är en @Pose to be.",
                "$~Det finns /så/ många olika sätt du kan animera med detta! Till exempel, här är en enkel:",
                "$~\\Phrase('hi' resting:Sequence({0%: Pose(rotation: 360°) 100%: Pose(rotation: 0°)})\\",
                "$~Detta säger, /i början (0%), börja vid tilt 360 och sluta vid tilt 0/. Det kommer att snurra oss i cirklar för alltid, eftersom jag är inställd som @Phrase viloställning!",
                "$~Prova dina egna kreativa danser genom att spela med andra input."
            ],
            "names": ["$~💃", "$~Sekvens"],
            "poses": {
                "doc": "$~En @Map med procentsatser mellan 0 % och 100 %, var och en parad med en @Pose. Du behöver inte ange alla procent. Jag kommer smidigt att flytta en @Output mellan de du ger mig.",
                "names": "$~poserar"
            },
            "duration": {
                "doc": "$~Hur länge ska jag göra den här dansen? Om jag ska upprepa det kommer jag inte att lägga till någon tid till längden, jag kommer bara att dansa snabbare.",
                "names": ["$~⏳", "$~varaktighet"]
            },
            "style": {
                "doc": "$~Stilen ska jag använda för dansen.",
                "names": "$~stil"
            },
            "count": {
                "doc": "$~Hur många gånger sekvensen ska upprepas innan den är klar. Det här är verkligen användbart när jag går in på scenen, rör mig på scenen eller går ut på scenen, men när det gäller en vilosekvens ignoreras det, eftersom jag kan vila för evigt.",
                "names": "$~räkna"
            }
        },
        "Place": {
            "doc": "$~Jag är en plats på @Stage. Alla mina inmatningar är valfria, eftersom jag är i centrum som standard.",
            "names": ["$~📍", "$~Plats"],
            "x": {
                "doc": "$~En position på x-axeln.",
                "names": "$~x"
            },
            "y": {
                "doc": "$~En position på y-axeln",
                "names": "$~y"
            },
            "z": {
                "doc": "$~En position på z-axeln",
                "names": "$~z"
            },
            "rotation": {
                "doc": "$~Rotation vid denna position",
                "names": ["$~📐", "$~rotation"]
            }
        },
        "Velocity": {
            "doc": "$~Jag är en plats på @Stage. Alla mina inmatningar är valfria, eftersom jag är i centrum som standard.",
            "names": ["$~💨", "$~Hastighet"],
            "x": {
                "doc": "$~Hur många meter som ska flyttas varje sekund på x-axeln.",
                "names": "$~x"
            },
            "y": {
                "doc": "$~Hur många meter som ska flyttas varje sekund på y-axeln.",
                "names": "$~y"
            },
            "angle": {
                "doc": "$~Hur många grader som ska roteras varje sekund",
                "names": ["$~vinkel", "$~°"]
            }
        },
        "Matter": {
            "doc": "$~Jag är fysiska egenskaper hos output, som påverkar hur jag interagerar med andra output på scenen.",
            "names": ["$~⚛️", "$~Materia"],
            "mass": {
                "doc": "$~En vikt, i kilogram",
                "names": "$~massa"
            },
            "bounciness": {
                "doc": "$~Hur mycket av min energi för att hålla kollision, 0 betyder ingen, 1 betyder allt.",
                "names": "$~studsighet"
            },
            "friction": {
                "doc": "$~Hur mycket ska man fortsätta glida; 0 betyder ingen, 1 betyder för alltid.",
                "names": "$~friktion"
            },
            "roundedness": {
                "doc": "$~Hur mycket man ska runda hörnen på utgången; 0 betyder ingen och 1 betyder 100 % av dess storlek, vilket gör storlekarna cirkulära.",
                "names": "$~rundhet"
            },
            "text": {
                "doc": "$~Om den kan kollidera med annan utdata.",
                "names": "$~text"
            },
            "shapes": {
                "doc": "$~Om den kan kollidera med andra former.",
                "names": "$~jord"
            }
        },
        "Aura": {
            "doc": [
                "$~Jag är en AURA. Jag gör @Phrase GLOW! Så här:",
                "$~\\Fras(\n\t\"JAG GLÖDER!\" \n\taura: Aura(Färg(50 % 100 118°) 0,1m 0m 0,1m\n)\\"
            ],
            "names": ["$~🔮", "$~Aura"],
            "color": {
                "doc": "$~@Color som @Aura borde vara.",
                "names": "$~färg"
            },
            "blur": {
                "doc": "$~Hur suddig @Aura ska vara. \\0m\\ betyder inte suddig alls.",
                "names": "$~fläck"
            },
            "offsetX": {
                "doc": "$~Hur långt till vänster eller höger jag ska synas. \\0m\\ är direkt under.",
                "names": "$~offsetX"
            },
            "offsetY": {
                "doc": "$~Hur långt upp eller ner ska jag visas.\\0m\\ är direkt under.",
                "names": "$~offsetY"
            }
        },
        "Stage": {
            "doc": [
                "$~HEJ. SCEN HÄR. BETALA MIG VAD SKA VISA OCH JAG SKA VISA DET.",
                "$~\\Stage([Phrase('stufffffff')])\\",
                "$~OM DU VILL, GE MIG EN BAKGRUND @Color OCH JAG LÄNSER SCENEN I ENLIGHET.",
                "$~\\Stage([Fras('stufffffff')] bakgrund: Färg(75% 50 100°)\\",
                "$~DU KAN OCKSÅ GER MIG EN RAMKANT OCH JAG SKÖRAR.",
                "$~\\Stage([Phrase('stufffffff')] bakgrund: Färg(75% 50 100°) ram: Rektangel(-1m -1m 1m 1m))\\"
            ],
            "names": ["$~🎭", "$~Etapp"],
            "content": {
                "doc": "$~Listan över @Output att visa på scenen.",
                "names": "$~innehåll"
            },
            "frame": {
                "doc": "$~Formen och storleken på ramen som ska placeras runt scenen och döljer allt utanför den.",
                "names": "$~ram"
            },
            "size": {
                "doc": "$~GILLA @Group/size",
                "names": "$~storlek"
            },
            "face": {
                "doc": "$~GILLA @Group/face",
                "names": "$~ansikte"
            },
            "place": {
                "doc": "$~OM JAG VAR EN KAMERA, ÄR DET HÄR JAG LETAR",
                "names": "$~plats"
            },
            "name": {
                "doc": ["$~SAMMA SOM @Phrase/name!"],
                "names": "$~namn"
            },
            "description": {
                "doc": [
                    "$~En beskrivning att använda för publikmedlemmar som inte kan se visuell produktion."
                ],
                "names": "$~beskrivning"
            },
            "selectable": {
                "doc": "$~SAMMA SOM @Phrase/selectable!",
                "names": "$~valbara"
            },
            "color": {
                "doc": "$~SAMMA SOM @Group/color",
                "names": "$~färg"
            },
            "background": {
                "doc": "$~SAMMA SOM @Group/background",
                "names": "$~bakgrund"
            },
            "opacity": {
                "doc": "$~SAMMA SOM @Group/opacity",
                "names": "$~opacitet"
            },
            "offset": {
                "doc": "$~SAMMA SOM @Group/offset",
                "names": "$~offset"
            },
            "rotation": {
                "doc": "$~SAMMA SOM @Group/rotation",
                "names": ["$~📐", "$~rotation"]
            },
            "scale": {
                "doc": "$~SAMMA SOM @Group/scale",
                "names": "$~skala"
            },
            "flipx": {
                "doc": "$~SAMMA SOM @Group/flipx",
                "names": "$~flipx"
            },
            "flipy": {
                "doc": "$~SAMMA SOM @Group/flipy",
                "names": "$~flipy"
            },
            "entering": {
                "doc": "$~SAMMA SOM @Group/entering in",
                "names": "$~gårin"
            },
            "resting": {
                "doc": "$~SAMMA SOM @Group/resting!",
                "names": "$~vilande"
            },
            "moving": {
                "doc": "$~SAMMA SOM @Group/moving!",
                "names": "$~rörlig"
            },
            "exiting": {
                "doc": "$~SAMMA SOM @Group/exiting!",
                "names": "$~avslutar"
            },
            "duration": {
                "doc": "$~SAMMA SOM @Phrase/duration!",
                "names": ["$~⏳", "$~varaktighet"]
            },
            "style": {
                "doc": "$~SAMMA SOM @Phrase/style!",
                "names": "$~stil"
            },
            "gravity": {
                "doc": "$~Allvaret som ska tillämpas på utdata vars plats är i @Motion.",
                "names": "$~allvar"
            },
            "defaultDescription": "$~steg $2[$2 |]av $1 utgångar$3[med ram $3|] $4"
        },
        "Easing": {
            "straight": "$~rakt",
            "cautious": "$~försiktig",
            "pokey": "$~pokey",
            "zippy": "$~klämmig"
        },
        "sequence": {
            "sway": {
                "doc": "$~Jag skapar en @Sequence som svajar fram och tillbaka runt en @Sequence mitt.",
                "names": ["$~vingla"],
                "angle": {
                    "doc": "$~Hur mycket man ska luta i svaj.",
                    "names": ["$~vinkel"]
                }
            },
            "bounce": {
                "doc": "$~Jag skapar en @Sequence som studsar @Output en given höjd.",
                "names": ["$~studsa"],
                "height": {
                    "doc": "$~Hur högt att studsa.",
                    "names": ["$~höjd"]
                }
            },
            "spin": {
                "doc": "$~Jag skapar en @Sequence som roterar @Output runt mitten.",
                "names": ["$~snurra"]
            },
            "fadein": {
                "doc": "$~Jag skapar en @Sequence som tonar @Output in från osynlig till synlig.",
                "names": ["$~blekna"]
            },
            "fadeout": {
                "doc": "$~Jag skapar en @Sequence som tonar @Output från synlig till osynlig. Prova mig i en spännande @Sequence!",
                "names": ["$~tonaut"]
            },
            "popup": {
                "doc": "$~Jag skapar en @Sequence som får @Output att skala in snabbt än att krympa till sin normala storlek.",
                "names": ["$~popup"]
            },
            "shake": {
                "doc": "$~Jag skapar en @Sequence som får det att se ut som om en @Output är rädd.",
                "names": ["$~skaka"]
            }
        },
        "Source": {
            "names": "$~Källa",
            "doc": [
                "$~Vet du hur projekt kan ha mer än en @Source-fil? Jag låter dig skapa en @Source baserat på ditt projekts logik. Detta är verkligen användbart om du vill spara lite data mellan olika utvärderingar av ditt projekt.",
                "$~Föreställ dig till exempel att du ville göra en enkel räknare som räknas upp med en varje gång du trycker på en musknapp. Du kan använda detta för att komma ihåg hur många gånger du gjorde något.",
                "$~\\↓ räkna\n[\n\tFras(`\\count\\ gånger!`)\n\tKälla('count' count … ∆ Button() … count + 1 )\n]\\",
                "$~Försök att kopiera den, skapa en ny @Source som heter /count/ och skriv 0 i den, för att starta räkningen vid 0. Det här lilla projektet kommer att få värdet i /count/-källan och varje gång musknappen trycks, redigerar /count/ @Source med att vara det aktuella /count/-värdet plus /1/."
            ],
            "name": {
                "names": "$~namn",
                "doc": "$~Namnet på källfilen som ska skapas eller uppdateras."
            },
            "value": {
                "names": "$~värde",
                "doc": "$~Datavärdet som källfilen ska skapas eller uppdateras med."
            },
            "DynamicEditLimitException": {
                "description": "$~gräns för dynamisk källredigering",
                "explanation": "$~Det här projektet sparade data till @Source-filer för många gånger, för snabbt. Se till att den bara uppdaterar @Source som svar på en inmatning, och inte för snabbt."
            },
            "ReadOnlyEditException": {
                "description": "$~skrivskyddad källredigering",
                "explanation": "$~Det här projektet kommer ihåg data, men du har inte rättigheter att redigera dem. Kopiera den om du vill prova."
            },
            "EmptySourceNameException": {
                "description": "$~tomt källnamn",
                "explanation": "$~Den angivna @Source hade ett tomt namn, så vi kunde inte spara det."
            },
            "ProjectSizeLimitException": {
                "description": "$~projektstorleksgräns",
                "explanation": "$~Det här projektet har för mycket text, så vi kan inte spara det."
            }
        }
    },
    "ui": {
        "font": {
            "app": "$~Noto Sans",
            "code": "$~Noto Sans Mono"
        },
        "phrases": {
            "welcome": "$~Hej"
        },
        "widget": {
            "confirm": {
                "cancel": "$~avboka"
            },
            "dialog": {
                "close": "$~nära"
            },
            "loading": {
                "message": "$~Laddar typsnitt och text, tack för att du väntar!"
            },
            "home": "$~gå till startsidan",
            "table": {
                "cell": {
                    "description": "$~redigera den här cellen",
                    "placeholder": "$~värde"
                },
                "addcolumn": "$~lägg till en kolumn före denna kolumn",
                "removecolumn": "$~ta bort den här kolumnen"
            }
        },
        "tile": {
            "toggle": {
                "fullscreen": {
                    "on": "$~avsluta helskärm",
                    "off": "$~expandera till helskärm"
                },
                "show": {
                    "on": "$~dölja",
                    "off": "$~visa"
                }
            },
            "label": {
                "output": "$~etapp",
                "palette": "$~palett",
                "docs": "$~guide",
                "source": "$~källa",
                "collaborate": "$~samarbeta"
            },
            "button": {
                "collapse": "$~kollapsa fönstret"
            }
        },
        "project": {
            "error": {
                "unknown": "$~Det här projektet finns inte eller så har du inte tillgång till det.",
                "translate": "$~Det uppstod ett problem med att översätta ditt projekt.",
                "tile": "$~Hoppsan, det uppstod ett fel",
                "reset": "$~Försök att återställa..."
            },
            "button": {
                "share": {
                    "tip": "$~visa alternativ för projektdelning",
                    "label": "$~dela"
                },
                "removeCollaborator": "$~ta bort medarbetare",
                "copy": "$~kopiera projekt till urklipp som text",
                "addSource": "$~skapa en ny $source",
                "duplicate": "$~kopiera detta projekt",
                "revert": "$~återgå till originalkoden",
                "focusOutput": "$~fokus tangentbordet på scenen",
                "focusSource": "$~fokusera på nästa källa",
                "focusDocs": "$~fokusera på dokumentationen",
                "focusPalette": "$~fokusera på paletten",
                "focusCycle": "$~fokusera på nästa bricka",
                "unsaved": "$~visa spara fel",
                "translate": {
                    "tip": "$~redigera det här projektets språk och översätt det till andra språk.",
                    "label": "$~översätta"
                },
                "primary": "$~ange som projektets primära plats",
                "history": {
                    "on": "$~visa senaste projektkod",
                    "redo": "$~visa aktuell projektkod"
                }
            },
            "field": {
                "name": {
                    "description": "$~redigera projektnamn",
                    "placeholder": "$~namn"
                }
            },
            "help": "$~visa kortkommandon",
            "collapsed": "$~Alla dina fönster är kollapsade! Du hittar dem i verktygsfältet nedan",
            "save": {
                "projectsNotSavedLocally": "$~Det gick inte att spara projekt i din webbläsare.",
                "projectsCannotNotSaveLocally": "$~Din webbläsare stöder inte att spara projekt.",
                "projectContainedPII": "$~För att skydda din integritet sparades inte ett projekt med potentiellt personligt identifierbar information online. Kontrollera projektet för att se om informationen är identifierande.",
                "projectsNotLoadingOnline": "$~Det går inte att ladda onlineprojekt.",
                "projectNotSavedOnline": "$~Det går inte att spara projekt online.",
                "settingsUnsaved": "$~Det går inte att spara inställningar online."
            },
            "dialog": {
                "unsaved": "$~Osparat arbete...",
                "translate": {
                    "header": "$~Översätta",
                    "explanation": [
                        "$~Det här är de språk som ditt projekt använder.",
                        "$~För att försöka översätta ditt projekt till andra språk, välj ett primärt källspråk och välj sedan ett nytt språk.",
                        "$~/Alla språk stöds inte och översättningarna kommer att vara ofullkomliga, så granska resultaten!/"
                    ]
                }
            },
            "subheader": {
                "source": "$~Källa",
                "destination": "$~Destination"
            }
        },
        "checkpoints": {
            "label": {
                "now": "$~nu",
                "history": "$~återställa",
                "restore": "$~Detta är en tidigare version av detta projekt.",
                "ago": "$~$1 $2 sedan"
            },
            "button": {
                "clear": "$~radera historik",
                "select": "$~se den här versionen",
                "checkpoint": "$~spara den här versionen av projektet",
                "back": "$~gå tillbaka till föregående version",
                "forward": "$~gå tillbaka till nästa version",
                "restore": "$~återställa den här versionen",
                "now": "$~återgå till den aktuella versionen"
            }
        },
        "gallery": {
            "untitled": "$~Ofrälse",
            "undescribed": "$~Ingen beskrivning",
            "subheader": {
                "classes": {
                    "header": "$~Klasser",
                    "explanation": "$~Klasser associerade med detta galleri."
                },
                "curators": {
                    "header": "$~Kuratorer",
                    "explanation": "$~Skapare som hanterar det här galleriet."
                },
                "creators": {
                    "header": "$~Skapare",
                    "explanation": "$~Skapare som bidrar till det här galleriet."
                },
                "delete": {
                    "header": "$~Radera",
                    "explanation": "$~Att ta bort det här galleriet kommer inte att radera dess projekt. Galleriet kommer att raderas för alltid."
                }
            },
            "confirm": {
                "delete": {
                    "description": "$~radera galleri",
                    "prompt": "$~radera"
                },
                "remove": {
                    "description": "$~ta bort projekt från galleriet",
                    "prompt": "$~ta bort"
                }
            },
            "error": {
                "unknown": "$~Det här galleriet finns inte eller är inte offentligt."
            },
            "field": {
                "name": {
                    "description": "$~Galleriets namn",
                    "placeholder": "$~namn"
                },
                "description": {
                    "description": "$~Galleribeskrivning",
                    "placeholder": "$~Beskriv ditt galleri. Vad är dess tema, mål eller gemenskap?"
                }
            }
        },
        "source": {
            "label": "$~programredaktör",
            "empty": [
                "$~Låt oss komma igång! Du kan…",
                "$~• Öppna 📕 och dra 🖱️ oss till detta program.",
                "$~• Skriv $1 och välj oss från menyn.",
                "$~• Skriv oss med ⌨️.",
                "$~• Bläddra i <galleries@://galleries> för inspiration.",
                "$~Om du har fastnat, <läs mer@://learn>."
            ],
            "overwritten": "$~Projektet revideras på annat håll",
            "confirm": {
                "delete": {
                    "description": "$~ta bort denna $source",
                    "prompt": "$~radera"
                }
            },
            "toggle": {
                "blocks": {
                    "on": "$~redigera som text",
                    "off": "$~redigera som block"
                },
                "glyphs": {
                    "on": "$~kollapsa de matchande glyferna",
                    "off": "$~utöka de matchande glyferna"
                }
            },
            "button": {
                "selectOutput": "$~visa denna produktion på scenen",
                "expandSequence": "$~expandera den här komprimerade koden"
            },
            "field": {
                "name": {
                    "description": "$~redigera källnamnet",
                    "placeholder": "$~namn"
                }
            },
            "menu": {
                "label": "$~autoslutförande-menyn",
                "show": "$~visa autoslutförandemenyn",
                "back": "$~lämna undermenyn"
            },
            "cursor": {
                "priorLine": "$~flytta markören till raden innan",
                "nextLine": "$~flytta markören till raden efter",
                "priorInline": "$~flytta markören till positionen innan",
                "nextInline": "$~flytta markören till position efter",
                "lineStart": "$~flytta markören till början av raden",
                "lineEnd": "$~flytta markören till slutet av raden",
                "sourceStart": "$~flytta markören till början av källan",
                "sourceEnd": "$~flytta markören till slutet av källan",
                "priorNode": "$~välj granne innan",
                "nextNode": "$~välj granne efter",
                "parent": "$~välj behållare",
                "selectAll": "$~välj program",
                "incrementLiteral": "$~öka antal, text eller boolesk",
                "decrementLiteral": "$~minska antal, text eller boolesk",
                "insertSymbol": "$~infoga $1",
                "insertTab": "$~infoga flik",
                "insertTrue": "$~infoga sant",
                "insertFalse": "$~infoga falskt",
                "insertNone": "$~infoga ingen symbol",
                "insertNotEqual": "$~infoga inte lika",
                "insertProduct": "$~infoga produktsymbol",
                "insertQuotient": "$~infoga kvotsymbol",
                "insertDegree": "$~infoga gradsymbol",
                "insertFunction": "$~infogningsfunktion",
                "insertLessOrEqual": "$~infoga mindre än eller lika med",
                "insertGreaterOrEqual": "$~infoga större än eller lika med",
                "insertType": "$~infoga typsymbol",
                "insertDocs": "$~infoga förklaringssymbol",
                "insertStream": "$~infoga strömsymbol",
                "insertChange": "$~infoga ändringssymbol",
                "insertConvert": "$~infoga konvertera symbol",
                "insertPrevious": "$~infoga föregående symbol",
                "insertTable": "$~infoga tabell öppen symbol",
                "insertTableClose": "$~infoga tabell stäng symbol",
                "insertBorrow": "$~infoga låna",
                "insertShare": "$~infoga andel",
                "insertLine": "$~infoga radbrytning",
                "backspace": "$~radera val eller föregående symbol",
                "delete": "$~radera val eller nästa symbol",
                "cut": "$~skära urvalet",
                "copy": "$~kopiera urval",
                "paste": "$~klistra in innehållet på tangentbordet",
                "parenthesize": "$~val av parentes",
                "enumerate": "$~räkna upp urvalet",
                "type": "$~skriv tecken",
                "undo": "$~ångra föregående redigering",
                "redo": "$~gör om ångrad redigering",
                "search": "$~sök efter specialtecken att infoga",
                "tidy": "$~snyggt mellanrum",
                "elide": "$~växla elision"
            },
            "options": {
                "locale": {
                    "tip": "$?",
                    "all": "$?"
                }
            }
        },
        "annotations": {
            "label": "$~konflikter och hjälp",
            "cursor": "$~Det här är *$1*$2[ och de är av typen $2|].    $3[ De är inne i en *$3*.|]",
            "cursorParent": "$~De är inuti en *$1*$2[ av typen $2|].",
            "learn": "$~/Läs mer/",
            "evaluating": "$~Åh kul, låt oss utvärdera!",
            "space": "$~Det här är utrymme! Vem visste att ingenting kunde säga så mycket?",
            "button": {
                "resolution": "$~Lös denna konflikt"
            }
        },
        "output": {
            "label": "$~programutgång",
            "toggle": {
                "grid": {
                    "on": "$~dölj rutnätslinjer",
                    "off": "$~visa rutnätslinjer"
                },
                "fit": {
                    "on": "$~kontrollera zoomen manuellt",
                    "off": "$~anpassa zoom till innehåll"
                },
                "paint": {
                    "off": "$~placera utgång",
                    "on": "$~färgutgång"
                }
            },
            "field": {
                "key": {
                    "description": "$~lyssna på knapptryckningar",
                    "placeholder": "$~meddelande"
                }
            },
            "button": {
                "submit": "$~skicka detta chattmeddelande"
            },
            "options": {
                "locale": "$~välj språk för utmatning"
            }
        },
        "timeline": {
            "label": "$~tidslinjen",
            "slider": "$~tidsreglaget",
            "button": {
                "play": "$~utvärdera programmet till slutet, svara på input i realtid",
                "pause": "$~pausa programmet, vilket gör det möjligt att gå framåt och bakåt",
                "backStep": "$~ett steg tillbaka",
                "backNode": "$~steg till föregående utvärdering av markören",
                "backInput": "$~tillbaka en ingång",
                "out": "$~gå ur denna funktion",
                "forwardStep": "$~steg fram en",
                "forwardNode": "$~steg till nästa utvärdering av markören",
                "forwardInput": "$~steg framåt till nästa streamingång",
                "present": "$~till slutet",
                "start": "$~Till början",
                "reset": "$~starta om prestandan"
            }
        },
        "docs": {
            "label": "$~dokumentwebbläsare",
            "link": "$~visa koncept $1 i dokumentationen",
            "learn": "$~lär dig mer...",
            "nodoc": "$~Vem är jag? Vad är jag? Vad är mitt syfte?",
            "button": {
                "home": "$~hemkomst",
                "back": "$~återgå till föregående"
            },
            "field": {
                "search": "$~söka efter begrepp med ord"
            },
            "header": {
                "inputs": "$~Ingångar",
                "interfaces": "$~Gränssnitt",
                "properties": "$~Egenskaper",
                "functions": "$~Funktioner",
                "conversions": "$~Konverteringar"
            }
        },
        "dialog": {
            "share": {
                "header": "$~Delning",
                "explanation": "$~Dela detta projekt med gallerier eller världen.",
                "subheader": {
                    "gallery": {
                        "header": "$~Galleri",
                        "explanation": "$~Lägg till det här projektet i ett galleri tillsammans med andra skapare, eller skapa ett galleri på din <projects@://projects>-sida. Om du lägger till ett projekt i ett offentligt galleri blir ditt projekt offentligt."
                    },
                    "public": {
                        "header": "$~Offentlig/Privat",
                        "explanation": "$~Offentliga projekt och gallerier kan ses av alla i världen. Vårt mål är att detta innehåll ska ge bekräftelse och glädje, och offentlig delning är ett sätt att göra det. Men det innebär också att man följer vissa regler. Du lovar att ditt projekt inte:"
                    },
                    "pii": {
                        "header": "$~Personlig information",
                        "explanation": "$~Att dela personligt identifierbar information (PII) offentligt kan utsätta skapare för risker, så vi upptäcker möjlig PII och varnar skapare att antingen ta bort den känsliga informationen eller markera den som okänslig.\n\nNedan finns en lista över möjliga PII i detta projekt som du har markerat som okänsliga. Du kan klicka på knappen bredvid den för att markera den som känslig igen, men att göra det betyder att ditt projekt inte sparas online längre."
                    }
                },
                "field": {
                    "emailOrUsername": {
                        "placeholder": "$~e-post eller användarnamn",
                        "description": "$~e-post eller användarnamn för den person som du vill ge redigeringsbehörighet"
                    }
                },
                "mode": {
                    "public": {
                        "label": "$~synlighet",
                        "modes": ["$~privat", "$~offentlig"]
                    }
                },
                "error": {
                    "unknown": "$~Vi känner ingen skapare med den här e-postadressen.",
                    "anonymous": "$~Du måste vara inloggad för att dela."
                },
                "button": {
                    "submit": "$~Dela projektet med denna e-postadress",
                    "sensitive": {
                        "tip": "$~Markera denna text som känslig igen",
                        "label": "$~känslig"
                    }
                },
                "options": {
                    "gallery": "$~galleriväljare"
                }
            },
            "settings": {
                "header": "$~Inställningar",
                "explanation": "$~Ändra layout, enhet och temainställningar.",
                "button": {
                    "show": "$~visa inställningsdialogrutan"
                },
                "mode": {
                    "layout": {
                        "label": "$~layout",
                        "modes": [
                            "$~automatisk",
                            "$~horisontell",
                            "$~vertikal",
                            "$~gratis"
                        ]
                    },
                    "animate": {
                        "label": "$~animationer",
                        "modes": [
                            "$~animationer av",
                            "$~normal hastighet",
                            "$~halvfart",
                            "$~tredje hastigheten",
                            "$~kvarts hastighet"
                        ]
                    },
                    "dark": {
                        "label": "$~tema",
                        "modes": [
                            "$~ljusa färger",
                            "$~mörka färger",
                            "$~använd enhetsinställning"
                        ]
                    },
                    "space": {
                        "label": "$~utrymmesindikator",
                        "modes": [
                            "$~visa mellanslags- och flikindikatorer explicit",
                            "$~visa inte mellanslags- och flikindikatorer"
                        ]
                    },
                    "lines": {
                        "label": "$~radnummer",
                        "modes": [
                            "$~visa radnummer i textläge",
                            "$~visa inte radnummer i textläge"
                        ]
                    },
                    "writing": {
                        "label": "$~skrivlayout",
                        "modes": [
                            "$~horisontellt, från vänster till höger",
                            "$~vertikalt, höger till vänster",
                            "$~vertikalt, från vänster till höger"
                        ]
                    }
                },
                "options": {
                    "face": "$~teckensnitt",
                    "mic": "$~vald mikrofon",
                    "camera": "$~vald kamera"
                }
            },
            "locale": {
                "header": "$~Språk",
                "explanation": "$~Välj språk för gränssnittet, handledningen och dokumentationen.",
                "subheader": {
                    "selected": "$~Vald",
                    "supported": "$~Tillgänglig",
                    "help": "$~Hjälp oss att översätta..."
                },
                "button": {
                    "show": "$~ändra språk",
                    "replace": "$~använd den här lokalen",
                    "add": "$~använd den här lokalen och de nuvarande",
                    "remove": "$~ta bort den här lokalen"
                }
            },
            "help": {
                "header": "$~Genvägar",
                "explanation": "$~Använd dessa tangentbordskommandon för mer effektiv redigering.",
                "subheader": {
                    "moveCursor": "$~Flytta",
                    "editCode": "$~Redigera",
                    "insertCode": "$~Infoga",
                    "debug": "$~Felsök"
                }
            }
        },
        "collaborate": {
            "label": "$~samarbeta",
            "role": {
                "owner": "$~ägare",
                "collaborators": "$~kollaboratörer",
                "curators": "$~kuratorer"
            },
            "field": {
                "message": {
                    "description": "$~Chattmeddelandet att skicka",
                    "placeholder": "$~Skriv ett meddelande"
                }
            },
            "button": {
                "submit": {
                    "label": "$~Skicka",
                    "tip": "$~Skicka ett meddelande till dina medarbetare"
                },
                "start": {
                    "label": "$~Starta en chatt",
                    "tip": "$~Börja en diskussion med dig själv eller andra."
                },
                "delete": "$~radera detta meddelande"
            },
            "error": {
                "unowned": "$~Det här projektet lagras inte online, så det kan inte ha en chatt eller samarbetspartner.",
                "offline": "$~Det gick inte att ladda den här chatten.",
                "empty": "$~Inga meddelanden.",
                "deleted": "$~Detta meddelande raderades."
            },
            "prompt": {
                "solo": "$~Chatta med dig själv eller lägg till en medarbetare som kan redigera och chatta.",
                "owner": "$~Samarbetspartners kan redigera det här projektet och chatta om det.",
                "collaborator": "$~Du är en kollaboratör. Du kan redigera det här projektet och chatta om det.",
                "curator": "$~Du är curator för detta projekts galleri. Du kan redigera det här projektet och chatta om det."
            }
        },
        "palette": {
            "label": "$~palett",
            "labels": {
                "mixed": "$~blandad",
                "computed": "$~beräknad",
                "default": "$~standard",
                "inherited": "$~ärvt",
                "notSequence": "$~inte en sekvens",
                "notContent": "$~inte en innehållslista",
                "format": "$~formatera",
                "weight": "$~vikt",
                "light": "$~ljus",
                "normal": "$~normal",
                "bold": "$~djärv",
                "extra": "$~extra",
                "italic": "$~kursiv",
                "underline": "$~betona"
            },
            "button": {
                "revert": "$~återgå till standard",
                "set": "$~redigera den här egenskapen",
                "addPhrase": "$~lägg till en fras efter detta",
                "addGroup": "$~lägg till en grupp efter detta",
                "addShape": "$~lägg till en form efter detta",
                "addMotion": "$~ange plats för Motion stream",
                "addPlacement": "$~ange plats till placeringsström",
                "remove": "$~ta bort detta innehåll",
                "up": "$~flytta detta innehåll uppåt",
                "down": "$~flytta detta innehåll nedåt",
                "edit": "$~redigera detta innehåll",
                "sequence": "$~konvertera till Sequence",
                "createPhrase": "$~skapa en fras som visar det befintliga värdet som text",
                "createGroup": "$~skapa en grupp och slå in alla befintliga fraser",
                "createStage": "$~skapa en scen, linda en befintlig grupp eller fras"
            },
            "prompt": {
                "offerPhrase": "$~Vilket fantastiskt värde du gjort! Ska jag visa den på @Stage?",
                "offerGroup": "$~Vilken underbar @Phrase du gjorde. Vill du sammanföra dem till en @Group, för att få dem ordnade?",
                "offerStage": "$~MYCKET BRA @Program. LÄGG TILL MIG FÖR ATT STYRA LJUS. FÄRGER. RAMAR.",
                "pauseToEdit": "$~Om du ⏸️ scenen kan du välja en 💬, 🔳 eller 🎭 för att redigera!",
                "editing": "$~Redigera mig!"
            },
            "field": {
                "coordinate": "$~redigera koordinat",
                "text": "$~redigera text"
            },
            "sequence": {
                "button": {
                    "add": "$~lägg till pose",
                    "remove": "$~ta bort posen",
                    "up": "$~flytta posera upp",
                    "down": "$~flytta posen ner"
                },
                "field": {
                    "percent": "$~redigera procent"
                }
            }
        },
        "save": {
            "saving": "$~sparande",
            "saved": "$~sparat online",
            "local": "$~sparas i webbläsaren",
            "unsaved": "$~osparade"
        },
        "page": {
            "unknown": {
                "header": "$~Hoppsan!",
                "message": "$~Var är det här stället? Kan vi gå hem?"
            },
            "landing": {
                "value": "$~Skapa interaktiva berättelser med ord, symboler, emojis och kod med oss!",
                "description": [
                    "$~Wordplay är ett programmeringsspråk som gör att du kan:",
                    "$~• Lekfullt animera ord och emojis 🤪",
                    "$~• Använd tid 🕦, ljud 🎤, webbplatser 🔗 och fysik 🌎",
                    "$~• Dela 🤝 med vänner, grupper eller vem som helst",
                    "$~• Kod på vilket världsspråk som helst 🌐",
                    "$~• Redigera med möss 🖱️, tryck på 👆 och tangentbord ⌨️",
                    "$~• Felsök framåt ⏩ och bakåt ⏪",
                    "$~• Visa med skärmar 🖥️ och skärmläsare 🔊",
                    "$~Gratis för alltid från <University of Washington@https://ischool.uw.edu/>."
                ],
                "beta": [
                    "$~Ordspel är i *beta*, så det kanske inte fungerar som avsett eller är komplett. Rapportera buggar och dela idéer i <GitHub@https://github.com/wordplaydev/wordplay/issues>, se våra <1.0-planer@https://github.com/wordplaydev/wordplay/milestones/1.0> och <contribute @https://github.com/wordplaydev/wordplay/wiki/contribute>."
                ],
                "link": {
                    "learn": "$~Lär dig språket med en dramatisk rollfigur",
                    "teach": "$~Hantera klasser av elever och deras projekt",
                    "guide": "$~Sök och bläddra i språkreferensen",
                    "projects": "$~Skapa och dela föreställningar",
                    "galleries": "$~Upplev andras framträdanden",
                    "rights": "$~Ansvar, vårt och ditt",
                    "about": "$~Varför finns det här stället?",
                    "community": {
                        "label": "$~Gemenskap",
                        "subtitle": "$~Chatta med oss på Discord."
                    },
                    "contribute": {
                        "label": "$~Medverka",
                        "subtitle": "$~Hjälp oss att göra ordspel."
                    }
                }
            },
            "learn": {
                "header": "$~Lära sig",
                "error": "$~Vi kunde inte hitta en handledning för detta språk.",
                "button": {
                    "next": "$~nästa paus i dialogrutan",
                    "previous": "$~föregående paus i dialogrutan"
                },
                "options": {
                    "lesson": "$~aktuell lektion"
                }
            },
            "teach": {
                "header": "$~Lära",
                "prompt": {
                    "none": "$~Välkommen lärare! Skapa en klass för att konfigurera och hantera studentkonton och projektgallerier.",
                    "some": "$~Välkommen lärare! Hantera dina klasser eller skapa en ny."
                },
                "error": {
                    "offline": "$~Vi kunde inte kontrollera din lärarstatus. Är du inloggad?",
                    "login": "$~Du måste vara inloggad för att hantera klasser.",
                    "teacher": "$~Du behöver lärarbehörighet för att skapa och hantera klasser. Fyll i detta formulär och låt oss lära känna varandra!"
                },
                "link": {
                    "request": "$~Begär lärarprivilegier",
                    "new": "$~Skapa en klass"
                }
            },
            "newclass": {
                "header": "$~Ny klass",
                "subheader": {
                    "class": "$~Din klass",
                    "students": "$~Dina elever",
                    "credentials": "$~Användarnamn och lösenord",
                    "submit": "$~Överlämna"
                },
                "prompt": {
                    "start": "$~Skapa en klass med genere-konton för alla elever i din klass och låter dig skapa gallerier som alla dina elever kan lägga till projekt till. Om elever har befintliga konton kan du lägga till dem senare.",
                    "review": "$~Granska användarnamnen och lösenorden vi skapade. Vill du *redigera* dem innan du fortsätter? Om du gör det kommer du inte att kunna redigera elevinformationen ovan.",
                    "ready": "$~Meddela oss när du är redo att generera inloggningsuppgifter ovan. Du kan redigera dem efter att du har gjort det.",
                    "pending": "$~Genererar användarnamn och lösenord...",
                    "submit": "$~Redo att skicka in? Så snart det är framgångsrikt får du en nedladdning av denna information. Lösenord är *inte återställbara*, så förvara dem någonstans säkert.",
                    "submitting": "$~Begär nya konton med användarnamnen och lösenorden ovan...",
                    "download": "$~Din klass är redo! Du bör se en nedladdning av din studentdata i din nedladdningsmapp. *Lösenord kan inte återställas*, så förvara den här filen någonstans säkert!"
                },
                "field": {
                    "name": {
                        "description": "$~klassnamn",
                        "placeholder": "$~ett kort namn"
                    },
                    "description": {
                        "description": "$~beskrivning",
                        "placeholder": "$~en beskrivning av din klass, för dig och dina elever."
                    },
                    "existing": {
                        "label": "$~studenter med konton",
                        "prompt": "$~Har några av dina elever redan Wordplay-konton? Inkludera dem här."
                    },
                    "metadata": {
                        "description": "$~studentinformation",
                        "placeholder": "$~t.ex. student-id, efternamn, förnamn",
                        "prompt": "$~Vill du skapa nya konton för studenter? Ange *all information* om elever, en per rad, avgränsade med kommatecken. Detta kan vara efternamn, förnamn, studentnummer eller andra utmärkande detaljer. Vi kommer att använda den för att skapa användarnamn som du kan redigera nedan, vilket hjälper dig att associera användarnamn till elever."
                    },
                    "words": {
                        "description": "$~ord att använda i lösenord",
                        "placeholder": "$~t.ex. kattprickråtta...",
                        "prompt": "$~Ange minst *25 ord* generera slumpmässigt 2-3 ord minnesvärda lösenord. Välj ord dina elever känner till eller be dem brainstorma ord. Ju mer slumpmässigt desto säkrare!"
                    },
                    "generate": {
                        "label": "$~generera",
                        "tip": "$~Skapa användarnamn och lösenord baserat på informationen ovan."
                    },
                    "edit": {
                        "label": "$~redigera",
                        "tip": "$~redigera den genererade elevinformationen"
                    },
                    "submit": {
                        "label": "$~skapa klass",
                        "tip": "$~Skapa en ny klass med denna information."
                    }
                },
                "error": {
                    "duplicates": "$~Det finns dubbla poster i studentinformationen.",
                    "columns": "$~Se till att varje elev har samma antal kolumner.",
                    "generate": "$~Det går inte att skapa unika användarnamn.",
                    "taken": "$~Ett eller flera användarnamn ovan tas",
                    "limit": "$~Du kan inte skapa en klass med fler än 35 elever åt gången.",
                    "words": "$~Ange minst 25 ord.",
                    "account": "$~Det gick inte att skapa några av kontona.",
                    "generic": "$~Vi kunde inte skapa klassen. Här är lite information som hjälper utvecklare att ta reda på vad som gick fel."
                }
            },
            "class": {
                "header": "$~Klass",
                "subheader": {
                    "teachers": "$~Lärare",
                    "students": "$~Studenter",
                    "galleries": "$~Gallerier"
                },
                "prompt": {
                    "gallery": "$~Skapa ett galleri för din klass för att organisera en uppgift eller ett projekt. Alla lärare i projektet kommer att vara gallerikuratorer och alla studenter galleriskapare.",
                    "delete": "$~Om du tar bort den här klassen raderas information om klassen permanent, men dess projekt, gallerier eller studentkonton."
                },
                "field": {
                    "name": {
                        "description": "$~klassens namn",
                        "placeholder": "$~namn"
                    },
                    "description": {
                        "description": "$~beskrivning av klassen",
                        "placeholder": "$~beskrivning"
                    },
                    "newteacher": {
                        "placeholder": "$~e-post eller användarnamn",
                        "description": "$~e-post eller användarnamn för skaparen som du vill ge läraren åtkomst till den här klassen"
                    },
                    "addteacher": "$~Lägg till en lärare i den här klassen",
                    "delete": {
                        "tip": "$~Ta bort den här klassen för alltid.",
                        "label": "$~Ta bort den här klassen"
                    }
                },
                "error": {
                    "notfound": "$~Vi kunde inte hitta den här klassen eller så har du inte behörighet att se den."
                }
            },
            "guide": {
                "header": "$~Guide",
                "description": "$~Detta är en referens för varje del av programmeringsspråket Wordplay. Sök efter ett koncept eller bläddra i listan för att lära dig mer."
            },
            "projects": {
                "header": "$~Projekt",
                "projectprompt": "$~Redo att säga något? Skapa ett projekt eller arbeta med ett. Om du fastnar, fortsätt med <learning@://learn>.",
                "archiveheader": "$~Arkiverad",
                "archiveprompt": "$~Det här är projekt som du har arkiverat. Endast ägare kan permanent ta bort eller avarkivera dem. Arkiverade projekt kommer att raderas permanent 30 dagar efter att de senast redigerades.",
                "galleriesheader": "$~Gallerier",
                "galleryprompt": "$~Skapa och kurera gallerier för att dela en samling projekt med andra.",
                "add": {
                    "header": "$~Nytt projekt",
                    "explanation": "$~Välj en mall för att skapa ett nytt projekt."
                },
                "button": {
                    "newproject": "$~nytt projekt",
                    "editproject": "$~redigera detta projekt",
                    "viewcode": "$~visa detta projekts kod",
                    "newgallery": "$~nytt galleri",
                    "unarchive": "$~avarkivera detta projekt"
                },
                "confirm": {
                    "archive": {
                        "description": "$~arkivera denna föreställning",
                        "prompt": "$~arkiv"
                    },
                    "delete": {
                        "description": "$~radera den här föreställningen permanent",
                        "prompt": "$~radera för alltid"
                    }
                },
                "error": {
                    "noaccess": "$~Vi kunde inte nå internet.",
                    "nogalleryedits": "$~Du måste vara inloggad för att skapa och ändra gallerier.",
                    "newgallery": "$~Vi kunde inte skapa ett nytt galleri.",
                    "nodeletes": "$~Du måste vara inloggad för att ta bort arkiverade projekt.",
                    "delete": "$~Hoppsan, vi kunde inte ta bort projektet!"
                }
            },
            "galleries": {
                "header": "$~Gallerier",
                "prompt": "$~Det är föreställningar som andra har gjort. Upplev dem, studera dem eller anpassa dem till ditt eget uttalande.",
                "examples": "$~Exempel"
            },
            "about": {
                "header": "$~Om",
                "content": [
                    "$~Har du någonsin känt att kodning bara var för engelska flytande, icke-handikappade västerlänningar som växte upp med datorer?",
                    "$~Ja, vi också.",
                    "$~Det här är ingen olycka. Sedan datorns gryning har programmeringsspråk designats och byggts av mestadels samma grupp människor - mestadels vita, cis, engelsktalande män i akademin och industrin i USA och Europa, och några otroliga kvinnliga matematiker. De gjorde sitt arbete i en tid av postkolonial makt, vinnare som tar allt, och programmeringsspråk var ett nyckelverktyg för att säkra den makten.",
                    "$~Denna historia har lett till en vision om beräkning som främst handlar om hastighet, logik, vinst och dominans.",
                    "$~Detta är en orättvisa. Eftersom datoranvändning, på gott och ont, nu undergräver det dagliga livet på synliga och osynliga sätt, och de människor som har tillgång till att skapa med det är de som liknar dess skapare. Resten av mänskligheten förblir tacksam för denna makt, eftersom att föreställa sig något annorlunda kräver läskunnighet, som hålls intakt av språkbarriärer, tillgänglighetsbarriärer, ekonomiska hinder och orättvisor i offentlig utbildning.",
                    "$~*Ordspel* strävar efter att hjälpa till att ändra detta. Det är en programmeringsplattform designad för att vara global och stödja /alla/ världens språk, men också vara /om/ världens språk. En plattform där alla kan skapa, med vilka förmågor de har, för att dela interaktivt innehåll som alla kan uppleva. För ungdomar och unga vuxna som vill uttrycka sig genom interaktiva ord, emojis och typografi, lekfullt och konstfullt. Inte med målet att få makt för sig själva, utan för att skapa en beräkningsvärld som erkänner den otroliga styrkan och nödvändigheten av våra vackra olikheter.",
                    "$~Vi är en gemenskap av designers, utbildare och utvecklare som försöker förverkliga denna vision. Vi är färgade människor, vi är trans, vi är queera, vi är funktionshindrade, vi är invandrare, vi är flyktingar. Vi är centrerade på <University of Washington@https://washington.edu> <Information School@https://ischool.uw.edu/> i Seattle, Washington, USA, en plats som strävar efter att välkomna alla och ångra kolonialismens dugliga och rasistiska härjningar som fortsätter idag. Att göra det här programmeringsspråket och plattformen är en liten del av det uppdraget, och ger en glimt av en framtid av datorer där /alla/ hör hemma.",
                    "$~Vi skulle älska din hjälp. Lär dig <hur du bidrar@https://github.com/wordplaydev/wordplay/wiki/contribute>, <donate@://donate> eller spåra vår <progress@https://github.com/amyjko/wordplay/ milstolpar>. Skriv till vår samhällsorganisatör <Amy@https://amyjko.phd> om du har frågor."
                ]
            },
            "login": {
                "header": "$~Inloggning",
                "subtitle": "$~Spara, samarbeta och dela",
                "anonymous": "$~inloggning",
                "prompt": {
                    "login": "$~Logga in för att spara dina projekt, samarbeta och dela:",
                    "join": "$~Eller, <skapa ett konto@://join> för att börja.",
                    "forgot": "$~*Har du glömt ditt lösenord?* Tyvärr kan vi inte återställa ditt konto eftersom vi inte samlar in kontaktinformation.",
                    "enter": "$~Det verkar som om din inloggningslänk kom från en annan webbläsare eller enhet. Kan du ange din e-postadress igen, bara så att vi är säkra på att det är du?",
                    "play": "$~Du är inloggad, vi kan spara dina projekt online nu! Vill du skapa något?",
                    "tooyoung": "$~Du måste vara 13 år eller äldre för att logga in med e-post.",
                    "passwordrule": "$~Lösenord måste vara minst 10 tecken långa; om du inte använder en lösenordshanterare, välj tre långa ord som du kommer ihåg.",
                    "passwordreminder": "$~Det verkar som att du inte har ett konto än. Ange ditt lösenord igen och se till att du har lagrat det säkert och korrekt, eftersom det inte går att återställa.",
                    "changeEmail": "$~Vill du ändra din e-postadress? Skicka in en ny så skickar vi en bekräftelse till den gamla.",
                    "changePassword": "$~Vill du ändra ditt lösenord? Skicka in en ny och upprepa den.",
                    "email": "$~Har du ett e-postkonto? Logga in genom att skicka din e-post, och om det finns ett konto kopplat till det, skickar vi ett e-postmeddelande med inloggningslänk. Nya e-postkonton stöds inte, för att bevara integriteten.",
                    "sent": "$~Om denna e-post är kopplad till ett konto kommer den att få ett e-postmeddelande med en inloggningslänk. Det kan ta några minuter innan det visas. Om det inte finns något konto kopplat till detta e-postmeddelande kommer du inte att få någonting.",
                    "logout": "$~Använder du en delad enhet och vill hålla dina projekt privata? Logga ut så *tar vi bort dina projekt* från den här enheten, men de kommer att sparas online.",
                    "success": "$~Konto skapat!",
                    "confirm": "$~Kontrollera din gamla e-postadress för att bekräfta din nya adress.",
                    "delete": "$~Vill du att vi ska glömma allt du har gjort här? Detta kan inte ångras.",
                    "reallyDelete": "$~Är du säker? Ditt konto och dina inställningar kommer att raderas omedelbart och dina projekt kommer att schemaläggas för radering. Samarbetspartners i dina projekt förlorar omedelbart åtkomst till dem. Skriv din e-postadress eller ditt användarnamn för att bekräfta att det är detta du vill ha.",
                    "name": "$~Väljenemojiförattrepresenteradigsjälvförandra."
                },
                "error": {
                    "expired": "$~Denna länk har upphört att gälla.",
                    "invalid": "$~Den här länken är inte giltig.",
                    "email": "$~Det här e-postmeddelandet var inte giltigt.",
                    "failure": "$~Kan inte logga in :(",
                    "offline": "$~Vi kunde inte nå molnet ☁️.",
                    "unchanged": "$~Vi kunde inte ändra din e-postadress, men vi vet inte varför.",
                    "delete": "$~Vi kunde inte ta bort ditt konto, men vi vet inte varför.",
                    "wrongPassword": "$~Inte ett giltigt användarnamn och lösenord. Antingen är ditt lösenord fel eller så har någon annan det här användarnamnet.",
                    "tooMany": "$~Du har försökt och misslyckats med att logga in för många gånger. Du måste vänta med att försöka igen."
                },
                "feedback": {
                    "changing": "$~Skickar nytt e-postmeddelande...",
                    "deleting": "$~Okej, tar bort dina projekt och inställningar...",
                    "updatedPassword": "$~Ditt lösenord är uppdaterat.",
                    "match": "$~Detta måste matcha ditt kontos användarnamn."
                },
                "field": {
                    "email": {
                        "description": "$~redigera inloggningsmail",
                        "placeholder": "$~e-post"
                    },
                    "username": {
                        "description": "$~logga in användarnamn, använd inte personligt identifierbar information",
                        "placeholder": "$~användarnamn"
                    },
                    "password": {
                        "description": "$~inloggningslösenord, minst 10 tecken",
                        "placeholder": "$~lösenord"
                    },
                    "currentPassword": {
                        "description": "$~ditt nuvarande inloggningslösenord",
                        "placeholder": "$~nuvarande lösenord"
                    },
                    "newPassword": {
                        "description": "$~ditt nya lösenord",
                        "placeholder": "$~nytt lösenord"
                    }
                },
                "button": {
                    "logout": {
                        "tip": "$~logga ut från ditt konto",
                        "label": "$~utloggning"
                    },
                    "login": "$~logga in med detta e-postmeddelande, skicka en inloggningslänk",
                    "updateEmail": "$~ändra din e-post",
                    "delete": {
                        "tip": "$~radera ditt konto",
                        "label": "$~radera mina uppgifter..."
                    },
                    "reallyDelete": {
                        "tip": "$~radera ditt konto för alltid",
                        "label": "$~radera det!!!"
                    },
                    "updatePassword": "$~skicka in nytt lösenord"
                },
                "toggle": {
                    "reveal": {
                        "on": "$~Visa lösenord",
                        "off": "$~Dölj lösenord"
                    }
                }
            },
            "join": {
                "header": "$~Ansluta sig till",
                "prompt": {
                    "create": "$~Skapa ett konto för att spara dina projekt, samarbeta med andra och dela ditt arbete.",
                    "username": "$~Användarnamn måste vara minst /5 tecken/, får inte vara ett e-postmeddelande och får inte innehålla ditt namn eller annan identifieringsinformation.",
                    "password": "$~Lösenord måste vara minst /10 tecken/. Skriv det två gånger och skriv ner det på ett säkert ställe, som en lösenordshanterare. *Det finns inget sätt att återställa ditt konto* om du förlorar det, eftersom vi inte samlar in kontaktinformation."
                }
            },
            "rights": {
                "header": "$~Rättigheter",
                "content": [
                    "$~Hej!",
                    "$~Låt oss ställa upp några förväntningar på dina och våra rättigheter (också i ljuset av policy, såsom <COPPA@https://www.ecfr.gov/current/title-16/chapter-I/subchapter-C/part-312> och <GDPR@https://gdpr.eu/compliance-checklist-us-companies/>).",
                    "$~Det första att veta är att vi inte är en kommersiell enhet. Vi är ett samhällsbaserat forskningsprojekt inrymt vid ett icke-vinstdrivande universitet. Vårt mål är att skapa en plattform som ger dig glädje och hjälper oss att göra upptäckter om en mer rättvis och rättvis datorvärld. Vi har inget intresse av att tjäna pengar på den här plattformen; alla pengar vi samlar in (vanligtvis genom offentlig finansiering) används för att upprätthålla plattformen, inte för att berika någon som arbetar på den (eller bidrar till den).",
                    "$~Eftersom vi inte söker vinst, betyder det också att vi inte kan ge några löften om tillförlitligheten, tillgängligheten eller livslängden för denna plattform. Som sagt, <Amy@https://amyjko.phd> är långsiktigt engagerad i att upprätthålla det, och som fast professor har hon en ganska stabil spelning.",
                    "$~Det leder till *data*. Här är vad vi samlar in och lagrar i molnet:",
                    "$~• Dina *projekt*. Vi lagrar alla projekt du bidrar med och dina ändringar av dem, såvida inte dessa projekt verkar ha personligt identifierbar information som telefonnummer, e-postadresser, användarnamn, skattekoder eller adresser.",
                    "$~• Dina *inställningar*. Detta inkluderar de språk du väljer, dina animationsinställningar och dina framsteg i handledningen. Allt annat lagras endast på din enhet.",
                    "$~• Aggregerad *aktivitet*. Vi spårar inloggningar och de sidor du besöker, men inte på ett sätt som kan identifiera dig, spåra dig över webbplatsen eller spåra dig på andra webbplatser. Vi använder Google Analytics i läget \"samtycke nekat\", som bara samlar in minimal icke-identifierbar information om sidvisningar, utan att lagra cookies eller skicka IP-adressinformation till Google. Vi använder denna samlade information för att hjälpa till att samla in finansiering genom att rapportera hur mycket plattformen används.",
                    "$~Vi lagrar inget annat. Vår <source@https://github.com/amyjko/wordplay/tree/main/src> är offentlig, så vem som helst kan verifiera detta och rapportera oavsiktlig spårning.",
                    "$~*Du* äger dina uppgifter, inte vi. Det betyder:",
                    "$~• Du styr vem som kan komma åt dina projekt. De är privata som standard, men du kan dela dem med individer, grupper eller göra dem helt offentliga.",
                    "$~• Du kan ta bort alla projekt eller ditt eget konto när som helst.",
                    "$~• Du kan exportera vilket projekt som helst eller hela ditt konto när som helst.",
                    "$~Så här kommer vi att använda din data och inte:",
                    "$~• Vi delar inte dina uppgifter med någon, såvida det inte uttryckligen krävs enligt lag. Det är alltid möjligt att din data tas utan tillstånd (ett \"dataintrång\"). Om vi upptäcker att detta har hänt kommer vi att meddela dig att detta har hänt med e-postmeddelandet du har delat med oss.",
                    "$~• Vi kommer inte att kontakta dig via din e-postadress om du inte 1) gör en kontoändring som kräver att vi, 2) du uttryckligen ger oss samtycke till att kontakta oss, eller 3) vid dataintrång ovan.",
                    "$~• Vi kan analysera projekt på plattformen för att förstå vad alla gör och hur de gör det. Vi kan komma att dela dessa samlade, anonymiserade insikter i akademiska publikationer. Vi kommer endast att göra detta under överinseende av en institutionell granskningsnämnd, enligt mandat av amerikansk federal lag.",
                    "$~Till sist en anteckning om tal. Du kan säga vad du vill på den här plattformen i *privat*. Projekt är privata som standard, och om du delar dem med specifika e-postadresser anses de fortfarande vara privata. Vi kommer inte att moderera någonting i privata projekt.",
                    "$~Men att göra ett projekt *offentligt*, eller inkludera det i ett offentligt galleri, är ett privilegium. Detta är en plattform gjord för kärlek, bekräftelse, respekt och värdighet. Därför förväntar vi oss att inget av ditt *offentliga* innehåll kommer att:"
                ],
                "consequences": [
                    "$~Om vi hittar ett projekt eller galleri som bryter mot dessa regler kommer vi att varna skapare innan de tittar på det, eller blockera det från att ses. Om du upprepade gånger bryter mot dessa regler kommer du att förlora privilegiet att publicera offentligt."
                ]
            },
            "donate": {
                "header": "$~Donera",
                "prompt": "$~Hjälp oss att betala för bandbredd och kompensera elever och lärare.",
                "content": [
                    "$~Wordplay är ett gratis, communitybaserat projekt som stöds av <University of Washington@https://washington.edu>. Vi förlitar oss på gåvor från människor som tror på vårt uppdrag med tillgängliga, språkinkluderande, pedagogiska programmeringsspråk.",
                    "$~Här är våra nuvarande kostnader:",
                    "$~• Vi kompenserar studenter från University of Washington, särskilt de som är funktionshindrade eller vars modersmål inte var engelska, för att utveckla och underhålla projektet. Det är cirka 90 % av våra kostnader.",
                    "$~• Vi ger stipendier till lärare som vi samarbetar med för att utveckla flerspråkiga, tillgängliga läroplaner.",
                    "$~• Vi betalar Google för <Firebase@https://firebase.google.com/> bandbredd och lagring samt <Workspace@https://workspace.google.com/> tjänster.",
                    "$~• Vi betalar <Squarespace@https://www.squarespace.com/> årligen för domänen.",
                    "$~Våra nuvarande kostnader, förutsatt att 5 studenter på $20 USD//timme, 10 timmar//vecka under läsåret (36 veckor) och 2 studenter under sommaren (12 veckor), plus molntjänster, är cirka $60K USD per år.",
                    "$~Om 2 400 personer gav $25 USD per år, skulle det täcka våra nuvarande kostnader, med eventuell överskottskompensation till fler elever och lärare.",
                    "$~Kan du vara en av dessa 2 400 personer? Om så är fallet, här är vår University of Washington som ger länk:"
                ]
            }
        },
        "edit": {
            "node": "$~$1$2[, skriv $2|]",
            "before": "$~före $1[$1|slut]",
            "inside": "$~i $1, mellan $2[$2|start] och $3[$3|slut]",
            "between": "$~mellan $1 och $2",
            "line": "$~tom rad mellan $1[$1|start] och $2[$2|slut]",
            "conflicts": "$~$1 konflikter",
            "assign": "$~/$2[Ivrig att gå med|Överväger att lämna]…/",
            "append": "$~/Ivrig att sätta in.../",
            "remove": "$~/Överväger att lämna.../",
            "replace": "$~/Vill kliva in.../",
            "wrap": "$~parentes",
            "unwrap": "$~packa upp",
            "bind": "$~namnge detta uttryck"
        },
        "template": {
            "unwritten": "$~TBD",
            "unparsable": "$~Oparserbar mall: $1"
        }
    },
    "moderation": {
        "warning": {
            "header": "$~Varning",
            "explanation": "$~En moderator bedömde att detta innehåll kan:"
        },
        "blocked": {
            "header": "$~Blockerad",
            "explanation": "$~En moderator bedömde att detta innehåll kan:"
        },
        "unmoderated": {
            "header": "$~Notera",
            "explanation": "$~Det här innehållet har inte modererats än. Det kan:"
        },
        "moderate": {
            "header": "$~Måttlig",
            "explanation": "$~Granska det här projektet och avgör om dess innehåll gör något av följande. Om det gör det kommer innehållet att varnas eller blockeras. Du kan hoppa över om du är osäker."
        },
        "flags": {
            "violence": "$~Uppmuntra, uppmuntra eller fira våld, skada eller självskada mot någon.",
            "dehumanization": "$~Avhumanisera individer eller grupper baserat på deras ras, etnicitet, nationella ursprung, kast, sexuella läggning, kön, religion, ålder, förmåga eller utseende.",
            "disclosure": "$~Avslöja privat information om andra personer såsom namn, kontaktinformation eller fysiska adresser",
            "misinformation": "$~Innehåller falsk, vilseledande, vilseledande eller manipulativ information"
        },
        "progress": "$~*$1* modererad, *$2* återstår",
        "button": {
            "submit": {
                "tip": "$~Spara dessa modereringsinställningar",
                "label": "$~spara"
            },
            "skip": {
                "tip": "$~Hoppa över det här projektet",
                "label": "$~hoppa"
            }
        }
    },
    "gallery": {
        "games": {
            "name": "$~Spel",
            "description": "$~Interaktiva spel med ord och symboler."
        },
        "visualizations": {
            "name": "$~Visualiseringar",
            "description": "$~Visualiseringar av och via text."
        },
        "motion": {
            "name": "$~Rörelse",
            "description": "$~Exempel på rörelser och kollisioner."
        },
        "av": {
            "name": "$~Ljud/video",
            "description": "$~Använder volym, tonhöjd och video som indata."
        },
        "tools": {
            "name": "$~Verktyg",
            "description": "$~Enkla verktyg och applikationer."
        }
    }
}
