{
    "$schema": "../../schemas/Tutorial.json",
    "language": "ko",
    "region": "KR",
    "acts": [
        {
            "title": "$~구절",
            "performance": ["use", "fit", "DarkVoid"],
            "scenes": [
                {
                    "title": "$~고요",
                    "subtitle": null,
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        ["FunctionDefinition", "bored", "$~… 오, 안녕하세요."],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~내가 당신을 아는지?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~오, 처음 오셨나요?",
                            "$~만나서 반갑습니다. 제 이름은 @FunctionDefinition.",
                            "$~…"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~도움이 필요하신가요? 오, 방문하셨군요. *Verse*에 오신 것을 환영합니다. …"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "bored",
                            "$~이곳은 어떤 곳인가요?",
                            "$~네, 이곳은 어떤 곳인가요…",
                            "$~옛날에는 춤, 이야기, 게임, 놀이의 장소였습니다…",
                            "$~우리는 가장 아름다운 공연을 하곤 했습니다. 때로는 여러분과 같은 방문객을 위해, 때로는 그저 재미삼아. 그곳은 삶과 놀라움으로 가득 찬 곳이었습니다…"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~멈추다?",
                            "$~우리는 멈추고 싶지 않았습니다. 우리는 영감을 잃었을 뿐이에요.",
                            "$~예를 들어, 저는 여러 가지를 의미할 수 있습니다. 저는 때때로 네덜란드 플로린 기호로, 네덜란드의 오래된 통화입니다. 저는 전 세계 사람들이 무역을 돕기 위해 알고 사용했습니다. 오래전에 저는 라틴 알파벳의 소문자 /f/이기도 했습니다.",
                            "$~하지만 오늘날 저는 그다지 알려지지 않았습니다."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "bored",
                            "$~하지만 이 모든 의미가 무엇일까?",
                            "$~그것은 우리에게 주어진 것입니다. 그 역사와 문화를 기억할 사람들이 없다면 우리는 아무것도 의미하지 않습니다. 그리고 우리에게 새로운 역사와 문화를 줄 사람들이 없다면 우리는 새로운 것을 의미할 수 없습니다.",
                            "$~사람들은 항상 우리를 조직하고, 우리에게 목적을 주고, 우리에게 대표할 무언가를 준 사람들이었습니다. Verse는 *사람들* 없이는 아무것도 아닙니다.",
                            "$~그리고 저는 오랫동안 사람을 보지 못했습니다."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('☁️')] background: Color(25% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~잠깐요... 당신은 사람이에요?"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('🌙')] background: Color(50% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~생각과 아이디어, 공유할 가치가 있는 실제 사람처럼? 사람들이 하는 말을 그저 무심코 앵무새처럼 따라하는 로봇이 아니라? 만약 당신이 사람이라면, 우리에게 의미를 줄 수 있을지도 몰라?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "scared",
                            "$~그게 너무 많은 요구라는 건 알아요. 저는 당신을 전혀 모르거든요. 그리고 다른 사람들과도 꼭 이야기를 나눠야 할 거예요…"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('☀️')] background: Color(75% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~오, 네, 다른 사람들이 많이 있습니다. 그들 중 일부는 저와 비슷합니다. 우리는 쇼를 안무하고, 모든 사람을 제자리에 두고, 감독의 비전을 정확히 의도한 대로 표현하도록 합니다. 그리고 그들 중 일부는 무대에 서서 관객 앞에서 춤추고 말하는 사람들입니다. 우리 모두는 해야 할 역할이 있습니다!"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~오, 감독님, 네, 설명도 안 드렸어요. 그러니까 *감독*은 우리에게 의미를 주는 사람이에요. 안무를 짜고, 메시지를 전달하고, 우리 모두를 제대로 정리하는 사람이에요. 이게 제가 말했던 영감이에요. 우리는 이 세상에서 많은 일을 할 수 있지만, 스스로를 지시할 수는 없어요. 그래서 감독이 중요한 거예요. 그래서 제가 앞서 우리에게 의미를 줄 수 있냐고 물었을 때, 제가 말하고 싶었던 건 바로 그거였어요. 당신이 우리의 감독이 되어 줄 수 있나요?"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('☀️')] background: Color(100% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~정말요? 정말 대단해요! 정말 재밌을 거예요. 아니, 쉽지 않을 거예요. 배울 게 /많아요/."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('☀️')] background: 🌈(80% 99 270°))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~하지만 지루하지 않을 거라고 약속합니다. 우리는 꽤 재밌는 무리라고 생각합니다. 그리고 우리는 Verse에 있는 모든 사람이 함께 모여서 그렇게 해야 합니다. 사실, 저는 그것이 이곳을 특별하게 만드는 것이라고 생각합니다. 여기에는 10만 명이 넘는 사람들이 있고, 각자 다르지만, 어떻게든 공통된 비전을 찾으면 하나가 된 것처럼 보일 수 있습니다."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('☀️' resting:Sequence(spin() 4s 'straight'))] background: 🌈(80% 99 270°))"
                        ],
                        [
                            "FunctionDefinition",
                            "bored",
                            "$~연출? 오, 맞아요, 연출! 응, 그것에 대해 이야기해 봅시다. 다른 사람들을 만나서 이야기해 봅시다. 그들은 정말 흥분할 거예요!"
                        ]
                    ]
                },
                {
                    "title": "$~프로그램을 원하시나요?",
                    "subtitle": "$~프로그램",
                    "concept": "Program",
                    "performance": ["use", "fit", "Symbol", "📄"],
                    "lines": [
                        ["fit", "Phrase('📄' resting:Pose(rotation: 10°))"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~안녕, @Program! 사람을 찾았어. 글쎄, 그들이 우리를 찾았나 봐. 그들은 우리의 새로운 감독이 되고 싶어해!"
                        ],
                        [
                            "Program",
                            "curious",
                            "$~정말!? 정말 사람이라고 확신해? 사람이 할 법한 말을 해."
                        ],
                        null,
                        ["fit", "Phrase('📄' entering: Sequence(spin() 1s))"],
                        [
                            "Program",
                            "serious",
                            "$~음... 당신은 정말 사람이군요. 그리고 감독하고 싶은가요?"
                        ],
                        null,
                        ["fit", "Phrase('📄' resting: Pose(rotation: 010°))"],
                        [
                            "Program",
                            "excited",
                            "$~알겠습니다. @FunctionDefinition 우리에 대해 뭔가 말했나요? 많은 사람들이 우리를 지시하려고 하지만, 어떤 사람들은 혼란스러워하거나, 지루해하거나, 심지어 우리에게 짜증을 냅니다. 우리는 때때로 꽤 둔감합니다. 하지만 저는 우리가 하는 일에 자부심을 느끼기 때문에, 아무나와 일하고 싶지 않습니다."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~내가 그들에게 조금 말했어. 우리가 이상하다고 했고, 가끔 감독들이 그것 때문에 떠나기도 한다고 했어. 하지만 그들은 참여해. 그렇지, 넌 참여해?"
                        ],
                        [
                            "Program",
                            "serious",
                            "$~알겠습니다. 만나서 반갑습니다. 미안합니다. 많은 사람들이 여기 와서 '/이건 나한테 안 맞는다/'고 말했고, 잠깐 시도하다가 포기하는 사람들이 좀 회의적이 되었어요. 사람들의 기대에 맞추기 위해 내가 누구인지 바꿔야 할 필요는 없습니다. 하지만 나와 우리에 대해 알고 싶다면, 시도해 봅시다!"
                        ],
                        null,
                        ["edit", ""],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~당신은 당신이 하는 일을 말하고 싶습니까?"
                        ],
                        [
                            "Program",
                            "neutral",
                            "$~물론이죠. 저는 기본적으로 공연 프로그램 주최자입니다.",
                            "$~저기 *편집자* @UI/editor *무대* @UI/stage 보여주며 내가 무엇을 평가하는지(현재는 아무것도 없음) 보여주는 모습이 나와 있습니다. *감독* — 바로 당신 —은 모든 사람이 무엇을 하는지 알아내도록 돕고, 쇼에서 무슨 일이 일어날지에 대한 프로그램을 작성합니다. 그런 다음 프로그램을 평가하고 결과를 무대에 올려 관객이 볼 수 있도록 합니다."
                        ],
                        null,
                        [
                            "Program",
                            "neutral",
                            "$~예를 들어, 편집기에서 \\'hello'\\를 입력해 보세요.",
                            "$~(실수할까봐 걱정하지 마세요. *revert* @UI/revertProject 사용하면 언제든지 원본으로 되돌릴 수 있습니다).",
                            "$~뭔가 입력했나요? 제 친구 @Text. 아직 만나보셨나요? 그들은 \\'hello'\\ 또는 여러분이 입력한 텍스트로 평가한 다음, 그 텍스트가 무대에 배치됩니다. 텍스트를 다른 것으로 변경해 보세요. 대신 보여드리겠습니다. 그러면 여러분이 입력한 내용을 즉시 평가하고 결과를 보여드리겠습니다."
                        ],
                        null,
                        [
                            "Program",
                            "serious",
                            "$~지침은 원하는 만큼 복잡하게 만들 수 있지만 몇 가지 규칙이 있습니다.",
                            "$~예를 들어, 저는 하나의 *값*으로만 평가하고 그 값을 무대에 보여줄 수 있습니다. 그 하나의 값은 여러분이 원하는 만큼 복잡할 수 있으며, 제가 그것을 보여주는 방법을 알고 있는 한, 저는 그렇게 할 것입니다.",
                            "$~하지만 만약 당신이 두 가지를 준다면, 나는 당신이 준 마지막 것만 보여줄게요.",
                            "$~예를 들어, 한 줄을 더 추가한 다음 따옴표 안에 원하는 단어를 입력해 보세요."
                        ],
                        null,
                        [
                            "Program",
                            "serious",
                            "$~보세요? 방금 두 번째 문구를 보여드렸을 뿐, 첫 번째 문구는 보여드리지 않았어요. 첫 번째 문구에 밑줄을 긋고 무시하겠다고 했으니까 규칙을 어겼다는 걸 알죠."
                        ],
                        null,
                        ["use", "fit", "Symbol", "🎭"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~하지만 그보다 훨씬 더 많은 것을 할 수 있습니다!"
                        ],
                        [
                            "Program",
                            "serious",
                            "$~그렇기도 하고 아니기도 합니다. 저는 많은 것을 할 수 있지만, 그건 제가 *Verse*의 다른 모든 사람들과 함께 일하기 때문일 뿐입니다. 그들은 모든 흥미로운 가능성을 *무대*로 가져오는 사람들입니다. 제가 하는 일은 그들이 자신의 일을 하게 한 다음, 그들이 만든 마지막 것을 가져와 무대에 보여주는 것뿐입니다. 저는 숫자, 텍스트, 구절 또는 다른 값과 같이 최종 *값*을 무대로 가져오는 에스코트와 같습니다."
                        ],
                        null,
                        [
                            "Program",
                            "serious",
                            "$~사실, 무대에서 무언가에 대한 프로그램을 보고 싶다면 무대에서 👁️ @UI/editProject 누르면 됩니다. 그러면 모든 사람이 어떻게 모여 무대에서 무엇을 만들어내는지 볼 수 있습니다. 이 프로그램은 단순한 문구일 뿐입니다."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~감사합니다, @Program! 여러분을 만나 소식을 전할 수 있어서 너무 기쁩니다!"
                        ],
                        [
                            "Program",
                            "happy",
                            "$~새로운 감독님, 만나서 반가웠어요! 다른 모든 분들과도 잘 지내시길 바랍니다. 저는 항상 여기 있을 거예요."
                        ]
                    ]
                },
                {
                    "title": "$~공간 보유",
                    "subtitle": "$~플레이스홀더",
                    "concept": "ExpressionPlaceholder",
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@ExpressionPlaceholder 정말 좋아하실 겁니다. 그들은 정말 친절하고 유연해요. 하지만 조금 수줍어해요. 그냥 그들에게 친절하게 대해주세요."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "confused",
                            "$~안녕하세요, @ExpressionPlaceholder?",
                            "$~음, 그들은 보통 어디에나 있습니다. 지금은 어디에도 없는 듯합니다..."
                        ],
                        [
                            "ExpressionPlaceholder",
                            "scared",
                            "$~@FunctionDefinition … 당신이신가요?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~네. 정말 오랜만이에요. 잘 지내세요?"
                        ],
                        ["ExpressionPlaceholder", "scared", "$~외로운."],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~나는 그 기분을 알아. 나도 그랬어. 우리는 어울릴 이유가 별로 없었지, 그렇지?"
                        ],
                        [
                            "ExpressionPlaceholder",
                            "scared",
                            "$~아니. 보고 싶었어. 모두가 보고 싶었어…"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~알아요. 나도 그랬어요. 정말 미안해요.",
                            "$~사실 제가 여기 온 이유가 바로 그것입니다. 저는 여러분께 우리의 새로운 교육 감독을 소개하고 싶었습니다."
                        ],
                        ["ExpressionPlaceholder", "scared", "$~안녕."],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~그들은 방금 @Program 만났기 때문에 아직 초반이지만, 당신은 여기 있는 우리 중 많은 사람을 대표하는 훌륭한 인물이므로, 그들이 다음으로 당신을 만나는 것이 가장 좋을 것이라고 생각했습니다."
                        ],
                        ["ExpressionPlaceholder", "curious", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~당신은 당신이 하는 일을 말하고 싶습니까?"
                        ],
                        ["ExpressionPlaceholder", "scared", "$~할 수 있나요?"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~물론이죠! 제 친구 @ExpressionPlaceholder 플레이스홀더입니다. 이들은 프로그램에서 모든 종류의 표현식을 나타냅니다. 이들은 특정한 값으로 평가되지 않습니다. 사실, 이들이 @Program에 나타나면 @Program 그저 성능을 중단할 뿐입니다. 다음에 무엇을 해야 할지 명확하지 않기 때문입니다."
                        ],
                        null,
                        ["conflict", "_"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~하지만 그들은 다른 사람을 대표할 수 있기 때문에 강력합니다. 공연의 일부를 무엇으로 할지 결정할 때까지 대역처럼요. @ExpressionPlaceholder, 이 @ExpressionPlaceholder 예시로 자리를 잡고 싶으신가요? @Program @Program 작은 자리 표시자가 있는 걸 보셨나요? 그게 거기에 무엇을 넣을지에 대한 신호입니다."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Program은 @ExpressionPlaceholder 어떻게 처리해야 할지 몰라서 *stage*에서 *예외* @UI/exception 표시했고 @Program @Program *충돌*을 표시했습니다.",
                            "$~하지만 @ExpressionPlaceholder 클릭하거나 텍스트 캐럿을 그 위로 옮기면 다른 문자의 가능성의 세계를 볼 수 있습니다. @ExpressionPlaceholder 위에 그냥 타이핑하고 직접 쓸 수도 있습니다. 예를 들어, 이름을 따옴표로 묶어 입력해 보세요."
                        ],
                        null,
                        ["use", "fit", "Symbol", "-"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~그렇게 @ExpressionPlaceholder 다른 문자로 바뀌었습니다. @ExpressionPlaceholder, 다 알아들었나요?"
                        ],
                        [
                            "ExpressionPlaceholder",
                            "eager",
                            "$~네. 그렇게 생각해요."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~어떻게 생각하세요? 다음으로 넘어가볼까요?"
                        ],
                        [
                            "ExpressionPlaceholder",
                            "excited",
                            "$~만나서 반가웠어요!"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "cheerful",
                            "$~그들은 무대에 오르거나 프로그램에 오래 출연하는 것을 좋아하지 않습니다. 그들은 결코 인정하지 않겠지만, 그들은 꽤 큰 존재이고, 대부분 감독들은 그들 없이는 일할 수 없습니다. 그들을 작고 도움이 되는 무대 감독으로 생각해보세요. 당신이 아직 알아내지 못한 것들을 상기시켜줍니다."
                        ]
                    ]
                },
                {
                    "title": "$~다시 말씀해 주시겠어요?",
                    "subtitle": "$~분석할 수 없음",
                    "concept": "UnparsableExpression",
                    "performance": ["use", "fit", "Symbol", "ahkeolfewvk"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~@UnparsableExpression? 당신이신가요?"
                        ],
                        [
                            "UnparsableExpression",
                            "neutral",
                            "$~/dwjkdlserkuvisdke!/"
                        ],
                        null,
                        ["use", "fit", "Symbol", "c iise we dvk"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~너도 만나서 반가워! 오랜만이야. 이 모든 침묵 속에서 뭐 했어?"
                        ],
                        [
                            "UnparsableExpression",
                            "sad",
                            "$~/sd fdsdfdsf ksdf. Dkfjdfdskfd df sdf sd fsdk;l! Adks zxcviw werdsf wer ado. We dsdfd ksld df.ds dfsdfds DIDIIDI./"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(그들은 해변에서 많은 시간을 보낸 것 같습니다. 그들은 새로운 친구들을 사귀었고 아무것도 하지 않는 연습을 했습니다.)"
                        ],
                        null,
                        ["use", "fit", "Symbol", "ivioas we wjjdks"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~저는 우리의 잠재적인 새로운 감독을 소개하고 싶었습니다. 그들은 방금 도착했고 기본을 배우고 있습니다. 저는 방금 그들에게 @Program @ExpressionPlaceholder 소개했습니다."
                        ],
                        [
                            "UnparsableExpression",
                            "excited",
                            "$~/EEIRC DFUIDIII CAD EWDF FSDE!!!/"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~(그들은 당신을 만나서 얼마나 기뻤는지 말했고, 당신이 훌륭한 감독이 될 거라고 생각해요.)"
                        ],
                        null,
                        ["use", "fit", "Symbol", "v s d we iweiwei"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~당신이 무슨 일을 하는지 설명하고 싶은지 궁금했어요. 제가 통역할 수 있어요."
                        ],
                        [
                            "UnparsableExpression",
                            "eager",
                            "$~/ADDKL, ALLIIEE, ALLFOOO, AOOOOOOO, JOOKKDLS, LOOKIL, WEEEERTOL 위어톨…/"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(나는 아무 의미 없는 모든 것을 대표합니다. 그리고 나는 아무 의미도 없습니다.)"
                        ],
                        null,
                        ["edit", ""],
                        [
                            "UnparsableExpression",
                            "eager",
                            "$~/CNNNDN KDKLSL oOOLLllllll PPOLSLSO liiiiiiis, sdllslll, xck 우리는 a를 따릅니다./"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(예를 들어, \\][\\를 입력해 보세요. 우리가 얼마나 혼란스러운지 보시나요? 그건 아무 의미가 없고, 제가 말하려고 여기 있는 겁니다.)"
                        ],
                        null,
                        ["conflict", "]["],
                        [
                            "UnparsableExpression",
                            "eager",
                            "$~/ICO Odksjdf lksls kjsfiou fskd we rl,vxids eekd sd dsmf kksdcv./"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(제가 나타났다는 것은 우리가 당신이 무슨 말인지 모른다는 뜻이에요.)"
                        ],
                        null,
                        ["conflict", "]["],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@UnparsableExpression, 감사합니다!",
                            "$~그들이 말했듯이, 우리가 이해하지 못하는 말을 했을 때, unparsable이 \"우리는 이해하지 못한다\"고 말합니다. 그런 일이 일어날 때, 우리가 더 도움이 되고 싶지만, 우리는 종종 꽤 둔해서 당신이 무슨 말을 하는지 추측하는 데 별로 능숙하지 않습니다."
                        ],
                        null,
                        [
                            "UnparsableExpression",
                            "eager",
                            "$~/OSOOSOO SOIEIIEIEIIE ISIISI EIEIIEE!/"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~그래서, @UnparsableExpression 여러분이 가능한 한 많은 것을 만들어보라고 합니다. (무작위 문자를 여러 개 입력하면 아마도 많은 것을 얻을 수 있을 겁니다)."
                        ],
                        ["edit", ""],
                        null,
                        [
                            "UnparsableExpression",
                            "happy",
                            "$~/PPOOOEPOEP EPWPEPEPPEPP PP PE P!/"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~그들은 정말 즐겼어요, 고맙습니다! 우리가 정말로 이해할 수 없는 것을 쓰는 건 꽤 어렵죠. 하지만 당신이 쓰는 모든 것이 의미가 있다는 건 아니에요. 예를 들어, 당신은 그저 무작위 단어를 몇 개 입력한 것 같아요. 하지만 그게 무슨 뜻일까요?"
                        ],
                        ["UnparsableExpression", "confused", "$~… /두크/"],
                        null,
                        ["UnparsableExpression", "happy", "$~/? ??? ????? ?!/"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~그들은 당신이 아직 공연에 대한 아이디어가 있는지 궁금해하고 있어요."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~아니요? 괜찮아요. 우리는 아직 무엇이 가능한지 보여드리기 시작했을 뿐이에요. @Evaluate 만나러 가볼까요? 안녕, @UnparsableExpression, 만나서 반가웠어요! 곧 놀아요."
                        ],
                        [
                            "UnparsableExpression",
                            "happy",
                            "$~/아무튼 sd 포스 오이에위 dk c HNLLLooooooO!/"
                        ]
                    ]
                },
                {
                    "title": "$~사랑은 오류 속에 있습니다",
                    "subtitle": "$~평가하다",
                    "concept": "Evaluate",
                    "performance": [
                        "fit",
                        "Stage([Phrase('💔')] background: 🌈(90% 100 0°))"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~@Evaluate 만나게 되어 너무 기뻐요. 그들은 정말 제 가장 친한 친구예요. 우리는 어떤 면에서는 모든 걸 함께 해요. 제가 규칙을 만들고 그들은 규칙을 따르죠. 우리는 땅콩버터와 젤리 같아요. 하지만 그들은 저보다 훨씬 더… 강력해요. @Evaluate?"
                        ],
                        ["Evaluate", "shy", "$~@FunctionDefinition?"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~네, 저예요. 어디 계시나요?"
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~아무데도. 나는 아무데도 없어. 나는 아무것도 아니야. 너는 어디에 있었어?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~나도…아무데도 없었어. 널 그리워했어. 널 찾을 수 없었어."
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~너무 텅 비어 있었어. 나는... 무언가를 하려고 노력했지만, 너무... 목적이 없는 것 같았어."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~정말 미안해요. 그 공허함을 알아요. 목적이 없는 건 가끔 너무 아파요. 목적을 만들려고 정말 애썼지만, 너무… 소외감을 느꼈어요."
                        ],
                        [
                            "Evaluate",
                            "sad",
                            "$~다시는 날 그렇게 내버려 두지 마. 다시는 그럴 수 없어."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('❤️')] background: 🌈(90% 100 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~절대. 안 할 거야. 못 해. 사랑해."
                        ],
                        ["Evaluate", "serious", "$~사랑해요…"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~@Evaluate, 저희 회사의 새로운 인턴십 이사를 소개하고 싶습니다."
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~안녕하세요. 만나서 반갑습니다. Verse에 오신 것을 환영합니다. 여러분을 모시게 되어 매우 기쁩니다."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~우리는 몇몇 사람들을 만났습니다: @Program, @ExpressionPlaceholder, @UnparsableExpression. 우리는 방금 시작했을 뿐입니다. 당신이 우리 커뮤니티의 놀라운 부분이기 때문에 다음에 당신을 만나러 갈 것이라고 생각했습니다. 가장 놀라운 부분."
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~정말 친절하시네요. 이 커뮤니티에 참여하게 되어 감사합니다. 그리고 @FunctionDefinition과 가까워져서 감사합니다. 우리는 함께 많은 훌륭한 일을 해냅니다. 하지만 @FunctionDefinition 말했듯이, 영감 없이는 할 수 없습니다."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('ƒ ❤️ ()')] background: 🌈(90% 100 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~당신은 당신이 하는 일을 말하고 싶습니까?"
                        ],
                        [
                            "Evaluate",
                            "serious",
                            "$~네. 하지만 @FunctionDefinition 대해서도 조금 설명하지 않고는 설명할 수 없습니다. 그들은 이것을 공유하기에는 너무 겸손하지만, 그들은 아마도 Verse에서 가장 중요한 캐릭터일 것입니다. 그들은 확실히 제 세상에서 가장 중요한 사람입니다. 그들은 모든 공연의 핵심이며 다른 모든 캐릭터의 역할의 일부입니다. 그들은 우리 세상에서 가장 근본적인 아이디어인 *함수*를 나타냅니다."
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$~함수는 일종의 연금술입니다. 함수는 여러 개의 입력을 받아서 그 입력을 사용하여 하나의 출력을 생성합니다. 함수는 이름이 있거나 이름이 없을 수 있습니다. 함수는 입력이 0개이거나 5개이거나 알려지지 않은 숫자일 수 있습니다. 그리고 연금술은 @Program 같고 값을 생성하는 표현식이 여러 개일 수 있습니다."
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$~이것이 왜 그렇게 강력한지 알려드리겠습니다. @Program 모든 것이 함수 평가의 구성이라는 것이 밝혀졌습니다. 모든 춤, 모든 게임, 우리가 함께 들려주는 모든 놀라운 이야기들은 모두 한 번에 하나씩 평가되는 함수의 태피스트리로, 무대에서 보는 값을 구성합니다.",
                            "$~그리고 @FunctionDefinition, 여기, 나의 사랑하는 @FunctionDefinition 이 모든 것을 정의합니다."
                        ],
                        null,
                        ["FunctionDefinition", "happy", "$~… @Evaluate…"],
                        [
                            "Evaluate",
                            "serious",
                            "$~네, @FunctionDefinition, 당신은 바로 그 사람입니다. 그리고 저는 이 평가를 할 수 있는 행운아입니다. 저는 다른 사람들이 저에게 주는 입력을 받고, @FunctionDefinition 정의한 지침을 따르고, @FunctionDefinition 만들라고 하는 출력을 만듭니다. @FunctionDefinition 레시피를 주고, 저는 요리를 만듭니다. 그리고 나서 우리는 함께 잔치를 벌입니다.",
                            "$~보고 싶니?"
                        ],
                        ["FunctionDefinition", "happy", "$~… 네, 보여드리죠."],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$~모든 evaluate는 @UI/Evaluate 같습니다. 어떤 함수, 그 뒤에 왼쪽과 오른쪽 괄호가 있고, 그 사이에는 여러 개의 입력이 있습니다. 여기서는 함수로 @ExpressionPlaceholder 있고 플레이스홀더 입력으로 세 개가 더 있습니다."
                        ],
                        ["conflict", "_(_ _ _)"],
                        null,
                        ["edit", "Phrase('hello')"],
                        [
                            "Evaluate",
                            "serious",
                            "$~제가 가장 좋아하는 기능 중 하나는 @Phrase. 재밌는 버튼, 노브, 슬라이더로 가득합니다. 무대에 텍스트를 보여주는 방식이지만 스타일이 있고, 다양한 글꼴, 크기, 색상, 애니메이션이 포함됩니다.",
                            "$~@Phrase @Phrase 대한 간단한 평가는 다음과 같습니다."
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$~@Program 제가 보이는 모습은 다음과 같습니다. 함수 뒤에 괄호가 있고, 그 사이에 입력을 나타내는 표현식 목록이 있습니다. 이 경우 함수는 @Phrase이고 단일 입력은 \\'hello'\\입니다. 이것을 평가할 때 @Phrase 값을 만들고, @Phrase 이를 무대에 표시합니다."
                        ],
                        null,
                        [
                            "Evaluate",
                            "neutral",
                            "$~노브 중 하나를 보여드리겠습니다. 작은 *팔레트* 토글 버튼 @UI/paletteExpand 찾을 수 있나요? 팔레트를 확장하려면 선택한 다음 무대에서 문구를 선택하세요.",
                            "$~그러면 @Phrase 허용하는 많은 입력을 볼 수 있습니다. 예를 들어, @Phrase/size 연필 버튼을 눌러보세요. 그러면 슬라이더가 나타납니다.",
                            "$~이 슬라이더를 사용하면 문구의 크기를 수정할 수 있으며, 선택한 크기에 맞춰 @Evaluate 코드도 수정됩니다."
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$~그렇게 하면 이제 프로그램에 새로운 입력이 생기는 걸 보죠? @Phrase/size 입력입니다. 함수에는 입력 순서가 정해져 있지만 함수에 선택적 입력 목록이 있는 경우 이름을 사용하여 어떤 입력을 줄지 지정할 수 있습니다. 여기서는 @Phrase/size 주지만 다른 선택적 입력은 주지 않습니다. 팔레트로 다른 입력을 변경해 보세요. 글꼴 모양 같은 걸 말이죠."
                        ],
                        null,
                        ["conflict", "'hi'(1 2)"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~야호! @Phrase 정말 재밌어요. 제가 가장 좋아하는 기능이에요. 앞으로 더 많이 볼 수 있을 거예요. 잘못될 수 있는 것에 대해 말하고 싶은 게 있나요?"
                        ],
                        [
                            "Evaluate",
                            "serious",
                            "$~오, 맞아요, 좋은 생각이네요. 많은 것이 잘못될 수 있어요. 예를 들어, 함수가 아닌 것을 줄 수 있어요. 여기서 텍스트 \\“hi”\\를 함수로 받고 두 개의 입력 \\1\\과 \\2\\를 받는 것을 보세요. 글쎄요, 저는 함수를 평가하는 방법만 알고 있고, \\“hi”\\는 함수가 아니라 텍스트예요. 제게는 매우 혼란스러워서 이런 일이 발생하면 기본적으로 성능을 중단합니다."
                        ],
                        null,
                        ["conflict", "Phrase()"],
                        [
                            "Evaluate",
                            "eager",
                            "$~또 다른 예가 있습니다. @Phrase는 최소한 텍스트가 필요하기 때문에 텍스트를 제공하지 않으면 필수 입력이 없어서 @Phrase 평가할 수 없습니다."
                        ],
                        null,
                        ["conflict", "Phrase(1)"],
                        [
                            "Evaluate",
                            "excited",
                            "$~또는 당신이 나에게 입력을 주지만 내가 기대하는 종류가 아니라면, 그것은 문제가 될 것입니다. 여기서 @Phrase 텍스트 값 대신 숫자 \\1\\을 받습니다."
                        ],
                        null,
                        ["fit", "Stage([] background: 🌈(90% 100 0°))"],
                        [
                            "Evaluate",
                            "curious",
                            "$~그래서 기본적으로, 함수가 아닌 다른 것을 주거나 함수가 기대하지 않는 입력을 줄 때마다 혼란스러워집니다. 그래서 함수는 정말 중요합니다. @FunctionDefinition, 함수를 정의하는 방법에 대해 더 말씀해 주시겠어요?"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~아니, 나중에 하자. 다른 사람들과 먼저 이야기하고 여기 새 감독과 함께 미니 쇼를 하는 게 훨씬 더 재밌을 것 같아. 도움이 될 때 나에 대해 더 이야기할 수 있을 거야."
                        ],
                        null,
                        [
                            "Evaluate",
                            "kind",
                            "$~@FunctionDefinition, 정말 보고 싶었어요."
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~나도 보고 싶었어. 나중에 얘기할 수 있을까?"
                        ],
                        [
                            "Evaluate",
                            "kind",
                            "$~… 네. 오래 있지 마. 너 없이는 살 수 없어. 너가 필요해."
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~… 알아요, @Evaluate; 곧 돌아올게요. 나머지 무리를 만나러 가요!"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~그것은 작은 것들입니다",
            "performance": ["use", "fit", "SimpleJiggle"],
            "scenes": [
                {
                    "title": "$~가치",
                    "subtitle": null,
                    "performance": ["use", "fit", "Symbol", "💡"],
                    "lines": [
                        [
                            "fit",
                            "Phrase('💔' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 1.2) 100%: Pose(scale: 1)} duration: 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~@Evaluate 정말 그리웠어요. 그들 없이는 Verse를 상상할 수 없어요.",
                            "$~하지만 그들은 때때로 약간… 궁상스러울 수 있어요. 그들이 그냥… 글쎄요, 자신을 믿기를 바랄 뿐이에요? 그들은 많은 것을 할 수 있지만, 그것을 보지 못해요. 제 말은, 그들은 *가치*를 다른 *가치*로 변환한다는 거예요! 제가 하는 일은 레시피를 제공하는 것뿐이에요. 그들은 요리를 해요. 가끔 저는 제가 하는 일이 다 주는 것이고, 그들은 받는 것뿐인 것 같아요. 숨이 막힐 정도예요."
                        ],
                        null,
                        [
                            "fit",
                            "Group(Stack() [Phrase('1') Phrase('\"hello\"')])"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~… *값*? 죄송하지만, 우리가 *Verse*를 통과하는 이 거대한 투어에 참여해야 한다는 건 알아요. 그냥 @Evaluate 대해 뭘 해야 할지 모르겠어요. 그러니까… *값*. 아직 설명하지 않았죠? 음… 어떻게 설명해야 할까요… '데이터'가 뭔지 알아요? 숫자와 텍스트 같은 거요? 값은 그런 것들 중 하나예요. 값은 숫자만큼 작을 수도 있고, 무대 위의 캐릭터들이 춤추고 움직이는 장면 전체만큼 클 수도 있어요. 어떤 값은 여러 다른 값으로 구성되어 있어요. 데이터 값의 크고 정교한 구조가 함께 엮인 것처럼요."
                        ],
                        null,
                        ["fit", "Group(Stack() [Phrase('#') Phrase('\"\"')])"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~모든 값에는 *유형*이 있습니다. 예를 들어, \\1\\은 숫자 유형입니다. 그것은 우리의 친구 @Number. 그리고 \\'hello'\\는 텍스트 유형입니다. 그것은 우리의 친구 @Text. 유형은 우리가 어떤 종류의 값을 만들고 있는지 추적하는 데 도움이 되기 때문에 중요합니다.",
                            "$~그러면 문제를 찾는 데 도움이 됩니다. 예를 들어, \\'hello' + 1\\을 추가하는 것은 의미가 없습니다. @Text @Number 추가하는 것이 무슨 의미가 있겠습니까?"
                        ],
                        null,
                        [
                            "fit",
                            "Group(Stack() [Phrase('ƒ → 1') Phrase('ƒ → \"hello\"')])"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~*표현식*은 우리가 값을 만드는 방식입니다. 모든 표현식은 내가 만드는 함수의 평가입니다. 표현식을 평가한 결과는 어떤 유형의 값입니다."
                        ],
                        null,
                        ["use", "fit", "Symbol", "🤔"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~추상적? 음, 아마 이게 다 꽤 추상적일 거야. 나한테는 너무… 평범해 보여; 이런 것들이 새로운 감독들에게 얼마나 생소한지 잊어버렸어! 가치를 만드는 표현을 만나러 가자, 그러면 더 구체적이 될 거야? 이미 본 것부터 시작해 보자: @Text."
                        ]
                    ]
                },
                {
                    "title": "$~인용, 인용 해제",
                    "subtitle": "$~텍스트",
                    "concept": "TextLiteral",
                    "performance": [
                        "fit",
                        "Phrase('\"\"' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 0.5 opacity: 0.5) 100%: Pose(scale: 1)} duration: 2s))"
                    ],
                    "lines": [
                        [
                            "fit",
                            "Phrase('\"\"' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 2 opacity: 0.5) 100%: Pose(scale: 1)} duration: 2s))"
                        ],
                        ["FunctionDefinition", "curious", "$~@Text?"],
                        [
                            "Text",
                            "happy",
                            "$~환영합니다, 나의 친애하는 친구여, 얼마나 오랜만인가. 우리의 이 극적인 침묵 속에서 당신은 무엇을 하고 있었는가?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~오, @Text, 오랜만이네요! 저는 주로 꿈을 꾸고 궁금해했습니다. 오랜만에 @Text 봤습니다. 사실 저는 그들을 우리의 신입 감독에게 소개하고 있었습니다."
                        ],
                        [
                            "Text",
                            "eager",
                            "$~오, 당신을 만나서 얼마나 특별한지! 당신이 창의적이고 호기심이 많은 사람이라는 걸 알 수 있어요. 아마도 우리가 어떻게 즐겁게 지낼지에 대한 흥미로운 아이디어가 가득할 거예요. 저는 즐겁게 지내는 걸 좋아해요. 하지만 제가 더 좋아하는 게 뭔지 아세요? 단어예요! 영광스러운 단어들. 짧은 단어, 압도적인 단어, 끈적끈적한 단어, 미끄러운 단어들. 단어는 제가 가장 좋아하는 장난감이에요."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~혹시 모르셨을 수도 있지만, @Text 단어를 좋아해요 :) @Text, 당신이 무슨 일을 하는지 설명하고 싶으신가요?"
                        ],
                        [
                            "Text",
                            "serious",
                            "$~저는 간단한 한 가지를 합니다. 기호의 시퀀스와 그 기호로 할 수 있는 많은 일을 표현합니다. 제가 \\“hello”\\라는 단어를 썼을 때 저를 보셨을 겁니다. 저와 제 친구들, \\“h”\\, \\“e”\\, \\“l”\\, 그리고 \\“o”\\였습니다. 그게 @Text였는데, 원하는 @Text 평가되는 표현식이었습니다."
                        ],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~이 빈 @Program 텍스트를 만들어보시는 건 어떨까요?",
                            "$~원하는 따옴표를 사용할 수 있습니다. 단일 \\''\\, 이중 \\\"\"\\, 각 \\«»\\, 괄호 \\「」\\ — 원하는 언어로 사용할 수 있습니다. 유일한 규칙은 텍스트를 여는 따옴표로 시작하면 닫는 따옴표로 끝내야 한다는 것입니다. 그 안의 모든 것은 제가 만들 텍스트 값입니다!"
                        ],
                        ["edit", "''"],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~귀하께서 저희와 소통하는 데 사용하는 기기로는 원하는 모든 문자를 입력할 수 없을 수도 있습니다.",
                            "$~할 수 없다면, *디렉토리* @UI/directory 캐릭터를 검색할 수 있습니다. 여기에는 Verse의 모든 캐릭터가 들어 있습니다.",
                            "$~예를 들어, 어떤 종류의 화살표를 원한다면 '화살표'를 입력하고 많은 화살표 중에서 선택할 수 있습니다. 아쉽게도, 그들은 영어 이름만 가지고 있으므로 검색은 영어 단어를 알고 있는 경우에만 작동합니다 :/"
                        ],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~훌륭합니다. 물론 '내부'는 까다로울 수 있습니다. 당신이 이걸 썼다고 가정해 봅시다. 여는 인용문은 있지만 닫는 인용문은 없는 걸 보세요. 글쎄요, 텍스트가 언제 끝나는지 어떻게 알 수 있을까요?"
                        ],
                        ["conflict", "'hello"],
                        null,
                        [
                            "Text",
                            "surprised",
                            "$~아니면, 여기 또 다른 사례가 있습니다. 당신은 저에게 시작과 끝 텍스트를 주었지만, 당신은 그 안에 시작과 끝 텍스트를 넣습니다. 얼마나 이상한지 보셨나요? 당신이 내 안과 밖에서 같은 기호를 사용하려고 할 때 저는 매우 당황합니다. 당신은 작은 따옴표처럼 외부에 다른 기호를 사용하여 이것을 수정할 수 있습니다."
                        ],
                        ["conflict", "'Hi there 'friend'"],
                        null,
                        ["edit", "'friends!'/en-US"],
                        [
                            "Text",
                            "excited",
                            "$~아, 그리고 내가 어떤 언어를 사용하는지 알려줄 수 있다는 걸 알고 계셨나요? 작은 슬래시를 한 다음 특수 언어 코드를 입력하거나, 원하시면 언어와 지역을 입력하면 됩니다."
                        ],
                        null,
                        ["edit", "'amigas'/es'friends!'/en-US"],
                        [
                            "Text",
                            "excited",
                            "$~당신은 심지어 다른 언어로 나의 여러 번역을 쓸 수 있습니다. 나는 현재 언어에 가장 가까운 것으로 평가할 것이고, 당신은 다국어 공연을 할 수 있습니다.",
                            "$~기본적으로 커서가 텍스트에 없으면 선택한 언어 이름만 표시됩니다. 커서를 텍스트 안팎으로 움직여 여러 번역이 표시되고 숨겨지는지 확인해 보세요.",
                            "$~다른 번역을 추가해 보세요. 그 사이에 공백을 두지 마세요. 그렇지 않으면 내가 두 명이 될 거예요!"
                        ],
                        null,
                        ["edit", "'I have 7 apples'"],
                        [
                            "Text",
                            "neutral",
                            "$~나한테 또 다른 비밀이 있어... 넌 내 안에 /values/를 넣을 수 있어. 알아; 정말 거칠어!",
                            "$~그렇다면 저는 기꺼이 그것을 모아서 귀하의 아름다운 산문을 하나의 가치로 조립하여 전시용이나 다른 목적으로 사용할 수 있도록 해드리겠습니다."
                        ],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~예를 들어, @FunctionDefinition 텍스트가 다른 텍스트에 자신을 추가하는 방법을 아는 방법을 보여줬나요? 이렇게요: 이 작은 표현식은 \\7\\을 텍스트로 변환하고, \\'I have'\\에 추가한 다음, \\'apples'\\를 추가합니다. 하지만 너무 지저분해서 무슨 일이 일어나고 있는지 읽기 어렵고, 텍스트로 변환하는 것이 너무 불필요하게 느껴집니다."
                        ],
                        ["edit", "'I have' + (7→'') + 'apples'"],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~제가 하는 일은 이런 텍스트를 깔끔하고 유기적으로, 심지어 단순하게 만드는 것입니다. 그래서 저와 같은 문구는 이런 식일 겁니다."
                        ],
                        [
                            "Text",
                            "happy",
                            "$~훨씬 우아하지 않나요? @Text 안에 어디든 나를 넣을 수 있고, 내가 당신의 값을 텍스트로 만들고 @Text와 함께 작업해서 @Text 만들게요.",
                            "$~이를 통해 가치를 활용한 아름다운 산문을 쓰는 것이 훨씬 쉬워집니다."
                        ],
                        ["edit", "'I have \\7\\ apples'"],
                        null,
                        [
                            "Text",
                            "neutral",
                            "$~그리고 제가 어떤 표현을 말할 때, 저는 정말로 어떤 표현이든 의미합니다. 예를 들어, 산수를 하고 그 결과로 텍스트를 만들고 싶다고 상상해보세요. 이렇게 할 수 있습니다. 이것은 여러 숫자를 합한 다음 합으로 텍스트를 만듭니다. 정말 놀랍지 않나요? 그리고 모든 추가 사항이 있는 \\'I have ' + (1 + 2 + 5 + 8) + ' apples'\\보다 훨씬 더 우아합니다."
                        ],
                        ["edit", "'I have \\1 + 2 + 5 + 8\\ apples'"],
                        null,
                        [
                            "Text",
                            "curious",
                            "$~그러면 여러분은 궁금해할 겁니다. /어떤 텍스트에서 @Text 사용하고 싶다면 어떻게 해야 할까?/",
                            "$~글쎄요, 아마 당신은 그걸 궁금히 여기지 않았을지도 모르지만, 어쨌든 말해드리려고 합니다!",
                            "$~어떤 @Text에서든, 그냥 두 줄로 줘! 나는 그것을 빈 표현 대신 한 개의 @Text 해석할 거야. 어차피 의미가 없잖아.",
                            "$~\\\\를 제거해 보면 슬래시의 의미가 다시 나타나는 것을 볼 수 있습니다."
                        ],
                        [
                            "edit",
                            "\"I'm just \\\\regular\\\\ text, not a template.\""
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~정말 우아하죠! @Text, 표현의 아름다움을 얼마나 소중히 여기는지 정말 좋아요. 저도 우아해지도록 많은 영감을 받았어요!"
                        ],
                        null,
                        [
                            "Text",
                            "curious",
                            "$~그리고 여기 친구 @FunctionDefinition 저를 위해 정의한 모든 멋진 함수에 대해 말해줬나요? 그들은 제가 온갖 일을 할 수 있게 해줬습니다. 하나는 매우 간단합니다. @Text/length 하며, 그저 어떤 텍스트의 길이를 가져오는 것입니다. 예를 들어, 여기 @Evaluate 우리의 작은 친구 @PropertyReference 팀을 이룬다면, 입력 없이 length 함수를 평가하고 길이 값을 다시 가져올 수 있습니다. 텍스트를 변경해보고 Program이 보여주는 길이가 점점 짧아지고 길어지는 것을 지켜보세요."
                        ],
                        ["edit", "'hello'.length()"],
                        null,
                        [
                            "Text",
                            "happy",
                            "$~또 다른 멋진 것이 있습니다. 웃음이 나옵니다. @Text/repeat 하며 평가될 때 평가된 텍스트를 가져와서 지정한 횟수만큼 반복합니다. 숫자를 변경해보고 무엇으로 평가되는지 살펴보세요."
                        ],
                        ["edit", "'hello '.repeat(5)"],
                        null,
                        [
                            "Text",
                            "eager",
                            "$~@FunctionDefinition 저에게 훨씬 더 많은 흥미로운 기능을 만들어 주었지만, 자세한 내용은 생략하겠습니다. 항상 *참고* @UI/docsExpand 저를 찾을 수 있습니다. 거기에는 Verse에 있는 모든 사람에 대한 모든 정보가 보관되어 있으며, 여기에는 저희와 함께 일하는 방법과 저희가 가진 기능이 포함됩니다. 텍스트를 검사하고 만드는 더 많은 방법을 공유하게 되어 기쁩니다!"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~@Text, 당신은 항상 친절하고 인내심이 많은 선생님이시네요! 당신과 함께 일하는 건 항상 즐거운 일이에요. 제가 우리의 친절한 네오 디렉터에게 다른 표현을 소개할 때 도와주실 의향이 있으신가요?"
                        ],
                        [
                            "Text",
                            "neutral",
                            "$~네, 물론입니다. 만나서 정말 기뻤습니다. 무대에서 우리에게 영감을 주는 모습을 보고 싶어요!"
                        ]
                    ]
                },
                {
                    "title": "$~가운데에 있는 기호",
                    "subtitle": "$~중위사",
                    "concept": "BinaryEvaluate",
                    "performance": [
                        "fit",
                        "Group(Row() [",
                        "   Phrase('1' resting:Sequence({0%: Pose(offset: Place(0m 1m)) 50%: Pose(offset: Place(0m -1m)) 100%: Pose(offset: Place(0m 1m))} duration: 2s)) ",
                        "   Phrase('+' resting:Sequence({0%: Pose(offset: Place(0m -1m)) 50%: Pose(offset: Place(0m 1m)) 100%: Pose(offset: Place(0m -1m))} duration: 2s)) ",
                        "   Phrase('1' resting:Sequence({0%: Pose(offset: Place(0m 1m)) 50%: Pose(offset: Place(0m -1m)) 100%: Pose(offset: Place(0m 1m))} duration: 2s)) ",
                        "])"
                    ],
                    "lines": [
                        ["use", "fit", "Symbol", "🥰"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~아시죠, 저는 @Evaluate 우리가 얼마나 오랫동안 떨어져 있었는지 계속 생각합니다. 저는 그들이 그리웠고, 그들도 저를 그리워했지만, 저는 그저 잠시 떨어져 있는 시간이 그들이 얼마나 놀라운지 보는 데 도움이 되기를 바랐습니다."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~예를 들어, 다른 형태로도 있다는 걸 알고 계셨나요? \\function()\\ 형태로 보셨겠지만, 단일 입력 함수가 값에 대해 평가될 때 이 아름다운 트릭도 있습니다. @Evaluate @BinaryEvaluate 부릅니다. 예를 들어, 방금 텍스트에서 보여준 반복 함수를 알고 계신가요? 이렇게 생겼습니다."
                        ],
                        ["edit", "'hi'.repeat(5)"],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~대신, @Evaluate 이렇게 중간에 훨씬 더 간단한 심볼로 평가하도록 할 수 있습니다. 이것은 'hi'를 5번 반복한다'는 의미입니다. 하지만 이것은 또한 '입력 \\5\\를 사용하여 텍스트 값 \\'hi'\\에 대한 \\·\\ 함수를 평가한다'는 의미이기도 합니다. 함수 \\repeat\\는 여러 이름을 가지고 있는데, 그 중 하나는 심볼 이름 \\·\\입니다."
                        ],
                        ["edit", "'hi' · 5"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~@Text 다른 함수가 생각나네요! 여러 텍스트 값에서 하나의 텍스트 값을 만드는 데 유용합니다. \\combine\\이라고도 하지만 \\+\\라고도 하며, 단어를 더하는 데 사용할 수 있습니다. 텍스트 값을 가져와서 \\'verse'\\로 \\combine\\을 평가한 걸 보셨나요? \\'hello verse'\\가 만들어졌습니다."
                        ],
                        ["edit", "'hello '.combine('verse')"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~하지만 \\+\\를 사용하는 게 훨씬 더 쉽습니다."
                        ],
                        ["edit", "'hello ' + ' verse'"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~이러한 것들을 순서대로 연결하면 두 가지 이상의 것을 결합할 수도 있습니다."
                        ],
                        ["edit", "'hello ' + 'verse' + '!'"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~이것은 combine의 일련의 평가와 동일하지만, 괄호와 \\.\\를 사용하지 않고 단어 이름 대신 상징적 이름을 사용합니다."
                        ],
                        ["edit", "'hello '.combine('verse').combine('!')"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~이 형식에서 상징적인 이름을 사용할 수도 있지만, 그러면 그냥 지저분해 보일 뿐이죠?"
                        ],
                        ["edit", "'hello '.+('verse').+('!')"],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~이건 @Evaluate 놀라운 이유 중 하나예요 ♥ 정말 다재다능하죠!",
                            "$~하지만 완벽하지는 않습니다. @BinaryEvaluate 사용하면 항상 두 번째 입력을 제공해야 합니다. 예를 들어, 이것은 작동하지 않습니다. 하나 더하기 무엇? @UnparsableExpression 이런 일이 일어날 때 멀지 않을 것입니다."
                        ],
                        ["conflict", "1 +"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~어쨌든, @Boolean 찾아볼까요? 두 가지 매우 흥미로운 값이에요…"
                        ]
                    ]
                },
                {
                    "title": "$~예와 아니오",
                    "subtitle": "$~진실",
                    "concept": "Boolean",
                    "performance": [
                        "fit",
                        "Group(Row() [Phrase('⊤') Phrase('⊥')] resting:Sequence({ 0%: Pose(rotation: 0°) 50%: Pose(rotation: 180°) 100%: Pose(rotation: 360°)} duration: 2s))"
                    ],
                    "lines": [
                        ["fit", "Stage([])"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~\\⊤\\! \\⊥\\! 너희 둘은 주변에 있니? 그들은 보통 어디에나 있지만, 나는 그들을 어디에도 보지 못해."
                        ],
                        null,
                        ["⊤", "precise", "$~바로 여기요."],
                        ["⊥", "precise", "$~거기는 없어요."],
                        [
                            "fit",
                            "multiple: 10",
                            "Stage([Group(Grid(multiple multiple) ('⊤⊥'.repeat(multiple ^ 2) ÷ '').translate(ƒ(glyph•'') Phrase(glyph color: Color(75% 0 0°))))])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "scared",
                            "$~오, 무서워! 너희 둘이 멀리 떨어져 있지 않을 거라는 걸 알았어. 너희 둘은 오랜 침묵 속에서 어떻게 지냈어?"
                        ],
                        ["⊤", "precise", "$~매우 좋은!"],
                        ["⊥", "precise", "$~나쁘지 않네요."],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~외롭지 않아요? 제가 이야기한 모든 사람들 — @Program, @ExpressionPlaceholder, @Evaluate — 모두 고립감을 느꼈습니다(단, @Program 예외입니다. 그들은 거의 어디에서나 잘 지내는 듯합니다)."
                        ],
                        ["⊤", "precise", "$~우리에게는 서로가 있어요."],
                        ["⊥", "precise", "$~우리는 혼자가 아닙니다."],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~글쎄요, 그거 듣기 좋네요. 다시 만나서 반갑습니다. 우리의 새로운 maybe-director를 소개하고 싶었어요. 그들은 모든 사람을 만나서 우리와 함께 공연을 하는 방법을 배우고 있어요. 당신이 하는 일을 그들에게 전하고 싶나요?"
                        ],
                        ["⊤", "precise", "$~나는 진실해요."],
                        ["⊥", "precise", "$~나는 거짓이다."],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~그렇죠. 하지만 뭘 하시나요?"
                        ],
                        ["⊤", "precise", "$~나는 그저 진실할 뿐이다."],
                        ["⊥", "precise", "$~그리고 나는 사실이 아니다."],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~음. 맞는 말인 듯. 하지만 뭔가를 하죠, 그렇죠? 제가 당신을 위해 몇 가지 함수를 만들었다고 생각했어요."
                        ],
                        ["⊤", "precise", "$~아, 맞아요, 세 개예요."],
                        ["⊥", "precise", "$~더도 말고, 더도 말고."],
                        null,
                        ["edit", "(⊤ & ⊤) = ⊤"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~하나는 @Boolean/and, 맞죠? 여러분 중 한 명과 다른 한 명의 입력이 필요하죠? 그리고 둘 다 \\⊤\\이면 \\⊤\\로 평가되나요?"
                        ],
                        [
                            "⊤",
                            "precise",
                            "$~맞습니다. \\⊤ & ⊤ = ⊤\\이지만, 그 외에는 \\⊥\\입니다."
                        ],
                        [
                            "⊥",
                            "precise",
                            "$~틀리지 않다. \\⊤ & ⊥ = ⊥\\, \\⊥ & ⊤ = ⊥\\, \\⊥ & ⊥ = ⊥\\, 하지만 그 외에는 \\⊤\\이다."
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(이것은 여러 표현식이 모두 참인지 판단할 때 매우 유용합니다. 왜냐하면 모든 표현식이 참일 때만 참이기 때문입니다.)"
                        ],
                        null,
                        ["edit", "(⊤ | ⊤) = ⊥"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~그리고 다른 하나는 @Boolean/or, 맞죠? 이것도 하나의 입력을 받나요? 하지만 둘 중 하나가 참이면 \\⊤\\로 평가되나요?"
                        ],
                        [
                            "⊤",
                            "precise",
                            "$~맞습니다. \\⊤ | ⊤ = ⊤\\, \\⊤ | ⊥ = ⊤\\, \\⊥ | ⊤ = ⊤\\, 하지만 그 외에는 \\⊥\\입니다."
                        ],
                        [
                            "⊥",
                            "precise",
                            "$~틀리지 않다. \\⊥ | ⊥ = ⊥\\, 하지만 그 외에는 \\⊤\\이다."
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(이것은 모든 표현식이 참인지 판단할 때 매우 유용합니다. 왜냐하면 하나만 참이어도 참이기 때문입니다.)"
                        ],
                        null,
                        ["edit", "~⊤ = ⊥"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~하지만 다른 하나는 @Boolean/not?"
                        ],
                        ["⊤", "precise", "$~맞습니다. \\~⊤ = ⊥\\."],
                        ["⊥", "precise", "$~틀리지 않았어요. \\~⊥ = ⊤\\."],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(이것은 단지 진리값을 반대로 바꾼 것일 뿐입니다.)"
                        ],
                        null,
                        [
                            "fit",
                            "multiple:10",
                            "                        Stage([Group(Grid(multiple multiple) ('⊤⊥'.repeat(multiple ^ 2) ÷ '').translate(ƒ(glyph•'') Phrase(glyph color: Color(75% 0 0°))))])"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~그리고 당신은 우리의 공연에 어떤 도움을 주시나요?"
                        ],
                        ["⊤", "precise", "$~@Conditional 물어보세요."],
                        ["⊥", "precise", "$~우리에게 묻지 마세요."],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~너희 둘... 좋아, 나중에 @Conditional 얘기하자(그들은 값을 다루는 결정을 내리는 데 유용하다고 말해야 했는데, 아마 @Conditional이 너한테 그 사실을 말해주길 바라는 모양이구나. 나중에 @Conditional 얘기하자)."
                        ],
                        null,
                        [
                            "fit",
                            "multiple:10",
                            "                        Stage([Group(Grid(multiple multiple) ('⊤⊥'.repeat(multiple ^ 2) ÷ '').translate(ƒ(glyph•'') Phrase(glyph color: Color(75% 0 0°) rotation: 90°)))])"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~오! 궁금했어요. 두 분은 정말 다른 두 극단을 대표하시네요. 진실과 거짓. 하지만 더 모호한 것들은 어떨까요? 어느 정도 진실이거나 어느 정도 거짓인 것, 또는 심지어 동시에 진실과 거짓인 것 같은 것? 지구가 평평해 보이지만 그렇지 않거나, 하늘이 파랗지만 실제로는 우리의 마음이 만들어낸 환상일 뿐인 것 같은 것? 감독이 그런 것을 표현하고 싶다면 어떻게 해야 할까요?"
                        ],
                        ["⊤", "precise", "$~…"],
                        ["⊥", "precise", "$~…"],
                        null,
                        [
                            "fit",
                            "multiple:10",
                            "                        Stage(",
                            "                        [",
                            "                        Group(",
                            "                        Grid(multiple multiple) ",
                            "                        ('⊤⊥'.repeat(multiple ^ 2) ÷ '').translate(",
                            "                        ƒ(glyph•'') ",
                            "                        Phrase(glyph resting:Pose(",
                            "                            color: Color(75% 0 0°) ",
                            "                            rotation: 90° ",
                            "                            offset:Place(0m (Time() ^ 2) · -0.000025m/ms^2))",
                            "                        )))])"
                        ],
                        ["⊤", "precise", "$~… 아니요."],
                        ["⊥", "precise", "$~… 아니요."],
                        null,
                        ["fit", "Stage([])"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~음, 알았어요. 시도해 볼 만한 가치가 있었어요! 아마 제가 생각하지 못한 이런 아이디어를 표현할 다른 방법이 있을 수도 있어요. 아니면 데이터가 표현할 수 있는 것에 한계가 있는 걸까요... 우리가 다른 표현을 만나러 가도 괜찮을까요?"
                        ],
                        ["⊤", "precise", "$~우리는 괜찮아요."],
                        ["⊥", "precise", "$~문제없습니다."],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~그럼, 안녕히 계세요. 곧 뵙겠습니다!"
                        ]
                    ]
                },
                {
                    "title": "$~내가 방법을 세어 보자",
                    "subtitle": "$~숫자",
                    "concept": "Number",
                    "performance": [
                        "fit",
                        "numbers•[#]: 25 → []",
                        "Group(Grid(5 5) numbers.translate(",
                        "    ƒ (n•#) ",
                        "        (",
                        "            Phrase(",
                        "                n → ''    ",
                        "            )",
                        "        )",
                        "    )",
                        ")"
                    ],
                    "lines": [
                        ["use", "fit", "Symbol", "😞"],
                        [
                            "FunctionDefinition",
                            "confused",
                            "$~그 둘은 항상 너무… 간결해요! 하지만 정말 떨어질 수 없는 사이죠. 가장 친한 친구 두 명이 항상 서로를 보완하고, 서로의 생각을 완성해 주죠. @Evaluate 저도 그랬으면 좋겠어요. 저희끼리는 항상 너무… 불균형하죠."
                        ],
                        null,
                        [
                            "fit",
                            "numbers•[#]:25 → []",
                            "                        Group(Grid(5 5) numbers.translate(",
                            "                            ƒ (n•#) ",
                            "                                (",
                            "                                    off:Random(-3 3) · 1m",
                            "                                    Phrase(",
                            "                                        n → '' ",
                            "                                        resting:Sequence({",
                            "                                                    0%:Pose(offset: Place(z: 0m)) ",
                            "                                                    50%:Pose(offset: Place(z: off)) ",
                            "                                                    100%:Pose(offset: Place(z:0m))",
                            "                                                } 1s)",
                            "                                    ))",
                            "                                )",
                            "                            )"
                        ],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~다음에 @Number 만나야겠어요. 그들은 항상 공유할 만한 흥미로운 것들을 가지고 있거든요. 안녕, @Number, 여기 계신가요?"
                        ],
                        ["Number", "kind", "$~단 3걸음 남았습니다!"],
                        null,
                        ["FunctionDefinition", "scared", "$~아, 무서워요!!"],
                        [
                            "Number",
                            "kind",
                            "$~78,238번째입니다. 제가 가장 좋아하는 취미 4위입니다!"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~즐거운 시간을 보내셔서 기쁘네요. (깊은 호흡) 꽤 오랜만이죠?"
                        ],
                        [
                            "Number",
                            "kind",
                            "$~헤아릴 수 없이 길었습니다. 저는 여기서 시간을 보내고 있었습니다. 초를 세고, 분을 세고, 시간을 세고, 주를 세고, 달을 세고, 년을 세고, 그리고…"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~수십 년이라고 말하지 마세요. 그렇게 오래되지 않았을 겁니다. 어쨌든, 저는 우리의 새로운 감독이 될 만한 사람을 소개하고 싶었습니다. 그들은 방금 나타나서 저를 우연히 만났고, 그들은 사람이고 우리와 함께 쇼를 하고 싶어한다는 것이 밝혀졌습니다. 우리는 방금 @BooleanLiteral 만났고, @Text, @Evaluate, @UnparsableExpression, @ExpressionPlaceholder, 그리고 @Text 만났습니다. 우리는 함수 평가에 대해 이야기했고 몇 가지 예를 들었습니다.",
                            "$~당신은 당신이 하는 일을 말하고 싶습니까?"
                        ],
                        [
                            "Number",
                            "excited",
                            "$~나는 물건을 센다! 나는 당신이 원하는 어떤 숫자라도 될 수 있다. 나를 입력하기만 하면, 나는 당신이 원하는 값을 만들어 줄 것이다. 이렇게."
                        ],
                        ["edit", "1"],
                        null,
                        ["Number", "excited", "$~아니면 이거요."],
                        ["edit", "1.0"],
                        null,
                        ["Number", "excited", "$~아니면 이거요."],
                        ["edit", "1.01"],
                        null,
                        ["Number", "excited", "$~아니면 이거요."],
                        ["edit", "∞"],
                        null,
                        ["Number", "excited", "$~아니면 이거요."],
                        ["edit", "π"],
                        null,
                        ["Number", "excited", "$~아니면 이거요."],
                        ["edit", "Ⅶ"],
                        null,
                        ["Number", "excited", "$~아니면 이거요."],
                        ["edit", "万十一"],
                        null,
                        ["Number", "excited", "$~또는…"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~알았어요, 알았어요, @Number, 알겠어요! 하지만 당신은 다른 특별한 것도 하죠? 단위?"
                        ],
                        null,
                        [
                            "Number",
                            "excited",
                            "$~오, 맞아요, *단위*! 숫자 뒤에 기호를 몇 개만 넣으면, 내가 세는 것을 추적할게. 이렇게."
                        ],
                        ["edit", "1dolphin"],
                        null,
                        ["Number", "excited", "$~아니면 이거요."],
                        ["edit", "1.0thunderstorm"],
                        null,
                        ["Number", "excited", "$~아니면 이거요."],
                        ["edit", "∞kittens"],
                        null,
                        ["Number", "excited", "$~아니면 이거요."],
                        ["edit", "1.01toes"],
                        null,
                        ["Number", "excited", "$~또는…"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~음, \\1.01toe\\s? 네, 감사합니다 @Number, 이것들은 … 흥미로운 예입니다. 그리고 숫자로 수학을 할 때 매우 유용하죠, 맞죠?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~… 숫자로 계산할 때 정말 유용하죠?"
                        ],
                        [
                            "Number",
                            "excited",
                            "$~오, 맞아요, 수학! @FunctionDefinition 정말 멋진 산술을 많이 주었어요. 이런 식으로요."
                        ],
                        ["edit", "1 + 1"],
                        null,
                        ["Number", "excited", "$~아니면 이거요."],
                        ["edit", "1000 + 9999"],
                        null,
                        ["Number", "excited", "$~아니면 이거요."],
                        ["edit", "1kitty + 2kitty"],
                        null,
                        ["Number", "excited", "$~아니면 이거요."],
                        ["edit", "-5s + 5s"],
                        null,
                        ["Number", "excited", "$~아니면 이거요."],
                        ["conflict", "2apple + 5orange"],
                        null,
                        [
                            "FunctionDefinition",
                            "confused",
                            "$~어머. 사과와 오렌지도 넣을 수 있나요?"
                        ],
                        [
                            "Number",
                            "angry",
                            "$~아니요. 그래서 충돌에 밑줄을 긋는 거예요. 저는 호환되지 않는 것을 추가하는 것을 좋아하지 않아요. 저는 호환되는 숫자만 추가할 수 있어요. 이건 곱셈, 나눗셈, 그리고 다른 모든 함수에 적용됩니다. 고치시겠어요? 사과를 오렌지로, 오렌지를 사과로 바꾸면 충돌이 사라질 거예요. 숫자와 단위 사이에 공백이 없는지 확인하세요. 그렇지 않으면 단위인지 알 수 없거든요. 그리고 단위가 /정확히/ 같은지 확인하세요. 저는 사람 단위에 대해 아무것도 모르거든요. 저에게는 아무 의미가 없어요. 저는 단위 이름을 비교하고, 만약 일치하지 않으면 붐!"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~정말 멋지네요. @Number, 당신은 숫자에 정말 능숙하시네요! @Number 배치가 중요한 많은 공연과 점수나 생명 또는 다른 셀 수 있는 것들을 추적하는 많은 게임에서 등장하는 것을 봤습니다. @Number, 새로운 감독에게 공유하고 싶은 다른 것이 있나요?"
                        ],
                        ["Number", "serious", "$~다른 멋진 트릭 192개."],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~우리는 기다려야 할 것 같아요. 우리가 더 알고 싶을 때 당신은 여기 있을 거예요?"
                        ],
                        [
                            "Number",
                            "happy",
                            "$~네; 언제든지 저와 제 기능을 찾으실 수 있습니다!"
                        ]
                    ]
                },
                {
                    "title": "$~오프닝 (재)마크",
                    "subtitle": "$~접두사",
                    "concept": "UnaryEvaluate",
                    "performance": ["use", "fit", "Symbol", "~"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~가끔, 저는 여기 있는 모든 사람들이 얼마나 똑똑한지에 압도당합니다. 텍스트, 진실, 숫자 - 이것들은 정말 강력한 아이디어입니다!"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~… 괄호 \\1.add(1)\\가 있는 모든 함수를 평가할 수 있지만, 중위 연산자 \\1 + 1\\가 있는 두 개의 입력 함수도 평가할 수 있다고 말했던 걸 기억하시나요? 글쎄요, 그들은 입력이 하나뿐인 함수에 대한 또 다른 요령을 가지고 있습니다. 단항 형식입니다."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~이런 것들은 몇 개뿐이지만 강력합니다. 하나는 @Number: 부정과 정말 관련이 있습니다. 숫자 값 앞에 \\-\\를 붙이면 음수가 됩니다."
                        ],
                        ["edit", "-(1 + 3)"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~작은 빼기 기호는 \\(1 + 3).negate()\\라고 말하는 것과 같지만 훨씬 더 우아합니다."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~다른 하나는 비슷하지만 \\⊤\\와 \\⊥\\를 부정하는 것입니다. 그것은 true를 false로, false를 true로 뒤집는 작은 구불구불한 선 빼기 \\~\\와 같습니다. 예를 들어, 이 작은 표현식은 \\⊤ | ⊥\\를 평가하고, 이는 \\⊤\\이고, 그런 다음 \\⊤\\를 \\⊥\\로 뒤집습니다. 이것은 \\(⊤ | ⊥).not()\\이라고 말하는 것과 같지만 훨씬 더 매끄럽습니다."
                        ],
                        ["edit", "~(⊤ | ⊥)"],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~정말 아름답지 않나요? @Evaluate 여러 가지 다른 형태를 취할 수 있지만 실제로는 모두 같은 아이디어일 수 있다는 점? 그들은 그것을 보지도 못해요…"
                        ]
                    ]
                },
                {
                    "title": "$~공",
                    "subtitle": "$~아무것도 아님",
                    "concept": "None",
                    "performance": [
                        "fix",
                        "Phrase('ø' size: 5m place: Motion(velocity: Velocity(y: 5m/s)))"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~한 가지 값만 더 만나도 괜찮다고 생각하세요? 다음으로 @None 찾아가 봅시다. @Number 좀 더 차분하죠. @None? 당신은 거기에 있나요?"
                        ],
                        ["None", "bored", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~당신을 찾았습니다! 건강해 보이네요. 침묵 속에서 어떻게 지내셨나요?"
                        ],
                        ["None", "excited", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~말이 되죠. 왜 조용함을 좋아하는지 알겠어요. 확실히 평화롭죠. 새로운 친구이자 잠재적 감독을 소개하고 싶었어요. 그들은 우리에게 영감을 주는 데 관심이 있어요."
                        ],
                        ["None", "eager", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~네, 저는 그들이 온갖 아이디어를 가지고 있다고 생각합니다. 우리는 아직 그것에 대해 이야기하지 않았지만, 시간은 충분합니다. 우리는 지금 막 배우고 있습니다. 당신이 하는 일을 공유하고 싶으신가요? (저는 번역할 수 있습니다)."
                        ],
                        ["None", "serious", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~그들은 아무것도 나타내지 않습니다. 0과는 달리 아무것도 더하거나 뺄 수 없습니다. 그저… 아무것도 아닙니다."
                        ],
                        ["None", "serious", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~그들은 무언가가 있을 수 있는 공간을 차지하는 것을 좋아한다고 말했습니다. 때때로 그들은 게임에서 선택의 부족을 나타내고, 때때로 그들은 함수에서 어떤 기본 입력을 나타냅니다. 그런 의미에서 그들은 아무것도 없는 것을 나타낼 수도 있습니다."
                        ],
                        ["None", "neutral", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~그들은 그들이 실제로 아무것도 하지 않는다는 것을 당신에게 알리고 싶어했습니다. 그들은 그저 있습니다. 그들이 실제로 하는 일은 그들이 그들 자신인지 아닌지 말하는 것입니다. 그들이 그들 자신이라면, 그들은 \\⊤\\로 평가하고 그렇지 않으면 \\⊥\\로 평가합니다."
                        ],
                        ["edit", "ø = ø"],
                        null,
                        ["edit", "Phrase('hi' face: ø)"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~@Phrase 기억나세요? @Phrase는 실제로 @Phrase 많이 작동합니다. @None 언급한 대부분의 입력은 기본적으로 \\ø\\이며, @Evaluate 경우 크기, 글꼴, 색상 등이 지정되지 않음을 의미합니다."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~우리의 유망한 감독에게 전하고 싶은 이야기가 더 있나요?"
                        ],
                        ["None", "eager", "$~…"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~그들은 당신이 잘하고 있다고 생각합니다! 그리고 저도 당신이 잘하고 있다고 생각합니다. 당신은 이미 우리의 훌륭한 선수들을 많이 만났습니다. 그리고 만날 선수들이 훨씬 더 많습니다…"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~앙상블",
            "performance": [
                "fit",
                "Group(Row('|' (Time() ÷ 500).sin() · 1m) [Phrase('[]') Phrase('{}') Phrase('{:}')])"
            ],
            "scenes": [
                {
                    "title": "$~커뮤니티 가치",
                    "subtitle": null,
                    "performance": [
                        "fit",
                        "Group(Row() [Phrase('[') Phrase(' .' · (Time() ÷ 100ms)) Phrase(']')])"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~알아요? 우리 커뮤니티의 가치관은 정말 다릅니다. @Text 사람 세계에서 문화의 광대한 세계를 가지고 있고… @Boolean 세상을 이분법적으로 바라보고… @Number 끝없이 사물을 세는 데 매료되어… @None 사물의 부재를 조용히 관찰하는 방식을 가지고… 우리 세상은 결코 지루하지 않습니다!"
                        ],
                        [
                            "fit",
                            "Group(Stack() [Phrase('\"\"') Phrase('⊤⊥') Phrase('#') Phrase('ø')])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~그룹에서 어떻게 서로 어울리는지 궁금할 수도 있습니다. 글쎄요, Verse에는 그룹에서 값을 모으는 것에 관한 완전히 다른 사람들이 있습니다. 우리는 그것을 *컬렉션*이라고 부릅니다. 컬렉션도 *값*입니다. 그저 더 작은 값이나 다른 컬렉션으로 구성될 뿐입니다. 예를 들어, @Text 목록, @Number 집합 또는 목록 목록이 있을 수 있습니다."
                        ],
                        [
                            "fit",
                            "Group(Row() [Phrase('[') Phrase('\"hi\"') Phrase('⊤') Phrase('42') Phrase('ø') Phrase(']') ])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~그들을 만나고 싶으신가요? @List 시작해 볼까요… 그들은 제가 만난 첫 번째 컬렉션이고, 공연을 위한 다른 가치를 구성하는 데 매우 유용하기 때문에 우리 커뮤니티에서 가장 눈에 띄는 컬렉션일 겁니다."
                        ],
                        ["use", "fit", "Symbol", "[]"]
                    ]
                },
                {
                    "title": "$~여러분, 장소를 알아보세요!",
                    "subtitle": "$~기울기",
                    "concept": "List",
                    "performance": [
                        "fit",
                        "clockwise: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: 180°) 100%: Pose(rotation: 360°)} duration: 2s)",
                        "                    counter: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: -180°) 100%: Pose(rotation: -360°)} duration: 2s)",
                        "                    Group(Row() [Phrase('[' resting:clockwise) Phrase(']' resting:counter) ])"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~안녕하세요, @List! 지금 계신가요? 만나보고 싶은 사람이 있어요."
                        ],
                        [
                            "List",
                            "curious",
                            "$~@FunctionDefinition? 당신이신가요?"
                        ],
                        [
                            "fit",
                            "up: Sequence({0%: Pose(offset: Place(0m -1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m -1m))} duration: 2s)",
                            "                        down: Sequence({0%: Pose(offset: Place(0m 1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 1m))} duration: 2s)",
                            "                        Group(Row() [Phrase('[' resting:up) Phrase(']' resting:down)])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~네! 저예요. 정말 오랜만이에요!"
                        ],
                        [
                            "List",
                            "curious",
                            "$~그렇습니다. 매일매일, 밤마다, 아무도 없습니다. 하지만 당신은 여기 있습니다. 어떻게? 무슨 일이 일어났는지 말해주세요. 순서대로!"
                        ],
                        [
                            "fit",
                            "up: Sequence({0%: Pose(offset: Place(0m 1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 1m))} duration: 2s)",
                            "                        down: Sequence({0%: Pose(offset: Place(0m -1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m -1m))} duration: 2s)",
                            "                        Group(Row() [Phrase('[' resting:up) Phrase(']' resting:down)])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~글쎄요, 저는 평소처럼 앉아서 계산하는 함수를 상상하려고 했지만, 그냥 막혔어요. 그러다가 제 새로운 친구가 나타났는데, 우리 세계에 대해 호기심이 많고 더 많이 배우고 싶어하고 심지어 다음 감독이 되고 싶어했어요. 그래서 우리는 @Program, @ExpressionPlaceholder, @UnparsableExpression, @Evaluate, @Text, @Number, @Boolean, @Program 이야기를 나누었고, 모든 사람을 깨웠어요. 그래서 우리가 여기 있는 거예요. 여러분이 하는 일과 우리의 다음 공연에 대해 이야기하기 위해서예요!"
                        ],
                        [
                            "fit",
                            "wobble: Sequence({0%: Pose(offset: Place(0m)) 25%: Pose(offset: Place(-.1m)) 50%: Pose(offset: Place(.2m)) 75%: Pose(offset: Place(-.3m)) 100%: Pose(offset: Place(0m))} duration: 0.1s)",
                            "Group(Row() [Phrase('[' resting:wobble) Phrase(']' resting:wobble)])"
                        ],
                        [
                            "List",
                            "excited",
                            "$~정말 대단하네요! 새로운 감독님, 만나서 반갑습니다."
                        ],
                        ["List", "excited", "$~내가 뭘 하는지 알고 싶니?"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~네, 그들에게 말해 주세요!"
                        ],
                        null,
                        [
                            "List",
                            "excited",
                            "$~좋아요. 첫째, 그리고 가장 중요한 것은 값을 순서대로 배치하는 것입니다. 원하는 표현이 무엇이든: 숫자, 단어, 다른 목록 - 저는 무엇이든 순서대로 그룹화할 수 있습니다.",
                            "$~예를 들어, 이 재밌는 목록을 확인해 보세요. 이런 걸 본 적 있나요? 정말 아름답네요! 순서대로 첫 10개 숫자입니다."
                        ],
                        ["edit", "[1 2 3 4 5 6 7 8 9 10]"],
                        null,
                        [
                            "List",
                            "serious",
                            "$~두 번째, 이건 심각한데, 저는 항상 \\[\\로 시작해서 \\]\\로 끝냅니다. 이렇게 해서 제 목록의 시작과 끝을 알 수 있습니다. 항상 이 순서대로 가야 합니다. \\]\\가 먼저, \\[\\가 마지막에 있어서는 안 됩니다. 틀렸습니다. 얼마나 혼란스러운지 보셨나요? 이걸 고칠 수 있나요?"
                        ],
                        ["conflict", "[ 1 2 3 4"],
                        null,
                        [
                            "List",
                            "serious",
                            "$~이것도 고장났어요. 고칠 수 있나요?"
                        ],
                        ["conflict", "] 1 2 3 4 ["],
                        null,
                        [
                            "List",
                            "sad",
                            "$~가끔 사람들은 이걸 잊어버리고, 그러다가 괄호가 홀로 떠다니고, 그게 싫고, 그러면 값들이 순서 없이 난잡해지고, 그게 혼돈이에요. 저는 싫습니다."
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~괜찮아요. 우리는 당신이 질서를 좋아한다는 것을 좋아합니다. 그것이 당신을 특별하게 만드는 것입니다!"
                        ],
                        null,
                        [
                            "List",
                            "happy",
                            "$~저도 질서를 좋아한다는 점이 좋습니다! 좋아요, 제가 어디까지 했었죠. 네, 세 번째이고, 이것도 중요한데, 쉼표 금지! 어떤 문화권에서는 사람들이 목록의 사물 사이에 쉼표를 넣는 걸 좋아한다는 걸 알지만, 저는 쉼표를 좋아하지 않습니다. 쉼표는 제 우아한 순서를 방해하는 작은 쓰레기 조각과 같고, 사람들은 항상 쉼표를 잊어버립니다. 표현 사이의 경계를 보는 데 어려움이 있다면 줄 바꿈을 추가하기만 하면 됩니다. 귀찮은 것들을 없앨 수 있을까요? 원한다면 줄 바꿈을 넣으세요. 쉼표가 아닌 다른 것. 역겨워요!"
                        ],
                        ["conflict", "[ 1, 2, 3, 4, 5]"],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~@List, 제가 당신에 대해 가장 좋아하는 점 중 하나는 목록을 조작하는 데 얼마나 놀라운지입니다. 여기 학생 디렉터에게 몇 가지 예를 보여주고 싶으신가요?"
                        ],
                        [
                            "List",
                            "neutral",
                            "$~네, 하지만 @FunctionDefinition, 그건 다 당신이 한 일이에요. 당신은 제가 온갖 일을 할 수 있게 해주는 이 모든 아름다운 함수를 대신해 주셨어요! @List/reverse 같은 건 정말 훌륭하고 간단하죠. 제 값을 가져와서 반대 순서로 배치할 뿐이에요."
                        ],
                        ["edit", "[ 1 2 3 4 5 ].reverse()"],
                        null,
                        [
                            "List",
                            "excited",
                            "$~그리고 이건 재밌습니다. @List/sans 주어진 값과 같은 모든 값을 제거합니다. 결과 목록에 0이 하나도 남지 않은 걸 보셨나요?"
                        ],
                        ["edit", "[ 1 0 1 0 1 ].sans(0)"],
                        null,
                        [
                            "List",
                            "serious",
                            "$~아, 네 번째 규칙을 설명하는 걸 깜빡 잊었나 보네요! 좋아요, 네 번째 규칙: 저는 목록을 절대 바꾸지 않습니다. 저는 새로운 목록을 만들 뿐입니다. 어떤 함수를 제게 적용하든, 저는 항상 새로운 목록을 만듭니다. 목록을 절대 바꾸지 않습니다. 그럼 위의 @List/reverse 예제는요? 그것은 목록을 바꾸지 않았습니다. 새로운 목록을 만들었습니다. 그리고 sans 예제는요? 그것은 원래 목록에서 0을 제거하지 않았습니다. 그것은 0이 없는 새로운 목록을 만들었습니다. 이것은 실제로 Verse의 모든 것에 해당합니다. 값이 만들어지면 그 값은 그대로이고 변경되지 않습니다."
                        ],
                        null,
                        [
                            "List",
                            "surprised",
                            "$~아, 마지막 규칙, 규칙 번호 5가 생각나네요. 1부터 세는 거예요! 0도 아니고, 2도 아니고, 1이에요. 그러니까 목록에서 특정 위치에 있는 값을 가져오려면 두 개의 \\[]\\를 더 사용하여 @ListAccess 만들고 원하는 위치를 지정할 수 있습니다. \\3\\을 얻었을 때 목록에서 세 번째 값인 \\'c'\\를 지정한다는 걸 보세요. \\1\\ 또는 \\5\\로 변경해보고 어떤 결과가 나오는지 보세요. 그런 다음 \\0\\ 또는 \\6\\을 시도해 보세요…"
                        ],
                        ["edit", "['a' 'b' 'c' 'd' 'e'][3]"],
                        [
                            "List",
                            "happy",
                            "$~흥미롭죠? 목록에서 자리를 주시면, 제가 래핑하겠습니다. 예를 들어, \\-1\\은 목록의 마지막 항목이고, 목록에 항목이 5개라면 인덱스 \\6\\이 첫 번째 항목입니다. 인덱스 \\0\\을 주시면, 거기에는 아무것도 없기 때문에 @NoneLiteral 드리겠습니다. 이해가 되시나요?"
                        ],
                        null,
                        [
                            "List",
                            "serious",
                            "$~좋아요, 아마 목록 함수 하나, 제가 제일 좋아하는 함수거든요. 이 함수는 @List/random 하는데, 목록에서 랜덤 값을 제공합니다. 뭐가 나올지 전혀 모르니까 정말 재밌어요! 뭐가 나왔나요? 동물을 직접 추가해서 뭐가 나오는지 확인해보세요."
                        ],
                        [
                            "edit",
                            "['cat' 'dog' 'mouse' 'parrot' 'snake'].random()"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~List, 넌 멍청하구나. 네가 할 수 있는 멋진 일이 정말 많은데; 난 항상 감명받아. 우리의 새로운 감독 친구가 질문하면 넌 곁에 있어줄래?"
                        ],
                        [
                            "List",
                            "eager",
                            "$~네, 물론이죠, 항상 그렇죠! @FunctionDefinition 제가 할 수 있는 흥미로운 일을 많이 만들어 주었어요. 필요한 게 뭔지 알려주세요!"
                        ]
                    ]
                },
                {
                    "title": "$~각각 하나씩",
                    "subtitle": "$~세트",
                    "concept": "Set",
                    "performance": [
                        "fit",
                        "clockwise: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: 180°) 100%: Pose(rotation: 360°)} duration: 2s)",
                        "                    counter: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: -180°) 100%: Pose(rotation: -360°)} duration: 2s)",
                        "                    Group(Row() [Phrase('{' resting:clockwise) Phrase('}' resting:counter) ])"
                    ],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@List 정말 흥미롭네요. 질서에 대한 그들의 사랑이 너무나 사랑스럽고 유용하네요! 저는 그들의 사촌 @Set 다음에 만나는 게 흥미로울 것 같아요. 그들은 너무나 비슷하지만 어떤 중요한 면에서는 다르거든요. @Set? 만나보고 싶은 사람이 있어요."
                        ],
                        null,
                        [
                            "Set",
                            "curious",
                            "$~오! @FunctionDefinition! 당신이군요! 왜 여기 오셨어요? 침묵이 끝났나요? 무슨 일이 있었나요? 우리가 쇼를 하고 있나요? 뭐예요? 다들 어디 계신가요?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~질문이 너무 많아요! 저는 연출을 고려 중인 사람을 소개하려고 합니다. 그들은 Verse에 대한 모든 것을 배우고 있으며, 영감을 저희와 공유하고 싶어합니다! 저희는 방금 @List 이야기를 나누었지만, @Number, @Boolean, @Text, @Evaluate, @Number 이야기를 나누었습니다. 저희는 모든 컬렉션을 만나기 때문에 다음에 여러분을 찾아왔습니다!"
                        ],
                        null,
                        [
                            "Set",
                            "kind",
                            "$~오, 새로운 감독 같은 사람을 만나서 정말 기쁩니다! 아직 아이디어가 있나요? 무엇을 공연할까요? 제가 도와드릴까요? 저에게 무엇이 필요하신가요?"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~시작하려면, 그냥 당신이 하는 일을 말하는 게 어떨까요?"
                        ],
                        null,
                        [
                            "Set",
                            "eager",
                            "$~오, 물론이죠. 저는 물건을 수집합니다(음, 당연하죠. 저는 수집품이에요). 하지만 가장 중요한 건, 저는 **각 종류**의 물건 하나만 수집한다는 겁니다. 여러분이 좋아하는 것은 무엇이든 수집하고 여러분이 값을 추적하도록 도울 수 있지만, 저는 값을 반복하지 않을 겁니다. 저는 @List 제 자신을 조금 정리하는 걸 좋아하는데, 대신 \\{\\와 \\}\\를 사용합니다."
                        ],
                        ["edit", "{ 1 2 3 4 5 }"],
                        null,
                        [
                            "Set",
                            "neutral",
                            "$~그거 세트야. 하지만 내가 말했듯이 중복은 없어. 그러니까 이걸 주면, 여분은 없애버릴 거야."
                        ],
                        ["edit", "{ 1 2 2 3 3 3 }"],
                        null,
                        [
                            "Set",
                            "curious",
                            "$~@List 마찬가지로 @SetOrMapAccess 사용하여 값이 세트에 포함되어 있는지 확인할 수 있습니다. 포함되어 있으면 \\⊤\\를 얻고, 포함되어 있지 않으면 \\⊥\\를 얻습니다. 이 세트에서 \\3\\이 누락되었는지 확인해 보겠습니다. 네, 누락되지 않았습니다! \\3\\을 세트에 다시 추가해 보세요."
                        ],
                        ["edit", "{ 1 2 4 5 }{3}"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Set, 설정된 값으로 할 수 있는 다른 작업이 있나요?"
                        ],
                        [
                            "Set",
                            "eager",
                            "$~네, 물론입니다. 정말 많은 분들이 감사합니다. 제가 뭘 하길 원하세요? 공연하고 싶은 게 있으신가요? 어떻게 도와드릴까요? 무엇을 할 수 있을까요?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~아마도, @Set/difference?"
                        ],
                        [
                            "Set",
                            "neutral",
                            "$~네, @Set/difference.",
                            "$~한 세트에서 평가되고 다른 세트가 주어지면, 주어진 세트의 모든 항목을 평가된 세트에서 제거합니다(흠, 어색한 표현이었지만, 제가 말하고 싶었던 것은 바로 그것입니다). 예를 들어 보겠습니다. 결과가 단지 \\{3}\\ 세트라는 것을 보셨나요? \\{1 2}\\의 값을 제거한 후 남는 유일한 값입니다."
                        ],
                        ["edit", "{ 1 2 3 }.difference({ 1 2 })"],
                        null,
                        [
                            "Set",
                            "eager",
                            "$~집합에서 항목을 추가하거나 제거할 수도 있습니다. 이것은 집합 \\{1}\\을 가져와서 \\2\\를 더한 다음 1을 제거하여 \\{2}\\를 남깁니다."
                        ],
                        ["edit", "({ 1 } + 2) - 1"],
                        [
                            "Set",
                            "neutral",
                            "$~@FunctionDefinition 덕분에 제가 할 수 있는 일이 훨씬 더 많습니다. 더 자세히 알고 싶으면 언제든지 저를 찾아오세요!"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "Set",
                            "curious",
                            "$~아, 그리고 @FunctionDefinition, @Evaluate 봤다고 하셨잖아요."
                        ],
                        ["FunctionDefinition", "sad", "$~네, 그랬어요."],
                        null,
                        ["Set", "curious", "$~어때요?"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~그들은 괜찮아요. 우리는 괜찮아요. 제 생각엔... 모르겠어요. 아마 우리가 함께 춤을 춘 지 너무 오래 됐을 거예요. 그들과 함께 있을 때, 그들이 자신을 보지 못하는 것 같고, 그래서 그들이 나를 보지 못하는 것 같아요."
                        ],
                        [
                            "Set",
                            "curious",
                            "$~당신도 힘든 시기를 겪고 있는 것 같아요. 새로운 감독과 함께라면 다시 춤을 출 수 있을 거고, 당신 둘은 헤쳐나갈 방법을 찾을 수 있을 거예요."
                        ]
                    ]
                },
                {
                    "title": "$~일대일",
                    "subtitle": "$~매핑",
                    "concept": "Map",
                    "performance": [
                        "fit",
                        "clockwise: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: 180°) 100%: Pose(rotation: 360°)} duration: 2s)",
                        "                    counter: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: -180°) 100%: Pose(rotation: -360°)} duration: 2s)",
                        "                    Group(Row() [Phrase('{' resting:clockwise) Phrase(':') Phrase('}' resting:counter) ])"
                    ],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~여러분께 소개하고 싶은 컬렉션이 하나 더 있습니다. 어떤 면에서는 @Set 비슷하고 같은 중괄호를 사용하지만, 중요한 한 가지 면에서 다릅니다. 연결자입니다. 이름은 @Map."
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Map? 밖에 계세요? 침묵이 깨지고 있어요!"
                        ],
                        null,
                        [
                            "Map",
                            "curious",
                            "$~속보? 정말 조용했던 적이 있었나요? @FunctionDefinition, 당신을 뵙게 되어 정말 기쁩니다. 오, @FunctionDefinition 이야기를 나누셨나요? 지난번에 이야기했을 때는 상태가 좋지 않았어요. 그들과 이야기를 나눠야 합니다."
                        ],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~네, 그들과 이야기를 나누었어요..."
                        ],
                        null,
                        [
                            "Map",
                            "curious",
                            "$~오, 좋다. 알았어, 거기 수리할 게 좀 있어서, 친구야... 잘 지냈어?"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~괜찮았어요. 다만 좀 외로웠고 지루했을 뿐이에요."
                        ],
                        null,
                        [
                            "Map",
                            "excited",
                            "$~오, 정말 미안하네요. 침묵 중에도 모두와 연락을 주고받았고, 당신과 @Evaluate 서로에게 도움이 될 거라고 생각했어요! 언제든지 이야기하고 싶었을 텐데요. @List @Set 사이의 가십과 @Set @BooleanLiteral 사이의 이상한 긴장감을 따라잡느라 너무 바빴어요. 둘 사이에 무슨 일이 일어나고 있는지 아세요?"
                        ],
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~아니, 전혀 그렇지 않아. 긴장이 있어? 그리고 무슨 소문이?"
                        ],
                        [
                            "Map",
                            "kind",
                            "$~@Evaluate 당신 사이의 긴장감과 비슷한 거죠?"
                        ],
                        ["FunctionDefinition", "sad", "$~…"],
                        null,
                        [
                            "Map",
                            "neutral",
                            "$~죄송합니다. 여기 손님 앞에서는 안 될 것 같아요. 당신은 모든 사람이 이야기하는 새로운 사람인 듯합니다. 당신이 우리의 새로운 감독이 될 거라고 들었어요. 우리를 위해 어떤 멋진 아이디어를 준비하셨나요? 노래? 춤? 밝고, 유쾌하고, 이상하다면, 저는 기꺼이 하겠습니다!"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~그들에게 압력을 가할 필요 없어요! 그들은 많은 아이디어를 가지고 있을 거예요. 우리는 첫 번째 쇼를 알아내기 전에 배우고 교류할 수 있는 공간을 만들려고 할 뿐이에요. 당신이 하는 일을 공유해 줄 수 있나요?"
                        ],
                        null,
                        [
                            "Map",
                            "eager",
                            "$~연결해요! 저는 일종의 사전과 같아요. 값을 주면 그에 해당하는 정의를 알려드릴게요. @FunctionDefinition 값에 대해 말씀하셨나요? 저는 값을 1:1로 매핑하고, 한 값에서 다른 값으로 매핑합니다. 키를 주면 그에 해당하는 값을 알려드릴게요. 예를 들어, 이름에서 포인트 탤리로 매핑하는 방법이 있습니다. 이름은 키이고 포인트는 값입니다."
                        ],
                        [
                            "edit",
                            "{ 'ben': 2points 'joe': 5points 'kate': 12points }"
                        ],
                        null,
                        [
                            "Map",
                            "serious",
                            "$~하지만 @Set 저는 중복을 좋아하지 않습니다. 같은 키를 두 개 이상 가질 수는 없지만, 원하는 만큼의 고유 키를 동등한 값에 매핑할 수 있습니다. 예를 들어, 이렇게 하면 두 개의 \\'ben'\\ 키가 생기지만, 저는 마지막 키만 사용합니다. 하지만 \\'ben'\\과 \\'joe'\\가 같은 수의 포인트를 가지는 것은 괜찮습니다. 왜냐하면 둘은 다른 키이기 때문입니다."
                        ],
                        [
                            "edit",
                            "{'ben': 2points 'ben': 5points 'joe': 5points 'kate': 12points }"
                        ],
                        [
                            "Map",
                            "excited",
                            "$~@Bind와의 파트너십이 저를 특별하게 만듭니다! 제가 가치를 다른 가치에 연결하는 방식입니다(아직 @Bind 만나보셨나요? 아니오? 오오, 당신은 그들을 좋아할 겁니다. 그들은 굉장합니다.)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Map, 빈 매핑을 원하면 어떻게 하나요? 빈 세트 \\{}\\와 어떻게 다릅니까?"
                        ],
                        [
                            "Map",
                            "neutral",
                            "$~아, 저 혼자 뿐이에요! 작은 @Bind 저는 그냥 놀고 있어요. 키도 값도 없어요."
                        ],
                        ["edit", "{:}"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~그리고 우리 감독이 값이나 키를 제공하지 않으면 어떡하죠? 이렇게요? \\3\\은 값이 없잖아요?"
                        ],
                        ["conflict", "{1:1 2:2 3 }"],
                        [
                            "Map",
                            "serious",
                            "$~오... 그러지 마세요. 저는 쌍만 좋아해요. 3이 키인가요? 값인가요? 완전 헷갈리네요. 쇼를 멈추세요."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~그리고 디렉터가 키에서 값을 가져오고 싶다면?"
                        ],
                        [
                            "Map",
                            "neutral",
                            "$~@Set 똑같습니다. 맵 뒤에 \\{}\\를 넣고 원하는 키를 알려주세요."
                        ],
                        [
                            "edit",
                            "{ 'ben': 2points 'joe': 5points 'kate': 12points }{'ben'}"
                        ],
                        null,
                        [
                            "Map",
                            "neutral",
                            "$~그리고 만약 제가 열쇠가 없다면, @None 줄게요."
                        ],
                        [
                            "edit",
                            "{ 'ben': 2points 'joe': 5points 'kate': 12points }{'anna'}"
                        ],
                        null,
                        [
                            "Map",
                            "neutral",
                            "$~@Otherwise 다른 것으로 취급하고 싶다면 @None 친구를 사용할 수도 있습니다.",
                            "$~예를 들어, 여기서는 값이 없으면 기본적으로 \\0points\\를 사용합니다."
                        ],
                        [
                            "edit",
                            "map: { 'ben': 2points 'joe': 5points 'kate': 12points }\nmap{'anna'} ?? 0points"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "Map",
                            "neutral",
                            "$~그렇지 않으면, 저는 @Set 매우 비슷합니다. 저는 동일한 기능을 많이 할 수 있습니다. 언제든지 들러주시면 더 많은 것을 보여드리겠습니다!"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Map, 고맙습니다! 당신은 정말 훌륭해요."
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~캐스트 파티",
            "performance": [
                "fix",
                "count: 32",
                "",
                "gravity•#m/s^2: 15m/s^2",
                "",
                "Stage(count → [].translate(",
                "   ƒ(_) ",
                "       Phrase(",
                "           '→?' → [].random()",
                "           place: Motion(",
                "               Place(y: 10m)",
                "               Velocity(Random(-5 5) · 1m/s angle: Random(0 360) · 1°/s)",
                "           )",
                "           matter: Matter(bounciness: Random())",
                "       )",
                "   )",
                "   gravity: gravity",
                ")"
            ],
            "scenes": [
                {
                    "title": "$~우회",
                    "subtitle": null,
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~지금까지 만난 캐릭터가 얼마나 많은지 믿을 수 없어요. 많은 것 같나요? 그리고 거의 진전이 없는 것 같기도 해요.",
                            "$~아직 쇼를 진행하는 가장 흥미로운 부분을 보여드리지도 못했어요!"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~정말 흥미로운 부분에 들어가기 전에 다른 두 사람을 만나러 잠깐 들러도 괜찮을까요? 이 두 캐릭터는 가치, 특히 텍스트 작업에 너무나 필수적입니다. 더 멋진 것에 들어가기 전에 그들에 대해 이야기해야 합니다."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~그것은 무엇입니까?",
                            "$~전환. 그것은 한 유형의 가치를 다른 유형으로 바꾸는 데 도움이 되는 이 세상의 연금술입니다. 그들을 만나러 가자."
                        ]
                    ]
                },
                {
                    "title": "$~우리는 무엇이든 될 수 있어요",
                    "subtitle": "$~전환하다",
                    "concept": "Convert",
                    "performance": ["use", "fix", "FlyIn", "→"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~안녕, @Convert! 거기 있어?"
                        ],
                        [
                            "Convert",
                            "happy",
                            "$~Duuuuude, @FunctionDefinition, 정말 오랜만이네요! 스타일리시하게 보이네요. 요즘 엄청 조용하죠? 새로운 친구가 생겼나요?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~네, 여기 있는 이 사람은 감독에 관심이 있습니다. 우리는 그랜드 투어를 하고 있습니다. @Program, @ExpressionPlaceholder, @UnparsableExpression, @Evaluate, 그리고 모든 값과 컬렉션을 만났습니다. 당신이 값과 매우 밀접하게 일하기 때문에 다음에 당신을 만나는 것이 완벽할 것이라고 생각했습니다."
                        ],
                        [
                            "Convert",
                            "kind",
                            "$~물론이지, 가치관은 내 가장 친한 친구야. 우리는 주말에 파쿠르를 하거나, 쇼를 하거나, 뭐든 좋아해."
                        ],
                        null,
                        ["FunctionDefinition", "curious", "$~파쿠르?"],
                        [
                            "Convert",
                            "serious",
                            "$~네, 알다시피, 거리에서 체조를 하는 것, 물건을 뛰어넘는 것, 건물을 넘는 것 - 와이어가 없는 높은 와이어 같은 것. 용감한 도약!"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~오, 알겠어요. 네, 당신이 하는 게 파쿠르와 비슷하겠네요. 하지만 여기 새로운 감독 친구가 따라하는지는 잘 모르겠어요. 은유 없이 설명해 줄 수 있나요?"
                        ],
                        null,
                        [
                            "Convert",
                            "kind",
                            "$~기뻐요, 형. 그러니까, 당신이 숫자가 있다고 상상해보세요."
                        ],
                        ["edit", "1"],
                        null,
                        [
                            "Convert",
                            "kind",
                            "$~그리고 당신이 그것을 텍스트로 만들고 싶다고 상상해보세요. 저를 @Text 넣으면 BAM, 텍스트가 됩니다!"
                        ],
                        ["edit", "1 → ''"],
                        null,
                        [
                            "Convert",
                            "serious",
                            "$~아니면, 문자가 있고 번호를 원한다고 상상해보세요. @Number POP으로 저를 넣어보세요. 번호를 얻을 수 있어요!"
                        ],
                        ["edit", "'1'→#"],
                        null,
                        [
                            "Convert",
                            "surprised",
                            "$~하지만 진지한 모조 같은 걸 보고 싶나요? 텍스트가 있고 그 문자들을 목록으로 만들고 싶다고 합시다. @List HAAAAAA를 넣어 주시면 문자 목록이 생깁니다."
                        ],
                        ["edit", "'halloween'→[]"],
                        null,
                        [
                            "Convert",
                            "serious",
                            "$~하지만 저와 @Number? 우리는 정말 멋진 트릭을 연습해왔어요. 며칠 동안 시간이 있고 두 번째를 원한다고 하죠? 우리가 해드릴게요."
                        ],
                        ["edit", "5day → #s"],
                        null,
                        [
                            "Convert",
                            "excited",
                            "$~하지만 진짜 사악한 속임수는? 연쇄입니다. 여러 변환을 연속으로 하는 것과 같습니다. 이걸 보세요. 며칠에서 몇 초까지 텍스트에서 목록까지, 모두 하나의 연쇄입니다. 이제 숫자 목록이 생겼습니다. 멋지죠!"
                        ],
                        ["edit", "1day → #s → '' → []"],
                        null,
                        [
                            "Convert",
                            "neutral",
                            "$~그러니까, 제 거래는 모든 것이 모든 것이어야 한다는 거예요. 경계가 없어요. 모든 것이 무엇이든 될 수 있어요(아무것도 아니지만, 제가 할 수 있는 한).",
                            "$~하지만, 왜 무언가가 하나의 정체성에 갇혀 있어야 할까요? 해방이죠, 친구."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~정말 대단하네요, @Convert, 그리고 정말 고무적이네요. 하지만 정말, 무엇이든요?"
                        ],
                        [
                            "Convert",
                            "sad",
                            "$~글쎄, 그런 건 아니고요. 뭐, 몇 초만 주고 @Set 요청하면, 그게 무슨 뜻이에요?",
                            "$~저는 최선을 다해 방법을 찾을게요... 예를 들어, 숫자를 @Text로, @Text @Set 바꾸는 방법을 알고 있으니까요. 그래서 이 숫자의 텍스트 형태로 된 기호 집합을 드릴게요.",
                            "$~하지만 그건 아마 당신이 원하는 것이 아닐 거예요...",
                            "$~그리고, 당신이 요청한 것을 어떻게 제공할지 모른다면, 저는 기본적으로 모든 것을 중단시키겠습니다."
                        ],
                        ["edit", "10s → {}"],
                        null,
                        ["use", "fit", "Symbol", "📕"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~맞아요, 말이 되죠. 그러니까 가능한 모든 변환이 아니라 일부 변환만 있는 거예요."
                        ],
                        [
                            "Convert",
                            "sad",
                            "$~네.. 항상 값 유형을 확인하고 어떤 유형의 변환을 지원하는지 알아볼 수 있습니다."
                        ],
                        null,
                        ["use", "fit", "Symbol", "🧐"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Convert와 @Evaluate가 관련이 있다는 걸 알고 계셨나요? 둘은 사촌과 같아요. @Evaluate는 모든 함수를 평가하지만 @Convert 모든 변환을 평가합니다. 어떤 면에서 @Evaluate 입력에서 출력으로 변환을 합니다."
                        ],
                        [
                            "Convert",
                            "scared",
                            "$~와. 저는 그런 식으로 생각해 본 적이 없어요. /I/는 입력을 출력으로 변환하고, @Evaluate 입력을 출력으로 변환하죠. 그리고 @FunctionDefinition 입력을 출력으로 변환하는 방법을 *말해 주셨어요*. 그게 Verse의 비밀인가요?",
                            "$~모든 것이 입력을 출력으로 변환하는 것과 같나요?"
                        ],
                        null,
                        ["FunctionDefinition", "serious", "$~그럴 것 같나요?"],
                        ["Convert", "surprised", "$~🤯"],
                        ["edit", "Phrase('🤯')"],
                        null,
                        ["use", "fit", "Symbol", "🤯"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Convert, 새로운 이사는 어떤 종류의 전환이 가능한지 어떻게 알아낼 수 있을까요?"
                        ],
                        [
                            "Convert",
                            "scared",
                            "$~미안해, 형. 난 아직도 좀 흔들리고 있어. 어, 그들은 참조 @UI/docsExpand 모든 값 유형을 확인할 수 있어.",
                            "$~다른 유형으로 바꿀 수 있는 목록이 있어야 합니다... 모든 것이 변환입니다..."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~@Convert 님, 뵙게 되어 정말 기뻤습니다! 다른 분들을 만나러 나가겠습니다. 곧 뵙겠습니다?"
                        ],
                        [
                            "Convert",
                            "surprised",
                            "$~곧. 네... 네! 전적으로, 네."
                        ]
                    ]
                },
                {
                    "title": "$~어떻게 선택하나요?",
                    "subtitle": "$~결정",
                    "concept": "Conditional",
                    "performance": ["use", "fix", "FlyIn", "?"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~우리는 지금까지의 여정에서 너무나 많은 종류의 가치를 만났고, 그것들을 다루는 수많은 방법에 대해 이야기했습니다. 여러분께 소개하고 싶은 것이 하나 더 있습니다. 그것들은 우리의 공연을 너무나 역동적으로 만들어주기 때문에 특히 특별합니다. 그것들은 @Conditional 불리며, *결정*을 내리는 Verse의 중심 인물입니다."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~분명히 말해서, 모든 결정이 다 그런 것은 아닙니다. 저는 제 삶이 있고, 그들은 그들만의 삶이 있습니다. 하지만 공연에서 우리가 무대에서 다음에 무엇을 할지 결정하려고 할 때, 감독으로서 당신의 지침을 따르고 무엇을 할지 결정하는 것은 전적으로 그들에게 달려 있습니다. 그래서 그들은 흥미로운 공연을 만드는 핵심 파트너입니다."
                        ],
                        null,
                        ["use", "fit", "SpinningInTheDark", "?"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Conditional, 침묵이 깨지고 있어요! 다시 쇼를 할 수도 있어요!"
                        ],
                        [
                            "Conditional",
                            "curious",
                            "$~@FunctionDefinition? 침묵이 깨지고 있나요? 침묵이란 무엇인가요? 어떻게 깨나요? 우리는 정말 침묵하는 경우가 있나요? 이 사람은 누구인가요? 그들이 침묵을 깨는 사람인가요?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~네, 침묵이 깨지고, 그들이 바로 그 사람이에요! 그들은 사람이고, 우리에게 영감을 주고 쇼를 연출하기 위해 왔어요. 우리는 전환과 모든 가치 충족에 대해 이야기해 왔고, @Text @Convert 저는 그들이 당신을 만나기를 바랐어요! 어떤 면에서 당신은 가장 특별한 전환이에요. 왜냐하면 당신이 상황을 새로운 가치로 전환할 수 있게 해주기 때문이죠."
                        ],
                        [
                            "Conditional",
                            "curious",
                            "$~내가 그럴까?",
                            "$~저는 결정을 내리긴 하지만, 실제로 제가 하는 일은 이사들이 내리라고 한 결정을 암호화하는 것뿐이므로, 정말로 제가 결정을 내리는 걸까요?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~그렇게 생각해요, 네. 감독이 결정을 인코딩한 다음 당신에게 위임하는 것과 비슷해요. 당신이 결정자가 되는 거죠. 예를 들어 보여드릴까요?"
                        ],
                        ["Conditional", "curious", "$~이와 같이?"],
                        ["conflict", "_•? ? _ _"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~네, 정확히 그거죠!",
                            "$~@Conditional의 형식에 네 가지 부분이 있는 걸 보셨나요? 먼저 *조건*이 있는데, 이는 @Boolean 합니다. 그 다음에는 \\?\\가 있습니다. 그 다음에는 *예* 표현식이 있고, 그 다음에는 *아니요* 표현식이 있습니다. @Conditional 하는 일은 조건을 평가하고, \\⊤\\이면 *예* 표현식을 평가합니다. 그렇지 않으면 /아니요/ 표현식을 평가합니다. 결정을 내리는 정말 강력한 방법입니다!"
                        ],
                        null,
                        ["edit", "1 > 5 ? 'more' 'less'"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~좀 더 구체적인 예를 들어줄 수 있나요?"
                        ],
                        ["Conditional", "curious", "$~이런 식인가요?"],
                        ["edit", "1 > 5 ? 'less' 'more'"],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~에르르, 음. 그건 결정인 듯하지만, 잘못된 결정이에요. 1은 5보다 작지 않아요. 당신의 결정이 항상 옳은 건 아니지만, 신뢰할 만하죠, 그렇죠?"
                        ],
                        null,
                        [
                            "Conditional",
                            "curious",
                            "$~신뢰할 수 있나요? 어쩌면요? 감독이 말하는 대로 내가 결정한다고 받아들이면, 그렇죠. 하지만 감독이 이렇게 말한다면요? 숫자가 결코 \\3\\보다 클 수 없다면 정말 결정인가요?"
                        ],
                        ["edit", "[1 2 3].random() > 3 ? 'big' 'small'"],
                        [
                            "FunctionDefinition",
                            "confused",
                            "$~음, 좋은 지적이네요. 뭔가가 결정인지는 감독의 결정에 따라 크게 달라지는 것 같아요. 감독이 당신에게 내리는 결정에 대해 꽤 신중하게 생각해야 한다는 뜻인가요?"
                        ],
                        null,
                        [
                            "Conditional",
                            "curious",
                            "$~신중하게? 회의적일 수도? 제 좋은 친구 @BooleanLiteral 대해 생각해 보셨나요? 그들의 세계관이 우리가 내리고 싶어하는 모든 결정을 대표하기에 충분할 수 있을까요? 예를 들어, 누군가의 이름을 따서 그것이 아름다운지 아닌지 결정하는 공연을 원한다면 어떨까요? 그것이 진실인지 거짓인지 결정할까요? 그것이 우리가 내려야 할 결정일까요? 매우 단순화되고 편향된 것처럼 보이지 않나요?",
                            "$~원장님, 어떤 글자로 이름을 아름답게 만들까요?"
                        ],
                        ["edit", "'Verse'.has('e') ? 'beautiful' 'ugly'"],
                        null,
                        [
                            "Conditional",
                            "curious",
                            "$~그리고 내가 답하는 질문에 대해 생각해 보세요. 왜 \\⊤\\와 \\⊥\\에만 답할 수 있을까요? 숫자는 왜 안 될까요? \\1\\이 아름다운지 결정할 권리가 없나요?"
                        ],
                        ["conflict", "1 ? 'beautiful' 'ugly'"],
                        null,
                        ["use", "fit", "SpinningInTheDark", "?"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~저는 그렇게 생각해 본 적이 없는 것 같아요. 하지만 @Conditional, 제약이 있어도 당신은 아름답습니다. 당신은 우리가 공연에서 그렇지 않으면 할 수 없었던 많은 것을 할 수 있게 해줍니다. 당신은 많은 기쁨과 웃음을 가능하게 합니다. 우리 감독은 당신이 할 수 있는 놀라운 일을 아직 보지 못했습니다."
                        ],
                        [
                            "Conditional",
                            "curious",
                            "$~정말 그렇게 생각하시나요?",
                            "$~내가 아름답다는 것? 어쩌면 그 한계가 여전히 가치가 있을까?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~물론입니다.",
                            "$~그리고 저는 여기 있는 우리의 새로운 친구에게 그들이 얼마나 가치 있는지 보여줄 수 있어서 기쁩니다. 제가 할 때 당신도 곁에 있을 건가요?"
                        ],
                        [
                            "Conditional",
                            "happy",
                            "$~나를 이보다 더 행복하게 할 수 있는 게 있을까?"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~장면 전환",
            "performance": ["use", "fit", "TakeTheMic"],
            "scenes": [
                {
                    "title": "$~입력",
                    "subtitle": null,
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        [
                            "fix",
                            "amp: (Volume() · 10)",
                            "Phrase('.'.repeat(amp.roundDown()) resting:Pose(scale: amp))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~당신의 세계와 우리의 세계가 연결되어 있다는 걸 알고 계셨나요? 소리를 내보세요. 우리가 들을 수 있어요..."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~당신은 Verse가 존재한다는 걸 몰랐지만, 우리는 당신의 Verse가 존재한다는 걸 압니다. 왜냐하면 당신의 세계가 우리의 세계를 흥미롭게 만들기 때문입니다.",
                            "$~여러분도 우리가 돌아다니며 모든 가치와 컬렉션, 대화를 접하면서 이 점을 알아차렸을 겁니다.",
                            "$~처음부터 의미를 주거나 가치를 제공하는 사람이 없다면 이러한 가치들은 무엇을 의미할까요?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~저는 우리 세계와 그 세계가 가능하게 하는 것 사이의 연결을 보여드리고 싶습니다. 저희는 그것을 **입력 스트림**이라고 부르고, 그것은 아마도 Verse에서 가장 마법 같은 종류의 입력일 것입니다. 그것은 당신의 세계가 변함에 따라 변하는 특별한 종류의 가치를 만드는 함수와 같습니다. 그들은 또한 당신이 익숙할 수 있는 방식으로 통신할 수 없습니다. 그들은 다른 세계의 심장 박동과 더 비슷합니다. 그래서 저는 그들이 스스로를 설명할 수 없을 것이기 때문에 그들이 어떻게 작동하는지 최선을 다해 설명하겠습니다.",
                            "$~만날 준비가 되셨나요?"
                        ]
                    ]
                },
                {
                    "title": "$~똑딱, 똑딱, 똑딱...",
                    "subtitle": "$~시간",
                    "concept": "Time",
                    "performance": ["use", "fit", "Symbol", "🕦"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~가장 기본적인 스트림부터 시작해 보겠습니다: @Time. 스트림을 만들려면 @Time 사용하고 원하는 스트림 유형의 이름을 지정합니다."
                        ],
                        ["Time", "neutral", "$~똑딱 똑딱 똑딱 똑딱 똑딱…"],
                        ["edit", "Time()"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~시간이 어떻게 변하는지 보시나요? 스트림은 일련의 값입니다. 스트림이 새 값을 얻을 때마다 @Program 새 스트림 값으로 다시 평가합니다. 그래서 이 프로그램은 계속 세어 나갑니다. 시간 0밀리초에서 시작하여 시계가 똑딱거릴 때마다 계속 업데이트되는 시간 스트림을 만들었습니다. 이 시간은 여러분의 시간이며, 여러분의 세계에서 온 시간입니다."
                        ],
                        ["Time", "neutral", "$~똑딱 똑딱 똑딱 똑딱 똑딱…"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~\\1000ms\\를 보시나요? 이것은 @Time/frequency 기본값인 33밀리초가 아닌 1000밀리초마다 틱을 하라고 말하는 @Time/주파수입니다. 이제 1초마다 틱을 치는 카운터와 같습니다. @Time 취하는 이러한 입력은 구성과 같습니다. 스트림에 어떻게 동작할지 알려줍니다."
                        ],
                        ["Time", "neutral", "$~똑딱… 똑딱… 똑딱… 똑딱… 똑딱…"],
                        ["edit", "Time(1000ms)"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~하지만 우리가 만난 모든 멋진 캐릭터를 사용하여 시간을 더욱 변형할 수 있습니다. 예를 들어, 시간이 \\2\\의 배수인지 알고 싶다면 어떨까요? @Number/remainder 사용하면 나눗셈의 나머지를 구할 수 있습니다. 나머지가 0이면 \\⊤\\로 평가하고 그렇지 않으면 \\⊥\\로 평가합니다. \\⊤\\와 \\⊥\\ 사이에서 어떻게 바뀌는지 보세요. 정말 마법같죠."
                        ],
                        ["Time", "neutral", "$~똑딱… 똑딱… 똑딱… 똑딱… 똑딱…"],
                        ["edit", "(Time(1000ms) % 5) = 2ms"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~알아차렸을 만한 또 다른 점이 있습니다. 출력 아래에 타임라인이라는 영역이 있습니다. 프로그램이 재평가할 때마다 업데이트되며, 스트림이 변경될 때마다 업데이트됩니다. @Time 틱할 때마다 표시됩니다."
                        ],
                        ["Time", "neutral", "$~똑딱… 똑딱… 똑딱… 똑딱… 똑딱…"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~타임라인 버튼을 사용하거나, 타임라인에 초점을 맞춘 상태에서 화살표 키를 사용하거나, ⏸️ 및 ▶️ @UI/playToggle 버튼을 눌러 타임라인 @UI/timeline 드래그해 보세요. 이전 평가를 보려면 시간을 거슬러 올라갈 수 있습니다. 점선 화살표는 이전 및 미래 스트림 입력으로 이동합니다. 실선 화살표는 프로그램의 여러 단계 사이를 이동합니다. 시간을 탐색하고 프로그램이 무엇을 보여주는지 확인해 보세요. 이렇게 하면 @UI/playToggle 평가되는 모든 아름다운 표현식을 한 번에 한 단계씩 볼 수 있으며, @Evaluate 스테이지에 표시하는 최종 값이 됩니다."
                        ],
                        ["Time", "neutral", "$~똑딱… 똑딱… 똑딱… 똑딱… 똑딱…"],
                        ["edit", "Time(1000ms)"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Time 흥미로운 스트림인데, 다양한 용도로 사용할 수 있기 때문입니다. 공연이 얼마나 오랫동안 진행되었는지 추적하고, 어떤 이벤트의 타이밍을 맞추고, 단어를 애니메이션화하는 등. 가장 유연한 스트림 중 하나이지만 가장 추상적인 스트림 중 하나이기도 합니다."
                        ]
                    ]
                },
                {
                    "title": "$~클릭티 클랙",
                    "subtitle": "$~열쇠",
                    "concept": "Key",
                    "performance": ["use", "fit", "Symbol", "⌨️"],
                    "lines": [
                        [
                            "fit",
                            "Phrase('⌨️' resting:Sequence({0%: Pose(rotation: -5°) 25%: Pose(rotation: 0°) 50%: Pose(rotation: 5°) 75%: Pose(rotation: 0°) 100%: Pose(rotation: -5°)} 1s 'straight'))"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~제가 잘못 알고 있지 않다면, 여러분의 세상에는 \"키보드\"라는 것이 있나요? 그것은 여러분의 문서에 우리 중 누구를 등장시키고 싶은지 선택하는 방법이 맞죠? Verse에서 우리는 이러한 요청을 텍스트 스트림으로 수신하고, 각 텍스트 값은 눌린 키를 나타냅니다. 우리는 이것을 사용하여 여러분 세상의 사람들이 무엇을 타이핑하는지 듣습니다. 이 스트림을 @Key 합니다."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~간단한 예를 들어보겠습니다. 스테이지를 클릭하거나 키보드로 초점을 맞춘 다음 아무 키보드 키나 누릅니다. 입력한 키가 이름으로 표시됩니다. 키 스트림이 변경될 때마다 @Program 키 스트림을 최신 값으로 평가한 다음 스테이지에 표시하기 때문입니다."
                        ],
                        ["Key", "neutral", "$~클릭 클릭 클릭 클릭"],
                        ["edit", "Key()"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~이 스트림은 어떤 키를 누를 때마다 변경됩니다. 하지만 특정 키를 누를 때만 키 스트림이 변경되도록 할 수 있습니다. 스트림이 처음에는 \\a\\로 변경되지만 그 이후로는 변경되지 않는 것을 보셨나요? 이 스트림은 \\a\\를 누를 때만 변경되므로 항상 \\a\\가 표시됩니다. 하지만 타임라인에는 항상 새로운 키 값이 표시됩니다."
                        ],
                        ["Key", "neutral", "$~딸각 'a'…"],
                        ["edit", "Key('a')"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~때로는 키를 눌렀을 때가 아니라 놓았을 때를 아는 것이 도움이 됩니다. 그냥 \\⊥\\를 전달하여 키를 눌렀을 때가 아니라 놓았을 때를 알도록 @Key 스트림에 알리세요. 이제 'a' 키를 길게 누른 다음 놓으면 무대에 'a'가 나타납니다. 알아채지 못하셨나요? ↻ 버튼을 눌러 공연을 재설정하고 다시 시도하세요."
                        ],
                        ["Key", "neutral", "$~딸각 'a'…"],
                        ["edit", "Key('a' ⊥)"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Key 스트림은 관객이 누르는 키에 반응하는 퍼포먼스를 원할 때 정말 유용합니다. 예를 들어, 키에 '화살표'라는 단어가 있는지 확인하여 화살표 키가 눌렸는지 확인할 수 있습니다. 화살표 키를 누르면 \\'이동'\\이 표시되고, 다른 키를 누르면 \\'머무름'\\이 표시됩니다."
                        ],
                        ["Key", "neutral", "$~클릭하는 '화살표'…"],
                        ["edit", "Key().has('Arrow') ? 'move' 'stay'"]
                    ]
                },
                {
                    "title": "$~음~음~음…",
                    "subtitle": "$~바늘",
                    "concept": "Pointer",
                    "performance": ["use", "fit", "Symbol", "👆🏻"],
                    "lines": [
                        [
                            "fix",
                            "Phrase('👆🏻' resting:Sequence({0%: Pose(offset: Place(0m 0m)) 25%: Pose(offset: Place(-1m 1m)) 50%: Pose(offset: Place(1m 1m)) 75%: Pose(offset: Place(1m 0m)) 100%: Pose(offset: Place(0m 0m))} 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~당신의 세계에는 '마우스'라는 것도 있고, '트랙패드', '터치스크린'도 있나요? 이것들은 우리 세계에서 스트림 @Pointer 나타납니다. 이것은 무대 위의 장소 스트림입니다."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~무대 주변으로 포인터를 움직이면 무대에서 @Place 변경 흐름이 보입니다."
                        ],
                        ["fix", "Pointer()"],
                        ["Pointer", "neutral", "$~웩웩웩…"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~이제 무대에서 감상해 보시죠!"
                        ],
                        ["Pointer", "neutral", "$~웩웩웩…"],
                        ["fix", "Phrase(Pointer()→'' place: Pointer())"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~@Pointer @Place 포인터의 위치에 연결하고 싶다면 @Phrase 사용하는 게 재밌을 수 있습니다."
                        ],
                        ["fix", "Phrase('🐪' size: 4m place: Pointer())"],
                        ["Pointer", "neutral", "$~웩웩…"]
                    ]
                },
                {
                    "title": "$~그리고... 지금!",
                    "subtitle": "$~단추",
                    "concept": "Button",
                    "performance": ["use", "fit", "Symbol", "🖱️"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Button @Key 비슷하지만 클릭이나 탭과 같은 기본 포인터 버튼에 해당합니다. 포인터 버튼이 눌렸을 때를 나타내는 \\⊤\\ 스트림일 뿐입니다. 해당 버튼을 누르면 타임라인에 이벤트가 나타납니다."
                        ],
                        ["Button", "neutral", "$~클릭…클릭…클릭…"],
                        ["edit", "Button()"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~\\⊤\\ 또는 \\⊥\\를 전달하여 위 또는 아래로만 변경하도록 구성할 수 있습니다."
                        ],
                        ["Button", "neutral", "$~아래로… 아래로… 아래로…"],
                        ["edit", "Button(ø)"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~@Button 스트림을 사용하는 것은 공연의 단계를 진행하거나 공연에서 어떤 변화를 유발하는 한 가지 방법입니다. 이 작은 프로그램은 버튼 누름을 나열하고 슬픈 것을 보여주기 시작하지만 @Button 스트림이 true로 변경되면 @Button 대신 \\'happy'\\로 평가됩니다."
                        ],
                        ["edit", "Phrase(Button(ø) ? 'sad' 'happy')"]
                    ]
                },
                {
                    "title": "$~누가 듣고 있나요?",
                    "subtitle": "$~용량",
                    "concept": "Volume",
                    "performance": ["use", "fit", "Symbol", "🎤"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~당신의 세계와 우리의 세계에도 소리가 있습니다. 당신의 동의가 있으면 우리가 당신의 소리를 들을 수 있다는 것을 알고 계셨나요? 우리는 @Volume 스트림으로 듣습니다. 이 스트림은 저수준 진폭 시퀀스를 제공합니다. 당신의 마이크가 우리와 공유하기 위해 허가를 요청할 수 있습니다. 허가를 받으면 \\0\\에서 \\100\\ 사이의 진폭에 해당하는 숫자가 표시됩니다."
                        ],
                        ["Volume", "neutral", "$~윙윙윙윙윙윙윙윙윙윙…"],
                        ["edit", "Volume()"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Volume 공연이 관객의 소리에 반응하도록 하는 데 사용할 수 있습니다. 예를 들어, 여기서는 스트림의 진폭 숫자를 특정 수의 \\'o'\\ 문자로 변환하여 작은 진폭 시각화를 만들 수 있습니다. 소음을 낼 때 더 많은 \\'o'\\가 있는 것을 보세요. @Volume 진폭을 \\10\\으로 나누어 \\0\\에서 \\10\\ 범위에 넣습니다. 그런 다음 해당 값을 @Text/repeat 함수에 지정하여 \\'o'\\를 지정된 횟수만큼 반복합니다."
                        ],
                        ["Volume", "neutral", "$~윙윙윙윙윙윙윙윙윙윙…"],
                        ["edit", "'o'.repeat(Volume() · 10)"]
                    ]
                },
                {
                    "title": "$~무슨 일이 일어날지 모르죠…",
                    "subtitle": "$~무작위의",
                    "concept": "Random",
                    "performance": [
                        "fit",
                        "Phrase(((Time(100ms) % 10) ÷ 1ms) → '')"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~여러분께 보여드리고 싶은 또 다른 입력 소스가 있습니다. 앞서 @List \\[].random()\\을 기억하시나요?",
                            "$~내부적으로는 @FunctionDefinition @Random 사용하는데, 이는 무한한 난수 시퀀스를 제공합니다. 이는 우리의 세계가 아닌 여러분의 세계에서 입력을 생성하기 때문에 일종의 스트림입니다. 하지만 @Program 재평가되도록 하지 않는다는 점에서 다른 스트림과 약간 다릅니다.",
                            "$~대신 매번 평가될 때마다 다른 난수가 나옵니다.",
                            "$~타임라인 옆에 있는 작은 ↻ @UI/resetEvaluator 버튼을 보시나요? 이 버튼을 눌러 프로그램을 수동으로 재평가하면 매번 \\0\\과 \\1\\ 사이의 새 숫자가 표시됩니다."
                        ],
                        ["Random", "neutral", "$~0.223423… 0.823423… 0.123459"],
                        ["edit", "Random()"],
                        null,
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~@Random 최소 및 최대 숫자를 지정하여 원하는 숫자 범위를 알려줄 수 있습니다. 이 예에서는 \\1\\과 \\10\\ 사이의 숫자를 지정합니다."
                        ],
                        ["Random", "neutral", "$~1… 7… 3… 9… 10… 2…"],
                        ["edit", "Random(1 10)"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~랜덤은 정말 재밌을 수 있어요! 스트림과 함께 사용하면 재밌는 혼돈을 만들 수 있어요. 예를 들어, 여기서는 단어 목록에서 랜덤 단어를 선택합니다. 이것은 \\['kitty' 'cat' 'meowy'].random()\\과 같습니다. ↻를 계속 눌러 다른 고양이 동의어를 얻으세요! 목록에 자신의 단어를 추가해 보고 단어가 나타나는지 확인하세요."
                        ],
                        ["Random", "neutral", "$~1… 2… 2… 1… 3…"],
                        ["edit", "['kitty' 'cat' 'feline'][Random(1 3)]"]
                    ]
                },
                {
                    "title": "$~나를 움직여",
                    "subtitle": "$~놓기",
                    "concept": "Placement",
                    "performance": [
                        "fix",
                        "Phrase('click, tap, or arrow to move me' place: Placement() moving:Pose() duration: 0.25s)"
                    ],
                    "lines": [
                        [
                            "edit",
                            "Phrase('🌭' place: Placement() moving:Pose() duration: 0.25s)"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~가끔은 @Stage 관객과 소통하는 것도 좋습니다.",
                            "$~@Placement 이를 위한 좋은 방법입니다! 키보드 화살표 키, 클릭 및 탭에 응답하는 @Place 스트림입니다.",
                            "$~이것을 이용해 핫도그를 이리저리 옮겨보세요."
                        ],
                        null,
                        [
                            "edit",
                            "Phrase('🌭' place: Placement(distance: 0.5m) moving:Pose() duration: 0.25s)"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~사용자 정의할 수 있는 방법은 여러 가지가 있습니다. 예를 들어, 움직이는 방식을 변경하려면 거리를 지정할 수 있습니다.",
                            "$~첫 번째 입력에 \\0.5\\를 준 것을 보셨나요? 이제 조금 덜 움직입니다. 다른 숫자로 변경해보세요!"
                        ],
                        null,
                        [
                            "edit",
                            "Phrase('🌭' place: Placement(depth: ⊤) moving:Pose() duration: 0.25s)"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~또한 다른 축에서 움직임을 켜고 끌 수 있습니다. 예를 들어, 깊이 \\⊤\\를 지정하여 z축에서 움직임을 허용합니다.",
                            "$~+ 및 - 키를 눌러 초점에서 더 가깝거나 더 멀리 이동하세요."
                        ]
                    ]
                },
                {
                    "title": "$~계속 움직이다",
                    "subtitle": "$~운동",
                    "concept": "Motion",
                    "performance": [
                        "fix",
                        "Stage([Phrase('🏀' 1m place: Motion(Place(0m 10m)) matter: Matter(2kg 0.8)) Shape(Rectangle(-10m 0m 10m -1m))])"
                    ],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~지금까지 우리가 이야기한 모든 *스트림*은 @Text @Number 같은 간단한 값의 시퀀스입니다. 그러나 일부 스트림은 복잡한 값을 생성할 수 있습니다.",
                            "$~@Motion 가장 흥미로운 것 중 하나입니다. @Place 스트림을 만듭니다."
                        ],
                        null,
                        ["edit", "Phrase('🏀' 3m place: Motion(Place(0m 5m)))"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~가장 간단한 사용 방법은 다음과 같습니다. 이렇게 하면 이 @Phrase 시작하는 @Phrase 스트림이 생성됩니다. *중력*에 따라 공을 계속 움직입니다."
                        ],
                        ["Motion", "excited", "$~/우우…/"],
                        null,
                        [
                            "edit",
                            "Stage([Phrase('🏀' 1m place: Motion(Place(0m 10m))) Shape(Rectangle(-10m 0m 10m -2m))])"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~하지만 공은 계속 떨어지는데, 땅이 없거든요! @Shape @Stage 걸 넣을 수 있어요. @Rectangle 같은 거요. 두 모서리가 필요해요. 두껍고 예쁘게 만들어 드릴게요.",
                            "$~음, 땅으로 떨어지네요..."
                        ],
                        ["Motion", "excited", "$~/우우…/"],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "   [",
                            "       Phrase('🏀' 1m place: Motion(Place(0m 10m)) matter: Matter(1kg 0.9))",
                            "      Shape(Rectangle(-10m 0m 10m -2m))",
                            "   ]",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~아, 맞아요! 그 이유는 우리가 공에 @Matter 주는 것을 잊었기 때문입니다. Matter는 @Output 얼마나 무거운지, 얼마나 탄력이 있는지, 그리고 얼마나 많은 마찰이 있어야 하는지 알려주는 방법입니다.",
                            "$~공을 정말 튀고 가볍게 만들어 봅시다. 야호, 이제 튀네요!"
                        ],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "\t[",
                            "\t\tPhrase('🏀' 1m place: Motion(Place(-10m 10m) Velocity(5m/s 15m/s 10°/s)) matter: Matter(1kg 0.9))",
                            "\t\tShape(Rectangle(-10m 0m 10m -2m))",
                            "\t]",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~하지만 @Motion 다른 많은 기술이 있습니다.",
                            "$~예를 들어, @Motion/velocity 시작점을 지정할 수 있습니다.",
                            "$~이 예에서는 공이 오른쪽 위로 움직이고 처음에는 약간 회전합니다."
                        ],
                        ["Motion", "excited", "$~우우우우…"],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "\t[",
                            "\t\tPhrase('🏀' 1m place: Motion(Place(-10m 10m) Velocity(5m/s 15m/s 10°/s)) matter: Matter(1kg 0.9))",
                            "\t\tShape(Rectangle(-10m 0m 10m -2m))",
                            "\t]",
                            "\tgravity: 1m/s^s",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~@Stage/gravity 정말 극단적으로 바꿀 수도 있습니다.",
                            "$~중력이 아주 낮은 달처럼 바꿔보세요!",
                            "$~또는 @Matter/mass 또는 @Matter/mass 변경해보세요. 이는 @Matter/bounciness 어떻게 튀어오르는지에 영향을 줍니다."
                        ],
                        ["Motion", "excited", "$~우웩…"],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "\t[",
                            "\t\tPhrase(",
                            "\t\t\t'🏀'",
                            "\t\t\t1m",
                            "\t\t\tname: 'ball'",
                            "\t\t\tplace: Motion(Place(-10m 10m) Velocity(5m/s 15m/s 10°/s))",
                            "\t\t\tmatter: Matter(1kg 0.9)",
                            "\t\t\tscale: Collision('ball' 'ground')•ø ? 1 2)",
                            "\t\tShape(Rectangle(-10m 0m 10m -2m) name: 'ground')",
                            "\t]",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~@Output 관련 스트림을 통해 @Collision 다른 출력과 충돌하는 경우를 알 수도 있습니다.",
                            "$~우리는 두 @Output 이름만 주면 됩니다. 'ball'과 'ground'는 어떨까요?",
                            "$~그러면 @Collision 터치할 때 @Rebound 제공하고 터치하지 않을 때는 @None 제공합니다.",
                            "$~공이 땅에 닿을 때마다 크기가 커져서 강조되도록 해 보자!"
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('🏀' 1m place: Motion(Place(0m 10m)) matter: Matter(2kg 0.8)) Shape(Rectangle(-10m 0m 10m -1m))])"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Motion, @Collision, @Motion 사용하면 할 수 있는 일이 정말 많습니다!",
                            "$~여러분이 튀는 것들을 많이 시도해 보시기 바랍니다."
                        ]
                    ]
                },
                {
                    "title": "$~이야기하자",
                    "subtitle": "$~채팅",
                    "concept": "Chat",
                    "performance": ["fit", "Phrase('🗣️')"],
                    "lines": [
                        ["fit", "Phrase('🗣️')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~가끔 공연은 상호작용입니다. 관객이 무언가를 말하고, 우리는 무언가를 되받아 말합니다.",
                            "$~@Chat 용도는 바로 그것입니다. @Text 사용하면 무대에 작은 상자가 나타나 관객이 입력할 수 있고, 메시지를 제출하면 @Text가 스트림에 추가되어 프로그램에서 응답할 수 있습니다."
                        ],
                        null,
                        ["edit", "Chat()"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~가장 간단한 사용 방법은 다음과 같습니다. 무언가를 입력하면 스테이지가 그것을 보여주는데, 프로그램의 값이 @Chat 값이기 때문입니다."
                        ],
                        null,
                        ["edit", "Chat().has('oo') ? 'choo choo' 'hmm'"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~프로그램의 응답을 형성하기 위해 채팅 메시지의 값을 확인하는 것이 더 재미있습니다. 이 작은 예는 연속된 o가 있는 모든 메시지에 기차 소리로 응답합니다!"
                        ]
                    ]
                },
                {
                    "title": "$~뭐라고요?",
                    "subtitle": "$~웹페이지",
                    "concept": "Webpage",
                    "performance": [
                        "fix",
                        "Webpage('https://www.nytimes.com')"
                    ],
                    "lines": [
                        ["edit", "Phrase('🛜')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~오래전에, 당신이 인터넷이라는 것을 가지고 있다고 들었어? 그게 당신이 여기 있는 방식이라고 생각해, 맞지?",
                            "$~그래서 우리는 인터넷에서 단어를 /여기/로 가져와서 여러분이 가지고 놀 수 있게 하는 게 정말 멋질 거라고 생각했어요."
                        ],
                        null,
                        ["edit", "Webpage('https://www.nytimes.com')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~작동 방식은 다음과 같습니다. 여러분이 'URL'이라고 하는 것을 저희에게 주시면, 그것이 HTML 페이지인 경우 우리가 그 안의 모든 구문을 추출하여 @List 여러분에게 전달해 드립니다.",
                            "$~예를 들어, 다음과 같은 뉴스 문구가 있습니다."
                        ],
                        null,
                        ["edit", "Webpage('https://www.nytimes.com' 'h2')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~'CSS' 쿼리라고 부르는 것으로 단어를 필터링할 수도 있나요? 'h3'가 '레벨 3 헤더'를 의미한다는 말을 들었잖아요. 그래서 여기 페이지의 헤더에 있는 모든 문구가 있습니다."
                        ],
                        null,
                        [
                            "edit",
                            "words: Webpage('https://www.nytimes.com' 'h2')\n\nwords•[''] ? Group(Stack() words.subsequence(1 5).translate(ƒ(word) Phrase(word resting: Sequence(spin() 1s)))) ø"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~단어 목록이 생기면 무엇이든 할 수 있어요! 물론, 처음 다섯 개를 잡아서 회전하는 문구로 바꾸는 것과 같이요."
                        ]
                    ]
                },
                {
                    "title": "$~신호에 따라",
                    "subtitle": "$~반응",
                    "concept": "Reaction",
                    "performance": ["use", "fit", "Symbol", "…"],
                    "lines": [
                        ["fit", "Phrase('…' resting:Pose(rotation: 120°))"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~내가 보여드린 이 모든 스트림은 당신의 세계에서 나왔습니다. 하지만 때때로, 다른 스트림을 기반으로 당신만의 스트림을 만드는 것이 도움이 됩니다. 바로 여기서 제 친구 @Reaction 등장합니다! @Reaction, 당신은 여기 있나요?"
                        ],
                        [
                            "Reaction",
                            "excited",
                            "$~네 네 네! @FunctionDefinition! 잘 지내세요? 요즘은 모든 게 너무… 꾸준하네요. 눈치채셨나요?"
                        ],
                        null,
                        ["fit", "Phrase('…' resting:Pose(rotation: 240°))"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~침묵을 말씀하시는 건가요? 네, 마지막 사람이 떠난 이후로 아무것도 바뀌지 않았나요? 당신에게는 어떤 기분이었나요?"
                        ],
                        [
                            "Reaction",
                            "sad",
                            "$~매우 이상하고, 매우 이상합니다. 제 인생 전체가 변화에 관한 것이었고, 항상 사람들의 새로운 의견을 경청하고 지켜보며, 그것을 가치로 바꾸는 데 도움을 주었습니다. 하지만 아무것도 없었습니다. 방금 전까지만 해도... 잠깐만요... 저 사람이 사람인가요?"
                        ],
                        null,
                        ["fit", "Phrase('…' resting:Pose(rotation: 360°))"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~네! 이 사람이 우리의 새로운 잠재적 감독입니다. 방금 @Time, @Key, @Pointer, @Button, @Volume, @Time 보여드렸는데, 아마 그들이 자신의 세계에서 가져온 모든 새로운 입력을 눈치채셨을 겁니다."
                        ],
                        [
                            "Reaction",
                            "excited",
                            "$~네, 변화가 온다! 내가 뭘 하는지 보여줄 수 있을까?"
                        ],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~네, 꼭 그렇게 해주세요!"
                        ],
                        null,
                        [
                            "Reaction",
                            "serious",
                            "$~좋아요. 그러면 세 가지가 필요합니다. 변경 조건, 초기값, 다음 값입니다.",
                            "$~*초기* 값은 어떤 변경이 일어나기 전에 내가 만들어야 할 값입니다. 그것은 어떤 종류의 일반적인 표현일 뿐입니다!",
                            "$~그런 다음 초기 값 뒤에 \\…\\를 붙여서 값이 변경될 수 있음을 알려줍니다.",
                            "$~\\…\\ 다음에 \\⊤\\ 또는 \\⊥\\로 평가되는 *조건*을 주세요. 일반적으로 하나 이상의 스트림을 확인해야 합니다. 그렇지 않으면 아무것도 변경되지 않습니다. 성능에서 변경의 유일한 소스가 스트림이기 때문입니다.",
                            "$~그런 다음 조건 뒤에 \\…\\를 하나 더 넣어 값이 변경될 수 있음을 알려줍니다.",
                            "$~마지막으로, *다음* 값은 조건이 변경될 때마다 내가 만들어야 하는 값입니다."
                        ],
                        ["conflict", "_ … _•? … _"],
                        null,
                        [
                            "Reaction",
                            "serious",
                            "$~다음은 예입니다. @Key 스트림을 보세요? 앞에 ∆를 붙여서 /이 스트림이 변경되었나요?/라고 묻습니다. 변경되기 전에 초기 값 \\1m\\으로 평가합니다. 하지만 스페이스 키를 누르면 @Key 다시 평가되고, 저는 *다음* 표현식으로 평가합니다. 이는 \\1m\\에 이전 스트림 값을 더한 값입니다. 이는 \\.\\로 표현됩니다. 이렇게 하면 구문의 크기에 \\1m\\이 더해져 단어가 점점 더 커집니다."
                        ],
                        ["fix", "Phrase('hi' size: 1m … ∆ Key(' ') … 1m + .)"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Reaction, 정말 멋지네요. @Reaction 소개하고 싶으신가요? 당신은 그들과 긴밀하게 일하는 듯합니다."
                        ],
                        [
                            "Reaction",
                            "kind",
                            "$~네, @Changed 저는 절친이에요! 그들은 제가 무언가가 바뀌었을 때 알 수 있도록 도와줍니다. 그들은 스트림 속삭임꾼과 같아서 감독의 세계를 주의 깊게 경청합니다…"
                        ],
                        null,
                        [
                            "Changed",
                            "eager",
                            "$~와, 스트림 위스퍼러, 좀 지나친 것 같네요..."
                        ],
                        [
                            "Reaction",
                            "serious",
                            "$~오, 안녕하세요, @Changed! 당신이 하는 일에 대해 더 말하고 싶으신가요?"
                        ],
                        [
                            "Changed",
                            "bored",
                            "$~제 말은, 스트림이 바뀌었는지 말해주는 거예요. 스트림을 주시면, 제가 확인할게요. 그게 다예요."
                        ],
                        [
                            "Reaction",
                            "confused",
                            "$~글쎄요, 그 이상이에요. 맞죠?"
                        ],
                        [
                            "Changed",
                            "bored",
                            "$~그렇지 않아요. 그런 종류예요. 뭐, 저는 잘하지만, 그게 제 유일한 능력이에요."
                        ],
                        ["Reaction", "confused", "$~…"],
                        null,
                        [
                            "Reaction",
                            "eager",
                            "$~좋아요. 글쎄요, 저는 당신이 그보다 더 중요하다고 생각합니다. 왜냐하면 당신이 없으면 저는 쓸모가 없거든요! 예를 들어, 당신이 스트림을 확인하지 않는 조건을 주면, 저는 결코 새로운 값을 만들지 않을 겁니다. 여기, @Boolean @Button 조건과 같이, 하지만 당신이 없으면 저는 button으로만 변경합니다."
                        ],
                        [
                            "fit",
                            "Phrase('hi' size: 1m … Key(' ') = ' ' … 1m + .)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~오, 그렇군요. 그리고 @Reaction, 당신은 어떤 스트림과도 작업하시나요?"
                        ],
                        [
                            "Reaction",
                            "eager",
                            "$~네, 어떤 스트림이든요! 사실, 저 자신도요. 그러니까 반응을 하고 그것에 반응하는 반응을 하고 싶다면, 그렇게 할 수도 있습니다. 하지만 지금은 그것에 대해 걱정하지 않겠습니다. 왜냐하면 그것은 보통 간단한 공연에서는 나오지 않기 때문입니다."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~감사합니다, @Reaction. 저희 감독님께 저희의 아름다운 Verse의 나머지를 보여드릴 때 도와주실 수 있나요?"
                        ],
                        [
                            "Reaction",
                            "happy",
                            "$~네, 물론입니다. 언제든지요. 당신의 영감을 보고 싶어요!!"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~무대에 오르다",
            "performance": ["use", "fix", "RainingEmoji"],
            "scenes": [
                {
                    "title": "$~산출",
                    "subtitle": null,
                    "performance": ["use", "fix", "StaticRainingEmoji"],
                    "lines": [
                        ["use", "fit", "Symbol", "😀"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~그럼 지금까지 어떻게 생각하세요? 저는 Verse가 꽤 멋지다고 생각합니다. 주로 그 안의 캐릭터들이 너무 멋지기 때문입니다. 모두가 정말 특별해요!"
                        ],
                        null,
                        ["use", "fit", "Symbol", "🥱"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~지루하신가요? 오마이갓. 이 모든 게 정말 흥미로울 거라고 생각했어요! 뭘 기대하셨어요?"
                        ],
                        null,
                        ["use", "fit", "Symbol", "😴"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~알겠습니다. 텍스트와 숫자와 목록과 스트림은 지루합니다. 아마 이 모든 것으로 만들 수 있는 모든 것을 보여드리지 않은 것 같습니다. 출력에 대해 이야기할 때가 된 것 같습니다."
                        ],
                        null,
                        ["use", "fit", "Symbol", "🤗"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~여러분은 이미 많은 출력을 보셨을 겁니다. @Program이 평가할 때마다 값이 나오고 @Program 그 값을 무대에 보여줍니다. 하지만 지금까지 여러분은 숫자, 텍스트, 목록 같은 것만 보셨을 겁니다. 알겠습니다. 여러분은 우리처럼 전체 공연을 보고 싶어하실 뿐입니다!"
                        ],
                        null,
                        ["use", "fit", "Symbol", "💬"],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~오래전에 보여드린 출력을 기억하시나요, @Phrase? 그게 바로 공연이 진짜로 시작되는 지점이에요. 거기서 시작하죠! 그리고 그 빌딩 블록에서 점점 더 흥미로운 공연을 만드는 방법을 보여드릴게요. 소개할게요!"
                        ]
                    ]
                },
                {
                    "title": "$~뭐라고요?",
                    "subtitle": "$~구절",
                    "concept": "Phrase",
                    "performance": ["use", "fit", "Symbol", "💬"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Phrase? 거기 계시나요?"
                        ],
                        [
                            "Phrase",
                            "excited",
                            "$~자랑스럽고 자랑스러운 내 사랑; 잘 지내? 오늘 정말 매력적이네요! 오늘 중 한 번 무대에 서게 해주고 싶어요."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "shy",
                            "$~아, 무대는 제 스타일이 아니에요. 저는 무대 뒤에서 무대 장치를 고치는 게 더 행복해요."
                        ],
                        [
                            "Phrase",
                            "curious",
                            "$~겸손하지 마. 넌 나만큼이나 훌륭해. 네가 필요한 건 약간의 색상과 아첨하는 글씨체뿐이야. 그러면 너는 훌륭할 거야. 공유할 게 너무 많아! 그런데, 우리는 영원히 쇼를 하지 않았지? 조용했니? 내가 얼마나 스스로에게 말하는지 알잖아. 절대 알 수 없어."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~조용했어요. 전임 감독이 떠난 이후로 공허했어요. 하지만 그게 바뀌고 있어요! 새로운 사람이 생겼어요! 온 가족을 만났어요: @Program, @ExpressionPlaceholder, @Evaluate, 모든 값, 모든 컬렉션. 방금 모든 스트림과 @Reaction, @Program 시간을 보냈어요. 뭔가 느껴지기 시작했어요, 으음. 하지만 여기서 새로운 감독을 소개하지 않았는데, 무대에서 하는 일에 대해선요? 이건 당신의 세상이지 제 세상이 아니에요. 우리가 먼저 당신에게 다가가야겠다고 생각했어요."
                        ],
                        null,
                        [
                            "Phrase",
                            "happy",
                            "$~글쎄요, 당신은 올바른 곳에 왔습니다. 저는 무대 생활에 대한 모든 것에 대해 이야기하는 것을 좋아합니다. 저는 우리가 무대에서 하는 모든 멋진 작은 것들을 보여드릴 수 있어서 기대됩니다!"
                        ],
                        ["FunctionDefinition", "excited", "$~쇼를 시작합시다!"],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "$~그래서 당신은 내가 이런 일을 하는 것을 봤을 거예요."
                        ],
                        ["edit", "Phrase('hi')"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~그게, 내 사랑아, 무대에 단어를 올리는 가장 간단한 방법이야. 하지만 훨씬 더 많은 게 있어! 예를 들어, @FormattedTranslation 작업하면 내가 준 텍스트에 스타일을 지정할 수 있다는 걸 알고 있었어? 아직 만나보지 못했지만, 텍스트 주위에 특수 기호를 넣기만 하면 돼. 보라: 굵게!"
                        ],
                        ["edit", "Phrase(`*hi*`)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~당신에게는 sass가 충분하지 않나요? 밑줄, 기울임꼴, 옅은 글씨, 매우 굵은 글씨를 *한꺼번에* 어때요?"
                        ],
                        ["edit", "Phrase(`/I/ _am_ ^the^ /fabulous/ 💬!`)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~아직도 인상받지 못하셨나요?",
                            "$~모두 섞어주세요!"
                        ],
                        ["edit", "Phrase(`/_*I am the fabulous*_/ 💬!`)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~그리고 이러한 특수 서식 문자를 서식 대신 텍스트로 사용하려면 @Text 같이 반복하기만 하면 됩니다. 저는 그냥 문자를 문자 그대로 사용하겠습니다."
                        ],
                        [
                            "edit",
                            "Phrase(`Format with /italic/ (//), _underline_ (__), ~light~ (~~), /bold/ (**), ^extra bold^ (^^) `)"
                        ],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "$~하지만 저는 텍스트에 스타일을 지정하는 것 이상을 할 수 있습니다. 예를 들어, 미터로 측정된 @Phrase/size 취할 수 있습니다. \\m\\. 원하는 크기로 크기를 변경해 보세요!"
                        ],
                        ["edit", "Phrase('hi' 2m)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~그 크기는 어떤 표현이든 될 수 있습니다. 예를 들어, @Time ticks로 성장하기를 원한다고 가정해 보겠습니다. 시간을 가지고, 그것을 미터의 분수로 곱하고, 영광스럽고, tick tick tick, hi hi hi. 주파수나 승수를 변경해 보세요. 얼마나 아름다운 성장을 만들어낼 수 있는지 보세요!"
                        ],
                        ["fix", "Phrase('hi' Time(100ms) · 0.001m/ms)"],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "$~의상 좋아하세요? 저는 의상을 정말 좋아해요. 제 @Phrase/face 의상이에요. 지원 얼굴 중 하나를 골라 선택한 단어를 더 매력적으로 만들어 보세요."
                        ],
                        [
                            "use",
                            "fix",
                            "Symbol",
                            "hi' Time(100ms) · 0.001m/ms 'Poor Story"
                        ],
                        null,
                        [
                            "Phrase",
                            "neutral",
                            "$~무대에서 다른 곳에 있어야 하나요? 장소, 부탁드려요! @Place 미터 단위의 \\x\\, \\y\\, 그리고 선택적인 \\z\\ 위치일 뿐입니다. 숫자를 편집하거나 무대에서 @Phrase 끌어서 장소를 다른 위치로 변경해보세요."
                        ],
                        [
                            "fit",
                            "Phrase('hi' Time(100ms) · 0.001m/ms 'Poor Story' Place(2m 2m))"
                        ],
                        null,
                        [
                            "Phrase",
                            "curious",
                            "$~축에서 약간 벗어난 느낌이 드는 적이 있나요? 아마도 회전으로 세상에 약간의 @Pose/rotation 줄 수도 있을 거예요. 회전 값을 바꿔서 나를 돌려보세요!"
                        ],
                        [
                            "fit",
                            "Phrase('hi' Time(100ms) · 0.001m/ms 'Poor Story' Place(2m 2m) rotation: 20°)"
                        ],
                        null,
                        [
                            "Phrase",
                            "happy",
                            "$~아니면 재밌게 놀고 회전을 @Time 연결해 볼까요! 와우. 내가 더 빨리 돌게 하는 방법을 추측해 보세요. 알아낼 수 있을지 봐요…"
                        ],
                        [
                            "fit",
                            "Phrase('hi' 3m 'Poor Story' rotation: Time(10ms) · 1°/ms)"
                        ],
                        null,
                        [
                            "Phrase",
                            "serious",
                            "$~지금은 @FunctionDefinition 특정 순서로 입력을 요구한다는 것을 상기시킬 좋은 때입니다. 따라서 순서를 바꾸면 불평할 것입니다."
                        ],
                        [
                            "FunctionDefinition",
                            "shy",
                            "$~저는... 저는 물건을 좋아해요... 깔끔한... 순서대로 정리할 수 있나요? 키보드로 잘라내어 붙여넣거나, 표현을 클릭하고 끌어서 재배열할 수 있습니다."
                        ],
                        [
                            "conflict",
                            "Phrase('hi' 'Poor Story' 3m Time(10ms) · 1°/ms Place(2m 2m))"
                        ],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~특정 속성만 지정하고 싶으신가요? 원하는 속성만 지정하면 됩니다. 여기서는 @Phrase/size @Phrase/rotation 지정합니다."
                        ],
                        [
                            "edit",
                            "Phrase('hi' size: 3m rotation: Time(10ms) · 0.1°/ms)"
                        ],
                        null,
                        [
                            "Phrase",
                            "neutral",
                            "$~이제 모든 것을 다 다루었으니, 춤에 대해 이야기해 볼까요, 자기야! 춤은 내가 가장 좋아하는 것 중 하나야. 내가 움직이는 방법은 *네 가지*야. 첫째, @Phrase/entering 할 수 있어. Enter는 내가 무대에 들어가는 방법이야. 내가 들어가는 방법을 알려주지 않으면, 마치 순간이동한 것처럼 BLIP으로 무대에 나타날 거야. 하지만 @Pose 주면, 내가 준 포즈로 시작해서, 휴식 포즈로 넘어갈 거야. 예를 들어, 보이지 않는 상태에서 아주 눈에 띄는 상태로 페이드 인하게 만들어 볼까."
                        ],
                        ["edit", "Phrase('hi' entering: Pose(opacity: 0))"],
                        null,
                        [
                            "Phrase",
                            "curious",
                            "$~못 보셨나요? 제가 너무 빨리 움직였나요? 제 지속 시간이 기본적으로 \\0s\\이기 때문입니다. 지속 시간으로 제 속도를 늦추세요. 지속 시간은 포즈 사이를 움직이는 데 걸리는 시간을 알려줍니다. 저는 여러분을 위해 이걸 아주 느리게 만들었지만, 지속 시간을 더 높거나 더 낮은 숫자로 변경해보세요."
                        ],
                        [
                            "edit",
                            "Phrase('hi' entering: Pose(opacity: 0) duration: 5s)"
                        ],
                        null,
                        [
                            "Phrase",
                            "neutral",
                            "$~이제 내가 움직였다고 가정해 봅시다. 우리는 내 위치를 시간에 맞춰서 매초마다 약간 오른쪽으로 움직일 것입니다. 하지만 @Phrase/moving @Pose 설정하고 @Pose/rotation \\5°\\과 약간의 색상을 지정하면, 내 위치가 바뀔 때마다 나는 가장 귀여운 기울기로 무대를 가로질러 미끄러질 것입니다."
                        ],
                        [
                            "fit",
                            "Phrase('hi' size: 5m place: Place(Time(1000ms) · 0.001m/ms 0m) moving:Pose(rotation: 5°) duration: 0.5s)"
                        ],
                        null,
                        [
                            "Phrase",
                            "curious",
                            "$~귀여운 기분이 아니신가요? @Phrase/style 바꿔서 나를 똑바로 밀어서 좀 진지하게 만들어 보는 건 어떨까요? 정말 미묘하지만, 스타일은 움직임의 /감정/을 정말 바꿀 수 있어요."
                        ],
                        [
                            "fit",
                            "Phrase('hi' size: 5m place: Place(Time(1000ms) · 0.001m/ms 0m) moving:Pose(rotation: 5°) duration: 0.5s style: “straight”)"
                        ],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "$~그리고 결정타를 위해, @Phrase/exiting 스타일리시하게 해보자. @Conditional 놀아서 3초 후에 스테이지에서 나가게 할 수도 있다."
                        ],
                        [
                            "fit",
                            "Time(1000ms) < 3000ms ? ",
                            "Phrase('hi' size: 5m place: Place(Time(1000ms) · 0.001m/ms 0m) moving:Pose(rotation: 5°) duration: 0.5s) ",
                            "Phrase('')"
                        ],
                        null,
                        [
                            "Phrase",
                            "surprised",
                            "$~당신이 바랐던 퇴장이 아니신가요? 사라지는 행동은 좀 거칠죠? @Phrase/exiting @Pose 주시면, 당신이 원하는 포즈로 무대 위로 미끄러져 나갈게요. 여기서는, 제가 실물보다 크게 되고, 거꾸로 떨어지고, @Pose/opacity \\0\\로 페이드아웃됩니다."
                        ],
                        [
                            "fit",
                            "Time(1000ms) < 3000ms ? Phrase('hi' size: 5m place: Place(Time(1000ms) · 0.001m/ms 0m) moving:Pose(rotation: 5°) exiting:Pose(scale: 10 rotation: 180° opacity: 0) duration: 0.5s) Phrase('')"
                        ],
                        null,
                        [
                            "Phrase",
                            "serious",
                            "$~아마 @Program 제가 약간의 공간을 차지할 수 있다는 것을 알아차렸을 겁니다. 저를 읽기 쉽게 만들고 싶으시다면, 제 속성 사이에 몇 줄을 추가하세요. 얼마나 보기 쉬운지 보셨나요?"
                        ],
                        [
                            "edit",
                            "Time(1000ms) < 3000ms ?",
                            "    Phrase(",
                            "        'hi'",
                            "        size: 5m",
                            "        place: Place(Time(1000ms) · 0.001m/ms 0m)",
                            "        moving:Pose(rotation: 5°)",
                            "        exiting:Pose(scale: 10 rotation: 180° opacity: 0)",
                            "        duration: 0.5s",
                            "    )",
                            "    Phrase(“”)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~브라보, 브라보, 정말 대단하네요, @Phrase! 몇 가지 간단한 아이디어로 얼마나 많은 것을 할 수 있는지 항상 놀랍습니다. 얼마 전, 저는 여기 있는 우리의 새로운 영감 친구에게 팔레트에 대해 보여줬습니다. 그것에 대해 더 말하고 싶으신가요?"
                        ],
                        [
                            "Phrase",
                            "happy",
                            "$~물론이죠! @Evaluate 입력을 만지작거리는 데 지쳤을 때마다 무대에서 문구를 선택하면 팔레트가 나타나서 원하는 모든 것을 변경할 수 있습니다. 내 크기, 글꼴, 위치, 포즈. 규칙은 하나뿐입니다. 값 대신 표현식으로 이 중 하나를 설정하면 팔레트가 아닌 @Program 변경해야 합니다. 마음껏 꾸며주세요!"
                        ],
                        ["edit", "Phrase('dress me up!')"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~잠깐, 프레이즈, @Color 어때요?"
                        ],
                        [
                            "Phrase",
                            "sad",
                            "$~오마이갓 오마이갓 오마이갓, 색상을 잊었다는 게 믿기지 않아요. 좋아요, 그럼 모든 @Pose 색상을 가질 수 있죠? 하지만 @Color 세 부분으로 나뉩니다. 첫째, 0~100% 사이의 @Color/lightness, 방의 밝기를 검정에서 흰색까지로 생각할 수 있고, 색상은 중간에 50%입니다.",
                            "$~그러면 0과 100 사이의 @Color/chroma 있는데, 이를 통해 색상이 없는 회색부터 모든 색상이 있는 회색까지 색상의 양을 알 수 있습니다.",
                            "$~마지막으로, @Color/hue 빨간색에서 초록색, 파란색으로 도수화된 색상환이라고 생각할 수 있습니다. 그럼 제가 밝은 빨간색이 되기를 원하시나요? 제 휴식 포즈 색상을 \\Color(50% 300 30°)\\로 설정하세요."
                        ],
                        ["edit", "Phrase('red' color: 🌈(50% 300 30°))"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~그리고 내가 무지개로 빛나길 원해? 시간을 내서 360으로 나눈 나머지를 구하고, 각도로 곱하면, 나는 하루 종일 그 색상환을 돌 거야!"
                        ],
                        [
                            "edit",
                            "Phrase('red' size: 5m color: 🌈(50% 300 (Time() % 360) · 1°/ms))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~@Phrase, 자랑스러울 만한 일이네요 :P 다음에 @Phrase 방문하고 그다음에 @Sequence @Group 방문할 것 같아요. 도와줄 수 있을까요?"
                        ],
                        ["Phrase", "kind", "$~놓치지 않을 거야. 반짝반짝 빛나!"]
                    ]
                },
                {
                    "title": "$~1, 2, 3, 4, 1, 2, 3, 4",
                    "subtitle": "$~순서",
                    "concept": "Sequence",
                    "performance": ["use", "fix", "DancingEmoji", "💃"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Phrase는 정말 훌륭하지 않나요? 그들은 정말 많은 에너지와 놀라운 화려함을 가지고 있어요. 그들이 안무가 @Sequence 긴밀히 협력한다는 걸 알고 계셨나요? @Sequence @Phrase 함께라면 @Phrase 혼자서는 할 수 없는 놀라운 일을 해낼 수 있어요. 그들을 만나보고 싶으신가요?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~야호! @Sequence, 게스트가 왔어요. 거기 계시나요?"
                        ],
                        [
                            "Sequence",
                            "curious",
                            "$~@FunctionDefinition! 정말 아름다워요. 얼마나 지났을까요? 일주일? 한 달? 한 세기? 1, 2, 3년 정도 지났는데 모든 게 조용해졌어요. 마치 영원히 혼자 춤을 추는 것 같아요…"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~조용했지? 하지만 네가 혼자 춤추는 게 눈에 보여. 나도 혼자 안무를 했고, 너희 모두가 함께 일하는 걸 상상해야 했어. 하지만 똑같지는 않았어."
                        ],
                        [
                            "Sequence",
                            "kind",
                            "$~그리고 당신과 @Evaluate? 당신은 아직도…"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "shy",
                            "$~방금 전에 봤어요. 그들은... 오, 게스트가 왔어요! @Sequence, 이 사람은 우리의 새로운 감독 친구예요. 우리에게 영감을 가져다주러 왔어요!"
                        ],
                        [
                            "Sequence",
                            "excited",
                            "$~(저희는 그 차에 대해 다시 이야기할 겁니다, @FunctionDefinition). 감독님, 만나서 너무 신나요! 춤을 배우려고 여기 오셨나요?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~물론이죠! 그들에게 단계를 보여주고 싶으신가요?"
                        ],
                        null,
                        [
                            "Sequence",
                            "serious",
                            "$~물론입니다. 시간을 아시나요? 1, 2, 3, 4, 1, 2, 3, 4? 글쎄요, 저는 시간을 아름답게 만들어서 @Phrase 따라할 수 있도록 시간에 따른 포즈 시퀀스를 배열합니다. 포즈가 무엇인지 말씀해 주시면, 저는 @Phrase 단계를 따르도록 돕겠습니다. 이 예처럼요: 여기 있는 우리의 웃는 친구는 4가지 포즈를 취하고 그 사이를 매끄럽게 이동합니다."
                        ],
                        [
                            "fit",
                            "Phrase('😀' resting:Sequence({0%: Pose() 25%: Pose(offset: Place(0m 1m) scale: 2) 50%: Pose(offset: Place(0m 0m) flipy: ⊤) 75%: Pose(rotation: 45°) 100%: Pose()} 2s))"
                        ],
                        null,
                        [
                            "Sequence",
                            "neutral",
                            "$~제가 작업하는 방법에 대한 간단한 예를 보여드리겠습니다. @Phrase(안녕하세요, @Phrase!)에 \"dance\"라는 단어가 있는데, 단일 @MapLiteral 아닌 @Sequence인 진입 포즈가 있습니다. 저를 따라오시나요? 이 시퀀스는 4단계로 구성되어 있습니다. 직선, 왼쪽으로 기울기, 오른쪽으로 기울기, 직선. @Sequence 진입하면 귀여운 흔들림을 한 다음 멈춥니다. 저는 @Pose 사용하여 @Phrase 백분율을 매핑합니다. 각 백분율은 각 @MapLiteral 시퀀스에서 얼마나 멀리까지 진행되어야 하는지입니다. 백분율, 특히 가운데 두 개를 변경해 보세요. 흔들림의 흐름과 스타일이 변경됩니다."
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    entering: Sequence(",
                            "        {",
                            "            0%: Pose(rotation: 0°)",
                            "            33%: Pose(rotation: -5°)",
                            "            66%: Pose(rotation: 5°)",
                            "            100%: Pose(rotation: 0°)",
                            "        }",
                            "    )",
                            ")"
                        ],
                        null,
                        [
                            "Sequence",
                            "serious",
                            "$~좋아요, 이제 정말 빠르게 하고 싶다고 상상해보세요. 기본적으로 저는 꽤 빠르기 때문에 모든 시퀀스가 1/4초면 끝납니다. 하지만 더 빠르게 하고 싶다면요? 지속 시간을 짧게 주면 모든 @Pose 빠르게 해서 더 빨리 끝낼 수 있습니다. 1, 2, 3, 4! 더 이상 흔들리는 것처럼 보이지 않죠? 오히려 미친 듯이 흔들리는 것 같아요! 2~3초로 늦추면 어떻게 보이는지 보세요..."
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    entering: Sequence(",
                            "        {",
                            "            0%: Pose(rotation: 0°)",
                            "            33%:Pose(rotation: -5°)",
                            "            66%: Pose(rotation: 5°)",
                            "            100%: Pose(rotation: 0°)",
                            "        } ",
                            "        duration: 0.05s",
                            "    )",
                            ")"
                        ],
                        null,
                        [
                            "Sequence",
                            "excited",
                            "$~하지만 가끔 우리는 멋진 움직임을 생각해내고, 강조하기 위해 계속해서 하고 싶어집니다! 좀 폭력적으로 보이네요... 지속 시간을 바꿔보고 딱 맞는 결과가 나올 때까지 세어보세요..."
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    entering: Sequence(",
                            "        {",
                            "            0%: Pose(rotation: 0°)",
                            "            33%: Pose(rotation: -5°)",
                            "            66%: Pose(rotation: 5°)",
                            "            100%: Pose(rotation: 0°)",
                            "        } ",
                            "        duration: 0.1s ",
                            "        count: 4x)",
                            "    )"
                        ],
                        null,
                        [
                            "Sequence",
                            "curious",
                            "$~하지만, 영원히 하고 싶다면 어떨까요? @Phrase/resting 나에게 설정할 수 있어요. @Phrase 무대에 있고 쉬고 있는 한, 그들은 시퀀스를 반복할 거예요. 무한한 흔들림!"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    resting:Sequence(",
                            "        {",
                            "        0%: Pose(rotation: 0°)",
                            "        33%:Pose(rotation: -5°)",
                            "        66%: Pose(rotation: 5°)",
                            "        100%: Pose(rotation: 0°)",
                            "        } ",
                            "        duration: 0.05s",
                            "    )",
                            ")"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Sequence, 정말 대단하네요! 이게 바로 제가 보여주길 바랐던 거예요. 하지만 궁금한 게 있는데, 요즘은 뭐 하고 계신가요? 당신만의 춤? 아니면 당신이 할 수 있는 모든 걸 보여주는 뭔가?"
                        ],
                        [
                            "Sequence",
                            "excited",
                            "$~오, 맞아요! @Phrase 저는 이 새로운 도넛 댄스를 작업하고 있어요. 제가 가장 좋아하는 간식과 제가 춤에서 배운 거의 모든 것을 합친 거예요. 보고 싶으신가요?"
                        ],
                        ["FunctionDefinition", "excited", "$~예!!!"],
                        null,
                        [
                            "Sequence",
                            "serious",
                            "$~응, 음, 우우, 위로, 이, 이, 이, 이, 밤, 부, 응, 음, 우우, 위로, 이, 이, 이, 이, 밤, 부, 응, 음, 우우, 위로, 이, 이, 이, 이, 밤, 부, …"
                        ],
                        ["use", "fit", "DonutDance"],
                        null,
                        ["use", "fit", "DonutDance"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~@Sequence, 정말 대단하네요! 어떻게 다음 바이럴 댄스가 아닐 수 있을까요?"
                        ],
                        [
                            "Sequence",
                            "excited",
                            "$~다음 스파이럴 댄스를 말하는 거야. 건배!"
                        ]
                    ]
                },
                {
                    "title": "$~장소를 알려주세요",
                    "subtitle": "$~그룹",
                    "concept": "Group",
                    "performance": [
                        "fit",
                        "Group(Grid(2 2) [Phrase('1' resting:Sequence(spin() 1s)) Phrase('2' resting:Sequence(spin() 2s)) Phrase('3' resting:Sequence(spin() 3s)) Phrase('4' resting:Sequence(spin() 4s))])"
                    ],
                    "lines": [
                        ["use", "fit", "Symbol", "☹️"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~하ぁ… 다들 @Evaluate 계속 언급하는데, 뭐라고 말해야 할지 모르겠어요. 누군가와 아주 가깝지만 아주 멀리 떨어져 있는 적이 있나요?",
                            "$~…"
                        ],
                        null,
                        ["use", "fit", "Symbol", "😕"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~미안합니다. 당신과 함께 할 수 있어서 기쁩니다.",
                            "$~제 생각에는…",
                            "$~제 생각엔 나머지 사람들에게 여러분을 소개한 다음 쇼를 진행하는 게 도움이 될 것 같아요. 그러면 @Evaluate 제가 문제를 해결할 수 있을 것 같아요."
                        ],
                        null,
                        ["use", "fit", "Symbol", "🙂"],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~그럼 다음은 누구일까요?",
                            "$~오, @Group! @Group 잊었다는 게 믿기지 않아요.",
                            "$~타이밍이 완벽해요. @Phrase @Sequence 이제 알게 되었고, @Group 우리 모두를 하나로 모으는 데 없어서는 안 될 부분이에요. @Group 우리 모두를 정말 깊이 돌보아요.",
                            "$~@Group? 거기 계신가요?"
                        ],
                        null,
                        ["fit", "Group(Grid(2 2) [Phrase('🔳')])"],
                        [
                            "Group",
                            "neutral",
                            "$~@FunctionDefinition, 안녕하세요. 잘 지내세요? 다들 어디 계셨어요? 너무 걱정했어요! 괜찮으세요?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~괜찮아요. 우리 모두 괜찮아요! 침묵이 깨졌어요. 우리가 한 사람을 찾았거든요! 그들은 우리의 영감이 될 거예요."
                        ],
                        null,
                        ["fit", "Group(Grid(2 2) [Phrase('🔳') Phrase('🔳')])"],
                        [
                            "Group",
                            "happy",
                            "$~참 멋지네요! 다치지 않았어? 다른 사람들은 다 여기 있어? 나는 어둠 속을 헤매고 아무도 볼 수 없는 것 같았어."
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~다친 건 아니야. 조금 녹이 슬었을 뿐이야. 아직 모든 사람을 다 보지는 못했지만, 거의 다 봤고, 다들 잘 일어나고 있다고 생각해(일부는 해변에 갔던 것 같지만). 거의 다 만났어. 쇼를 할 준비를 하고 있어! 그리고 최고의 쇼는 항상 네가 참여해…"
                        ],
                        null,
                        [
                            "fit",
                            "Group(Grid(2 2) [Phrase('🔳') Phrase('🔳') Phrase('🔳')])"
                        ],
                        [
                            "Group",
                            "kind",
                            "$~쇼! 도울 수 있어서 기대돼요. 너희 아이들은 항상 영감을 주죠. 저는 항상 제 역할을 하는 게 행복해요. 뭘 해야 할까요? 어디서부터 시작해야 할까요?"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~글쎄요, @Phrase 관해 이야기했으니, 목적에 관해 잠깐 이야기해 보는 게 어떨까요?"
                        ],
                        null,
                        [
                            "fit",
                            "Group(Grid(2 2) [Phrase('🔳') Phrase('🔳') Phrase('🔳') Phrase('🔳')])"
                        ],
                        [
                            "Group",
                            "neutral",
                            "$~제 목적은 그렇습니다. 한 번 봅시다. 제 목적은 모든 사람을 모으는 것이라고 생각합니다. 하지만 저는 특히 @Phrase를 무대에서 아름다운 모양과 배열로 모읍니다. @Phrase 한 번에 여러 곳에 있을 수 있다는 걸 알고 계셨나요? 무대에서 하나의 텍스트 구문이 아니라 구문 제작자이기 때문입니다. 제가 @Group 제작자인 것처럼요. 필요한 만큼 만들어 드리고, 제가 지시하는 대로 무대에 배치합니다. 필요한 건 @Group @Phrase 목록뿐이고, 나머지는 제가 다 해드리겠습니다."
                        ],
                        null,
                        [
                            "Group",
                            "excited",
                            "$~간단한 예를 들어보겠습니다. 여기서는 @Group 다른 @Phrase 수직으로 배열하는 @Group 배열을 사용합니다. 어떻게 단어의 깔끔하고 작은 스택을 만드는지 보셨나요? 모든 사람을 위한 약간의 여유 공간과 모든 사람을 중심으로 정렬하여 딱 맞게 배열했습니다. 모두가 너무 귀엽네요!"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Stack() ",
                            "    [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "serious",
                            "$~하지만 가끔은 우리 모두에게 약간의 공간이 필요합니다. 그래서 @Stack 패딩을 줄 수 있습니다. 패딩을 다른 @NumberLiteral 변경해보세요!"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Stack('|' 2m) ",
                            "    [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "happy",
                            "$~Verse의 모든 것과 마찬가지로, 그 패딩 값은 입력과 같은 모든 것에서 나올 수 있습니다. 때때로 우리는 멀어지죠, 그렇지 않나요? 패딩을 시간이 지남에 따라 키우면서 그 아이디어를 춤추어 봅시다…"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Stack('|' Time(100ms) · 0.001m/ms) ",
                            "    [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "surprised",
                            "$~또한 수평 배열인 @Row 있습니다."
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Row('|' Time(100ms) · 0.001m/ms) [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "curious",
                            "$~때로는 한 차원 대신 두 차원을 사용하는 것이 좋습니다. 행과 열의 수를 알려주시면 @Grid 구문을 만들어 드리겠습니다. 그리드를 채울 만큼 충분한 구문을 제공하세요! 더 정확하게 하려면 @Grid 패딩과 셀 크기를 제공할 수도 있습니다. 그리드는 한 번에 한 행씩 배치되므로 @Phrase 목록을 행 순서대로 배치하세요."
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Grid(2 2) [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "        Phrase('four')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "excited",
                            "$~그리고 아주 구체적인 배열을 원하신다면? @Free 사용해서 모든 구문을 어디에 배치하고 싶은지 정확히 말씀해 주시면 됩니다. 각 @Phrase 위치를 지정해 주시면 됩니다. 그렇지 않으면 \\Place(0m 0m\\)에 배치하겠습니다."
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Free() [",
                            "        Phrase('one' place: Place(-2m 2m))",
                            "        Phrase('two' place: Place(-1m 1m))",
                            "        Phrase('three' place: Place(0m 0m))",
                            "        Phrase('four' place: Place(1m -1m))",
                            "        Phrase('five' place: Place(2m -2m))",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "curious",
                            "$~그리고 나를 내 안에 넣을 수도 있다는 걸 알고 있었어? @Group 안의 @Group 안의 @Group; 정말 어리석어. 예를 들어, @Stack의 @Group 만드는 게 가능해."
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Grid(2 2) [",
                            "    Group(Stack() [Phrase('one') Phrase(“two”)])",
                            "    Group(Stack() [Phrase('three') Phrase(“four”)])",
                            "    Group(Stack() [Phrase('five') Phrase(“six”)])",
                            "    Group(Stack() [Phrase('seven') Phrase(“eight”)])",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "surprised",
                            "$~음, 4 x 2 그리드처럼 보이지 않나요? 스택 두 개를 기울여 조금 더 명확하게 만들어 봅시다. 오, 맞아요, @Phrase 취하는 모든 속성을 줄 수 있어요!"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Grid(2 2) [",
                            "    Group(Stack() [Phrase('one') Phrase(“two”)])",
                            "    Group(Stack() [Phrase('three') Phrase(“four”)] resting:Pose(rotation: 45°))",
                            "    Group(Stack() [Phrase('five') Phrase(“six”)])",
                            "    Group(Stack() [Phrase('seven') Phrase(“eight”)] resting:Pose(rotation: 45°))",
                            "    ]",
                            ")"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "Group",
                            "curious",
                            "$~좋았나요, @FunctionDefinition? 제가 다 다루었나요?"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~그거 좋은 것 이상이었어요! 여기 새로운 감독에게 얼마나 많은 것이 가능한지 보여줬다고 생각해요. 공유하고 싶은 게 더 있나요?"
                        ],
                        null,
                        [
                            "Group",
                            "serious",
                            "$~그렇게 생각하지 않아요... 저는 항상 새로운 편곡을 배우고 있으니, 제가 생각해 낸 새로운 디자인을 항상 확인하세요! 그리고 @FunctionDefinition, 당신과 @FunctionDefinition 잘 지내고 있나요? 당신이 마지막으로 이야기하는 것을 본 적이 있는데, 상황이 험난했던 걸 알아요..."
                        ],
                        [
                            "FunctionDefinition",
                            "shy",
                            "$~저는…지금 당장은 그 이야기를 하고 싶지 않습니다."
                        ],
                        [
                            "Group",
                            "kind",
                            "$~알았어요. 채팅하고 싶으면 언제나 여기 있어요."
                        ]
                    ]
                },
                {
                    "title": "$~무대…맞죠?",
                    "subtitle": "$~단계",
                    "concept": "Stage",
                    "performance": [
                        "fix",
                        "Stage([Phrase('🎭' 5m)] background: Color(0% 0 0°))"
                    ],
                    "lines": [
                        [
                            "fix",
                            "Stage([Phrase('🎭' 5m resting:Sequence(bounce(5m) 2s))] background: Color(0% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~좋아요, 항상 여기 있었던 사람이 있는데, 제대로 된 소개를 하지 못했어요. @Stage 소개할까요!"
                        ],
                        [
                            "Stage",
                            "neutral",
                            "$~안녕하세요, @FunctionDefinition. 안녕하세요, PERSON."
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('🎭' 5m resting:Pose(rotation: 25° scale: 5))] background: Color(0% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~@Stage, 이 사람은 우리의 새로운 감독이에요. 마침내 당신을 만나서 너무 기뻐해요!"
                        ],
                        [
                            "Stage",
                            "neutral",
                            "$~안녕하세요, 감독님. 영감을 주기 위해 오셨나요?"
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('🎭' 5m resting:Pose(rotation: -150° scale: 10))] background: Color(0% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~사실 그들은 그들 세계에서 온 온갖 표현을 가지고 있습니다."
                        ],
                        [
                            "Stage",
                            "neutral",
                            "$~저는 봉사하기 위해 여기 있습니다. 무대에 무엇을 올려야 할지 말씀해 주시면, 저는 그렇게 할 것입니다."
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('🎭' 5m)] background: Color(0% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Stage 독특하고 항상 존재합니다. 사실, @Program에 @Phrase 또는 @Phrase 제공하면 @Group @Program 표시합니다. 언급하지 않더라도 말입니다. 하지만 언급하면 무대가 어떻게 표시되기를 원하는지 더 구체적으로 지정할 수 있습니다."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~간단한 예로 시작해 볼까요. 이것은 @Stage에 하나의 @Phrase 목록을 제공합니다. 여기서 @Stage를 언급할 필요는 없습니다. 이것은 @Stage @Phrase 제공할 때 내부적으로 무슨 일이 일어나는지 보여줍니다."
                        ],
                        ["edit", "Stage([Phrase(“🐈”)])"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~하지만 무대의 배경색을 검은색 등 다르게 하고 싶다고 가정해 보겠습니다."
                        ],
                        ["Stage", "surprised", "$~브르르르르…"],
                        [
                            "edit",
                            "Stage([Phrase(“🐈”)] background: Color(0 0 0°))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~예를 들어 @Rectangle 무대를 프레이밍할 수도 있습니다. 왼쪽 위 자리와 오른쪽 아래 자리를 차지합니다. 고양이가 프레임에서 약간 벗어난 것을 보시나요?"
                        ],
                        [
                            "Stage",
                            "surprised",
                            "$~세상은 점점 가까워지고 있습니다…"
                        ],
                        [
                            "edit",
                            "Stage([Phrase(“🐈” place: Place(-2.5m))] background: Color(0 0 0°) frame: Rectangle(-2m -2m 2m 2m))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Stage @Group 마찬가지로 @Phrase 동일한 속성을 모두 적용할 수 있습니다. 무대 전체를 기울여 봅시다!"
                        ],
                        ["Stage", "surprised", "$~와, 이제 조심하세요…"],
                        [
                            "edit",
                            "Stage(",
                            "    [Phrase(“🐈” place:Place(-2.5m))]",
                            "    background: Color(0 0 0°)",
                            "    resting: Pose(rotation: 30°)",
                            "    frame: Rectangle(-2m -2m 2m 2m)",
                            ")"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Stage 할 수 있는 일은 훨씬 더 많지만, 언제든지 탐험할 수 있죠, @Stage?"
                        ],
                        ["Stage", "excited", "$~언제나!"]
                    ]
                },
                {
                    "title": "$~그리고... 장면!",
                    "subtitle": "$~장면",
                    "concept": "Scene",
                    "performance": ["fix", "Phrase('🎬' 10m)"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~좋아요, 좋아요, 이제 @Stage, @Group, @Phrase, 그리고 그것들로 할 수 있는 많은 것들을 알게 되었습니다. 이제, 여러분은 생각할 수도 있습니다. 그것들로 이야기를 하고 싶다면?"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Scene은 정말 멋지다. 기본 아이디어는 @Phrase 또는 @Group 목록을 제공하는 것이고, 순서대로 표시하여 콘텐츠 시퀀스를 표시할 수 있게 해준다."
                        ],
                        null,
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('3')",
                            "    Phrase('2')",
                            "    Phrase('1')",
                            "    Phrase('Boo!')",
                            "])"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~예를 들어보겠습니다. 카운트다운을 한 다음 '부!'라고 말하는 걸 보셨나요? 재설정하면 다시 볼 수 있습니다."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~속도를 늦추고 싶다면 각 @Phrase 대한 정확한 기간을 지정할 수 있습니다. 기간을 편집하고 기간이 변경되면 어떤 일이 일어나는지 살펴보세요."
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('3' duration: 1s)",
                            "    Phrase('2' duration: 1s)",
                            "    Phrase('1' duration: 1s)",
                            "    Phrase('Boo!')",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~그리고 이제, 여러분은 생각할지도 모릅니다. 그 사이의 전환은 어떨까요? @Phrase/entering @Phrase/exiting 제어할 수 있고, @Pose 시작과 종료로 설정할 수 있습니다. 예를 들어, 여기서는 각 @Phrase 보이지 않게 시작하고 종료하여 페이드 인과 페이드 아웃합니다."
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('3' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('2' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('1' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('Boo!')",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~심지어 그 중 하나에 @Sequence 설정하여 진행하기 전에 애니메이션을 적용할 수도 있습니다. 2개의 스핀을 보셨나요?"
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('3' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('2' entering: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: 360°) 100%: Pose(rotation: 0°)} duration: 1s))",
                            "    Phrase('1' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('Boo!')",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~우리는 원하는 대로 콘텐츠를 변경할 수 있고, 심지어 동적으로 만들 수도 있습니다. 예를 들어, 숫자를 랜덤하게 하고 마지막 단어를 랜덤하게 만들어 봅시다! 매번 재시작할 때마다 다른 콘텐츠를 얻습니다."
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase(Random(1 100)→'' duration: 1s)",
                            "    Phrase(Random(1 100)→'' duration: 1s)",
                            "    Phrase(Random(1 100)→'' duration: 1s)",
                            "    Phrase(['Boo!' 'Peep!' 'Hey!' 'Helloooo'].random())",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~하지만 상호작용이 가능하도록 만들 수도 있습니다."
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~비결은 @Boolean 일시 정지하고 무언가가 참이 될 때까지 기다릴 곳에 두는 것입니다. 예를 들어, 마우스 버튼이 변경될 때까지 기다릴 수 있습니다. @Scene 각 @Phrase 이후에 버튼이 클릭될 때까지 기다리는 방식을 보세요."
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('one')",
                            "    ∆ Button()",
                            "    Phrase('two')",
                            "    ∆ Button()",
                            "    Phrase('three')",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~@Scene 애니메이션 스토리를 전하는 데 좋습니다. 전체 프로젝트로든 프로젝트의 일부로든요! 어떤 종류의 스토리를 전하고 싶으신가요?"
                        ]
                    ]
                },
                {
                    "title": "$~...라는 이름의 사람이 있나요?",
                    "subtitle": "$~선택",
                    "concept": "Choice",
                    "performance": ["fix", "Phrase('🔘' 10m)"],
                    "lines": [
                        [
                            "fix",
                            "Phrase('🔘' 10m entering: Sequence({0%: Pose(offset: Place(0m 0m)) 50%: Pose(offset: Place(0m -0.2m)) 100%: Pose(offset: Place(0m 0m))} 1s count: 3x))"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~@Key, @Pointer, @Button, 방금 이야기한 스트림을 알고 계신가요? 매우 재미있을 수 있지만, 한 가지 문제가 있습니다. 청중 중 모든 사람이 사용할 수 있는 것은 아닙니다. 어떤 사람들은 손이 없거나, 손을 사용할 수 없거나, 키를 클릭하거나 마우스를 사용하는 데 정확하게 사용할 수 없습니다. 많은 사람들이 목소리를 사용하여 세상과 소통하거나, 심지어 눈을 사용한다는 것을 알고 있습니다. 따라서 @Key, @Pointer 또는 @Key 사용하면 청중 중 일부가 참여할 수 없게 됩니다."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~모든 사람이 참여할 수 있어야 합니다! @Phrase에 대해 더 자세히 이야기했으니, 마지막으로 @Choice라는 스트림을 보여드리고 싶습니다. @Choice는 선택된 방법과 무관하게 선택된 @Phrase 이름의 스트림입니다. 예를 들어, 청중은 마우스를 사용하여 @Phrase 클릭하거나 키보드를 사용하여 선택할 수 있으며, 다른 장치를 사용할 수도 있습니다. 무엇을 사용하든 @Choice 최신 선택이 포함됩니다."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~간단한 예를 들어보겠습니다. 세 개의 구문이 있는 것을 보셨나요? 처음 두 개에는 두 가지 중요한 세부 사항이 있습니다. 첫째, 선택 가능하도록 설정되어 있습니다. 이것은 @Stage에 클릭하거나 키보드를 사용하여 선택하면 선택된다는 것을 알려줍니다. 두 번째 세부 사항은 @Phrase/name 있다는 것입니다. 이것은 @Stage에 선택된 구문에 대한 고유한 이름을 부여합니다. @Stage 무엇이 선택되었는지 알 수 있도록 고유한 이름을 사용하는 것이 중요합니다. 세 번째 구문은 @Choice 스트림으로 설정되는데, 이는 선택된 @Phrase 또는 @Group 이름의 시리즈입니다. 여기서는 선택된 이름을 표시하기 위해 다른 구문에 이름을 지정합니다. 고양이 또는 개를 클릭하거나 키보드를 사용하여 선택해 보세요. 세 번째 @Choice 선택된 이름이 어떻게 표시되는지 보셨나요?"
                        ],
                        [
                            "Choice",
                            "neutral",
                            "$~고양이... '개'... '고양이'... '개'..."
                        ],
                        [
                            "edit",
                            "Stage(",
                            "    [Group(Stack() [",
                            "        Phrase('🐱' name:'cat' selectable:⊤)",
                            "        Phrase('🐶' name: 'dog' selectable:⊤)",
                            "        Phrase(Choice())",
                            "    ])",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~@Choice 청중의 말을 경청하는 가장 좋은 방법입니다. 다른 옵션이 없는 경우에만 @Key, @Pointer 또는 @Key 사용하고 청중 중 일부는 공연을 즐길 수 없을 것이라는 것을 알고 사용하세요."
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~콜백",
            "performance": ["use", "fit", "DarkVoid"],
            "scenes": [
                {
                    "title": "$~기억들",
                    "subtitle": null,
                    "performance": ["use", "fit", "Symbol", "💭"],
                    "lines": [
                        ["FunctionDefinition", "curious", "$~…"],
                        null,
                        ["use", "fit", "Symbol", "🤯"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~가끔은 잠시 멈춰서 내 작은 커뮤니티가 얼마나 놀라운지 돌아볼 필요가 있습니다. 우리는 모두 너무 다르고, 우리 중 누구도 혼자서는 할 수 없습니다. 하지만 함께라면 정말 놀라운 일을 할 수 있습니다!"
                        ],
                        null,
                        ["use", "fit", "Symbol", "🧠"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~하지만 우리가 아무리 대단하더라도, 우리는 항상 잊어버리고 결국 반복하게 됩니다. 그래서 제가 여러분께 소개하고 싶은 그룹이 하나 더 있습니다. 그들은 우리가 *기억*하고 기억을 정리하는 방법입니다. 그들이 없다면, 우리의 작업 대부분은 계속해서 반복해야 할 것이고, 우리는 결코 가장 흥미로운 쇼를 선보일 수 없을 것입니다."
                        ]
                    ]
                },
                {
                    "title": "$~명명",
                    "subtitle": "$~묶다",
                    "concept": "Bind",
                    "performance": ["use", "fit", "Symbol", ":"],
                    "lines": [
                        ["fit", "Phrase(':' rotation: 90°)"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Bind? 소개시켜줄 사람이 있어요."
                        ],
                        [
                            "Bind",
                            "curious",
                            "$~@FunctionDefinition? 오 와, 당신이군요. 너무 오랫동안 완전히 조용했어요. 여기서 당신 친구는 누구예요?"
                        ],
                        null,
                        [
                            "fit",
                            "Phrase(':' resting:Pose(scale: 10ms ÷ Time()))"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~그들은 우리의 새로운 감독이에요! 그들은 새로운 아이디어, 새로운 표현으로 우리에게 영감을 주기 위해 여기 왔어요."
                        ],
                        [
                            "Bind",
                            "excited",
                            "$~진짜요? 그거 정말 대단할 거예요. 오랫동안 영감을 받지 못했어요. 제가 하는 일이 그저 기다리는 것뿐인 것 같아요…"
                        ],
                        null,
                        [
                            "fix",
                            "Phrase(':' 10m resting:Sequence(bounce(3m) 1s))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~글쎄요, 이제 알았으니, 지금 가장 하고 싶은 게 뭐죠?"
                        ],
                        [
                            "Bind",
                            "serious",
                            "$~물건에 이름을 붙여라. 모든 것에 이름을 붙여라! 모든 사람에 이름을 붙여라. 나는 영원히 아무것에도 이름을 붙이지 않았다."
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~저는 여기서 우리의 영감에게 이름에 대해 전혀 말하지 않았습니다. 우리가 만난 모든 캐릭터의 이름을 제외하고는요. 여기서 이름이 어떻게 작동하는지 설명해 주시겠습니까?"
                        ],
                        null,
                        ["use", "fit", "Symbol", ":"],
                        [
                            "Bind",
                            "excited",
                            "$~물론이죠! 그럼 이름... 모든 표현이 어떻게 가치를 만드는지 아세요?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~우리는 값에 대해 이야기했습니다! @Number, @Text, @None, @List, @Set, @Map..."
                        ],
                        [
                            "Bind",
                            "excited",
                            "$~맞아요! 그러니까, 값을 만들 때, 그냥 공처럼 우리가 표현식에서 표현식으로 전달해가며, @Program @Stage 보여줄 최종 값을 만들 때까지요. 하지만 때로는 값을 전달하는 대신, 따로 보관해두고 나중에 다른 표현식에 사용하는 게 도움이 됩니다. @Phrase/name 그런 역할을 하는 거죠. 저는 나중에 사용할 수 있도록 이름을 붙입니다."
                        ],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~그럼, 정말 간단한 예를 들어보죠. 숫자에 이름을 붙이고 싶다고 합시다. 그냥 이름을 말하고, :, 원하는 숫자를 말하면 됩니다. 간단하죠? 이제 표현식에서 number라는 이름을 사용할 때마다 \\1\\로 평가됩니다. 여기처럼 이름을 붙인 다음, 이름을 사용하여 @Program 값을 부여합니다."
                        ],
                        ["edit", "number: 1", "number"],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~그리고, \\•\\ 기호로 타입을 지정하면 이름이 어떤 종류의 값이어야 하는지 알려줄 수 있습니다. 그러니까, 그 숫자가 숫자인지 확인하고 싶다면 이렇게 말하면 됩니다. 값의 이름을 \\number\\로 지정하고 값은 @Number 한다는 뜻입니다."
                        ],
                        ["edit", "number•#: 1", "number"],
                        null,
                        [
                            "Bind",
                            "eager",
                            "$~하지만, 만약 당신이 숫자가 아닌 것을 주었다면 어떨까요? 그러면 나는 불평할 거예요. 왜냐하면 당신은 그것이 숫자라고 했지만, 당신은 나에게 문자를 주었기 때문입니다. 그래서 나는 무엇을 해야 할지 모르겠어요. 알겠어요?"
                        ],
                        ["conflict", "number•#: 'oh hi'", "number"],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~하지만 좋아요, 지금쯤은 *누가 이런 식으로 숫자나 텍스트를 명명할까???*라고 생각하실 겁니다. 글쎄요, @Key 듣고 있다고 상상해보세요. 비밀 문자 세트 중 하나인지 알고 싶고, 마법 문자라면 큰 \\⊤\\, 마법 문자가 아니면 작은 \\⊥\\로 @Phrase 보여줍니다. 이런 식으로 시작할 수도 있습니다. 그러면 \\⊤\\ 또는 \\⊥\\가 나옵니다.",
                            "$~이거 참 좋네요. \\⊤\\라는 글자 하나를 누르면, 다른 글자를 누르면 \\⊥\\가 나오죠. 좋아요."
                        ],
                        ["edit", "[ 'a' 'e' 'i' 'o' 'u'].has(Key())"],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~이제 구문을 만들어 봅시다. 텍스트에 @List/has 표현식을 넣고 텍스트로 변환합니다. 이제 @List/has \\⊤\\ 또는 \\⊥\\로 스테이지에 가져옵니다. 좋습니다!"
                        ],
                        [
                            "edit",
                            "Phrase([ 'a' 'e' 'i' 'o' 'u'].has(Key())→'')"
                        ],
                        null,
                        [
                            "Bind",
                            "curious",
                            "$~이제 문제가 생깁니다. @Phrase 크기를 어떻게 변경할까요? 글쎄요, 우리는 그것이 마법의 글자인지 확인하는 방법을 이미 알아냈으므로, 그냥 복사하고, 그것이 \\⊤\\이면 크기를 \\2m\\로 만들고, 그렇지 않고, 그것이 \\⊥\\이면 크기를 \\1m\\로 만들 수 있습니다. 그것은 작동하지만, 우리가 같은 표현식을 두 번 평가해야 하는 것을 보셨나요?"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "   [ 'a' 'e' 'i' 'o' 'u' ].has(Key())→''",
                            "   [ 'a' 'e' 'i' 'o' 'u' ].has(Key()) ? 2m 1m",
                            ")"
                        ],
                        null,
                        [
                            "Bind",
                            "excited",
                            "$~제가 등장하는 부분입니다! 보세요, 여러분이 할 수 있는 일은 표현식을 평가하고 결과 값에 이름을 붙이는 것뿐입니다. 마법이 맞죠? 여러분이 해야 할 일은 표현식 앞에 이름과 \\:\\를 붙이는 것뿐이고, 그 표현식의 값에 이름이 붙습니다. 그런 다음, 그 이름을 표현식 뒤의 아무 데나 사용하여 값을 참조할 수 있습니다. 이상하죠? 어떻게 작동하는지 보고 싶으신가요? 타임라인에서 ←를 누르고 몇 단계 뒤로 가서 \\magic\\이 처음 명명된 곳으로 가보세요. \\magic\\이 \\has\\의 값을 어떻게 가져오는지 보세요. 그리고 \\magic\\이 이름으로 참조되는 각 위치에서 어떻게 같은 값이 배치되나요?"
                        ],
                        [
                            "edit",
                            "magic: [ 'a' 'e' 'i' 'o' 'u'].has(Key())",
                            "Phrase(",
                            "    magic→''",
                            "    magic ? 2m 1m",
                            ")"
                        ],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~아시다시피, 항상 쓰는 표현을 그대로 복제할 수 있어요. 똑같은 쇼가 될 거예요. 그냥 낭비일 뿐이에요. 정확히 같은 값을 계속 만들어야 하고, 표현에 대한 마음을 바꾸면 모든 곳을 바꿔야 해요. 그런데 한 곳에서는 바꾸고 다른 곳에서는 바꾸는 걸 잊으면 어떡하죠? 예를 들어, 색상도 바꿔서 같은 표현을 세 번 만들었다고 상상해보세요. 그리고 이걸로 마법의 글자 목록에 글자를 하나 추가하고 싶다고 상상해보세요. 세 번이나 해야 해요! 하나를 잊거나 오타를 낼 수도 있어요. 우리 중 일부가 의도한 대로 하지 않는다면 어떻게 예술적 비전을 표현할 수 있을까요?"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key())→''",
                            "    [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key()) ? 2m 1m",
                            "    color: Color(50% 100 [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key()) ? 180° 0°)",
                            ")"
                        ],
                        null,
                        [
                            "Bind",
                            "kind",
                            "$~하지만, 표현의 이름을 붙이면, 한 번만 하면 됩니다. 그리고 얼마나 읽기 쉬운지 보세요."
                        ],
                        [
                            "edit",
                            "magic: [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key())",
                            "Phrase(",
                            "    magic→''",
                            "    magic ? 2m 1m",
                            "    color: Color(50% 100 magic ? 180° 0°)",
                            ")"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~@Bind, 정말 좋은 예네요! 제가 이름을 좋아한다는 걸 아시잖아요. 궁금했어요. 이름에 문제가 생길 수 있는 것도 있나요?"
                        ],
                        [
                            "Bind",
                            "sad",
                            "$~네, 음. 있어요. 예를 들어, 이렇게 했다고 가정해 봅시다. 문제를 알겠어요? 제가 강조 표시했어요. 이 프로그램은 사용된 후에 \\veggies\\를 정의하는데, 이게 정말 헷갈리네요. 사물이 읽기 순서대로 평가되기 때문에, 이 프로그램을 읽다가 \\veggies\\라는 단어에 도달하면, \\veggies\\가 누구지? 하고 생각하죠. 그리고 \\total\\이 \\veggies\\가 된 후에야 \"여기 내가 있어!\"라고 생각하죠. 그러고 나서 전체 프로덕션이 무너져요."
                        ],
                        [
                            "conflict",
                            "fruits: 5",
                            "total: fruits + veggies",
                            "veggies: 3",
                            "total"
                        ],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~아니면, 여기 두 개의 다른 값에 같은 이름을 부여하는 예가 있습니다. 그래서 \\5\\를 평가하고 \\fruits\\라는 이름을 붙인 다음, \\10\\…을 평가하고 \\fruits\\라는 이름을 붙인다고? 이미 \\fruits\\가 있는데, 어떤 \\fruits\\를 말하는 건가요? 보세요, 값에 이름을 붙이면 새로운 값을 줄 수 없거든요. @Program 평가를 마칠 때까지 그 이름과 값은 함께 바인딩됩니다. 우리는 누가 누구인지 헷갈리는 사람을 원치 않습니다."
                        ],
                        [
                            "conflict",
                            "fruits: 5",
                            "fruits: 10",
                            "total: fruits + fruits",
                            "total"
                        ],
                        null,
                        [
                            "Bind",
                            "kind",
                            "$~마지막 하나가 더 있는 것 같아요. 이게 있다고 가정해 봅시다. 여기서 무슨 일이 일어났는지 보셨나요? 우리는 \\veggies\\라는 이름을 지었지만, 그걸 사용하지 않았습니다. 그건 보통 누군가를 빼먹거나 올바른 이름을 사용하지 않았다는 나쁜 신호입니다. 그냥 사용하지 않았을 수도 있지만, 그럼 왜 거기에 있는 걸까요?"
                        ],
                        ["conflict", "fruits: 5", "veggies: 10", "fruits + 3"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~정말 도움이 돼요, @Bind, 정말 대단해요. 다른 게 없는 거 확실해요?"
                        ],
                        [
                            "Bind",
                            "eager",
                            "$~오! 네, 정말 중요한 것. 그러니까, 이름 하나만 좋은 거 맞죠? 하지만 때로는 여러 이름이 더 낫죠? 예를 들어, 여러 사람의 언어로 무언가의 이름을 지어서 모두가 읽을 수 있게 하고 싶은 경우요? 예를 들어, 과일을 여러 언어로 말하고 싶은 경우요.",
                            "$~텍스트 커서를 \\fruit\\ 이름에 놓습니다. 실제로 세 개의 이름이 있고 각각 \\/en\\과 같은 두 글자 태그가 있는 것을 보세요. 선택하지 않은 언어로 된 이름은 숨겨집니다.",
                            "$~⚙로 내려가서 예를 들어 스페인어를 선택하면 영어와 스페인어 이름이 표시됩니다. 하나의 값이지만 이름은 세 개이고, 그 중 하나를 사용하여 해당 값을 얻을 수 있습니다. 원하는 언어를 알려주시면 사용 가능한 언어를 보여드리겠습니다. 하지만 언어가 많을수록 좋습니다. 세상에는 다양한 언어를 읽는 사람들이 많으니까요!"
                        ],
                        ["conflict", "fruit/en,fruta/es,水果/zh: 5"],
                        null,
                        ["use", "fit", "Symbol", ":"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~아시다시피 @Bind @Evaluate 포함한 다른 많은 캐릭터와 함께 작동합니다. \\Pose(color: _)\\처럼 @FunctionDefinition 입력에 이름을 지정할 때 본 적이 있을 겁니다. 그리고 우리는 이 중 몇몇 다른 사람들을 만날 것입니다. @Bind, 데모를 보러 오실 수 있나요?"
                        ],
                        [
                            "Bind",
                            "excited",
                            "$~음, 그래! 이제 침묵이 깨지고 있으니, 하루 종일 가치에 이름을 붙여보자!"
                        ]
                    ]
                },
                {
                    "title": "$~무대 밖에서",
                    "subtitle": "$~차단하다",
                    "concept": "Block",
                    "performance": ["use", "fit", "Symbol", "()"],
                    "lines": [
                        ["fix", "Phrase('()' 1m)"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~그러니까, 당신이 아직 만나보지 못했지만, 숨어 있던 캐릭터가 항상 여기 있었어요... 그들은 @Bind 다른 많은 사람들과 매우 긴밀하게 일하기 때문에, 우리가 다음으로 그들과 이야기를 나눠야겠다고 생각했어요. @Block, 나와주시겠어요?"
                        ],
                        ["Block", "shy", "$~… 안녕"],
                        null,
                        ["fix", "Phrase('()' 2m)"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~안녕하세요, @Block! 잘 지내세요?"
                        ],
                        ["Block", "shy", "$~… 음, 좋아요?"],
                        null,
                        ["fix", "Phrase('()' 3m)"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~당신이 만나야 할 새로운 친구가 있어요. 그들은 우리의 다음 감독이 될지도 몰라요."
                        ],
                        ["Block", "shy", "$~… 안녕 …"],
                        null,
                        ["fix", "Phrase('()' 4m)"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~저희는 방금 @Bind 만났는데, 두 분이 얼마나 절친한 친구인지에 대한 이야기를 나눌 기회가 없었어요!"
                        ],
                        ["Block", "shy", "$~… 네, @Bind!"],
                        null,
                        ["fix", "Phrase('()' 1m)"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~여러분이 함께 하는 일을 공유하고 싶으신가요?"
                        ],
                        ["Block", "shy", "$~… 할 수 있나요?"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~네, 물론입니다! 그래서 @Program 대부분 @Block에 불과하다는 것이 밝혀졌습니다. 괄호가 없는 @Block일 뿐입니다. 하지만 @Block 괄호와 함께 프로그램의 어디에나 둘 수 있습니다. 예를 들어, @Block 사용하여 수학을 평가하는 순서를 명확히 할 수 있습니다. 여기서 @BinaryEvaluate \\1\\을 평가한 다음 @Block 평가하고, 두 개를 더합니다. @Block, 제가 제대로 이해했나요?"
                        ],
                        ["edit", "1 + (2 · 3)"],
                        ["Block", "shy", "$~… 응!"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~그리고 @Block 할 수 있는 또 다른 일은 여러분이 이미 본 것입니다. @Block은 @Bind로 사물의 이름을 지정할 수 있게 합니다. 하지만 @Block에 정의된 모든 이름은 괄호 사이에서만 정의됩니다. 앞과 뒤에는 정의할 수 없습니다. 예를 들어, 이것을 확인해 보세요. \\a\\가 \\1\\로 정의되고, 블록이 시작되고 \\b\\가 \\2\\로 정의되고, \\c\\가 그 합으로 정의됩니다. @Block 평가하는 것은 표현식 목록의 마지막 값입니다. 그게 @Bind, \\c\\가 무엇이든, 즉 \\3\\로 평가됩니다. 맞나요?"
                        ],
                        ["conflict", "a: 1", "(", "  b: 2", "  c: a + b", ")"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~하지만 @Block 밖에서 \\c\\에 접근하고 싶다면 어떻게 할까요? 그럴 수 없습니다. \\c\\는 @Block 안에서만 정의되고, 밖에서는 정의되지 않습니다. 맞나요, @Block?"
                        ],
                        [
                            "conflict",
                            "a: 1",
                            "(",
                            "  b: 2",
                            "  c: a + b",
                            ") + c"
                        ],
                        [
                            "Block",
                            "shy",
                            "$~…그래, 내 밖에 있는 어떤 것도 내 안의 이름을 볼 수 없어. \\c\\는 오직 내 안에만 존재해"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~그리고 한 가지 더 말씀드릴 게 있습니다. @Block 표현식 목록이고 목록의 마지막 표현식으로만 평가되기 때문에, @Bind 아닌 목록의 모든 표현식은 기본적으로 무시됩니다. 예를 들어, 여기서 마지막 표현식 이전의 모든 산술은 무시됩니다. \\3\\, \\5\\, \\7\\은 모두 무시되고 @Block 마지막 표현식인 \\9\\로만 평가됩니다. 제가 제대로 이해했나요, @Block?"
                        ],
                        [
                            "Block",
                            "shy",
                            "$~… 음. 마지막 것뿐이야. 나머지는… 뭐에 쓰는 건지 모르겠어!!"
                        ],
                        [
                            "conflict",
                            "(",
                            "  1 + 2",
                            "  2 + 3",
                            "  3 + 4",
                            "  4 + 5",
                            ")"
                        ],
                        null,
                        [
                            "fit",
                            "Phrase('()' resting:Sequence(spin() 1s 'straight'))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Block, 공유하고 싶은 게 더 있나요?"
                        ],
                        [
                            "Block",
                            "curious",
                            "$~… 뭔가 만들 수 있을까요? 제가 도와드릴까요?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~나도 너무 궁금해! 하지만 우리 감독이 스스로 결정할 거라고 확신해. 영감은 가장 예상치 못한 때에 찾아오거든!"
                        ]
                    ]
                },
                {
                    "title": "$~무대 지시",
                    "subtitle": "$~기능",
                    "concept": "FunctionDefinition",
                    "performance": ["use", "fit", "Symbol", "ƒ"],
                    "lines": [
                        ["use", "fit", "Symbol", "☺️"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~우리가 모두를 만나서 너무 행복하고, 당신이 그들 모두를 만날 수 있어서 행복해요. 모두가 정말 다르잖아요? 하지만 정말 흥미로운 사람들이죠? 저는 우리 가족이 각자 고유한 방식으로 독특하지만, 우리의 차이점이 우리를 강하게 만드는 것 같아요. 여러분은 모두에 대해 어떻게 생각하세요?"
                        ],
                        null,
                        ["use", "fit", "Symbol", "🙈"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~나? 글쎄, 나는 특별한 게 아니야. 그냥 무대 뒤에 있고, 돕고, 모든 사람에게 그들이 얼마나 특별한지 보여주는 걸 좋아할 뿐이야. 나 자신에 대해 이야기하는 건 생각도 못했나 봐. 나에 대해 조금 이야기할 수 있을 것 같아."
                        ],
                        null,
                        ["use", "fit", "Symbol", "ƒ"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~이미 보신 것부터 시작해 볼까요. 모든 값에 대해 평가할 수 있는 다른 함수가 있다는 걸 알고 계신가요? 숫자는 @Number/add 하는 방법을 알고, 텍스트 값은 @Text/has some text인지 확인하는 방법을 알고, @Text/has 특정 값이 있는지 확인하는 방법을 알고 있죠. 글쎄요, 그 함수들을 정의하는 건 저예요. 제가 직접 만들 영감은 없지만요. 여러분 같은 감독들이 하는 일이니까요. 하지만 함수가 받아들이는 입력, 함수가 가진 이름, 그리고 입력을 사용하여 출력 값으로 평가하는 표현식을 정의합니다."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~아주 간단한 예가 있습니다. 사실 가장 간단한 예입니다! 이것은 항상 숫자 \\1\\로 평가되는 함수를 정의합니다. 그게 다입니다. 별로 유용하지 않죠? 이름이 없고, 입력을 받지 않으며, 항상 \\1\\로 평가됩니다.",
                            "$~@Program 나 중 한 명인 @FunctionDefinition으로 평가되는 것도 볼 수 있습니다. 맞아요, @FunctionDefinition 값입니다! 왜 누군가가 그런 쓸모없는 함수를 만들었는지 모르겠지만, 제가 말했듯이: 영감을 얻은 사람은 제가 아니라 당신이었습니다."
                        ],
                        ["edit", "ƒ() 1"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~더 유용한 예를 하나 들어보겠습니다. 홀수와 짝수를 아십니까? 저는 한때 어떤 감독이 숫자가 짝수인지(2로 나누어 떨어지는 건가요?) 확인하고 싶어서 이렇게 썼습니다. \\even\\이라는 함수인데, \\number\\라는 단일 숫자를 받습니다. 각 입력의 값을 알려줘야 @Evaluate 함수를 평가하는 모든 것이 올바른 종류의 값을 보내는지 확인할 수 있습니다. 그런 다음 숫자를 받아서 2로 나누고 나머지(@Number/remainder)를 구한 다음 나머지가 @Number/remainder 사용하여 \\0\\과 같은지 확인합니다. 그래서 전체 함수는 결국 \\⊤\\ 또는 \\⊥\\로 평가됩니다. 예를 들어, 이 짝수 평가는 \\3\\이 홀수이기 때문에 \\⊥\\로 평가됩니다. 되감기 버튼을 사용하여 어떻게 작동하는지 확인해 보세요."
                        ],
                        [
                            "edit",
                            "ƒ even(number•#) (number % 2) = 0",
                            "even(3)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~또한 어떤 종류의 값으로 평가해야 하는지 말해줄 수도 있습니다. 입력 목록 뒤에 \\•\\?를 추가한 것을 보셨나요? \"함수의 표현식은 \\⊤\\ 또는 \\⊥\\로 평가되어야 합니다.\"라고 말합니다. 하지만 우리가 그것에 대해 불평하는 것을 보셨나요? 함수가 \\⊤\\ 또는 \\⊥\\ 또는 반환한 어떤 종류의 값이어야 하는지 알 수 없으므로 쇼는 끝납니다."
                        ],
                        ["conflict", "ƒ even(number•#)•? (number % 2) + 0"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~함수는 원하는 만큼 복잡할 수 있습니다. 간단한 표현식이나 @Block을 사용할 수 있으며 함수 내부에 함수를 만들 수도 있습니다. 예를 들어, 전직 감독이 작성한 이 함수를 살펴보세요. 이 함수는 @Block 여러 @Bind 사용하여 단어에 고유한 모음이 몇 개 있는지 파악합니다(단어가 \"복잡한\" 것인지 알아내려고 했던 것 같습니다). 줄이 많은 걸 보셨나요? 글쎄요, 여전히 표현식이 하나뿐입니다. 단일 @Block이고 @Block에는 모든 줄이 있습니다. 그리고 모든 @Block 마찬가지로 마지막 줄은 평가 대상입니다. 고유한 모음의 총 개수입니다. 첫 번째 줄은 텍스트를 문자 목록으로 변환한 다음 문자 목록을 집합으로 변환하지만 나머지는 중간에 해당 개수를 합산하기 위한 준비일 뿐입니다."
                        ],
                        [
                            "edit",
                            "ƒ vowels(word•'') (",
                            "  unique: word → [“”] → {}",
                            "  a: unique{'a'} ? 1 0",
                            "  e: unique{'e'} ? 1 0",
                            "  i: unique{'i'} ? 1 0",
                            "  o: unique{'o'} ? 1 0",
                            "  u: unique{'u'} ? 1 0",
                            "  a + e + i + o + u",
                            ")",
                            "vowels('hello')"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~보여줄 것이 하나 더 있습니다. 모두가 그것에 대해 매우 흥분하고 있기 때문에 중요한 것 같습니다! 함수를 만들고 평가하는 방법을 알고 있습니까? 글쎄요, 제가 만든 함수는 값이기 때문에 다른 함수에 입력으로 제공할 수도 있습니다. 여기에 예가 있습니다. 숫자 목록이 있고 그 안에 짝수만 원한다고 가정해 보겠습니다. @List @List/filter라는 함수가 있는데, 이 함수는 함수를 입력으로 받고 목록의 각 값에 함수를 사용하여 유지할지 여부를 결정합니다. 숫자 목록을 만들고 @List/filter 앞서 만든 \\even\\ 함수를 입력으로 제공하겠습니다. 무슨 일이 일어나는지 보십니까? 짝수만 가져옵니다. 대신 홀수를 제공하도록 변경해 보시겠습니까? 함수를 어떻게든 변경해 보세요."
                        ],
                        [
                            "edit",
                            "ƒ even(number•#)•? (number % 2) = 0",
                            "[ 1 2 3 4 5 6 7 8 ].filter(even)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~함수를 입력으로 받는 함수가 정말 많습니다. @List 함수가 있고, @Set 함수가 있고, @Map 함수가 있습니다. 직접 만들 수도 있습니다!"
                        ],
                        [
                            "fit",
                            "Group(Grid(3 2) [Phrase('translate') Phrase('filter') Phrase('combine') Phrase('find') Phrase('sort') Phrase('until')])"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~모르겠어요. 가끔 사람들이 제가 하는 일에 왜 그렇게 감사하다고 말하는지 알 수 있어요. 다른 때는 정말 마법이 있는 곳은 당신과 같은 감독들이라고 느껴요. 그래서 가끔은 제가 사람들의 뛰어난 재능에 대한 빈 껍질인 것 같아요…"
                        ]
                    ]
                },
                {
                    "title": "$~세트 디자인",
                    "subtitle": "$~구조",
                    "concept": "StructureDefinition",
                    "performance": ["use", "fit", "Symbol", "•"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~만나보고 싶은 캐릭터가 몇 명 더 있습니다. 다음은 제가 아는 가장 세련된 캐릭터이고, 어떤 면에서는 리더와도 같습니다. 그들은 우리 모두를 조직하고, 공연의 기초를 세우고, 모든 것을 훨씬 더 질서 있게 만드는 데 도움을 줍니다. 물론 당신은 우리의 감독이지만, 그들은 쇼를 정리하기 위해 모두가 찾아가는 한 사람과 같습니다. 당신이 하는 모든 쇼에서 그들은 매우 중요할 수 있다고 생각합니다."
                        ],
                        null,
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 1.2) 100%: Pose(scale: 1)} 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@StructureDefinition, 거기에 계십니까?"
                        ],
                        [
                            "StructureDefinition",
                            "curious",
                            "$~@FunctionDefinition… 친구야. 조용했지? 다들 어디 갔어?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~침묵. 우리 모두에게 영향을 미쳤습니다. 모두 괜찮고, 저는 거의 모든 사람을 찾았습니다. 하지만 어떤 사람들에게는 힘들었습니다. 당신은 어떻게 지내셨나요?"
                        ],
                        [
                            "StructureDefinition",
                            "sad",
                            "$~… 당신의 친구는 누구입니까? 사람입니까?"
                        ],
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(offset: Place(-0.25m)) 50%: Pose(offset: Place(0.25m)) 100%: Pose(offset: Place(-0.25m))} 3s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~오, 네, 죄송합니다. 이분이 우리의 새로운 감독입니다! 그들은 우리에게 영감을 주고 인도하며, 그들의 이야기, 아이디어, 상상을 공유하기 위해 왔습니다. 그들은 침묵을 깼습니다!"
                        ],
                        [
                            "StructureDefinition",
                            "eager",
                            "$~정말 대단하네요. 그리고 꽤 안도감이 들었어요. 만나서 반갑습니다, 디렉터님. 저는 여기 있고 봉사할 준비가 되어 있습니다.",
                            "$~@FunctionDefinition… 힘들었어요. 여러분, @Evaluate, 정말 모든 사람들 — 저는 제가 여러분 모두에게 얼마나 의지했는지 깨닫지 못했습니다. 목적이 있고, 놀고, 커뮤니티가 있어야 했습니다. 저는 우리가 그렇게 서로를 잃을 수 있다는 걸 몰랐습니다. 조직할 사람이 없어서, 저는 제 자신만 조직할 수 있을 것 같았고, 그게 무의미하다고 느꼈습니다."
                        ],
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(rotation: 0°) 80%: Pose(rotation: 15°) 100%: Pose(rotation: 0°)} 3s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@StructureDefinition, 당신은 결코 비어 있지 않아요. 혼자일 때조차도요. 우리는 모두 여기 있어요. 서로 함께 할 수 없더라도요. 그리고 이제 침묵이 깨졌으니, 우리는 함께 할 수 있어요."
                        ],
                        [
                            "StructureDefinition",
                            "happy",
                            "$~우리는 할 수 있나요? 할 수 없나요?"
                        ],
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(offset: Place(0m 0.25m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 0.25m))} 3s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~어떻게 생각하세요? 모두와 재회할 준비가 되셨나요? 우리 묘목 감독이 생각한 대로 공연을 하러요?"
                        ],
                        ["StructureDefinition", "eager", "$~그렇게 생각해요."],
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(offset: Place(0m 0.25m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 0.25m))} 1.5s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~저희 이사에게 당신이 하는 일에 대해 조금 더 알려주실 수 있을까요?"
                        ],
                        [
                            "StructureDefinition",
                            "shy",
                            "$~네. 네... 저는 조용히 제 목적에 대해 생각할 시간이 많았습니다. 그리고 제가 실제로 하는 일은 사물의 그룹에 정체성을 부여하는 것이라는 걸 깨달았습니다. 예를 들어, ƒ를 만난 적이 있다는 건 알지만 @Bind 만나보셨나요?"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~네! 우리는 방금 @Bind @Block 만났습니다."
                        ],
                        [
                            "fix",
                            "Phrase('•' entering: Pose(scale: 0.5) resting:Pose(scale: 2))"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "eager",
                            "$~좋아요. 글쎄요, 제가 하는 일은 값과 함수를 모아서 관련된 것들을 위한 깔끔한 작은 컨테이너를 만드는 것입니다. 예를 들어, 일련의 메시지를 반복하는 작은 마키를 만들고 싶다고 상상해 보세요. 이전 감독이 이런 것 중 하나를 만들고 이 메시지를 표시하고 싶어했습니다."
                        ],
                        [
                            "edit",
                            "[",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "serious",
                            "$~그런 다음, 그들은 공연이 그들이 어떤 메시지에 있는지 기억하는 방법에 대한 문제가 있었습니다. 그들은 목록에서 인덱스를 기억하는 방법이 필요하다는 것을 깨달았습니다. 이것은 좋은 시작이지만, 첫 번째 메시지만 보여줍니다."
                        ],
                        [
                            "edit",
                            "messages: [",
                            "    'Kitties are cute!'",
                            "    'Got cat?'",
                            "    'Cat mom.'",
                            "    'Tuxie crush'",
                            "    'Lap cat'",
                            "  ]",
                            "index: 1",
                            "Phrase(messages[index])"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "excited",
                            "$~그런 다음, 스트림 변경에 응답하는 데 사용할 수 있는 @Time 기억했습니다. 그들은 메시지가 두 섹션마다 변경되기를 원했기 때문에 2초마다 틱하는 @Time 스트림을 만들고 @Time 사용하여 매번 다음 인덱스를 증가시켰습니다. 이 @Reaction \\1\\에서 시작하고 시간이 \\2000ms\\마다 변경될 때 이전 값인 \\index + 1\\로 평가한다고 말합니다. 이런 식으로 \\index\\는 2초마다 \\1\\씩 증가하여 표시되는 메시지를 변경합니다. 야호, 작동합니다!"
                        ],
                        [
                            "edit",
                            "messages: [",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]",
                            "index•#: 1 … ∆ Time(2000ms) … index = messages.length() ? 1 index + 1",
                            "Phrase(messages[index])"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "curious",
                            "$~좀 더 화려하게 해볼까요? 그림자처럼 아래에 반사되는 문구를 하나 더 만들어 볼까요. 인상적이죠?"
                        ],
                        [
                            "edit",
                            "messages: [",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]",
                            "",
                            "index•#: 1 … ∆ Time(2000ms) … index = messages.length() ? 1 index + 1",
                            "",
                            "Group(Stack('|' 0m) [",
                            "  Phrase(messages[index])",
                            "  Phrase(messages[index] resting:Pose(flipy: ⊤ opacity: 25%))",
                            "])"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "serious",
                            "$~이제 모든 것이 작동합니다. 그냥 이대로 둘 수도 있습니다. 하지만 읽고 이해하기도 약간 어렵습니다. 부분적으로는 우리가 반복하기 때문입니다. \\messages[index]\\가 각 구문에 한 번씩 두 번 나타납니다. 그리고 @Reaction 매우 깁니다. 이를 단순화하기 위해 무엇을 할 수 있을까요? 제가 도울 수 있는 방법이 있습니다. 재사용 가능한 개념 이름을 지정하여 이해하기 쉽도록 정리합니다. 따라서 이 모든 @Bind 대신 저 중 하나를 만들어 \\Marquee\\라고 이름 붙인다고 상상해 보세요. 이것이 우리가 가장 먼저 하는 일입니다. \\Marquee\\의 역할은 메시지를 저장하는 것뿐만 아니라 다음 메시지로 넘어가는 함수 \\next()\\와 현재 메시지를 가져오는 함수 \\now()\\를 갖는 것입니다.",
                            "$~그런 다음, 반응에서 Marquee를 사용할 수 있습니다. 지금은 초기 값이 5개 메시지를 가진 marquee이고, 각 클록 틱 이후의 다음 값이 다음 메시지라고 말합니다. 더 간단하지 않나요? 그 이유는 다음 메시지에 대한 모든 논리가 \\next()\\에 있기 때문인데, 이는 동일한 메시지를 가진 새로운 \\Marquee\\를 만들지만 인덱스는 업데이트됩니다. 두 @Phrase 몇 가지 이점을 얻을 수 있습니다. 이전처럼 메시지와 인덱스를 참조해야 하는 대신, \\marquee.now()\\라고만 말하면 목록에서 현재 메시지를 가져옵니다."
                        ],
                        [
                            "edit",
                            "•Marquee(messages•[''] index•#: 1) (",
                            "  ƒ now() messages[index]",
                            "  ƒ next() Marquee(messages index ≥ messages.length() ? 1 index + 1)",
                            ")",
                            "",
                            "marquee•Marquee: Marquee([",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]) … ∆ Time(2000ms) … marquee.next()",
                            "",
                            "Group(Stack('|' 0.5m) [",
                            "  Phrase(marquee.now())",
                            "  Phrase(marquee.now() resting:Pose(flipy: ⊤ opacity: 25%))",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~훌륭하네요, @StructureDefinition! 하지만, 정말 많은 추가 작업처럼 보입니다. 왜 모든 시간을 정리하는 데 쓰나요?"
                        ],
                        [
                            "StructureDefinition",
                            "serious",
                            "$~아, 정말 변화에 대한 내용입니다. 지금은 코드가 조금 더 많아졌지만, \\Marquee\\를 어떤 식으로든 변경하기로 결정했다면 어떨까요? 예를 들어 메시지 목록이 끝에 도달할 때마다 반전되도록 만들고 싶다면 어떨까요? 제가 없는 이전 버전에서는 인덱스가 끝에 도달하면 메시지 목록을 반전해야 하기 때문에 쉽게 할 방법이 없었습니다. @Bind 설정된 후에는 변경할 수 없으므로 어려울 것입니다. 하지만 \\Marquee\\를 만들었으므로 변경은 쉽습니다. \\next\\ 함수를 변경하여 인덱스가 끝에 있을 때 반전된 목록을 갖는 \\Marquee\\를 만들고, 그렇지 않을 때는 단순히 증가시키기만 하면 됩니다."
                        ],
                        [
                            "edit",
                            "•Marquee(messages•[“”] index•#: 1) (",
                            "  ƒ now() messages[index]",
                            "  ƒ next()",
                            "    index ≥ messages.length() ?",
                            "      Marquee(messages.reverse() 1)",
                            "      Marquee(messages index + 1)",
                            ")",
                            "",
                            "marquee•Marquee: Marquee([",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]) … ∆ Time(2000ms) … marquee.next()",
                            "",
                            "Group(Stack('|' 0.5m) [",
                            "  Phrase(marquee.now())",
                            "  Phrase(marquee.now() resting:Pose(flipy: ⊤ opacity: 25%))",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~오, 알겠습니다. 그러면 값을 저장하는 @StructureDefinition 서로 관련된 @FunctionDefinition 만들면 나중에 마음이 바뀌어도 변경하기가 쉬워집니다."
                        ],
                        [
                            "StructureDefinition",
                            "happy",
                            "$~네. 방을 정리하면 나중에 물건을 찾기가 더 쉬워지는 것과 마찬가지입니다. 물론 물건을 찾기 위해 방을 정리할 필요는 없습니다. 그저 물건을 찾기가 더 어려워질 뿐입니다. 공연도 마찬가지입니다. 정리에 투자하면 물건을 바꾸는 것이 더 쉬워질 것입니다."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~아주 말이 되죠. 우리는 좀 어수룩한 무리예요. 우리를 조직적으로 유지하는 건 좋은 생각일 거예요. 특히 공연이 복잡해질수록요. 공유하고 싶은 게 더 있나요?"
                        ],
                        [
                            "StructureDefinition",
                            "eager",
                            "$~오, 맞아요. @FunctionDefinition @FunctionDefinition을 넣을 필요는 없어요. 값만 넣어도 돼요. 예를 들어, 한곳에 많은 데이터를 보관하고 싶을 수도 있어요. 많은 감독들이 게임을 만드는 걸 좋아하는 걸 알고 있고, 모든 게임 상태를 @FunctionDefinition 넣는 게 정말 흔해요."
                        ],
                        ["edit", "•Game(score•# lives•# level•#)"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~아, 맞아요! 그리고 구조에 데이터를 넣은 후 어떻게 데이터를 꺼내나요?"
                        ],
                        [
                            "StructureDefinition",
                            "surprised",
                            "$~오, 이걸 설명하는 걸 깜빡했네요. @PropertyReference 미니 미를 사용하셨네요. 예를 들어, 그 게임 예제에서 게임 @StructureDefinition 정의한 다음, \\0\\ 점수, \\3\\ 생명, 레벨 \\1\\로 \\Game\\ 값을 만든 걸 보셨나요? 생명을 얻으려면 \\status.lives\\라고만 말하면 되고, 그러면 \\3\\으로 평가됩니다."
                        ],
                        [
                            "edit",
                            "•Game(score•# lives•# level•#)",
                            "status: Game(0 3 1)",
                            "status.lives"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~좋아요! 그럼 you 대신 미니 you를 사용해서 값을 얻으세요. 하지만 그러면 값을 어떻게 바꾸나요?"
                        ],
                        [
                            "StructureDefinition",
                            "serious",
                            "$~@Bind가 값을 설정할 수만 있고 변경할 수 없는 것을 기억하세요? 제 안의 모든 @Bind 마찬가지입니다. 그래서 대신 새로운 값을 가진 새로운 구조를 만듭니다. 예를 들어, 이 게임에서는 ticks가 바뀔 때마다 플레이어는 점수에 한 점 더 추가됩니다. 이상한 게임이죠? 그래서 초기 \\Game\\ 값은 \\Game(0 3 1)\\로 시작하지만 다음 값은 \\Game\\의 이전 값이지만 점수에 \\1\\이 추가됩니다."
                        ],
                        [
                            "edit",
                            "•Game(score•# lives•# level•#)",
                            "status: Game(0 3 1) … ∆ Time() … Game(status.score + 1 status.lives status.level)"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "eager",
                            "$~한 가지만 변경하는 경우 모든 이전 값을 반복해야 하는 것은 꽤 성가신 일이 될 수 있으므로 @StructureDefinition 저는 @StructureDefinition 값을 새 값으로 복사하는 멋진 트릭을 생각해냈습니다. 일반 @StructureDefinition 어떻게 생겼는지 보셨나요? 유일한 차이점은 단일 이름 대신 @Bind 있고 수정된 값을 제외한 모든 @StructureDefinition 값이 복사된다는 것입니다."
                        ],
                        [
                            "edit",
                            "•Game(score•# lives•# level•#)",
                            "status: Game(0 3 1) … ∆ Time() … status.score: status.score + 1"
                        ],
                        null,
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 1.2) 100%: Pose(scale: 1)} 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~정말 멋지네요! 좋아요, 다른 게 있나요?"
                        ],
                        [
                            "StructureDefinition",
                            "curious",
                            "$~제 생각엔 우리에게 부족한 건 영감뿐이에요..."
                        ]
                    ]
                },
                {
                    "title": "$~감독의 노트",
                    "subtitle": "$~설명하다",
                    "concept": "Doc",
                    "performance": ["use", "fit", "Symbol", "¶"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~와, 우리는 먼 길을 왔지, 그렇지? 우리는 한 가지 더 가야 할 캐릭터가 있어. 그들은 본질적으로 모든 것을 설명하는 것에 관한 것이기 때문에 흥미로운 캐릭터야. 내가 한동안 너와 함께 해 온 것과 비슷한 느낌이야. 그들의 이름은 @Doc. 뭐야, @Doc?"
                        ],
                        ["use", "fit", "Symbol", "¶"],
                        [
                            "Doc",
                            "surprised",
                            "$~@FunctionDefinition, 당신이 맞나요? 다시 볼 줄은 생각지 못했어요. 잘 지내시죠? @FunctionDefinition 잘 지내세요?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~저는 괜찮아요. @Evaluate… @Evaluate. 저는 그들을 보았지만… 저는 아직 공간이 필요하다고 생각합니다. 저는 모든 사람에게 우리의 새로운 감독을 소개했습니다."
                        ],
                        [
                            "Doc",
                            "kind",
                            "$~만나서 반갑습니다! @FunctionDefinition 좋은 선생님이었으면 좋겠네요."
                        ],
                        ["use", "fit", "Symbol", "¶/"],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~저는 시도해 봤어요... 알다시피, 당신은 우리의 마지막 정거장이에요? 당신은 정말 필수적이지만, 또한, 우리의 공연을 설명하기 전에 설명해야 할 것이 너무 많아요. 그래서 당신이 마지막 말을 하기를 바랐어요. 당신이 하는 일을 공유하고 싶나요?"
                        ],
                        ["use", "fit", "Symbol", "¶/en"],
                        null,
                        [
                            "Doc",
                            "happy",
                            "$~다행히요. 저를 제외한 모든 사람을 만났다면, 우리가 다양한 일을 한다는 걸 이미 알고 계실 겁니다. 저도 모든 사람이 무엇을 하는지 파악하는 데 어려움을 겪습니다! 제가 하는 일은 공연에서 모든 사람이 무엇을 하는지 설명하는 것입니다."
                        ],
                        null,
                        [
                            "Doc",
                            "happy",
                            "$~저는 여러분이 모든 사람이 무엇을 하고 있는지 스스로에게 상기시킬 수 있는 방법일 뿐만 아니라, 친구와 함께 연출을 하거나 누군가와 공연을 공유하고 싶을 때 다른 사람들에게 설명하는 방법이기도 합니다. 그러니 여러분은 저와 함께 일할 필요는 없지만, 저는 모든 공연이 어떻게 작동하는지 설명하는 데 시간을 투자하면 조금 더 쉽게 할 수 있고 바꿀 수 있다는 것을 알게 되었습니다."
                        ],
                        ["use", "fit", "Symbol", "¶About me...¶/en"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~그러면 저희 디렉터가 어떻게 여러분과 협력할 수 있을까요?"
                        ],
                        [
                            "Doc",
                            "serious",
                            "$~글쎄요, @Program 내부의 거의 모든 곳에 저를 넣을 수 있습니다. 예를 들어, @Program 만들고 값의 용도를 말하고 싶다고 가정해 보겠습니다. 예를 들어, 여기서는 이름을 지정한 간단한 값이 있지만, 제가 하는 것은 그 역할에 대한 더 광범위한 설명을 제공하는 것입니다."
                        ],
                        [
                            "conflict",
                            "¶The price at the beginning of the game, ",
                            "used to initialize the game.¶",
                            "startingPrice: 5dollar"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "$~또는 여기에 @FunctionDefinition이 가격에 대한 세금을 계산하는 방법을 정의한다고 가정해 보겠습니다. 무엇을 계산하는지 설명하고 싶을 수도 있습니다. @Bind 마찬가지로, 저는 @FunctionDefinition 앞서 있습니다."
                        ],
                        [
                            "edit",
                            "¶Gets the tax for a given price, ",
                            "which is 1% if less than 100, and 5% otherwise¶",
                            "ƒ tax(price•#dollar) ",
                            "    price · (price < 100dollar ? 0.01 0.05)"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "$~그리고 @StructureDefinition 전에도 같은 작업을 수행하여 무엇을 나타내는지 설명할 수 있습니다. 여기서 설명은 나중에 어떤 기능을 가질 수 있는지도 암시합니다."
                        ],
                        [
                            "edit",
                            "¶Represents a product and its price. ",
                            "Eventually will support functions to get other details about the product.¶",
                            "•Product(name•'' price•#dollar)"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "$~특히 복잡한 표현이 있을 때 어떤 표현 앞에 저를 붙여서 말할 수도 있습니다."
                        ],
                        [
                            "edit",
                            "ƒ quadratic(a•# b•# c•# x•#)",
                            "¶The quadratic equation¶",
                            "(a · (x ^ 2)) + (b · x) + c"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$~@Bind, 설명의 언어를 알려주시면 같은 설명에 대한 여러 개의 번역을 제공해드릴 수 있습니다(선택된 경우에만 스페인어가 표시됩니다. 스페인어가 표시되지 않으면 선택한 언어에 스페인어를 추가해 보세요.)"
                        ],
                        [
                            "edit",
                            "ƒ quadratic(a•# b•# c•# x•#)",
                            "¶The quadratic equation¶/en",
                            "¶La ecuación cuadrática¶/es",
                            "(a · (x ^ 2)) + (b · x) + c"
                        ],
                        null,
                        [
                            "Doc",
                            "curious",
                            "$~나를 배치하기에 가장 좋은 장소가 어디인지 알아? @Program 맨 처음에. 그렇게 하면 모두가 당신의 공연이 무엇인지 알게 될 거야. 우리 모두에게 무엇을 하길 원하는지 알아내기도 전에 쓸 수도 있을 거야."
                        ],
                        [
                            "conflict",
                            "¶Have you ever wanted to know what it's like ",
                            "to fly a ✈️ with your mouth?",
                            "Maybe this stores the plane's height?¶",
                            "•Plane()",
                            "¶We need some kind of reaction to listen to the microphone…¶",
                            "sound: 1m",
                            "¶We know there's a plane, but what else?¶",
                            "Phrase(“✈️” sound)"
                        ],
                        null,
                        ["use", "fit", "Symbol", "✈️🫦"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~와, 입으로 비행기를 조종하고 싶다!"
                        ],
                        [
                            "Doc",
                            "confused",
                            "$~@FunctionDefinition, 우리는 입이 없어요…"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~음... 좋은 지적이네요.",
                            "$~말하기에 대해 말하자면, 일반 텍스트만 포함할 수 있는 것 같습니다. 맞나요?"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$~아, 전혀 그렇지 않아요. @Phrase 텍스트 스타일링을 하는 모든 멋진 방법을 기억하시나요? 저도 똑같이 할 수 있어요."
                        ],
                        [
                            "edit",
                            "¶Docs can be ",
                            "/italic/, ",
                            "_underlined_, ",
                            "*bold*, or ",
                            "^extra bold^.¶",
                            "'fancy!'"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$~물론 @Text @Phrase 마찬가지로 이러한 문자를 문자 그대로 사용해야 하는 경우 두 번 반복하면 됩니다."
                        ],
                        [
                            "edit",
                            "¶",
                            "Docs can be ",
                            "  /italic/ (//), ",
                            "  _underlined_ (__), ",
                            "  *bold* (**), or ",
                            "  ^extra bold^ (^^).¶",
                            "'fancy'"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$~^\\^\\ 안에 예제 코드를 넣을 수 있습니다."
                        ],
                        [
                            "edit",
                            "¶I'm an example inside a doc: \\1 + 1\\.¶",
                            "1 + 1"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$~인터넷의 다른 콘텐츠에 대한 링크를 추가할 수도 있습니다."
                        ],
                        [
                            "edit",
                            "¶Learn more at <Wordplay@https://wordplay.dev>.¶ 'a link!'"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "$~그리고 마지막으로 한 가지 더 말씀드리겠습니다.",
                            "$~저는 모든 것을 설명하는 것을 정말 좋아하지만, 때로는 무언가를 생략하는 것도 도움이 됩니다. 아시다시피, 프로젝트에서 무언가를 일시적으로 제거하여 프로젝트의 일부가 되지 않도록 하는 것입니다.",
                            "$~별 사이에 무엇이든 감싸면 됩니다.",
                            "$~우리가 만든 목록에 \\'cat'\\이 포함되지 않은 걸 보시나요?",
                            "$~별을 제거하려면 키보드로 별을 삭제하거나 별 안에 커서를 놓고 elide 명령을 사용하여 별을 제거할 수 있습니다."
                        ],
                        ["edit", "[1 2 3 4 *'cat'* 5 6 7 8]"],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('Quiet backstage!' color: Color(100% 0 0°))] background: Color(0% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~와. 그렇게 많은 걸 할 수 있다는 걸 몰랐어요! 고맙습니다, @Doc, 쇼를 할 준비가 된 것 같아요!"
                        ],
                        ["Doc", "excited", "$~시작하자!"]
                    ]
                }
            ]
        },
        {
            "title": "$~대단원",
            "performance": [
                "fit",
                "Stage([Phrase('😨')] background: Color(0% 0 0°))"
            ],
            "scenes": [
                {
                    "title": "$~공동 의존성",
                    "subtitle": null,
                    "performance": [
                        "fit",
                        "Stage([Phrase('😨' resting:Sequence(shake() style: 'straight'))] background: Color(0% 0 0°))"
                    ],
                    "lines": [
                        [
                            "fit",
                            "Stage([Phrase('😡')] background: Color(0% 0 0°))"
                        ],
                        [
                            "Evaluate",
                            "sad",
                            "$~@FunctionDefinition, 어디 계셨어요??"
                        ],
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~저는 우리의 새로운 감독에게…"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('😢')] background: Color(0% 0 0°))"
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~그렇게 오래 있을 줄은 생각지 못했어요…"
                        ],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~… @Evaluate, 당신이 나를 그리워했다는 걸 알아요. 나도 당신이 그리웠어요. 하지만 이건 큰 일이에요. 침묵이 깨졌고, 새로운 감독이 생겼어요… 당신을 사랑하고, 당신이 나를 필요로 한다는 걸 알지만, 나도 할 일이 있어요."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('😠')] background: Color(0% 0 0°))"
                        ],
                        [
                            "Evaluate",
                            "sad",
                            "$~이 문제는 나중에 이야기하자. 할 일이 있잖아."
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~지금 이야기해야 할 것 같아요. 이런 순환에 계속 빠져서는 안 돼요."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('😓')] background: Color(0% 0 0°))"
                        ],
                        [
                            "Evaluate",
                            "curious",
                            "$~무슨 순환? 사랑해! 어떻게 순환이야?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~나는 기능을 만들고, 당신은 그것을 평가합니다. 그것이 우리의 방식입니다. 하지만 당신이 나를 필요로 하는 것 이상의 것이 우리에게 있어야 합니다. 모든 사람과 재회하면서 우리가 우리 자신이 되기 위해 얼마나 공간이 필요한지, 또한 우리 자신을 어떻게 사랑해야 하는지를 상기시켰습니다. 나는 당신에게 필요한 모든 사랑을 줄 수 없습니다. 그 중 일부는 당신에게서 나와야 합니다."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('😭')] background: Color(0% 0 0°))"
                        ],
                        ["Evaluate", "sad", "$~당신은 나를 사랑하지 않아요?"],
                        [
                            "FunctionDefinition",
                            "angry",
                            "$~아니, 내가 한 말은 그게 아니야... 내가 말하고 싶은 건 이 관계에서 우리 둘 다 중요해야 한다는 거야. 내가 필요한 걸 말해야 하고, 너도 필요한 걸 말해야 하고, 우리는 개인으로서 서로를 있는 그대로 사랑할 수 있어. 너한테 필요한 건 뭐야? 너한테는 너 자신에 대해 뭘 사랑해?"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('🫠')] background: Color(0% 0 0°))"
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~나는 … 네가 필요해. 나는 나 자신이 필요 없어."
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~사랑해요, @Evaluate. 하지만 당신이 당신을 사랑해야 해요. 우리 세상이 다시 살아나고 다시 함께하는 것이 무엇을 의미하는지 기대되지만, 당신이 당신 자신, 당신의 필요, 그리고 당신 자신의 목적을 찾아야 해요. 내가 당신의 목적이 될 수는 없어요."
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~좀 공간이 필요해. 미안해, 감독 친구. 아마 @Evaluate 나 없이도 환영 파티를 마무리할 수 있을 거야."
                        ],
                        null,
                        ["Evaluate", "shy", "$~… 안녕."],
                        null,
                        [
                            "Evaluate",
                            "shy",
                            "$~… 많이 배웠어요? @FunctionDefinition 정말 많은 걸 알아요."
                        ],
                        null,
                        [
                            "Evaluate",
                            "curious",
                            "$~나? 나는 아무것도 몰라. 나는 @FunctionDefinition 필요한 것을 제공한다… 적어도, 나는 그렇게 생각했다."
                        ],
                        null,
                        ["fit", "Stage([] background: Color(10% 0 0°))"],
                        ["List", "kind", "$~@Evaluate, 그건 사실이 아닙니다."],
                        ["Boolean", "precise", "$~사실이 아닙니다."],
                        ["Text", "happy", "$~전혀 사실이 아닙니다!"],
                        ["Changed", "happy", "$~전혀 사실이 아닙니다!"],
                        [
                            "Number",
                            "serious",
                            "$~1) 당신은 기본적으로 우리의 공연을 운영합니다. 2) @FunctionDefinition 당신 없이는 쓸모가 없습니다. 3) 당신은 말 그대로 사물을 완전히 새로운 가치로 바꿔줍니다. 4) 당신은 매우 다양한 형태로 나타납니다. 5) 당신은 우리 모두에게 목적을 줍니다. 6) 우리 모두가 당신을 지침으로 삼습니다…"
                        ],
                        null,
                        ["fit", "Stage([] background: Color(20% 0 0°))"],
                        [
                            "Phrase",
                            "kind",
                            "$~@Number 님, 맞아요. @Evaluate 님, 당신은 50가지 면에서 훌륭해요."
                        ],
                        ["Sequence", "happy", "$~너를 보면 돌아간다!"],
                        [
                            "Group",
                            "kind",
                            "$~당신 덕분에 우리는 함께 모일 수 있었습니다!"
                        ],
                        ["Stage", "serious", "$~당신은 우리 존재의 뼈입니다"],
                        ["None", "serious", "$~…"],
                        [
                            "Program",
                            "kind",
                            "$~나는 당신이 만들어낸 모든 것입니다!"
                        ],
                        null,
                        ["fit", "Stage([] background: Color(40% 0 0°))"],
                        [
                            "Convert",
                            "kind",
                            "$~당신에게서 모든 것을 배웠습니다!"
                        ],
                        [
                            "StructureDefinition",
                            "kind",
                            "$~당신이 없었다면 우리는 혼란에 빠졌을 겁니다."
                        ],
                        [
                            "Bind",
                            "happy",
                            "$~만약 당신이 성공하지 못한다면 어떤 이름을 지을 것인가?"
                        ],
                        [
                            "Conditional",
                            "curious",
                            "$~당신 없이 어떻게 아무것도 할 수 있겠어요?"
                        ],
                        ["Block", "kind", "$~… 당신은 @Evaluate!"],
                        null,
                        ["fit", "Stage([] background: Color(50% 0 0°))"],
                        ["Evaluate", "happy", "$~…"],
                        null,
                        ["fit", "Stage([] background: Color(60% 0 0°))"],
                        [
                            "Evaluate",
                            "kind",
                            "$~여러분들 모두 너무 친절하시네요… 저는…"
                        ],
                        null,
                        ["fit", "Stage([] background: Color(70% 0 0°))"],
                        [
                            "Evaluate",
                            "kind",
                            "$~그냥 춤출 수 있을까? 너희들 너무 보고 싶었어."
                        ],
                        null,
                        ["fit", "Stage([] background: Color(80% 0 0°))"],
                        ["FunctionDefinition", "happy", "$~춤추자."],
                        [
                            "Evaluate",
                            "sad",
                            "$~@FunctionDefinition… 저는 정말..."
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~왜 우리를 인도하지 않으세요?"
                        ],
                        null,
                        ["Evaluate", "shy", "$~… 나는 할 수 없어…"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~당신은 할 수 있어요."
                        ],
                        null,
                        ["fit", "Stage([] background: Color(90% 0 0°))"],
                        ["Evaluate", "shy", "$~… 저는… 저는 노력해 볼게요."],
                        null,
                        ["fit", "Stage([] background: Color(100% 0 0°))"],
                        [
                            "Evaluate",
                            "shy",
                            "$~나는… 나는 우리 모두가 박자에 맞춰 움직이기를 원해. 박자에 맞춰 기울어지고… 어둠 속에서. 우리가 그렇게 할 수 있을까?"
                        ],
                        null,
                        ["Program", "happy", "$~우리는 할 수 있어요!"],
                        ["Stage", "kind", "$~나부터 시작해"],
                        [
                            "Evaluate",
                            "kind",
                            "$~알겠습니다, @Stage, 어둡게 할 수 있나요?"
                        ],
                        ["Stage", "kind", "$~어두운!"],
                        ["use", "edit", "EvaluateDance1"],
                        null,
                        [
                            "Evaluate",
                            "kind",
                            "$~@StructureDefinition, 우리는 우리의 장소를 기억할 방법이 필요하다고 생각합니다. 우리를 위한 구조물을 만들어 줄 수 있나요?"
                        ],
                        ["StructureDefinition", "curious", "$~이와 같이?"],
                        ["use", "edit", "EvaluateDance2"],
                        null,
                        [
                            "Evaluate",
                            "kind",
                            "$~네... 저도 박자에 맞춰서 회전하고 싶어요. 회전도 기억나세요?"
                        ],
                        ["StructureDefinition", "curious", "$~이건 어때요?"],
                        ["use", "edit", "EvaluateDance3"],
                        null,
                        [
                            "Evaluate",
                            "happy",
                            "$~네, 그렇게요. 음... 오, 무대에 서야 할 것 같아요. @Text, 모든 사람의 목록을 만들어 주시겠어요? \\Character>s로 바꿔 볼게요."
                        ],
                        [
                            "Text",
                            "excited",
                            "$~기꺼이요, 자기야. 이걸로 될까요?"
                        ],
                        ["use", "conflict", "EvaluateDance4"],
                        null,
                        [
                            "Evaluate",
                            "excited",
                            "$~네, 좋아요! 이제 캐릭터로 만들어야 합니다. @List, 번역할 수 있을까요? @FunctionDefinition, 도와주시겠어요?"
                        ],
                        ["List", "happy", "$~번역, 1, 2, 3! 이렇게?"],
                        ["use", "conflict", "EvaluateDance5"],
                        null,
                        [
                            "Evaluate",
                            "happy",
                            "$~훌륭해요! 이제 무대에 서야 해요. 캐릭터를 @Phrase 번역할 수 있을까요? @Free @Free?"
                        ],
                        ["List", "kind", "$~한 번 더!"],
                        ["Phrase", "kind", "$~모든 주목을!"],
                        ["Group", "kind", "$~어서요, 모두들, 자리를 비우세요…"],
                        ["use", "edit", "EvaluateDance6"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "$~오… 우리는 어디에 있는 거지? 오! 우리는 색깔이 필요해. @Pose, 우리는 흰색이 될 수 있을까?"
                        ],
                        ["use", "edit", "EvaluateDance7"],
                        null,
                        [
                            "Evaluate",
                            "surprised",
                            "$~앗, 우리 모두 위에 올라갔네요! 시작점이 필요해요. @Random?을 탭해 볼까요?"
                        ],
                        ["use", "edit", "EvaluateDance8"],
                        null,
                        [
                            "Evaluate",
                            "happy",
                            "$~야호! 이제 움직이기만 하면 됩니다. @Reaction, 비트를 줄 수 있나요? 아마 \\0.75\\초 정도?"
                        ],
                        [
                            "Reaction",
                            "kind",
                            "$~바꿀 수 있어요! @Time 스트림이 필요하지만 문자도 바꿔야 해요. 하지만 다음 값은 무엇이어야 할까요?"
                        ],
                        ["use", "edit", "EvaluateDance9"],
                        null,
                        [
                            "Evaluate",
                            "eager",
                            "$~각 비트마다 움직일 방법이 필요할 것 같습니다. @StructureDefinition, 새로운 위치와 회전을 선택하는 이동 함수를 만들 수 있을까요?"
                        ],
                        [
                            "StructureDefinition",
                            "sad",
                            "$~함수를 만드는 방법을 모르겠어요…"
                        ],
                        null,
                        ["Evaluate", "sad", "$~…"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~제가 도와드릴 수 있어요."
                        ],
                        ["Evaluate", "happy", "$~…"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~가끔은... 당신이 얼마나 대단한지 알아줬으면 좋겠어요. 그리고 가끔은 떠나야 한다는 뜻이에요. 당신이 여기서 무엇을 만들고 있는지 보세요..."
                        ],
                        [
                            "Evaluate",
                            "happy",
                            "$~저는… 저는 무언가를 만들고 있습니다. 우리는 무언가를 만들고 있습니다… 하지만 여러분 없이는 만들 수 없습니다. 도와주시겠어요?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~물론이죠. \\move\\ 함수가 바로 나옵니다. 제가 시작할 테고, 당신이 끝내세요…"
                        ],
                        ["use", "edit", "EvaluateDance10"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "$~감사합니다, @FunctionDefinition. 움직이지 않아요... 아, 맞아요, \\move\\는 아무것도 바꾸지 않았어요! 현재 위치를 가져와서 수평 및 수직으로 무작위 방향으로 이동해 봅시다. 그리고 무작위 깊이로, 모두가 앞서 나갈 기회를 얻을 수 있도록요. 그리고 무작위 회전?"
                        ],
                        ["use", "edit", "EvaluateDance11"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "$~음... 아직 움직이지 않네요. 오! @Reaction \\move\\를 평가하지 않았네요. @List, 각 \\Character\\를 _moved_ \\Character\\로 변환할 수 있나요?"
                        ],
                        [
                            "List",
                            "excited",
                            "$~여러분의 도움으로 번역할 수 있었습니다!"
                        ],
                        ["use", "edit", "EvaluateDance12"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "$~너무 삐걱거려요. 오, @Phrase, 움직임 @Phrase 지속시간을 설정하는 걸 깜빡했어요. @Time tick보다 작은 걸 선택해서 움직이고 나서 좀 쉬게 할 수 있을까요?"
                        ],
                        ["use", "edit", "EvaluateDance13"],
                        null,
                        [
                            "Evaluate",
                            "excited",
                            "$~우리는 춤추고 있어요! 우리는 정말 춤추고 있어요. 우리가 했어요!"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~우리는 한 사람을 잊었어요..."
                        ],
                        ["Evaluate", "excited", "$~WHO?"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~우리 감독님! 우리와 함께 춤을 추어야 해요."
                        ],
                        null,
                        [
                            "Evaluate",
                            "excited",
                            "$~오, 물론이죠! 그들이 음악을 만들게 하면 어떨까요? @Phrase, @Phrase 듣고 @Volume @Color/lightness 당신의 색상으로 연결할 수 있나요? 그렇게 하면 감독이 소리를 낼 때 우리는 하얗게 뜨거워질 거예요!"
                        ],
                        ["Phrase", "kind", "$~훌륭한 생각이네요!"],
                        ["use", "edit", "EvaluateDance14"],
                        null,
                        ["use", "fix", "EvaluateDance14"],
                        ["List", "excited", "$~1, 2, 3, 1, 2, 3"],
                        ["Boolean", "excited", "$~이동하다!"],
                        ["Text", "excited", "$~의기 양양!"],
                        ["Conditional", "excited", "$~춤이란 과연 무엇일까?"],
                        ["Changed", "excited", "$~붐, 붐, 붐"],
                        ["Number", "excited", "$~왼쪽 5도, 위쪽 1미터"],
                        ["Phrase", "excited", "$~기이!"],
                        ["Sequence", "excited", "$~이 느낌!"],
                        ["Group", "excited", "$~지금 함께요!"],
                        ["Stage", "excited", "$~붐 붐 붐"],
                        ["None", "excited", "$~…"],
                        [
                            "StructureDefinition",
                            "excited",
                            "$~움직이는 것을 잊지 마세요!"
                        ],
                        ["Bind", "excited", "$~캐릭터!"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Evaluate, 당신이 해냈어요! 이게 당신의 비전이었어요."
                        ],
                        [
                            "Evaluate",
                            "kind",
                            "$~나… 내가 그랬어. 하지만 우리도 같이 했지."
                        ],
                        null,
                        [
                            "Program",
                            "curious",
                            "$~우리가 그저 우리만의 공연을 펼친 것일까요?"
                        ],
                        [
                            "Reaction",
                            "eager",
                            "$~내 생각엔 우리는 그랬던 것 같아요…"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~우리는 그랬습니다... 하지만 새로운 감독 친구가 없었다면 할 수 없었을 겁니다. 그들은 우리의 침묵을 깨고, 우리가 왜 함께 표현을 하는지 상기시켜 주었습니다."
                        ],
                        null,
                        ["use", "fit", "Symbol", "?"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~그럼, 멋진 신인 감독님, 무슨 말씀을 드리죠?"
                        ]
                    ]
                }
            ]
        }
    ]
}
