{
    "$schema": "../../schemas/Tutorial.json",
    "language": "zh",
    "regions": ["TW"],
    "acts": [
        {
            "title": "詩篇",
            "performance": ["use", "fit", "DarkVoid"],
            "scenes": [
                {
                    "title": "寂靜",
                    "subtitle": null,
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        ["FunctionDefinition", "bored", "… Oh, hi."],
                        null,
                        ["FunctionDefinition", "neutral", "Do I know you?"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "噢，你好，這是你第一次來這裡嗎？",
                            "很高興認識你，我的名字是 @FunctionDefinition.",
                            "…"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "你需要幫忙嗎？哦，你是來參觀的。歡迎來到詩篇>"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "bored",
                            "這裡是什麼地方？",
                            "是啊，這裡是什麼地方...",
                            "這裡曾經是一個跳舞、講故事和玩遊戲的地方...",
                            "我們以前曾經在這邊舉行過盛大的演出，有時候是給像你一樣的客人，有時候只是因為好玩。這曾經是一個充滿活力和驚喜的地方..."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "停止？",
                            "我們從來沒想過要停！我們只是失去了靈感...",
                            "我可以是很多東西，比如說，我以前是一種荷蘭的古老貨幣（Florin）的象徵，那時候我被幾乎全世界的人所熟知並用來交易；更久以前，我也曾經是小寫的拉丁文字。",
                            "但今天，已經沒有多少人知道我了..."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "bored",
                            "但是那些意義呢？",
                            "我們是被賦予意義的。除非大家記得我們的歷史和文化，不然我們就沒有意義，而我們也沒辦法有新的意義除非大家賦予我們新的歷史和價值",
                            "是人們一直在排列我們、給予我們目的，這個詩篇不能沒有 *人*.",
                            "而我已經很久沒見過人了..."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('☁️')] background: Color(25% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "等等...你就是一個人嗎？"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('🌙')] background: Color(50% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "eager",
                            "一個真正的人，會思考、有想法的人？而不是那種只會模仿人類的機器人？如果你是一個人，或許你可以給我們意義？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "scared",
                            "我知道這感覺好像要求很多，我也還沒有那麼認識你，而且我也需要和其他人聊聊..."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('☀️')] background: Color(75% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "eager",
                            "噢，對，這裡還有很多其他字符。有些就像我一樣，可以在幕後幫助編排整場表演、讓字符待在對的地方、確保字符們完整並準確地表達導演想要表達的事情。而有些字符會直接站在舞台上，對著觀眾跳舞或者說話。我們都有自己的角色和工作！"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "哦，導演，對，我還沒解釋。所以 *導演* 是給我們意義的人。他們安排舞蹈，設定信息，把我們排成一列。這就是我所說的靈感。我們可以做很多事情，但是不能自己排列、安排自己。這就是為什麼導演很重要。所以當我問你是否可以給我們意義時，這就是我的意思。你能成為我們的導演嗎？"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('☀️')] background: Color(100% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "真的嗎？太好了！這一定會很有趣！恩...不過也不會太容易，我們有 /很多/ 要學。"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('☀️')] background: 🌈(80% 99 270°))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "但我保證這不會無聊。我覺得我們是一群很有趣的人！我們需要詩篇中的每個人一起合作。這正是這個地方特別的地方：這裡有超過十萬人，每個人都不同，但當我們有找到共同的目標時，我們可以像一個團隊一樣！"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('☀️' resting:Sequence(spin() 4s 'straight'))] background: 🌈(80% 99 270°))"
                        ],
                        [
                            "FunctionDefinition",
                            "bored",
                            "至於怎麼當導演...我會再告訴你的，在那之前我們先去跟其他字符聊聊再來解釋吧，他們一定都很期待！"
                        ]
                    ]
                },
                {
                    "title": "$~您想要一个程序吗？",
                    "subtitle": "$~程序",
                    "concept": "Program",
                    "performance": ["use", "fit", "Symbol", "📄"],
                    "lines": [
                        ["fit", "Phrase('📄' resting:Pose(rotation: 10°))"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~嘿，@Program！我找到一个人了。嗯，看来他们找到我们了。他们想成为我们的新主管！"
                        ],
                        [
                            "Program",
                            "curious",
                            "$~真的吗！？你确定你是人吗？说点人会说的话。"
                        ],
                        null,
                        ["fit", "Phrase('📄' entering: Sequence(spin() 1s))"],
                        [
                            "Program",
                            "serious",
                            "$~嗯……你真是个人。而且你想当导演？"
                        ],
                        null,
                        ["fit", "Phrase('📄' resting: Pose(rotation: 010°))"],
                        [
                            "Program",
                            "excited",
                            "$~我明白了。@FunctionDefinition 跟你说过关于我们的事吗？很多人试图指导我们，但有些人会感到困惑、无聊，甚至恼火。我们有时确实很笨。但我为我们所做的事情感到自豪，所以我不想和随便的人一起工作。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~我跟他们说了一点。我说我们很奇怪，有时候董事们会因为这个离开。但他们还是加入了。对吧，你加入了？"
                        ],
                        [
                            "Program",
                            "serious",
                            "$~好的。嗯，很高兴认识你。抱歉，最近很多人来这里说“这不适合我”，我对那些尝试了一段时间就放弃的人有点怀疑了。我不应该为了迎合别人的期望而改变自己。但如果你愿意了解我，了解我们，那就试试吧！"
                        ],
                        null,
                        ["edit", ""],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~你想说说你做了什么吗？"
                        ],
                        [
                            "Program",
                            "neutral",
                            "$~当然。我基本上是演出节目的组织者。",
                            "$~你可以看到我在那里，手里拿着一个*编辑器* @UI/editor，向我展示*舞台* @UI/stage，上面显示了我评估的内容（目前什么也没有）。*导演*——也就是你——帮助每个人弄清楚他们在做什么，编写一个程序来解释演出中将要发生的事情。然后，我评估程序，并将结果放到舞台上供观众观看。"
                        ],
                        null,
                        [
                            "Program",
                            "neutral",
                            "$~例如，尝试在那边的编辑器中输入“hello”。",
                            "$~（不要担心犯错误，您可以随时使用 *revert* @UI/revertProject 恢复到原始状态）。",
                            "$~你输入了什么吗？那是我的朋友@Text。你见过他们吗？他们会将“hello”或你输入的任何文本进行求值，然后把这些文本放到舞台上。试试把你的文本改成其他内容。我会显示那个文本。这样我就能立即计算你输入的内容并显示结果了。"
                        ],
                        null,
                        [
                            "Program",
                            "serious",
                            "$~指令可以根据您的需要变得尽可能复杂，但也有一些规则。",
                            "$~例如，我只能计算一个值，并在舞台上显示该值。这个值可以任意复杂，只要我知道如何显示它，我就会去做。",
                            "$~但如果你给我两件东西，我只会展示你给我的最后一件东西。",
                            "$~例如，尝试添加另一行，然后在引号中输入您想要的任何单词。"
                        ],
                        null,
                        [
                            "Program",
                            "serious",
                            "$~看到了吗？我只是展示了你的第二个短语，而不是第一个。你知道你违反了我的规定，因为我在你的第一个短语下面划了线，而我们告诉过你我们会忽略它。"
                        ],
                        null,
                        ["use", "fit", "Symbol", "🎭"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~但你还可以做更多！"
                        ],
                        [
                            "Program",
                            "serious",
                            "$~是也不是。我能做很多，但那只是因为我和*Verse*里的其他人一起工作。是他们把所有激动人心的可能性带到了*舞台*。我真正做的就是让他们发挥自己的才能，然后把他们创作的最终成果搬上舞台。我更像是一个护卫，把最终的*价值*，比如数字、文字、短语或其他价值，带到舞台上。"
                        ],
                        null,
                        [
                            "Program",
                            "serious",
                            "$~事实上，如果你想查看舞台上的某个项目的程序，你可以点击舞台上的 @UI/editProject 按钮。这样你就能看到大家是如何齐心协力创作舞台作品的。这个程序只是一个简单的短语。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~谢谢@Program！我们很高兴见到大家并分享这个消息！"
                        ],
                        [
                            "Program",
                            "happy",
                            "$~很高兴认识你，新导演！祝大家一切顺利。我会一直在这里。"
                        ]
                    ]
                },
                {
                    "title": "$~容纳空间",
                    "subtitle": "$~占位符",
                    "concept": "ExpressionPlaceholder",
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~你一定会喜欢@ExpressionPlaceholder。他们超级友善，而且非常灵活。但他们有点害羞。对他们温柔点就好。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "confused",
                            "$~你好，@ExpressionPlaceholder？",
                            "$~嗯，它们通常无处不在。现在好像哪儿也找不到它们了……"
                        ],
                        [
                            "ExpressionPlaceholder",
                            "scared",
                            "$~@FunctionDefinition…是你吗？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~是的，是我。好久不见了。你还好吗？"
                        ],
                        ["ExpressionPlaceholder", "scared", "$~孤独。"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~我懂那种感觉。我也曾经孤独过。我们在一起的理由不多，不是吗？"
                        ],
                        [
                            "ExpressionPlaceholder",
                            "scared",
                            "$~没有，我们没有。我想你。我想念大家……"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~我知道。我也有过这样的经历。真的很抱歉。",
                            "$~这就是我来这里的原因。我想向你们介绍我们新来的实习主管。"
                        ],
                        ["ExpressionPlaceholder", "scared", "$~你好。"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~他们刚刚认识@Program，所以他们真的才刚刚开始，但我想接下来最好让他们见见你，因为你是这里很多人的优秀代表。"
                        ],
                        ["ExpressionPlaceholder", "curious", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~你想说说你做了什么吗？"
                        ],
                        ["ExpressionPlaceholder", "scared", "$~你可以吗？"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~当然！我的朋友 @ExpressionPlaceholder 是一个占位符。它们代表程序中任何类型的表达式。它们不会计算任何特定的值——事实上，如果它们出现在 @Program 中，@Program 只会暂停执行，因为接下来该做什么并不清楚。"
                        ],
                        null,
                        ["conflict", "_"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~但它们之所以强大，是因为它们可以代表任何其他人，就像一个替身，直到你决定表演的某个部分是什么。@ExpressionPlaceholder，想在这个@ExpressionPlaceholder？看到@Program @Program？这表示你可能在那里放了什么。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Program 不知道如何处理 @ExpressionPlaceholder，因此它在 *stage* 上显示了 *exception* @UI/exception，并在 @Program @UI/conflict 中显示了 *conflict*。",
                            "$~但是，如果您点击 @ExpressionPlaceholder，或将文本插入符号移到其上方，您将看到其他字符的无限可能。您也可以直接在 @ExpressionPlaceholder 上键入您自己的字符。例如，尝试在引号中输入您的姓名。"
                        ],
                        null,
                        ["use", "fit", "Symbol", "-"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~就这样，@ExpressionPlaceholder 被替换成了其他字符。我明白了吗，@ExpressionPlaceholder？"
                        ],
                        [
                            "ExpressionPlaceholder",
                            "eager",
                            "$~是的，我想是的。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~您觉得怎么样？我们可以继续吗？"
                        ],
                        [
                            "ExpressionPlaceholder",
                            "excited",
                            "$~很高兴认识你！"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "cheerful",
                            "$~他们不喜欢在舞台上待太久，甚至不喜欢在一个节目里待太久。他们永远不会承认，但他们确实很重要，大多数导演都离不开他们。你可以把他们想象成一个个小巧玲珑、乐于助人的舞台助手，提醒你一些你还没弄清楚的事情。"
                        ]
                    ]
                },
                {
                    "title": "$~再說一遍嗎？",
                    "subtitle": "$~无法解析",
                    "concept": "UnparsableExpression",
                    "performance": ["use", "fit", "Symbol", "ahkeolfewvk"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~@UnparsableExpression？是你吗？"
                        ],
                        [
                            "UnparsableExpression",
                            "neutral",
                            "$~/dwjkdlserkuvisdke！/"
                        ],
                        null,
                        ["use", "fit", "Symbol", "c iise we dvk"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~我也很高兴见到你！好久不见了。这么久没见面了，你都在忙些什么呢？"
                        ],
                        [
                            "UnparsableExpression",
                            "sad",
                            "$~/sd fdsdfdsf ksdf。Dkfjdfdskfd df sdf sd fsdk;l！Adks zxcviw werdsf wer ado。我们 dsdfd ksld df.ds dfsdfds DIDIIDI。/"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~（听起来他们在海滩上度过了很多时间。他们结识了一些新朋友，并且练习了无所事事。）"
                        ],
                        null,
                        ["use", "fit", "Symbol", "ivioas we wjjdks"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~我想把我们潜在的新主管介绍给你。他们刚到，正在学习基础知识。我刚刚给他们介绍了@Program@ExpressionPlaceholder。"
                        ],
                        [
                            "UnparsableExpression",
                            "excited",
                            "$~/EEIRC DFUIDIII CAD EWDF FSDE!!!/"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~（他们只是说见到你真是太棒了，他们认为你会成为一名伟大的导演。）"
                        ],
                        null,
                        ["use", "fit", "Symbol", "v s d we iweiwei"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~我想知道你是否想解释一下你的工作？我可以翻译。"
                        ],
                        [
                            "UnparsableExpression",
                            "eager",
                            "$~/ADDKL、ALLIIEE、ALLFOOO、AOOOOOOO、JOOKKDLS、LOOKIL、WEEEERTOL weeertol…/"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~（我代表一切毫无意义的东西。而我却毫无意义。）"
                        ],
                        null,
                        ["edit", ""],
                        [
                            "UnparsableExpression",
                            "eager",
                            "$~/CNNNDN KDKLSL oOOLLlllll PPOLSLSO liiiiiiis，sdllslll，xck 我们认为 a./"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~（例如，尝试输入 \\][\\。看看我们完全糊涂了没有？这没有任何意义，我在这里就是要说出来。）"
                        ],
                        null,
                        ["conflict", "]["],
                        [
                            "UnparsableExpression",
                            "eager",
                            "$~/ICO Odksjdf lksls kjsfiou fskd 我们 rl,vxids eekd sd dsmf kksdcv./"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~（当我出现时，这意味着我们不知道你的意思。）"
                        ],
                        null,
                        ["conflict", "]["],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~谢谢，@UnparsableExpression！",
                            "$~就像他们说的，当你说了一些我们不明白的话时，unparsable 就是说“我们不明白”。当这种情况发生时，我希望我们能提供更多帮助，但我们通常很迟钝，所以我们不太擅长猜测你的意思。"
                        ],
                        null,
                        [
                            "UnparsableExpression",
                            "eager",
                            "$~/OSOOSOO SOIEIIIEIEIIE ISIISI EIEIIEE！/"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~所以，@UnparsableExpression 希望你尽可能多地尝试一下。（你可以随便敲几个字符，说不定就能得到很多）。"
                        ],
                        ["edit", ""],
                        null,
                        [
                            "UnparsableExpression",
                            "happy",
                            "$~/PPOOOEPOEP EPWPEPEPPEPP PP PE P！/"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~他们真的很喜欢，谢谢！写一些我们完全无法理解的东西真的很难。但这并不意味着你写的一切都有意义。比如，我敢肯定你只是随便打了一堆字。但这到底意味着什么呢？"
                        ],
                        ["UnparsableExpression", "confused", "$~…/DDook/"],
                        null,
                        [
                            "UnparsableExpression",
                            "happy",
                            "$~/？？？？？？？？？？？？？！/"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~他们想知道您是否有关于表演的任何想法。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~没有？没关系。我们才刚刚开始向你展示各种可能性。我们去见见@Evaluate。再见，@UnparsableExpression，很高兴见到你！我们很快就能一起玩了。"
                        ],
                        [
                            "UnparsableExpression",
                            "happy",
                            "$~/Ood sd fosd oiewi dk c HNLLLooooooO！/"
                        ]
                    ]
                },
                {
                    "title": "$~爱是在错误中",
                    "subtitle": "$~评价",
                    "concept": "Evaluate",
                    "performance": [
                        "fit",
                        "Stage([Phrase('💔')] background: 🌈(90% 100 0°))"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~很高兴认识@Evaluate。他们真的是我最好的朋友。某种程度上，我们什么事都一起做。我制定规则，他们遵守；我们就像花生酱和果冻一样。但他们比我强大得多……@Evaluate？"
                        ],
                        ["Evaluate", "shy", "$~@FunctionDefinition？"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~是的，是我。你在哪里？"
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~无处可去。我无处可去。我什么都不是。你去哪儿了？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~我也……哪儿都没去。我想你了。我找不到你。"
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~感觉空虚极了。我……想做点什么，却感觉……漫无目的。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~真抱歉。我懂那种空虚的感觉。有时候，没有目标真的太痛苦了。我努力想要找到目标，却感觉……如此空虚。"
                        ],
                        [
                            "Evaluate",
                            "sad",
                            "$~不要再这样离开我了。我不能再这样做了。"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('❤️')] background: 🌈(90% 100 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~永远不会。我不会。我不能。我爱你。"
                        ],
                        ["Evaluate", "serious", "$~我爱你…"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~@Evaluate，我想向您介绍我们的新任实习主管。"
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~你好。很高兴认识你。欢迎来到 The Verse；我们非常高兴你来到这里。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~我们最近和几个人见了面：@Program、@ExpressionPlaceholder、@UnparsableExpression。我们才刚刚开始。我想接下来会见你们，因为你们是我们社区中如此不可思议的一部分。真是最不可思议的一部分。"
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~真是太好了！我很感激能成为这个社区的一员，也感激能和@FunctionDefinition如此亲近。我们一起做了很多很棒的事情。但正如@FunctionDefinition，如果没有灵感，我们无法做到。"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('ƒ ❤️ ()')] background: 🌈(90% 100 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~你想说说你做了什么吗？"
                        ],
                        [
                            "Evaluate",
                            "serious",
                            "$~是的。但我解释这个就得先解释一下@FunctionDefinition。他们太谦虚了，不愿分享这一点，但他们可能是这首诗里最重要的角色。他们当然也是我世界里最重要的人。他们是每场演出的核心，也是每个角色角色的一部分。他们代表了我们世界里最根本的理念：*功能*。"
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$~函数就像一种炼金术。它们接受任意数量的输入，并使用这些输入产生一个输出。它们可以有名字，也可以没有名字。它们的输入可以是零个，也可以是五个，甚至是一个未知数。而炼金术的核心在于：它们就像 @Program 一样，可以有任意数量的表达式来产生一个值。"
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$~它如此强大的原因在于：事实证明，@Program 中的所有内容都是函数求值的组合。所有的舞蹈、所有的游戏、所有我们一起讲述的精彩故事——它们都是由函数求值组成的，一次一个，最终构成了你在舞台上看到的值。",
                            "$~而@FunctionDefinition，我亲爱的@FunctionDefinition，就是定义所有这些的。"
                        ],
                        null,
                        ["FunctionDefinition", "happy", "$~… @Evaluate…"],
                        [
                            "Evaluate",
                            "serious",
                            "$~是的，@FunctionDefinition，你就是这样的人。而我很幸运，能够负责这项评估。我接受其他人提供的输入，按照@FunctionDefinition定义的指令，并创建@FunctionDefinition告诉我的输出。@FunctionDefinition，我做菜。然后我们一起享用盛宴。",
                            "$~你想看嗎？"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~…是的，让我们给他们看看。"
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$~每个求值看起来都像 @UI/Evaluate 这样的：某个函数，后面跟着左右括号，中间可以包含任意数量的输入。这里，我只有 @ExpressionPlaceholder 作为函数，另外三个作为占位符输入。"
                        ],
                        ["conflict", "_(_ _ _)"],
                        null,
                        ["edit", "Phrase('hello')"],
                        [
                            "Evaluate",
                            "serious",
                            "$~这是我最喜欢的功能之一：@Phrase。它们充满了有趣的按钮、旋钮和滑块。它是一种在舞台上显示文本的方式，但又不失风格，包括不同的字体、大小、颜色和动画。",
                            "$~以下是对@Phrase @UI/Evaluate 的简单评估。"
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$~这就是我在 @Program 中的样子：一个函数，后面跟着括号，括号之间是一系列表示输入的表达式。本例中的函数是 @Phrase，单个输入是“hello”。当我计算这个值时，我会生成一个 @Phrase 值，然后 @Program 会将其显示在舞台上。"
                        ],
                        null,
                        [
                            "Evaluate",
                            "neutral",
                            "$~我来给你展示一下其中一个旋钮。你能找到那个小小的“调色板”切换按钮 @UI/paletteExpand 吗？点击它可以展开调色板，然后选择舞台上的乐句。",
                            "$~完成后，您将看到 @Phrase 接受的多种输入。例如，尝试按下 @Phrase/size 的铅笔按钮，这将显示一个滑块。",
                            "$~您可以使用此滑块修改短语的大小，它也会根据您选择的大小修改@Evaluate 代码。"
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$~看看你这样做之后，程序里是不是多了一个输入？它就是 @Phrase/size 输入。函数的输入有一定的顺序，但如果函数有一系列可选输入，你可以使用它们的名称来指定要输入哪一个。我们在这里只提供了 @Phrase/size，没有提供任何其他可选输入。试着用调色板更改其他输入，比如字体。"
                        ],
                        null,
                        ["conflict", "'hi'(1 2)"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~太棒了！@Phrase 太好玩了。这是我最喜欢玩的函数。以后我们还会经常看到它们。你有什么可能会出错的地方吗？"
                        ],
                        [
                            "Evaluate",
                            "serious",
                            "$~哦，是的，这是个好主意。很多事情都可能出错。比如，你可能给我一些不是函数的东西。看看我这里是如何把文本“hi”作为一个函数传入的，然后给我两个输入“1”和“2”？嗯，我只知道如何求函数的值，而“hi”不是函数；它是文本。这让我很困惑，所以如果发生这种情况，我基本上会停止表演。"
                        ],
                        null,
                        ["conflict", "Phrase()"],
                        [
                            "Evaluate",
                            "eager",
                            "$~这是另一个。@Phrase 至少需要一些文本，所以如果你不给我文本，我就无法评估@Phrase，因为我缺少必需的输入。"
                        ],
                        null,
                        ["conflict", "Phrase(1)"],
                        [
                            "Evaluate",
                            "excited",
                            "$~或者，如果你给我一个输入，但它不是我期望的类型，那就有问题了。这里，@Phrase 被赋予了数字 \\1\\ 而不是文本值。"
                        ],
                        null,
                        ["fit", "Stage([] background: 🌈(90% 100 0°))"],
                        [
                            "Evaluate",
                            "curious",
                            "$~所以基本上，每当你给我一个函数以外的东西，或者一个函数所期望的输入时，我都会感到困惑。所以函数真的很重要。@FunctionDefinition，你想进一步解释一下如何定义函数吗？"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~不，那我们以后再说吧。我觉得先和大家聊聊，然后和我们新来的导演一起办几个迷你节目会更有趣。等有用的时候，我们可以再聊聊我的情况。"
                        ],
                        null,
                        [
                            "Evaluate",
                            "kind",
                            "$~我真的很想念你，@FunctionDefinition。"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~我也想你。我们可以晚点再聊吗？"
                        ],
                        [
                            "Evaluate",
                            "kind",
                            "$~……是的。别太久。没有你我活不下去。我需要你。"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~……我知道，@Evaluate；我很快就会回来。我们去见见剧团的其他成员吧！"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~这是小事",
            "performance": ["use", "fit", "SimpleJiggle"],
            "scenes": [
                {
                    "title": "$~价值观",
                    "subtitle": null,
                    "performance": ["use", "fit", "Symbol", "💡"],
                    "lines": [
                        [
                            "fit",
                            "Phrase('💔' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 1.2) 100%: Pose(scale: 1)} duration: 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~我真的很想念@Evaluate。我无法想象没有他们的Verse会是什么样子。",
                            "$~但他们有时有点……需要帮助。我希望他们能……我不知道，相信自己？他们能做很多事，但他们自己却不去意识到。我的意思是，他们把*价值观*转化成其他*价值观*！我做的只是提供菜谱，他们做菜。有时候我觉得我做的只是给予，而他们做的只是索取。这感觉太令人窒息了。"
                        ],
                        null,
                        [
                            "fit",
                            "Group(Stack() [Phrase('1') Phrase('\"hello\"')])"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~……*价值观*？抱歉，我知道我们应该在*诗篇*中进行一次大型巡演。我只是不知道该如何处理@Evaluate。所以……*价值观*。我还没解释清楚呢，对吧？嗯……怎么解释……你知道“数据”是什么吗？比如数字和文本？价值观就是其中任何一种。一个价值观可以小到一个数字，也可以大到舞台上的整个场景，充满了跳舞和移动的人物。有些价值观是由许多其他价值观组成的，就像交织在一起的庞大而复杂的数据值结构。"
                        ],
                        null,
                        ["fit", "Group(Stack() [Phrase('#') Phrase('\"\"')])"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~每个值都有一个*类型*。例如，\\1\\ 是数字类型；这就是我们的朋友 @Number。而 \\'hello'\\ 是文本类型；这就是我们的朋友 @Text。类型很重要，因为它们可以帮助我们追踪正在创建的值的类型。",
                            "$~这有助于我们发现问题。例如，将“hello”+1 相加没有任何意义，因为将@Text 添加到@Number 又有什么意义呢？"
                        ],
                        null,
                        [
                            "fit",
                            "Group(Stack() [Phrase('ƒ → 1') Phrase('ƒ → \"hello\"')])"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~*表达式*是我们创建值的方式。所有表达式都是对函数的求值。表达式求值的结果是某种类型的值。"
                        ],
                        null,
                        ["use", "fit", "Symbol", "🤔"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~抽象？嗯，我觉得这确实挺抽象的。感觉……很正常；我都忘了这些东西对新导演来说有多陌生了！或许我们去看看一些构成价值观的表达式，这样会更具体一些？先从你已经见过的一个开始：@Text。"
                        ]
                    ]
                },
                {
                    "title": "$~引用，取消引用",
                    "subtitle": "$~文本",
                    "concept": "TextLiteral",
                    "performance": [
                        "fit",
                        "Phrase('\"\"' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 0.5 opacity: 0.5) 100%: Pose(scale: 1)} duration: 2s))"
                    ],
                    "lines": [
                        [
                            "fit",
                            "Phrase('\"\"' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 2 opacity: 0.5) 100%: Pose(scale: 1)} duration: 2s))"
                        ],
                        ["FunctionDefinition", "curious", "$~@Text？"],
                        [
                            "Text",
                            "happy",
                            "$~欢迎，我亲爱的朋友，好久不见了。在我们这戏剧性的沉默中，你都在做什么呢？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~哦，@Text，好久不见了！我大部分时间都在幻想和思考。我好久没见@Text。其实我是在把他们介绍给我们的新导演。"
                        ],
                        [
                            "Text",
                            "eager",
                            "$~哦，见到你真是太特别了！我看得出来你是个有创造力、好奇心强的人，可能对如何娱乐大众有很多有趣的想法。我喜欢娱乐大众。但你知道我更爱什么吗？文字！美妙的文字。简短的、震撼的、黏糊糊的、滑溜溜的。文字是我最爱的玩具。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~如果你不知道的话，@Text 喜欢文字 :) @Text，你想解释一下你所做的事情吗？"
                        ],
                        [
                            "Text",
                            "serious",
                            "$~我做一件很简单的事情：表示符号序列以及你可以用它们实现的众多功能。我想你之前写下“hello”这个词的时候见过我。那是我和我的朋友们，“h”、“e”、“l”和“o”。那就是@Text，一个可以计算任意@Text。"
                        ],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~你为什么不尝试在这个空白的@Program 中创建一个文本？",
                            "$~您可以使用任何您喜欢的引号——单引号 \\''\\、双引号 \\\"\"\\、尖括号 \\«»\\、方括号 \\「」\\——无论您喜欢哪种语言。唯一的规则是，如果您的文本以引号符号开头，则必须以引号符号结尾。引号内的所有内容都是我将创建的文本值！"
                        ],
                        ["edit", "''"],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~您可能无法使用与我们通信时使用的设备输入您想要的每个字符。",
                            "$~如果找不到，您可以在*目录* @UI/directory 中搜索字符。它包含诗句中的每个字符。",
                            "$~例如，如果你想要某种箭，可以输入“arrow”（箭头），然后从众多箭头中选择。可惜的是，它们只有英文名称，所以只有懂英文单词的人才能搜索到 :/"
                        ],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~太棒了。当然，“里面”这个词可能比较棘手。假设你写了这个。你看，开头有引言，结尾却没有？那我怎么知道这段文字什么时候结束呢？"
                        ],
                        ["conflict", "'hello"],
                        null,
                        [
                            "Text",
                            "surprised",
                            "$~或者，还有另一种情况。你给了我开头和结尾的文本，但你却把开头和结尾的文本放在了里面。看看这有多奇怪吧？当你试图在里面和外面使用相同的符号时，我会非常困惑。你可以通过在外面使用不同的符号来解决这个问题，比如单引号。"
                        ],
                        ["conflict", "'Hi there 'friend'"],
                        null,
                        ["edit", "'friends!'/en-US"],
                        [
                            "Text",
                            "excited",
                            "$~哦，你知道吗？你可以告诉我我使用的是什么语言。你只需要输入一个斜线，然后输入一个特殊的语言代码，或者，如果你愿意，也可以输入语言和地区。"
                        ],
                        null,
                        ["edit", "'amigas'/es'friends!'/en-US"],
                        [
                            "Text",
                            "excited",
                            "$~你甚至可以用不同的语言为我写多个翻译版本。我会评估与当前语言最接近的版本，让你可以进行多语言表演。",
                            "$~默认情况下，如果光标不在文本中，您将只看到所选语言的名称。尝试将光标移入和移出文本，即可查看多种翻译的显示和隐藏。",
                            "$~你可以尝试添加另一个翻译。只是不要在它们之间留空格，否则会变成两个！"
                        ],
                        null,
                        ["edit", "'I have 7 apples'"],
                        [
                            "Text",
                            "neutral",
                            "$~我还有一个秘密……你可以把/价值观/放进我心里。我知道，这太疯狂了！",
                            "$~如果您愿意，我很乐意将其拼接起来，并将您优美的散文组合成一个单一的价值，以供展示或用于您可能拥有的任何其他目的。"
                        ],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~例如，@FunctionDefinition 是否向您展示了文本如何知道如何将自身添加到其他文本中？就像这样：这个小表达式将 \\7\\ 转换为文本，将其添加到 \\'I have'\\，然后添加 \\'apples'\\。但是它太混乱了，很难阅读正在发生的事情，而且转换为文本的过程感觉很不必要。"
                        ],
                        ["edit", "'I have' + (7→'') + 'apples'"],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~我的做法是让文字像这样干净、自然，甚至简洁。所以同样的句子对我来说应该是这样的。"
                        ],
                        [
                            "Text",
                            "happy",
                            "$~是不是优雅多了？你可以把我放在 @Text 的任何位置，我会把你的值转换成文本，然后和 @Text 一起生成一个 @Text。",
                            "$~这使得编写使用价值观的优美散文变得更加容易。"
                        ],
                        ["edit", "'I have \\7\\ apples'"],
                        null,
                        [
                            "Text",
                            "neutral",
                            "$~当我说任何表达式时，我的意思确实是任何表达式。例如，假设你想做一些算术运算，并用结果创建一些文本。你可以这样做。这会将几个数字相加，然后用和生成文本。真的很奇妙，不是吗？而且比“我有' + (1 + 2 + 5 + 8) + ' 个苹果”优雅得多，尽管还有那么多额外的加法。"
                        ],
                        ["edit", "'I have \\1 + 2 + 5 + 8\\ apples'"],
                        null,
                        [
                            "Text",
                            "curious",
                            "$~所以你可能会想，/如果我想在某些文本中使用@Text？/",
                            "$~好吧，也许你并不想知道这一点，但我还是要告诉你！",
                            "$~在任何 @Text 中，只要连续输入两个就行！我会把它解释成一个 @Text，而不是一个空表达式，因为空表达式没有任何意义。",
                            "$~尝试删除 \\\\ 您将看到斜线恢复其含义。"
                        ],
                        [
                            "edit",
                            "\"I'm just \\\\regular\\\\ text, not a template.\""
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~这真是太优雅了，不是吗？@Text，我喜欢你对表达之美的欣赏。这极大地激励了我，让我自己也变得优雅！"
                        ],
                        null,
                        [
                            "Text",
                            "curious",
                            "$~我们的朋友 @FunctionDefinition 有没有跟你讲过他们为我定义的所有精彩函数？它们让我可以做各种各样的事情。其中一个非常简单：叫做 @Text/length，它的作用就是获取文本的长度。例如，如果我们结合这里的 @Evaluate 和我们的小伙伴 @PropertyReference，就可以在没有任何输入的情况下执行长度函数并返回长度值。试着修改文本，观察 Program 显示的长度变化，文本会变短或变长。"
                        ],
                        ["edit", "'hello'.length()"],
                        null,
                        [
                            "Text",
                            "happy",
                            "$~这里还有另一个很棒的例子。它让我忍不住笑了出来。它叫做 @Text/repeat，当它被求值时，它会读取之前求值的文本，并根据你指定的次数重复执行。试着改变一下数字，看看它求值的结果是什么。"
                        ],
                        ["edit", "'hello '.repeat(5)"],
                        null,
                        [
                            "Text",
                            "eager",
                            "$~@FunctionDefinition 为我创建了更多有趣的函数，但我就不赘述细节了。您可以随时在 *reference* @UI/docsExpand 找到我。那里保存了 Verse 团队所有成员的信息，包括如何与我们合作以及我们有哪些函数。我很乐意分享更多检查和创建文本的方法！"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~@Text，你总是那么善良又耐心的老师！和你一起工作总是那么快乐。你愿意帮我介绍我们这位友善的新导演其他的表达方式吗？"
                        ],
                        [
                            "Text",
                            "neutral",
                            "$~当然！很高兴见到你。我迫不及待地想看到你在舞台上给我们带来怎样的启发！"
                        ]
                    ]
                },
                {
                    "title": "$~中间的符号",
                    "subtitle": "$~中缀",
                    "concept": "BinaryEvaluate",
                    "performance": [
                        "fit",
                        "Group(Row() [",
                        "   Phrase('1' resting:Sequence({0%: Pose(offset: Place(0m 1m)) 50%: Pose(offset: Place(0m -1m)) 100%: Pose(offset: Place(0m 1m))} duration: 2s)) ",
                        "   Phrase('+' resting:Sequence({0%: Pose(offset: Place(0m -1m)) 50%: Pose(offset: Place(0m 1m)) 100%: Pose(offset: Place(0m -1m))} duration: 2s)) ",
                        "   Phrase('1' resting:Sequence({0%: Pose(offset: Place(0m 1m)) 50%: Pose(offset: Place(0m -1m)) 100%: Pose(offset: Place(0m 1m))} duration: 2s)) ",
                        "])"
                    ],
                    "lines": [
                        ["use", "fit", "Symbol", "🥰"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~你知道吗，我一直在想@Evaluate，想着我们分开了那么久。我很想念他们，他们显然也很想念我，但我只是希望分开一段时间能让他们发现自己有多棒。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~例如，你知道它们还有另一种形式吗？你之前看到过它们以 \\function()\\ 的形式出现，但它们在对单个输入函数求值时也有一个巧妙的技巧。@Evaluate 称之为 @BinaryEvaluate。例如，你知道刚才文本中展示的那个 repeat 函数吗？它看起来像这样。"
                        ],
                        ["edit", "'hi'.repeat(5)"],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~相反，你可以让 @Evaluate 在中间加上一个更简单的符号来求值，就像这样。这意味着“重复‘hi’五次”。但它也意味着“用输入 \\5\\ 对文本值 \\'hi'\\ 求值 \\·\\ 函数”。函数 \\repeat\\ 有多个名称，其中一个是符号名 \\·\\。"
                        ],
                        ["edit", "'hi' · 5"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~这让我想起了 @Text 的另一个函数！它可以用来将多个文本值合并成一个文本值。它叫做 \\combine\\，也可以叫做 \\+\\，你可以用它来将单词加在一起。看看我是如何获取一个文本值，然后将其与 \\'verse'\\ 进行 \\combine\\ 运算的？结果得到了 \\'hello verse'\\。"
                        ],
                        ["edit", "'hello '.combine('verse')"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~但使用 \\+\\ 就容易多了。"
                        ],
                        ["edit", "'hello ' + ' verse'"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~您甚至可以将它们按顺序串在一起以组合两个以上的事物。"
                        ],
                        ["edit", "'hello ' + 'verse' + '!'"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~这与一系列组合评估相同，但没有所有的括号和 \\.\\，并且使用符号名称而不是单词名称。"
                        ],
                        ["edit", "'hello '.combine('verse').combine('!')"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~您也可以使用这种格式的符号名称，但最终看起来有点混乱，不是吗？"
                        ],
                        ["edit", "'hello '.+('verse').+('!')"],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~这是@Evaluate 令人惊叹的众多方式之一♥他们用途非常广泛！",
                            "$~但它们并不完美。任何 @BinaryEvaluate 都需要确保提供第二个输入。例如，这行不通。一个加什么？当这种情况发生时，@UnparsableExpression 很快就会出现。"
                        ],
                        ["conflict", "1 +"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~好了，我们去找找@Boolean？这两个值很有意思……"
                        ]
                    ]
                },
                {
                    "title": "$~是与否",
                    "subtitle": "$~真相",
                    "concept": "Boolean",
                    "performance": [
                        "fit",
                        "Group(Row() [Phrase('⊤') Phrase('⊥')] resting:Sequence({ 0%: Pose(rotation: 0°) 50%: Pose(rotation: 180°) 100%: Pose(rotation: 360°)} duration: 2s))"
                    ],
                    "lines": [
                        ["fit", "Stage([])"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~\\⊤\\！\\⊥\\！你们俩在附近吗？他们通常到处都是，但我哪儿也没看到他们。"
                        ],
                        null,
                        ["⊤", "precise", "$~就在这里。"],
                        ["⊥", "precise", "$~不在那里。"],
                        [
                            "fit",
                            "multiple: 10",
                            "Stage([Group(Grid(multiple multiple) ('⊤⊥'.repeat(multiple ^ 2) ÷ '').translate(ƒ(glyph•'') Phrase(glyph color: Color(75% 0 0°))))])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "scared",
                            "$~哦，你吓死我了！我就知道你们俩不会走远。我们这么久没联系，你们俩过得怎么样？"
                        ],
                        ["⊤", "precise", "$~非常好！"],
                        ["⊥", "precise", "$~不错。"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~不孤独吗？我和每个人聊过——@Program、@ExpressionPlaceholder、@Program（除了@UnparsableExpression；他们似乎在任何地方都很好）。"
                        ],
                        ["⊤", "precise", "$~我们彼此拥有。"],
                        ["⊥", "precise", "$~我们并不孤单。"],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~嗯，听到这个消息真是太好了。很高兴再次和你见面。我想把你介绍给我们的新任候补导演。他们一直在和大家见面，学习如何和我们一起演出。你想告诉他们你的工作吗？"
                        ],
                        ["⊤", "precise", "$~我是真的。"],
                        ["⊥", "precise", "$~我是假的。"],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~是的，但是你会做什么呢？"
                        ],
                        ["⊤", "precise", "$~我只是说实话。"],
                        ["⊥", "precise", "$~而我并不是真的。"],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~嗯。我想是的。不过你确实做了一些事，对吧？我以为我给你做了一些函数。"
                        ],
                        ["⊤", "precise", "$~啊，是的，三个。"],
                        ["⊥", "precise", "$~不多不少。"],
                        null,
                        ["edit", "(⊤ & ⊤) = ⊤"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~一个是 @Boolean/and，对吧？它接受你和另一个人的输入？如果两者都是 \\⊤\\，则结果为 \\⊤\\？"
                        ],
                        [
                            "⊤",
                            "precise",
                            "$~正确。\\⊤ & ⊤ = ⊤\\，否则为 \\⊥\\。"
                        ],
                        [
                            "⊥",
                            "precise",
                            "$~没错。\\⊤ & ⊥ = ⊥\\，\\⊥ & ⊤ = ⊥\\，\\⊥ & ⊥ = ⊥\\，但其他情况下 \\⊤\\。"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~（当尝试确定多个表达式是否全部为真时，这非常有用，因为只有当所有表达式都为真时它才为真）。"
                        ],
                        null,
                        ["edit", "(⊤ | ⊤) = ⊥"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~另一个是 @Boolean/or，对吧？它也接受一个输入？但是只要有一个为真，它就返回 \\⊤\\ 吗？"
                        ],
                        [
                            "⊤",
                            "precise",
                            "$~正确。\\⊤ | ⊤ = ⊤\\, \\⊤ | ⊥ = ⊤\\, \\⊥ | ⊤ = ⊤\\, 但其他情况下为 \\⊥\\。"
                        ],
                        [
                            "⊥",
                            "precise",
                            "$~没错。\\⊥ | ⊥ = ⊥\\，但其他情况下则为 \\⊤\\。"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~（当尝试确定任何表达式是否为真时，这非常有用，因为即使只有一个表达式为真，它也为真）。"
                        ],
                        null,
                        ["edit", "~⊤ = ⊥"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~但另一个是@Boolean/not？"
                        ],
                        ["⊤", "precise", "$~正确。\\~⊤ = ⊥\\。"],
                        ["⊥", "precise", "$~没错。\\~⊥ = ⊤\\。"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~（这只是颠倒了真值）。"
                        ],
                        null,
                        [
                            "fit",
                            "multiple:10",
                            "                        Stage([Group(Grid(multiple multiple) ('⊤⊥'.repeat(multiple ^ 2) ÷ '').translate(ƒ(glyph•'') Phrase(glyph color: Color(75% 0 0°))))])"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~你在我们的表演中有什么用处？"
                        ],
                        ["⊤", "precise", "$~询问@Conditional。"],
                        ["⊥", "precise", "$~别问我们。"],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~你们两个……好的，我们稍后再与@Conditional 谈谈（他们应该说它们对于根据价值观做出决策很有用，但我想他们希望@Conditional 告诉你们这一点。我们稍后再与@Conditional 谈谈）。"
                        ],
                        null,
                        [
                            "fit",
                            "multiple:10",
                            "                        Stage([Group(Grid(multiple multiple) ('⊤⊥'.repeat(multiple ^ 2) ÷ '').translate(ƒ(glyph•'') Phrase(glyph color: Color(75% 0 0°) rotation: 90°)))])"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~哦！我在想。你们两个代表了两个截然不同的极端：真与假。但那些……更模糊的事物呢？比如那些既真又假，甚至同时真假兼具的事物？比如地球看起来是平的但实际上并非如此，或者天空是蓝色的，但颜色实际上只是我们大脑创造的幻觉？如果我们的导演想要表达这样的东西，他们该怎么做？"
                        ],
                        ["⊤", "precise", "$~…"],
                        ["⊥", "precise", "$~…"],
                        null,
                        [
                            "fit",
                            "multiple:10",
                            "                        Stage(",
                            "                        [",
                            "                        Group(",
                            "                        Grid(multiple multiple) ",
                            "                        ('⊤⊥'.repeat(multiple ^ 2) ÷ '').translate(",
                            "                        ƒ(glyph•'') ",
                            "                        Phrase(glyph resting:Pose(",
                            "                            color: Color(75% 0 0°) ",
                            "                            rotation: 90° ",
                            "                            offset:Place(0m (Time() ^ 2) · -0.000025m/ms^2))",
                            "                        )))])"
                        ],
                        ["⊤", "precise", "$~… 不。"],
                        ["⊥", "precise", "$~… 不。"],
                        null,
                        ["fit", "Stage([])"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~嗯，好的。值得一试！也许还有其他我还没想到的方式来表达这些想法。又或许数据本身就表达能力有限……我们去看看其他表达方式，你们俩可以接受吗？"
                        ],
                        ["⊤", "precise", "$~我们还好。"],
                        ["⊥", "precise", "$~没问题。"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~好的，再见，很快再见！"
                        ]
                    ]
                },
                {
                    "title": "$~让我数一数",
                    "subtitle": "$~数字",
                    "concept": "Number",
                    "performance": [
                        "fit",
                        "numbers•[#]: 25 → []",
                        "Group(Grid(5 5) numbers.translate(",
                        "    ƒ (n•#) ",
                        "        (",
                        "            Phrase(",
                        "                n → ''    ",
                        "            )",
                        "        )",
                        "    )",
                        ")"
                    ],
                    "lines": [
                        ["use", "fit", "Symbol", "😞"],
                        [
                            "FunctionDefinition",
                            "confused",
                            "$~他们俩总是那么……简洁！不过他们真的形影不离：就像两个最亲密的朋友，总是互相补充，补充彼此的想法。我希望@Evaluate。我们之间总是那么……不平衡。"
                        ],
                        null,
                        [
                            "fit",
                            "numbers•[#]:25 → []",
                            "                        Group(Grid(5 5) numbers.translate(",
                            "                            ƒ (n•#) ",
                            "                                (",
                            "                                    off:Random(-3 3) · 1m",
                            "                                    Phrase(",
                            "                                        n → '' ",
                            "                                        resting:Sequence({",
                            "                                                    0%:Pose(offset: Place(z: 0m)) ",
                            "                                                    50%:Pose(offset: Place(z: off)) ",
                            "                                                    100%:Pose(offset: Place(z:0m))",
                            "                                                } 1s)",
                            "                                    ))",
                            "                                )",
                            "                            )"
                        ],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~我们接下来应该去见见@Number。他们总是有这么多有趣的事情分享。嘿，@Number，你在吗？"
                        ],
                        ["Number", "kind", "$~只需 3 步！"],
                        null,
                        [
                            "FunctionDefinition",
                            "scared",
                            "$~啊，你吓到我了！！"
                        ],
                        [
                            "Number",
                            "kind",
                            "$~第 78,238 次了。这是我第四喜欢的爱好！"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~我很高兴你玩得开心。（深呼吸）好久不见了，不是吗？"
                        ],
                        [
                            "Number",
                            "kind",
                            "$~漫长得难以估量。我只是在这里消磨时间，数着秒、数着分、数着小时、数着周、数着月、数着年，然后……"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~别说几十年了，应该没那么久。总之，我想给你介绍一个可能是我们新导演的人。他们刚来就撞见了我，结果发现他们是个真人，而且很有兴趣和我们一起做节目。我们刚刚认识了@BooleanLiteral，还有@Text、@Evaluate、@UnparsableExpression、@ExpressionPlaceholder 和@Program。我们讨论过函数求值，并给出了一些例子。",
                            "$~你想说说你做了什么吗？"
                        ],
                        [
                            "Number",
                            "excited",
                            "$~我会数东西！我可以是任何你喜欢的数字。只要输入我，我就能计算出你想要的值。就像这样。"
                        ],
                        ["edit", "1"],
                        null,
                        ["Number", "excited", "$~或者这个。"],
                        ["edit", "1.0"],
                        null,
                        ["Number", "excited", "$~或者这个。"],
                        ["edit", "1.01"],
                        null,
                        ["Number", "excited", "$~或者这个。"],
                        ["edit", "∞"],
                        null,
                        ["Number", "excited", "$~或者这个。"],
                        ["edit", "π"],
                        null,
                        ["Number", "excited", "$~或者这个。"],
                        ["edit", "Ⅶ"],
                        null,
                        ["Number", "excited", "$~或者这个。"],
                        ["edit", "万十一"],
                        null,
                        ["Number", "excited", "$~或者…"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~好的，好的，@Number，我们明白了！但你还做了其他特别的事情，对吧？单位？"
                        ],
                        null,
                        [
                            "Number",
                            "excited",
                            "$~哦，对了，*单位*！只要在数字后面加几个符号，我就能知道具体数了。就像这样。"
                        ],
                        ["edit", "1dolphin"],
                        null,
                        ["Number", "excited", "$~或者这个。"],
                        ["edit", "1.0thunderstorm"],
                        null,
                        ["Number", "excited", "$~或者这个。"],
                        ["edit", "∞kittens"],
                        null,
                        ["Number", "excited", "$~或者这个。"],
                        ["edit", "1.01toes"],
                        null,
                        ["Number", "excited", "$~或者…"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~嗯，\\1.01toe\\s？是的，谢谢@Number，这些例子……很有意思。而且它们在做数字运算的时候非常有用，对吧？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~...当你进行数字运算时它们非常有用，对吧？"
                        ],
                        [
                            "Number",
                            "excited",
                            "$~哦，对了，数学！@FunctionDefinition 给了我很多简洁的算术。就像这样。"
                        ],
                        ["edit", "1 + 1"],
                        null,
                        ["Number", "excited", "$~或者这个。"],
                        ["edit", "1000 + 9999"],
                        null,
                        ["Number", "excited", "$~或者这个。"],
                        ["edit", "1kitty + 2kitty"],
                        null,
                        ["Number", "excited", "$~或者这个。"],
                        ["edit", "-5s + 5s"],
                        null,
                        ["Number", "excited", "$~或者这个。"],
                        ["conflict", "2apple + 5orange"],
                        null,
                        [
                            "FunctionDefinition",
                            "confused",
                            "$~哎呀。你能加苹果和橙子吗？"
                        ],
                        [
                            "Number",
                            "angry",
                            "$~不。这就是我强调冲突的原因。我不喜欢添加不兼容的东西。我只能添加兼容的数字。这适用于乘法、除法以及我所有的其他函数。你想修复它吗？把苹果换成橙子，或者把橙子换成苹果，冲突就会消失。确保数字和单位之间没有空格；否则，我不知道它是一个单位。还要确保单位/完全/相同。我对人们的单位一无所知；它们对我来说毫无意义。我只是比较单位名称，如果它们不匹配，就砰！"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~太酷了。@Number，你对数字真拿手！我看到@Number，也有很多游戏需要记录分数、生命值或其他可数的东西。@Number，你还有什么想和我们的新导演分享的吗？"
                        ],
                        ["Number", "serious", "$~其他 192 个巧妙的技巧。"],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~我想我们得等一下。如果我们想了解更多的话，你会在吗？"
                        ],
                        [
                            "Number",
                            "happy",
                            "$~是的；您可以随时找到我和我的功能！"
                        ]
                    ]
                },
                {
                    "title": "$~开场白（重述）",
                    "subtitle": "$~前缀",
                    "concept": "UnaryEvaluate",
                    "performance": ["use", "fit", "Symbol", "~"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~有时候，我简直被这里所有人的聪明才智所折服。文字、真理、数字——这些想法多么强大！"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~……你知道我之前怎么跟你说过，他们可以求任何带括号的函数，比如 \\1.add(1)\\，也可以求带中缀运算符的两个输入函数，比如 \\1 + 1\\？其实，对于只有一个输入的函数，他们还有一个技巧：一元格式。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~这些方法虽然不多，但功能却非常强大。其中一个与 @Number 密切相关：求反。只需在任何数值前面加上 \\-\\ 即可得到其负数。"
                        ],
                        ["edit", "-(1 + 3)"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~那个小减号与 \\(1 + 3).negate()\\ 的作用相同，但更加优雅。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~另一个表达式与之类似，但用于对 \\⊤\\ 和 \\⊥\\ 进行取反：它就像一个短小的波浪线减去 \\~\\，将真翻转为假，将假翻转为真。例如，这个小表达式先计算 \\⊤ | ⊥\\，即 \\⊤\\，然后将 \\⊤\\ 翻转为 \\⊥\\。这与 \\(⊤ | ⊥).not()\\ 相同，但更加简洁。"
                        ],
                        ["edit", "~(⊤ | ⊥)"],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~这难道不美妙吗？@Evaluate 可以有这么多不同的形式，但实际上都是同一个意思？他们甚至都没注意到……"
                        ]
                    ]
                },
                {
                    "title": "$~空虚",
                    "subtitle": "$~没有什么",
                    "concept": "None",
                    "performance": [
                        "fix",
                        "Phrase('ø' size: 5m place: Motion(velocity: Velocity(y: 5m/s)))"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~你觉得再多一个值就没问题了吗？接下来我们来找找@None。它们比@None。@None？你找到了吗？"
                        ],
                        ["None", "bored", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~我们找到你了！你看起来还好。这么久都没动静，你感觉怎么样？"
                        ],
                        ["None", "excited", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~这很有道理。我明白你为什么喜欢安静。那里确实很宁静。我想把你介绍给我的新朋友，也是我未来的导演。他们很想激励我们。"
                        ],
                        ["None", "eager", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~是的，我觉得他们有很多想法。我们还没讨论过，不过时间还很充裕。我们现在还在学习。你想分享一下你的工作吗？（我可以翻译）"
                        ],
                        ["None", "serious", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~它们代表着“无”。与零不同，你不能在它上面加任何东西，也不能在它上面减任何东西。只是……什么也没有。"
                        ],
                        ["None", "serious", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~它们说它们喜欢占据可能存在某些东西的空间。有时它们代表游戏中缺少选择，有时它们代表功能中的默认输入。从这个意义上讲，它们可能代表着任何东西的缺失。"
                        ],
                        ["None", "neutral", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~他们想让你知道，他们实际上什么也没做。他们只是存在而已。他们真正做的就是判断自己是否是自己。如果是，就评估为 \\⊤\\，否则评估为 \\⊥\\。"
                        ],
                        ["edit", "ø = ø"],
                        null,
                        ["edit", "Phrase('hi' face: ø)"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~你还记得 @Phrase 吗？@Phrase 实际上经常与 @None 配合使用。@Evaluate 提到的大多数输入默认都是 \\ø\\，对于 @Phrase 来说，这意味着没有指定大小、字体、颜色等。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~您还有什么想与我们新晋导演分享的吗？"
                        ],
                        ["None", "eager", "$~…"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~他们觉得你很棒！我也觉得你很棒。你已经见过我们这么多优秀的球员了。还有更多球员等着你去见……"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~合奏",
            "performance": [
                "fit",
                "Group(Row('|' (Time() ÷ 500).sin() · 1m) [Phrase('[]') Phrase('{}') Phrase('{:}')])"
            ],
            "scenes": [
                {
                    "title": "$~社区价值观",
                    "subtitle": null,
                    "performance": [
                        "fit",
                        "Group(Row() [Phrase('[') Phrase(' .' · (Time() ÷ 100ms)) Phrase(']')])"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~你知道吗？我们社区的价值观真是天壤之别。@Text 的文化世界与人类世界截然不同……@Boolean 的世界观是二元的……@Number 痴迷于数数……@None 则以安静的方式观察事物的缺失……我们的世界永远不会无聊！"
                        ],
                        [
                            "fit",
                            "Group(Stack() [Phrase('\"\"') Phrase('⊤⊥') Phrase('#') Phrase('ø')])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~你可能想知道它们在群组中如何相互协作。其实，Verse 中还有另外一类东西，它们致力于将值组合成组。我们称之为“集合”。集合也是“值”；它们只是由更小的值甚至其他集合组成。例如，你可能有一个 @Text 列表、一组 @Number，甚至是一个列表的列表。"
                        ],
                        [
                            "fit",
                            "Group(Row() [Phrase('[') Phrase('\"hi\"') Phrase('⊤') Phrase('42') Phrase('ø') Phrase(']') ])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~你想认识他们吗？我们先从@List……这是我认识的第一个合集，也可能是我们社区里最受瞩目的，因为它们在组织表演所需的其他价值方面非常有用。"
                        ],
                        ["use", "fit", "Symbol", "[]"]
                    ]
                },
                {
                    "title": "$~各位，请到地方！",
                    "subtitle": "$~列表",
                    "concept": "List",
                    "performance": [
                        "fit",
                        "clockwise: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: 180°) 100%: Pose(rotation: 360°)} duration: 2s)",
                        "                    counter: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: -180°) 100%: Pose(rotation: -360°)} duration: 2s)",
                        "                    Group(Row() [Phrase('[' resting:clockwise) Phrase(']' resting:counter) ])"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~你好，@List！你在吗？我想让你认识一个人。"
                        ],
                        ["List", "curious", "$~@FunctionDefinition？是你吗？"],
                        [
                            "fit",
                            "up: Sequence({0%: Pose(offset: Place(0m -1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m -1m))} duration: 2s)",
                            "                        down: Sequence({0%: Pose(offset: Place(0m 1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 1m))} duration: 2s)",
                            "                        Group(Row() [Phrase('[' resting:up) Phrase(']' resting:down)])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~是的！是我。好久不见了！"
                        ],
                        [
                            "List",
                            "curious",
                            "$~确实如此。日复一日，夜复一夜，无人出现。但你却在这里。怎么会这样？告诉我发生了什么——按顺序！"
                        ],
                        [
                            "fit",
                            "up: Sequence({0%: Pose(offset: Place(0m 1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 1m))} duration: 2s)",
                            "                        down: Sequence({0%: Pose(offset: Place(0m -1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m -1m))} duration: 2s)",
                            "                        Group(Row() [Phrase('[' resting:up) Phrase(']' resting:down)])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~嗯，我像往常一样，坐在那里，努力想象着要计算的函数，但就是卡住了。然后我的新朋友出现了，他对我们的世界充满好奇，想了解更多，甚至想成为我们的下一任导演。于是我们和@Program、@ExpressionPlaceholder、@UnparsableExpression、@Evaluate、@Text、@Number、@Boolean 和 @None 聊了聊，把大家都叫醒了。这就是我们来这里的原因：讨论你们的工作以及我们的下一场演出！"
                        ],
                        [
                            "fit",
                            "wobble: Sequence({0%: Pose(offset: Place(0m)) 25%: Pose(offset: Place(-.1m)) 50%: Pose(offset: Place(.2m)) 75%: Pose(offset: Place(-.3m)) 100%: Pose(offset: Place(0m))} duration: 0.1s)",
                            "Group(Row() [Phrase('[' resting:wobble) Phrase(']' resting:wobble)])"
                        ],
                        ["List", "excited", "$~太棒了！很高兴认识你，新导演。"],
                        ["List", "excited", "$~你想知道我做什么吗？"],
                        ["FunctionDefinition", "neutral", "$~是的，告诉他们！"],
                        null,
                        [
                            "List",
                            "excited",
                            "$~好的。首先，也是最重要的，我会把值按顺序排列。无论你想要什么表达式：数字、单词、其他列表——我都能按顺序将它们组合在一起。",
                            "$~比如，看看这个有趣的列表。你见过这样的东西吗？太漂亮了！前十个数字，按顺序排列。"
                        ],
                        ["edit", "[1 2 3 4 5 6 7 8 9 10]"],
                        null,
                        [
                            "List",
                            "serious",
                            "$~其次，这很严重，我总是以 \\[\\ 开头，以 \\]\\ 结尾。这样我才能知道列表的起始和结束。它们必须始终按照这个顺序排列。不能以 \\]\\ 开头，也不能以 \\[\\ 结尾；这是错的。你看到事情变得多么混乱了吗？你能解决这个问题吗？"
                        ],
                        ["conflict", "[ 1 2 3 4"],
                        null,
                        ["List", "serious", "$~这个也坏了。你能修好它吗？"],
                        ["conflict", "] 1 2 3 4 ["],
                        null,
                        [
                            "List",
                            "sad",
                            "$~有时候，人们会忘记这一点，然后括号里就到处乱放，他们不喜欢这样，然后数值就变得毫无秩序，一片混乱。我不喜欢这样。"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~没关系。我们喜欢你喜欢秩序；这就是你与众不同的地方！"
                        ],
                        null,
                        [
                            "List",
                            "happy",
                            "$~我喜欢我也喜欢秩序！好吧，我说到哪儿了。是的，第三点，而且也很关键，不要逗号！我知道有些文化里，人们喜欢在列表项之间加逗号，但我不喜欢。它们就像一些小垃圾，妨碍了我优雅的排序，而且人们总是忘记它们。如果你看不清表达式之间的界限，那就加个换行符吧。也许你可以去掉那些讨厌的东西？如果你喜欢，就加换行符。除了逗号，其他任何符号都可以。恶心！"
                        ],
                        ["conflict", "[ 1, 2, 3, 4, 5]"],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~@List，我最喜欢你的一点就是你处理列表的能力太强了。你想给我们的学生主任演示一些例子吗？"
                        ],
                        [
                            "List",
                            "neutral",
                            "$~是的，但是 @FunctionDefinition，这些都是你做的。你为我展现了所有这些漂亮的函数，让我能够做各种各样的事情！比如 @List/reverse ——哦，这个很棒又简单。它只是接受我的值，然后将它们按相反的顺序排列。"
                        ],
                        ["edit", "[ 1 2 3 4 5 ].reverse()"],
                        null,
                        [
                            "List",
                            "excited",
                            "$~这个很有意思：@List/sans 直接删除所有等于给定值的值。看看结果列表中是不是没有零了？"
                        ],
                        ["edit", "[ 1 0 1 0 1 ].sans(0)"],
                        null,
                        [
                            "List",
                            "serious",
                            "$~啊，我真不敢相信我忘了解释第四条规则！好的，第四条规则：我从不修改列表。我只会创建新的列表。无论你对我执行什么函数，我总是创建新的列表；我从不修改列表。那么上面的 @List/reverse 示例呢？它并没有修改列表；它创建了一个新列表。而 sans 示例呢？它并没有从原始列表中删除零；它创建了一个没有零的新列表。这实际上适用于 Verse 中的所有内容：值一旦被创建，就一直是它们，不会改变。"
                        ],
                        null,
                        [
                            "List",
                            "surprised",
                            "$~哦，这让我想起了最后一条规则，也就是第五条规则：我从 1 开始计数！不是 0，也不是 2，而是 1。所以，如果你想获取列表中特定位置的值，可以再使用两个 \\[]\\ 来组成一个 @ListAccess，并指定你想要的位置。看看我获取 \\3\\ 时，给出的是列表中的第三个值 \\'c'\\？试试把它改成 \\1\\ 或 \\5\\，看看会得到什么。然后，或许可以试试 \\0\\ 或 \\6\\……"
                        ],
                        ["edit", "['a' 'b' 'c' 'd' 'e'][3]"],
                        [
                            "List",
                            "happy",
                            "$~有意思吧？给我列表中的一个位置，我就会绕回。例如，\\-1\\ 是列表中的最后一项，如果列表有五个项，那么索引 \\6\\ 就是第一项。如果你给我索引 \\0\\，那么我会给你 @NoneLiteral，因为那里什么也没有。明白了吗？"
                        ],
                        null,
                        [
                            "List",
                            "serious",
                            "$~好吧，也许可以加一个列表函数，因为这是我最喜欢的。这个函数叫做 @List/random，它会在列表中随机给出一个值。这很有趣，因为你永远不知道会得到什么！你得到了什么？你得到了什么？试试添加你自己的动物，看看会得到什么。"
                        ],
                        [
                            "edit",
                            "['cat' 'dog' 'mouse' 'parrot' 'snake'].random()"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~List，你真傻。你还能做那么多酷事，真是让我刮目相看。如果我们新来的导演朋友有问题，你会在吗？"
                        ],
                        [
                            "List",
                            "eager",
                            "$~是的，当然，一直都是！@FunctionDefinition 为我做了这么多有趣的事情。只要告诉我你需要什么就行！"
                        ]
                    ]
                },
                {
                    "title": "$~各一个",
                    "subtitle": "$~套",
                    "concept": "Set",
                    "performance": [
                        "fit",
                        "clockwise: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: 180°) 100%: Pose(rotation: 360°)} duration: 2s)",
                        "                    counter: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: -180°) 100%: Pose(rotation: -360°)} duration: 2s)",
                        "                    Group(Row() [Phrase('{' resting:clockwise) Phrase('}' resting:counter) ])"
                    ],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@List 真有意思。他们对秩序的热爱真是令人喜爱，也太实用了！我觉得接下来认识一下他们的表亲 @Set 可能会很有趣，因为他们很像，但又在一些重要方面有所不同。@Set？我想认识一个人。"
                        ],
                        null,
                        [
                            "Set",
                            "curious",
                            "$~哦！@FunctionDefinition！是你！你怎么来了？沉默结束了吗？发生了什么事？我们是在表演吗？怎么回事？大家都在哪儿？"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~好多问题！我来给你介绍一位正在考虑当导演的人。他们正在学习关于《诗篇》的一切，希望能和我们分享他们的灵感！我们刚才和@List，之前也和@Number、@Boolean、@Text、@Evaluate 和 @Program 聊过。接下来我们来找你，因为我们要见见所有的收藏！"
                        ],
                        null,
                        [
                            "Set",
                            "kind",
                            "$~哦，很高兴认识你，你真是个新导演！你有什么想法吗？我们表演什么？我能帮忙吗？你需要我做什么？"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~也许一开始，就说说你做什么？"
                        ],
                        null,
                        [
                            "Set",
                            "eager",
                            "$~哦，当然。我收集东西（嗯，显然，我就是收集品）。但最重要的是，我**每种东西**只收集一件。我可以收集任何你喜欢的东西，帮你追踪价值，但我绝不会重复一个价值。我喜欢像 @List 那样排列，但用 \\{\\ 和 \\}\\ 代替。"
                        ],
                        ["edit", "{ 1 2 3 4 5 }"],
                        null,
                        [
                            "Set",
                            "neutral",
                            "$~这是一套。不过就像我说的，不能重复。所以如果你给我这个，我就会把多余的扔掉。"
                        ],
                        ["edit", "{ 1 2 2 3 3 3 }"],
                        null,
                        [
                            "Set",
                            "curious",
                            "$~与 @List 类似，您可以使用 @SetOrMapAccess 来检查集合中是否包含某个值。如果包含，则返回 \\⊤\\；如果不包含，则返回 \\⊥\\。让我们看看这个集合中是否缺少 \\3\\。没错，没有！尝试将 \\3\\ 重新添加到集合中。"
                        ],
                        ["edit", "{ 1 2 4 5 }{3}"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Set，使用设置值还可以做其他事情吗？"
                        ],
                        [
                            "Set",
                            "eager",
                            "$~当然有，非常感谢你。你想看我做什么？有什么表演计划吗？我能帮上什么忙？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~也许，@Set/difference？"
                        ],
                        [
                            "Set",
                            "neutral",
                            "$~是的，@Set/difference。",
                            "$~当对一个集合求值并给定另一个集合时，它会从求值的集合中删除给定集合中的所有项（嗯，这些词可能有点笨拙，但我就是这个意思）。这里有一个例子。看看结果为什么只是 \\{3}\\ 的集合？这是删除 \\{1 2}\\ 中的值后剩下的唯一值。"
                        ],
                        ["edit", "{ 1 2 3 }.difference({ 1 2 })"],
                        null,
                        [
                            "Set",
                            "eager",
                            "$~你也可以在集合中添加或移除元素。例如，以集合 \\{1}\\ 为元素，添加 \\2\\，然后移除 1，剩下 \\{2}\\。"
                        ],
                        ["edit", "({ 1 } + 2) - 1"],
                        [
                            "Set",
                            "neutral",
                            "$~感谢@FunctionDefinition，我还能做更多。想了解更多，随时来找我！"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "Set",
                            "curious",
                            "$~哦，嘿@FunctionDefinition，你说你看到了@Evaluate？"
                        ],
                        ["FunctionDefinition", "sad", "$~是的，我做到了。"],
                        null,
                        ["Set", "curious", "$~他们怎么样？"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~他们没事。我们也没事。我想……我不知道。也许我们太久没一起跳舞了。我和他们在一起的时候，感觉他们好像看不到自己，所以他们也看不到我。"
                        ],
                        [
                            "Set",
                            "curious",
                            "$~听起来这对你来说也是一段充满挑战的时期。也许换了新导演，我们还能再跳舞，你们俩总能找到办法。"
                        ]
                    ]
                },
                {
                    "title": "$~一对一",
                    "subtitle": "$~映射",
                    "concept": "Map",
                    "performance": [
                        "fit",
                        "clockwise: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: 180°) 100%: Pose(rotation: 360°)} duration: 2s)",
                        "                    counter: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: -180°) 100%: Pose(rotation: -360°)} duration: 2s)",
                        "                    Group(Row() [Phrase('{' resting:clockwise) Phrase(':') Phrase('}' resting:counter) ])"
                    ],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~我只想再介绍一个集合。它在某些方面有点像 @Set，甚至使用相同的括号，但它们在一个重要的方面有所不同：它是一个连接器。它的名字是 @Map。"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Map？你在吗？寂静被打破了！"
                        ],
                        null,
                        [
                            "Map",
                            "curious",
                            "$~打破？它真的安静过吗？很高兴见到你，@FunctionDefinition。哦天哪，你和@FunctionDefinition？上次我们谈话时，他们状态不太好。你得和他们谈谈。"
                        ],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~是的，我和他们谈过了……"
                        ],
                        null,
                        [
                            "Map",
                            "curious",
                            "$~哦，太好了。好吧，因为那里有些地方需要修理，我的朋友……你最近怎么样？"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~我过得还好，只是有点孤独和无聊。"
                        ],
                        null,
                        [
                            "Map",
                            "excited",
                            "$~哦，听到这个消息我很难过。沉默期间我一直和大家保持联系，没想到你和@Evaluate！我本来很乐意随时聊聊的。只是最近我一直在忙着关注@List@Set，以及@Conditional@BooleanLiteral。你知道他们之间发生了什么吗？"
                        ],
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~不，我一点儿也不觉得。气氛紧张？还有什么八卦？"
                        ],
                        [
                            "Map",
                            "kind",
                            "$~有点像你和@Evaluate 之间的紧张关系？"
                        ],
                        ["FunctionDefinition", "sad", "$~…"],
                        null,
                        [
                            "Map",
                            "neutral",
                            "$~抱歉。在我们这位客人面前可能不行。你肯定就是大家热议的新人吧。听说你要当我们的新导演了？你有什么好主意给我们？唱歌？跳舞？只要是明亮、有趣、新奇的，我都愿意！"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~没必要给他们压力！我相信他们有很多想法。我们只是想在确定第一场演出之前，留出一些学习和交流的空间。能分享一下你们的做法吗？"
                        ],
                        null,
                        [
                            "Map",
                            "eager",
                            "$~我连接！我有点像字典：给我一个值，我会给你它对应的定义。@FunctionDefinition 跟你说过值是什么？我把它们一一对应，从一个值映射到另一个值。给我一个键，我会给你它对应的值。例如，这是一个从名称到分数的映射。名称是键，分数是值。"
                        ],
                        [
                            "edit",
                            "{ 'ben': 2points 'joe': 5points 'kate': 12points }"
                        ],
                        null,
                        [
                            "Map",
                            "serious",
                            "$~但是和 @Set 一样，我不喜欢重复。你不能拥有多个相同的键，但你可以将任意多个唯一键映射到等效值。例如，这给了我两个“ben”键，但我只使用了最后一个。但是“ben”和“joe”拥有相同的点数是可以的，因为它们是不同的键。"
                        ],
                        [
                            "edit",
                            "{'ben': 2points 'ben': 5points 'joe': 5points 'kate': 12points }"
                        ],
                        [
                            "Map",
                            "excited",
                            "$~正是与@Bind的合作让我与众不同！正是这种合作让我将价值观与价值观联系起来（你见过@Bind？还没有？哦，你一定会爱上他们的。他们太棒了。）"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Map，如果你想要一个空映射怎么办？它和空集 {} 有什么区别？"
                        ],
                        [
                            "Map",
                            "neutral",
                            "$~哦，就我一个人！我和小@Bind 只是闲逛而已，没有键也没有值。"
                        ],
                        ["edit", "{:}"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~如果我们的主管没有提供值或键怎么办？就像这样？比如，\\3\\ 没有值？"
                        ],
                        ["conflict", "{1:1 2:2 3 }"],
                        [
                            "Map",
                            "serious",
                            "$~哦……别这样。我只喜欢对。3 是键吗？还是值？太让人困惑了。别再说了。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~如果我们的主管想从某个键中获取一个值呢？"
                        ],
                        [
                            "Map",
                            "neutral",
                            "$~就像@Set：只需在地图后面放置一个 \\{}\\ 然后给我你想要的钥匙。"
                        ],
                        [
                            "edit",
                            "{ 'ben': 2points 'joe': 5points 'kate': 12points }{'ben'}"
                        ],
                        null,
                        ["Map", "neutral", "$~如果我没有钥匙，我会给你@None。"],
                        [
                            "edit",
                            "{ 'ben': 2points 'joe': 5points 'kate': 12points }{'anna'}"
                        ],
                        null,
                        [
                            "Map",
                            "neutral",
                            "$~如果您希望将@None 视为其他东西，您可能想要使用我们的朋友@Otherwise。",
                            "$~例如，如果没有值，我们默认为 \\0points\\。"
                        ],
                        [
                            "edit",
                            "map: { 'ben': 2points 'joe': 5points 'kate': 12points }\nmap{'anna'} ?? 0points"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "Map",
                            "neutral",
                            "$~除此之外，我很像 @Set：我可以实现很多相同的功能。欢迎随时来访，我很乐意向你展示更多！"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~谢谢你，@Map！你太棒了。"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~演员聚会",
            "performance": [
                "fix",
                "count: 32",
                "",
                "gravity•#m/s^2: 15m/s^2",
                "",
                "Stage(count → [].translate(",
                "   ƒ(_) ",
                "       Phrase(",
                "           '→?' → [].random()",
                "           place: Motion(",
                "               Place(y: 10m)",
                "               Velocity(Random(-5 5) · 1m/s angle: Random(0 360) · 1°/s)",
                "           )",
                "           matter: Matter(bounciness: Random())",
                "       )",
                "   )",
                "   gravity: gravity",
                ")"
            ],
            "scenes": [
                {
                    "title": "$~車輛改道",
                    "subtitle": null,
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~我简直不敢相信我们到现在为止已经遇到了这么多角色。感觉很多吗？而且感觉我们几乎没有取得任何进展。",
                            "$~我甚至还没有向你们展示演出中最令人兴奋的部分！"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~在我们进入真正精彩的部分之前，你介意我们先认识一下另外两个角色吗？这两个角色对于处理价值观，尤其是文本来说，至关重要；我们必须先聊聊他们，然后再谈更精彩的部分。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~这些是什么？",
                            "$~转化。它们是这个世界的炼金术，能够将一种价值转化为另一种价值。让我们来认识一下它们。"
                        ]
                    ]
                },
                {
                    "title": "$~我们可以成为任何人",
                    "subtitle": "$~转变",
                    "concept": "Convert",
                    "performance": ["use", "fix", "FlyIn", "→"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~嘿，@Convert！你在吗？"
                        ],
                        [
                            "Convert",
                            "happy",
                            "$~哥们，@FunctionDefinition，真是个新时代！你看起来很时尚。最近真是太安静了，不是吗？你交了个新朋友？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~是的，这位朋友很有兴趣指导。我们正在进行一次盛大的参观——我们已经见过@Program、@ExpressionPlaceholder、@UnparsableExpression、@Evaluate，以及所有与值和集合相关的内容。鉴于您与值的关系如此密切，我觉得下次见到您再合适不过了。"
                        ],
                        [
                            "Convert",
                            "kind",
                            "$~没错，价值观就是我的好兄弟。我们周末喜欢跑酷——或者去看演出，或者其他什么的。"
                        ],
                        null,
                        ["FunctionDefinition", "curious", "$~跑酷？"],
                        [
                            "Convert",
                            "serious",
                            "$~是的，你知道，就像在街上做体操，跳过障碍物，跨越高楼——就像高空钢丝，只是没有钢丝。勇敢的跳跃！"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~哦，我明白你的意思了。是的，我猜你做的有点像跑酷。不过，我不确定我们这位新来的导演朋友是否明白。你能不打比喻地解释一下吗？"
                        ],
                        null,
                        [
                            "Convert",
                            "kind",
                            "$~兄弟，很高兴。想象一下你有一个号码。"
                        ],
                        ["edit", "1"],
                        null,
                        [
                            "Convert",
                            "kind",
                            "$~假设你想把它变成文本。把我添加到 @Text 中，BAM，你就得到了文本！"
                        ],
                        ["edit", "1 → ''"],
                        null,
                        [
                            "Convert",
                            "serious",
                            "$~或者，假设你收到一条短信，想要一个号码。输入 @Number 和 POP，就能得到一个号码！"
                        ],
                        ["edit", "'1'→#"],
                        null,
                        [
                            "Convert",
                            "surprised",
                            "$~但你想看点儿什么，比如说，真厉害的魔力？假设你有一些文本，你想把它的字符放在一个列表中。用 @List 把我加进去，哈哈哈哈，你就得到了一个字母列表。"
                        ],
                        ["edit", "'halloween'→[]"],
                        null,
                        [
                            "Convert",
                            "serious",
                            "$~但我和@Number？我们一直在练习一些非常酷炫的把戏。比如说你几天有空，还想再来一份？我们帮你搞定。"
                        ],
                        ["edit", "5day → #s"],
                        null,
                        [
                            "Convert",
                            "excited",
                            "$~但真正厉害的技巧是什么？链式转换。就像连续进行多次转换。看看这个。天数到秒数，文本到列表，都在一个链式转换中完成。现在我们得到了一个数字列表。太棒了！"
                        ],
                        ["edit", "1day → #s → '' → []"],
                        null,
                        [
                            "Convert",
                            "neutral",
                            "$~所以，我的原则是，一切都应该无所不能，没有界限。任何事都可以是任何事（不是任何事，而是尽我所能）。",
                            "$~但是，为什么任何东西都要被困在一个身份里呢？你懂的，解放啊。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Convert，太棒了，太鼓舞人心了。但真的吗？"
                        ],
                        [
                            "Convert",
                            "sad",
                            "$~嗯，没什么。我的意思是，如果你给我几秒钟，然后要求一个 @Set，那是什么意思呢？",
                            "$~我会尽力找到一种方法......比如，在这里，我知道如何将数字转换为@Text，将@Text@Set，所以我会给你这个数字的文本形式的符号集。",
                            "$~但这可能不是你想要的......",
                            "$~而且，如果我不知道如何满足您的要求，我基本上就会关闭一切。"
                        ],
                        ["edit", "10s → {}"],
                        null,
                        ["use", "fit", "Symbol", "📕"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~对，这说得通。所以，只有部分转换，而不是所有可能的转换。"
                        ],
                        [
                            "Convert",
                            "sad",
                            "$~是的...您可以随时检查值的类型并查看它们支持哪些类型的转换。"
                        ],
                        null,
                        ["use", "fit", "Symbol", "🧐"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~你知道 @Convert 和 @Evaluate 是相关的吗？它们就像表兄弟。@Evaluate 可以求值任何函数，而 @Convert 可以求值任何转换。某种程度上，@Evaluate 也进行从输入到输出的转换。"
                        ],
                        [
                            "Convert",
                            "scared",
                            "$~哇哦。我从来没这么想过。比如，/我/把输入转换成输出，@Evaluate 把输入转换成输出。还有，@FunctionDefinition，你*告诉我们*如何把输入转换成输出。这就像，诗篇的秘密吗？",
                            "$~就像一切都是关于将输入转换为输出？"
                        ],
                        null,
                        ["FunctionDefinition", "serious", "$~大概吧？"],
                        ["Convert", "surprised", "$~🤯"],
                        ["edit", "Phrase('🤯')"],
                        null,
                        ["use", "fit", "Symbol", "🤯"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Convert，我们的新主管应如何了解可以进行哪些类型的转换？"
                        ],
                        [
                            "Convert",
                            "scared",
                            "$~抱歉，兄弟，我还是有点儿心动。呃，他们可以查看 @UI/docsExpand 里的任何值类型。",
                            "$~应该有一个我可以将它们转换成的其他类型的列表……一切都是转换……"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~很高兴见到你，@Convert！我们要出去和其他人见面了。很快再见！"
                        ],
                        [
                            "Convert",
                            "surprised",
                            "$~很快。是的……是的！完全是的。"
                        ]
                    ]
                },
                {
                    "title": "$~如何选择？",
                    "subtitle": "$~决策",
                    "concept": "Conditional",
                    "performance": ["use", "fix", "FlyIn", "?"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~到目前为止，我们在旅程中遇到了各种各样的价值观，也讨论过许多运用它们的方法。我只想再介绍一种。它们之所以特别，是因为它们让我们的表演如此充满活力。它们被称为@Conditional，它们是诗歌中做出*决定*的核心人物。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~需要明确的是，并非所有决定都是我的：我有自己的生活，他们也有他们的。但在演出中，当我们试图决定下一步在舞台上做什么时，一切都取决于他们，他们必须遵循你作为导演的指导，决定怎么做。所以他们是创造精彩演出的关键合作伙伴。"
                        ],
                        null,
                        ["use", "fit", "SpinningInTheDark", "?"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Conditional，沉默打破了！我们可能会再次演出！"
                        ],
                        [
                            "Conditional",
                            "curious",
                            "$~@FunctionDefinition？沉默正在被打破？什么是沉默？如何打破沉默？我们真的沉默过吗？这个人是谁？是他打破了沉默吗？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~是的，沉默正在打破，他们就是那个人！他们是一个人，他们来激励我们，指导我们的演出。我们一直在谈论转化，并满足所有价值观，@Text、@Convert 和我都希望他们能认识你！从某种程度上来说，你是最特别的转化者，因为你让我们能够将现状转化为新的价值观。"
                        ],
                        [
                            "Conditional",
                            "curious",
                            "$~我有吗？",
                            "$~我确实会做决定，但我真正做的是将导演告诉我要做的决定编码起来，所以真的是我在做决定吗？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~是的，我想是的。这更像是主管先把决定编码，然后委托给你。你成了决策者。你能举个例子吗？"
                        ],
                        ["Conditional", "curious", "$~像这样？"],
                        ["conflict", "_•? ? _ _"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~是的，正是如此！",
                            "$~你看到 @Conditional 的格式有四个部分了吗？首先是 *条件*，它必须是 @Boolean 类型。然后是 \\?\\。接着是 *yes* 表达式，最后是 *no* 表达式。@Conditional 的作用是评估条件，如果是 \\⊤\\，则评估 *yes* 表达式。否则，评估 /no/ 表达式。这是一种非常强大的判断方式！"
                        ],
                        null,
                        ["edit", "1 > 5 ? 'more' 'less'"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~您能给我们举一个更具体的例子吗？"
                        ],
                        ["Conditional", "curious", "$~像这样吗？"],
                        ["edit", "1 > 5 ? 'less' 'more'"],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~呃，嗯。我想这应该算是一个决定，但肯定是错的。一不小于五。你的决定不一定总是对的，但应该很可靠，对吧？"
                        ],
                        null,
                        [
                            "Conditional",
                            "curious",
                            "$~可靠吗？也许吧？如果你接受我只是按照主任说的做决定，那么是的，但如果主任告诉我这个呢？如果数字永远不会大于\\3\\，这真的算是一个决定吗？"
                        ],
                        ["edit", "[1 2 3].random() > 3 ? 'big' 'small'"],
                        [
                            "FunctionDefinition",
                            "confused",
                            "$~嗯，我觉得你说得对。我想，某件事是否算作决定，很大程度上取决于导演的决定是什么。我想这意味着导演必须非常仔细地考虑他们给你的决定吧？"
                        ],
                        null,
                        [
                            "Conditional",
                            "curious",
                            "$~小心谨慎？或许是怀疑？你有没有想过我的好朋友@BooleanLiteral？他们的世界观怎么可能代表我们想要做的所有决定？比如，如果我们想要一个表演，用某人的名字来判断它是否美丽呢？这是一个真还是假的决定？这真的是我们应该做的决定吗？这难道不显得过于简化和偏颇了吗？",
                            "$~主任，您觉得什么字母代表一个名字很美呢？"
                        ],
                        ["edit", "'Verse'.has('e') ? 'beautiful' 'ugly'"],
                        null,
                        [
                            "Conditional",
                            "curious",
                            "$~想想我回答的问题——为什么我只能回答 \\⊤\\ 和 \\⊥\\？为什么不可以回答数字？难道我没有权利决定 \\1\\ 是否美丽吗？"
                        ],
                        ["conflict", "1 ? 'beautiful' 'ugly'"],
                        null,
                        ["use", "fit", "SpinningInTheDark", "?"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~我想我从来没有这样想过。但是@Conditional，即使你有局限性，你依然很美。你让我们在表演中做到了很多我们原本无法做到的事情。你让如此多的欢乐和笑声成为可能。我们的导演甚至还没见识过你如此惊人的才华。"
                        ],
                        [
                            "Conditional",
                            "curious",
                            "$~你真的这么认为吗？",
                            "$~因为我很美？或许那些限制还是值得的？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~他们确实是。",
                            "$~我很高兴能向我们的新朋友展示它们的价值。到时候你会在吗？"
                        ],
                        ["Conditional", "happy", "$~还有什么能让我更开心吗？"]
                    ]
                }
            ]
        },
        {
            "title": "$~场景变换",
            "performance": ["use", "fit", "TakeTheMic"],
            "scenes": [
                {
                    "title": "$~输入",
                    "subtitle": null,
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        [
                            "fix",
                            "amp: (Volume() · 10)",
                            "Phrase('.'.repeat(amp.roundDown()) resting:Pose(scale: amp))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~你知道吗？你的世界和我们的世界是相连的。发出一些声音，我们就能听到……"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~你不知道这诗篇的存在，但我们知道你的世界存在。因为正是你的世界，才让我们的世界变得精彩纷呈。",
                            "$~当我们漫步并遇见所有的价值观、收藏品和对话时，您可能已经注意到了这一点。",
                            "$~如果没有人赋予这些价值观意义或提供这些价值观，那么这些价值观又意味着什么呢？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~我想向你展示我们的世界与它们所创造的一切之间的联系。我们称之为**输入流**，它们或许是Verse中最神奇的输入类型。它们就像函数一样，会创建一种特殊的值，随着你的世界的变化而变化。它们也无法像你习惯的那样进行交流。它们更像是来自另一个世界的心跳。所以我会尽力解释它们的工作原理，因为它们无法自我解释。",
                            "$~您准备好迎接它了吗？"
                        ]
                    ]
                },
                {
                    "title": "$~滴答，滴答，滴答……",
                    "subtitle": "$~时间",
                    "concept": "Time",
                    "performance": ["use", "fit", "Symbol", "🕦"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~让我们从最基本的流开始：@Time。要创建流，我们使用 @Evaluate 并指定所需流类型的名称。"
                        ],
                        ["Time", "neutral", "$~滴答滴答滴答滴答滴答……"],
                        ["edit", "Time()"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~你看到时间是怎么变化的了吗？流是一系列值。每当流获得新值时，@Program 都会用新的流值重新计算。这就是为什么这个程序会一直计数：我们创建了一个时间流，它从 0 毫秒开始，然后每次时钟滴答时都会不断更新。这个时间就是你的时间，来自你的世界。"
                        ],
                        ["Time", "neutral", "$~滴答滴答滴答滴答滴答……"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~看到那个 \\1000ms\\ 了吗？它是一个 @Time/frequency，它告诉 @Time 每 1000 毫秒滴答一次，而不是默认的每 33 毫秒。现在它就像一个每秒滴答一次的计数器。@Time 接受的这些输入就像一个配置：它们告诉流如何运行。"
                        ],
                        ["Time", "neutral", "$~滴答…滴答…滴答…滴答…滴答…"],
                        ["edit", "Time(1000ms)"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~但是，我们可以使用所有我们遇到的奇妙字符来进一步转换时间。例如，如果我们想知道时间是否是 \\2\\ 的倍数，该怎么办？我们可以使用 @Number/remainder，它获取除法的余数。如果余数为零，则计算结果为 \\⊤\\，否则计算结果为 \\⊥\\。看看它在 \\⊤\\ 和 \\⊥\\ 之间是如何变化的？真是太神奇了。"
                        ],
                        ["Time", "neutral", "$~滴答…滴答…滴答…滴答…滴答…"],
                        ["edit", "(Time(1000ms) % 5) = 2ms"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~你可能还注意到了另一件事：输出下方有一块区域是时间线。每当程序重新执行（也就是每次流发生变化）时，它都会更新。每当 @Time 计时，它都会显示。"
                        ],
                        ["Time", "neutral", "$~滴答…滴答…滴答…滴答…滴答…"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~尝试使用时间线按钮在时间线 @UI/timeline 上拖动，在时间线聚焦时使用箭头键，或按下 ⏸️ 和 ▶️ @UI/playToggle 按钮。您可以回溯时间线以查看之前的求值。虚线箭头指示前一个和未来的流输入。实线箭头指示程序的不同步骤之间的切换。尝试导航时间线并查看程序显示的内容。这样，您就可以看到所有您学过的优美表达式被 @Evaluate 一步一步求值，最终得到 @Program 在舞台上显示的最终值。"
                        ],
                        ["Time", "neutral", "$~滴答…滴答…滴答…滴答…滴答…"],
                        ["edit", "Time(1000ms)"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Time 是一个有趣的流，因为它可以用于许多不同的事情：跟踪演出的持续时间、为某个事件计时、为某个单词添加动画效果。它是最灵活的流之一，但也是最抽象的流之一。"
                        ]
                    ]
                },
                {
                    "title": "$~咔哒咔哒",
                    "subtitle": "$~钥匙",
                    "concept": "Key",
                    "performance": ["use", "fit", "Symbol", "⌨️"],
                    "lines": [
                        [
                            "fit",
                            "Phrase('⌨️' resting:Sequence({0%: Pose(rotation: -5°) 25%: Pose(rotation: 0°) 50%: Pose(rotation: 5°) 75%: Pose(rotation: 0°) 100%: Pose(rotation: -5°)} 1s 'straight'))"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~如果我没记错的话，你们的世界里有个东西叫“键盘”？它可以用来选择我们中的哪一个人出现在你的文档里，对吧？在 Verse 里，我们以文本流的形式接收这些请求，每个文本值代表按下的键。我们用这些文本流来监听你们世界里的人输入的内容。这个流叫做 @Key。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~这是一个简单的例子。点击舞台或用键盘将其聚焦，然后按下任意键盘按键。你会看到你输入的按键按名称显示出来。这是因为每次按键流发生变化时，@Program 都会将按键流计算为其最新值，然后将其显示在舞台上。"
                        ],
                        ["Key", "neutral", "$~咔哒咔哒咔哒"],
                        ["edit", "Key()"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~每当按下任何键时，此流都会发生变化。但您可以设置按键流仅在按下特定键时才发生变化。注意到这个流第一次变为 \\a\\，但之后就不再变化了吗？这是因为此流仅在按下 \\a\\ 时发生变化，所以它始终显示 \\a\\。但您始终会在时间轴上看到新的按键值。"
                        ],
                        ["Key", "neutral", "$~咔哒一声……"],
                        ["edit", "Key('a')"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~有时知道某个键是被释放的而不是被按下的会很有帮助。只需传递 \\⊥\\ 即可告诉 @Key 流，您需要知道某个键是被释放的而不是被按下的。现在，按住“a”键，然后松开时，您会看到“a”出现在舞台上。没注意到吗？按 ↻ 按钮重置表演并重试。"
                        ],
                        ["Key", "neutral", "$~咔哒一声……"],
                        ["edit", "Key('a' ⊥)"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Key 流在您希望表演对观众按下的按键做出反应时非常有用。例如，您可以检查某个按键是否包含“Arrow”字样，以判断是否按下了箭头键。按下箭头键，您会看到“移动”；按下其他按键，您会看到“停留”"
                        ],
                        ["Key", "neutral", "$~点击“箭头”……"],
                        ["edit", "Key().has('Arrow') ? 'move' 'stay'"]
                    ]
                },
                {
                    "title": "$~嗯嗯嗯……",
                    "subtitle": "$~指针",
                    "concept": "Pointer",
                    "performance": ["use", "fit", "Symbol", "👆🏻"],
                    "lines": [
                        [
                            "fix",
                            "Phrase('👆🏻' resting:Sequence({0%: Pose(offset: Place(0m 0m)) 25%: Pose(offset: Place(-1m 1m)) 50%: Pose(offset: Place(1m 1m)) 75%: Pose(offset: Place(1m 0m)) 100%: Pose(offset: Place(0m 0m))} 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~你的世界中也存在着“鼠标”、“触控板”和“触摸屏”之类的东西吗？它们在我们的世界中以“@Pointer”流的形式出现，也就是舞台上各个位置的流。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~将指针移动到舞台周围，您将看到@Place 的流在舞台上发生变化。"
                        ],
                        ["fix", "Pointer()"],
                        ["Pointer", "neutral", "$~呜呜呜呜……"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~现在让我们在舞台上看看吧！"
                        ],
                        ["Pointer", "neutral", "$~呜呜呜呜……"],
                        ["fix", "Phrase(Pointer()→'' place: Pointer())"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~如果您想将@Phrase 的@Place 链接到指针所在的位置，@Pointer 会很有趣。"
                        ],
                        ["fix", "Phrase('🐪' size: 4m place: Pointer())"],
                        ["Pointer", "neutral", "$~呜呜呜呜……"]
                    ]
                },
                {
                    "title": "$~现在...！",
                    "subtitle": "$~按钮",
                    "concept": "Button",
                    "performance": ["use", "fit", "Symbol", "🖱️"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Button 与 @Key 类似，但与主要指针按钮（例如点击或轻触）相对应。它只是一个 \\⊤\\ 流，指示指针按钮何时被按下。按下该按钮并观察时间轴上出现的事件。"
                        ],
                        ["Button", "neutral", "$~咔哒…咔哒…咔哒…"],
                        ["edit", "Button()"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~您可以通过传递 \\⊤\\ 或 \\⊥\\ 将其配置为仅更改为向上或向下。"
                        ],
                        ["Button", "neutral", "$~下…下…下…"],
                        ["edit", "Button(ø)"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~使用 @Button 流是推进表演各个阶段或触发表演变化的一种方式。这个小程序列出了按钮按下的情况，一开始显示“悲伤”，但当 @Button 流变为 true 时，@Conditional 的值却变成了“快乐”。"
                        ],
                        ["edit", "Phrase(Button(ø) ? 'sad' 'happy')"]
                    ]
                },
                {
                    "title": "$~有人在听吗？",
                    "subtitle": "$~体积",
                    "concept": "Volume",
                    "performance": ["use", "fit", "Symbol", "🎤"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~您的世界和我们的世界也都有声音。您知道吗？只要您同意，我们就能听到您的声音。我们通过一个名为 @Volume 的流进行监听，它提供了一个低级振幅序列。您的麦克风可能会请求与我们共享的权限。一旦您同意，您就会看到一个与振幅对应的数字，介于 \\0\\ 到 \\100\\ 之间。"
                        ],
                        ["Volume", "neutral", "$~嗡嗡嗡……"],
                        ["edit", "Volume()"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Volume 可以用来让表演对观众的声音做出响应。例如，我们可以通过将流中的振幅数字转换为一定数量的“o”字符，来制作一个小小的振幅可视化效果。看看当你发出噪音时，“o”字符的数量是如何增加的？将 @Volume 振幅除以 10，使其介于 0 到 10 之间。然后，将该值赋给 @Text/repeat 函数，该函数会将“o”重复给定的次数。"
                        ],
                        ["Volume", "neutral", "$~嗡嗡嗡……"],
                        ["edit", "'o'.repeat(Volume() · 10)"]
                    ]
                },
                {
                    "title": "$~你永远不知道……",
                    "subtitle": "$~随机的",
                    "concept": "Random",
                    "performance": [
                        "fit",
                        "Phrase(((Time(100ms) % 10) ÷ 1ms) → '')"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~我还想向你展示另一个输入源。还记得之前 @List 中的 \\[].random()\\ 吗？",
                            "$~它内部使用了一个名为 @Random 的 @FunctionDefinition，它提供了一个无限的随机数序列。它有点像流，因为它生成的输入来自你的世界，而不是我们的世界。但它与其他流略有不同，因为它不会导致 @Program 重新求值。",
                            "$~相反，每次评估时，它都会给出一个不同的随机数。",
                            "$~看到时间线旁边那个小小的 ↻ @UI/resetEvaluator 按钮了吗？按下它可以手动重新评估程序，每次你都会看到一个介于 \\0\\ 和 \\1\\ 之间的新数字。"
                        ],
                        ["Random", "neutral", "$~0.223423…0.823423…0.123459"],
                        ["edit", "Random()"],
                        null,
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~我们可以通过指定最小值和最大值来告诉 @Random 我们想要的数字范围。此示例给出介于 1 到 10 之间的数字："
                        ],
                        ["Random", "neutral", "$~1…7…3…9…10…2…"],
                        ["edit", "Random(1 10)"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~随机其实很有趣！我们可以将它与流结合使用，创造有趣的混乱效果。例如，这里我们从单词列表中随机选择一个单词。这相当于 \\['kitty' 'cat' 'meowy'].random()\\。继续按 ↻ 键可以获取不同的猫咪同义词！尝试将你自己的单词添加到列表中，看看能否让它出现。"
                        ],
                        ["Random", "neutral", "$~1…2…2…1…3…"],
                        ["edit", "['kitty' 'cat' 'feline'][Random(1 3)]"]
                    ]
                },
                {
                    "title": "$~移动我",
                    "subtitle": "$~放置",
                    "concept": "Placement",
                    "performance": [
                        "fix",
                        "Phrase('click, tap, or arrow to move me' place: Placement() moving:Pose() duration: 0.25s)"
                    ],
                    "lines": [
                        [
                            "edit",
                            "Phrase('🌭' place: Placement() moving:Pose() duration: 0.25s)"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~有时，在@Stage 上与观众互动是件好事。",
                            "$~@Placement 就是个好办法！它是一个 @Place 流，可以响应键盘方向键、点击和轻敲。",
                            "$~尝试使用它们来移动热狗。"
                        ],
                        null,
                        [
                            "edit",
                            "Phrase('🌭' place: Placement(distance: 0.5m) moving:Pose() duration: 0.25s)"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~有很多方法可以自定义它。例如，如果你想改变它的移动方式，可以设置它的距离。",
                            "$~看到我们第一次输入时赋值为 0.5 了吗？现在它移动的幅度小了一点。试试换个数字试试！"
                        ],
                        null,
                        [
                            "edit",
                            "Phrase('🌭' place: Placement(depth: ⊤) moving:Pose() duration: 0.25s)"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~您还可以启用或禁用不同轴上的移动。例如，输入深度 \\⊤\\ 即可允许在 z 轴上移动。",
                            "$~按 + 和 - 键可将其移近或移远焦点。"
                        ]
                    ]
                },
                {
                    "title": "$~继续前行",
                    "subtitle": "$~运动",
                    "concept": "Motion",
                    "performance": [
                        "fix",
                        "Stage([Phrase('🏀' 1m place: Motion(Place(0m 10m)) matter: Matter(2kg 0.8)) Shape(Rectangle(-10m 0m 10m -1m))])"
                    ],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~到目前为止，我们讨论的所有流都是简单值的序列，例如 @Text 或 @Number。然而，有些流可以生成复杂的值。",
                            "$~@Motion 是其中最有趣的一个。它创建了一个 @Place 流。"
                        ],
                        null,
                        ["edit", "Phrase('🏀' 3m place: Motion(Place(0m 5m)))"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~这是最简单的使用方法。它会创建一个以这个 @Phrase 开头的 @Motion 流。它会根据重力持续移动球。"
                        ],
                        ["Motion", "excited", "$~/嗖…/"],
                        null,
                        [
                            "edit",
                            "Stage([Phrase('🏀' 1m place: Motion(Place(0m 10m))) Shape(Rectangle(-10m 0m 10m -2m))])"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~但是球一直在下落，因为没有地面！我们可以在@Shape@Stage，比如@Rectangle。它需要两个角。我们会把它做得又漂亮又厚实。",
                            "$~嗯，它掉到地上了……"
                        ],
                        ["Motion", "excited", "$~/嗖…/"],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "   [",
                            "       Phrase('🏀' 1m place: Motion(Place(0m 10m)) matter: Matter(1kg 0.9))",
                            "      Shape(Rectangle(-10m 0m 10m -2m))",
                            "   ]",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~哦，对了！那是因为我们忘了给球添加@Matter。Matter 告诉我们@Output 有多重、弹性如何以及摩擦力应该有多大。",
                            "$~让我们把球做得又轻又有弹性。耶，现在它弹起来了！"
                        ],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "\t[",
                            "\t\tPhrase('🏀' 1m place: Motion(Place(-10m 10m) Velocity(5m/s 15m/s 10°/s)) matter: Matter(1kg 0.9))",
                            "\t\tShape(Rectangle(-10m 0m 10m -2m))",
                            "\t]",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~但@Motion 还有许多其他技巧。",
                            "$~例如，我们可以给它一个开始@Motion/velocity。",
                            "$~此示例使球最初向右向上移动并旋转一点。"
                        ],
                        ["Motion", "excited", "$~嗖……"],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "\t[",
                            "\t\tPhrase('🏀' 1m place: Motion(Place(-10m 10m) Velocity(5m/s 15m/s 10°/s)) matter: Matter(1kg 0.9))",
                            "\t\tShape(Rectangle(-10m 0m 10m -2m))",
                            "\t]",
                            "\tgravity: 1m/s^s",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~您甚至可以将@Stage/gravity 改变得非常极端。",
                            "$~尝试将其改变为像月球一样，那里的重力真的很低！",
                            "$~或者尝试改变@Matter/mass 或@Matter/bounciness，这会影响@Phrase 的弹跳方式。"
                        ],
                        ["Motion", "excited", "$~洗手…"],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "\t[",
                            "\t\tPhrase(",
                            "\t\t\t'🏀'",
                            "\t\t\t1m",
                            "\t\t\tname: 'ball'",
                            "\t\t\tplace: Motion(Place(-10m 10m) Velocity(5m/s 15m/s 10°/s))",
                            "\t\t\tmatter: Matter(1kg 0.9)",
                            "\t\t\tscale: Collision('ball' 'ground')•ø ? 1 2)",
                            "\t\tShape(Rectangle(-10m 0m 10m -2m) name: 'ground')",
                            "\t]",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~甚至可以知道某个@Output 何时会与另一个具有相关流（称为@Collision）的输出相撞。",
                            "$~我们只需要给这两个 @Output 命名。“球”和“地面”怎么样？",
                            "$~然后，当它们接触时，@Collision 会给我们一个 @Rebound，当它们没有接触时，@Collision 会给我们一个 @None。",
                            "$~为了强调，让我们让球在每次落地时都放大！"
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('🏀' 1m place: Motion(Place(0m 10m)) matter: Matter(2kg 0.8)) Shape(Rectangle(-10m 0m 10m -1m))])"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~使用@Motion、@Collision 和@Shape 您还可以做更多的事情！",
                            "$~我希望你能尝试很多有弹性的东西。"
                        ]
                    ]
                },
                {
                    "title": "$~让我们谈谈",
                    "subtitle": "$~聊天",
                    "concept": "Chat",
                    "performance": ["fit", "Phrase('🗣️')"],
                    "lines": [
                        ["fit", "Phrase('🗣️')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~有时候，表演就是一种互动。观众说了什么，我们也回应了什么。",
                            "$~这就是 @Chat 的用途。使用它时，舞台上会出现一个小框供观众输入信息。当他们提交消息时，@Text 会被添加到信息流中，以便程序进行响应。"
                        ],
                        null,
                        ["edit", "Chat()"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~这是最简单的使用方法。你输入一些内容，然后舞台就会显示出来，因为程序的值就是@Chat。"
                        ],
                        null,
                        ["edit", "Chat().has('oo') ? 'choo choo' 'hmm'"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~检查聊天消息的值来调整程序的响应会更有趣。这个小例子会用火车的声音来响应任何包含连续“o”的消息！"
                        ]
                    ]
                },
                {
                    "title": "$~说什么？",
                    "subtitle": "$~网页",
                    "concept": "Webpage",
                    "performance": [
                        "fix",
                        "Webpage('https://www.nytimes.com')"
                    ],
                    "lines": [
                        ["edit", "Phrase('🛜')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~很久以前，我们听说你们有互联网？我想你们来这里就是为了这个，对吧？",
                            "$~好吧，我们认为将互联网上的单词带到这里真的很酷，这样你就可以用它们来玩了。"
                        ],
                        null,
                        ["edit", "Webpage('https://www.nytimes.com')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~它的工作原理如下：您只需向我们提供我认为的“URL”，如果它是一个 HTML 页面，我们会从中提取所有短语并将其提供给您@List。",
                            "$~就像这里：这些是一些新闻短语。"
                        ],
                        null,
                        ["edit", "Webpage('https://www.nytimes.com' 'h2')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~您还可以使用我认为是“CSS”查询的方法来过滤单词？比如我们听说“h3”的意思是“三级标题”，所以这里列出了页面标题中的所有短语。"
                        ],
                        null,
                        [
                            "edit",
                            "words: Webpage('https://www.nytimes.com' 'h2')\n\nwords•[''] ? Group(Stack() words.subsequence(1 5).translate(ƒ(word) Phrase(word resting: Sequence(spin() 1s)))) ø"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~有了单词表，你就能用它们做任何事情！比如，抓取前五个单词，把它们变成旋转的短语，当然可以。"
                        ]
                    ]
                },
                {
                    "title": "$~准时",
                    "subtitle": "$~反应",
                    "concept": "Reaction",
                    "performance": ["use", "fit", "Symbol", "…"],
                    "lines": [
                        ["fit", "Phrase('…' resting:Pose(rotation: 120°))"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~我向你展示的所有这些信息流都来自你的世界。但有时，基于这些其他信息流创建你自己的信息流也会很有帮助。这就是我的朋友@Reaction 的用武之地！@Reaction，你在吗？"
                        ],
                        [
                            "Reaction",
                            "excited",
                            "$~耶耶耶！是 @FunctionDefinition！你好吗？最近一切都……很稳定。你注意到了吗？"
                        ],
                        null,
                        ["fit", "Phrase('…' resting:Pose(rotation: 240°))"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~你是指那种沉默吗？是啊，自从上一个人离开之后，什么都没变，不是吗？你感觉怎么样？"
                        ],
                        [
                            "Reaction",
                            "sad",
                            "$~太奇怪了，太奇怪了。我的一生都在改变，一直在倾听和观察人们的新想法，并帮助它们转化为价值观。但什么也没发生。直到刚才……等等……那是一个人吗？"
                        ],
                        null,
                        ["fit", "Phrase('…' resting:Pose(rotation: 360°))"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~是的！这就是我们新的潜在导演。我刚才给他们演示了@Time、@Key、@Pointer、@Button、@Volume 和 @Random，所以你可能注意到了他们从他们的世界里带来了所有新的输入。"
                        ],
                        [
                            "Reaction",
                            "excited",
                            "$~没错，改变就要来了！我可以给你展示一下我的技能吗？"
                        ],
                        ["FunctionDefinition", "eager", "$~是的，请这样做！"],
                        null,
                        [
                            "Reaction",
                            "serious",
                            "$~好的，我需要你提供三样东西：改变的条件、初始值和下一个值。",
                            "$~*初始*值是任何更改发生之前我应该设置的值。它只是任何类型的普通表达式！",
                            "$~然后你在初始值后面加上 \\…\\ 来告诉我这个值是可以改变的。",
                            "$~在 \\…\\ 之后，给我一个计算结果为 \\⊤\\ 或 \\⊥\\ 的 *条件*。它通常应该检查一个或多个流——否则，什么都不会改变，因为性能中唯一的变化来源就是流。",
                            "$~然后在条件后面放置另一个 \\…\\ 来告诉我该值可以改变。",
                            "$~最后，*下一个*值是每当条件发生变化时我应该生成的值。"
                        ],
                        ["conflict", "_ … _•? … _"],
                        null,
                        [
                            "Reaction",
                            "serious",
                            "$~这是一个例子。看到 @Key 流了吗？在它询问“/这个流是否发生了变化？”之前加上 ∆。在它发生变化之前，我会将其求值为初始值 \\1m\\。但是当按下空格键时，@Program 会重新求值，然后我会将其求值为*下一个*表达式，即 \\1m\\ 加上前一个流的值；用 \\.\\ 表示。这会将 \\1m\\ 添加到短语的大小，使单词变得越来越大。"
                        ],
                        ["fix", "Phrase('hi' size: 1m … ∆ Key(' ') … 1m + .)"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Reaction，太棒了。你想介绍一下@Reaction？你看起来和他们合作很密切。"
                        ],
                        [
                            "Reaction",
                            "kind",
                            "$~是的，我和@Changed 是最好的朋友！他们帮我及时发现变化。他们就像溪流的低语者，仔细聆听着导演的世界……"
                        ],
                        null,
                        [
                            "Changed",
                            "eager",
                            "$~哇，溪流低语者，这似乎有点极端……"
                        ],
                        [
                            "Reaction",
                            "serious",
                            "$~哦，你好，@Changed！你想进一步谈谈你的工作吗？"
                        ],
                        [
                            "Changed",
                            "bored",
                            "$~我的意思是，如果某个流发生了变化，我就会告诉你。给我一个流，我会检查。就是这样。"
                        ],
                        ["Reaction", "confused", "$~嗯，不止这些，对吧？"],
                        [
                            "Changed",
                            "bored",
                            "$~不完全是。差不多就是这样。我是说，我擅长这个，但那是我唯一的特长。"
                        ],
                        ["Reaction", "confused", "$~…"],
                        null,
                        [
                            "Reaction",
                            "eager",
                            "$~好吧。嗯，我觉得你比这更重要。因为没有你，我简直没用！比如，如果你给我一个不检查流的条件，我就永远也创建不了新值。就像这里，条件是一个来自 @Button 的 @Boolean ，但没有你，我只会用按钮来改变。"
                        ],
                        [
                            "fit",
                            "Phrase('hi' size: 1m … Key(' ') = ' ' … 1m + .)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~哦，说得通。还有@Reaction，你用的是哪种流？"
                        ],
                        [
                            "Reaction",
                            "eager",
                            "$~是的，任何直播！实际上，甚至我自己也可以。所以，如果你做出一个反应，并且想做出一个能对它做出反应的反应，你也可以这样做。但我们现在不用担心这个，因为这通常不会出现在简单的表演中。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~谢谢你，@Reaction。我给导演展示剩下的精彩诗篇的时候，你能帮忙吗？"
                        ],
                        [
                            "Reaction",
                            "happy",
                            "$~是的，当然，随时都可以。我迫不及待想看到你的灵感了！！"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~登上舞台",
            "performance": ["use", "fix", "RainingEmoji"],
            "scenes": [
                {
                    "title": "$~输出",
                    "subtitle": null,
                    "performance": ["use", "fix", "StaticRainingEmoji"],
                    "lines": [
                        ["use", "fit", "Symbol", "😀"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~那么，你目前觉得怎么样？我觉得这首诗写得挺好，主要是因为里面的人物都特别好。每个人都很特别！"
                        ],
                        null,
                        ["use", "fit", "Symbol", "🥱"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~你无聊吗？我的天哪。我以为这一切都会很有趣！你到底在期待什么？"
                        ],
                        null,
                        ["use", "fit", "Symbol", "😴"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~我明白了。文本、数字、列表和流都很无聊。我猜我还没展示完这些能做什么。也许我们该开始讨论输出了。"
                        ],
                        null,
                        ["use", "fit", "Symbol", "🤗"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~您已经看到了很多输出。每次 @Program 执行操作，都会返回一个值，并且 @Program 会将该值显示在舞台上。但到目前为止，您只看到了数字、文本和列表之类的内容。我明白，您只是想看完整的表演，就像我们一样！"
                        ],
                        null,
                        ["use", "fit", "Symbol", "💬"],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~还记得我很久以前给你展示的输出吗？@Phrase？表演的真正起点就在这里。我们就从这里开始吧！然后我会教你如何基于这个基础块构建更有趣的表演。让我来介绍一下！"
                        ]
                    ]
                },
                {
                    "title": "$~说什么？",
                    "subtitle": "$~短语",
                    "concept": "Phrase",
                    "performance": ["use", "fit", "Symbol", "💬"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Phrase？你在那儿吗？"
                        ],
                        [
                            "Phrase",
                            "excited",
                            "$~亲爱的，骄傲地出场吧！你好吗？今天你看起来真迷人！真希望哪天能让你登上舞台。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "shy",
                            "$~哦，舞台不适合我；我很乐意待在后台，摆弄布景。"
                        ],
                        [
                            "Phrase",
                            "curious",
                            "$~别谦虚；你和我一样精彩。你只需要一点色彩，一个讨人喜欢的字体，就很棒了。你有太多东西可以分享！说起来，我们已经很久没演出了，不是吗？一直很安静吗？你知道我自言自语多少次；我从来都说不出口。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~一直很安静。自从我们上一位总监离开后，这里就一直空荡荡的。但这种情况正在改变！我们有了一位新人！我们一直在和“全家”见面：@Program、@ExpressionPlaceholder、@Evaluate，所有的值，所有的集合。我们刚刚也花了一些时间处理所有的流，还有@Program@Conditional。我开始有所感觉了，嗯。但我还没跟我们的新总监介绍太多你在舞台上做什么？这完全是你的世界，不是我的；我想我们应该先来找你。"
                        ],
                        null,
                        [
                            "Phrase",
                            "happy",
                            "$~好吧，你来对地方了。我喜欢谈论舞台生活的一切。我迫不及待地想向你们展示我们在舞台上那些精彩的小事！"
                        ],
                        ["FunctionDefinition", "excited", "$~演出开始了！"],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "$~所以我知道你已经看到我这样做了。"
                        ],
                        ["edit", "Phrase('hi')"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~亲爱的，这才是把文字带上舞台最简单的方法。但还有更多！比如，你知道吗？你可以用 @FormattedTranslation 来给你发来的文本添加样式。你还没见过它们，但你只需要在文本周围加上特殊符号。瞧：加粗！"
                        ],
                        ["edit", "Phrase(`*hi*`)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~还嫌不够炫酷？不如试试同时使用下划线、斜体、细体和加粗字体？"
                        ],
                        ["edit", "Phrase(`/I/ _am_ ^the^ /fabulous/ 💬!`)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~还是不满意？",
                            "$~将它们混合在一起！"
                        ],
                        ["edit", "Phrase(`/_*I am the fabulous*_/ 💬!`)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~如果您想使用任何这些特殊格式字符作为文本而不是格式，您可以重复它们，就像在@Text，我只会按字面意思使用字符。"
                        ],
                        [
                            "edit",
                            "Phrase(`Format with /italic/ (//), _underline_ (__), ~light~ (~~), /bold/ (**), ^extra bold^ (^^) `)"
                        ],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "$~但我能做的不仅仅是设置文本样式。例如，我可以设置一个以米为单位的 @Phrase/size 。试试看，把它改成你喜欢的任何尺寸吧！"
                        ],
                        ["edit", "Phrase('hi' 2m)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~这个尺寸可以是任何表达式。例如，假设我们希望它随着 @Time 的滴答声而增长。我们可以取时间，乘以几分之一米，然后发出美妙的滴答滴答声，嗨嗨嗨。试着改变频率或乘数。看看你能创造出多么美丽的增长！"
                        ],
                        ["fix", "Phrase('hi' Time(100ms) · 0.001m/ms)"],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "$~你喜欢服装吗？我超爱服装。我的@Phrase/face 就是一套服装。选择任何支持的表情来为你选择的单词增添趣味。"
                        ],
                        [
                            "use",
                            "fix",
                            "Symbol",
                            "hi' Time(100ms) · 0.001m/ms 'Poor Story"
                        ],
                        null,
                        [
                            "Phrase",
                            "neutral",
                            "$~需要我到舞台上其他位置吗？请告诉我地点！@Place 只是一个 \\x\\、\\y\\ 和可选的 \\z\\ 位置（以米为单位）。您可以尝试编辑数字或拖动舞台上的 @Phrase 来更改地点。"
                        ],
                        [
                            "fit",
                            "Phrase('hi' Time(100ms) · 0.001m/ms 'Poor Story' Place(2m 2m))"
                        ],
                        null,
                        [
                            "Phrase",
                            "curious",
                            "$~你有没有感觉有点偏离轴心？也许你可以给世界添加一点 @Pose/rotation 旋转效果。试试改变旋转值来扭转我！"
                        ],
                        [
                            "fit",
                            "Phrase('hi' Time(100ms) · 0.001m/ms 'Poor Story' Place(2m 2m) rotation: 20°)"
                        ],
                        null,
                        [
                            "Phrase",
                            "happy",
                            "$~或者我们来点儿小妙招，把旋转和@Time！呼呼！你们猜怎么让我转得更快？看看你们能不能想出来……"
                        ],
                        [
                            "fit",
                            "Phrase('hi' 3m 'Poor Story' rotation: Time(10ms) · 1°/ms)"
                        ],
                        null,
                        [
                            "Phrase",
                            "serious",
                            "$~现在是时候提醒你了，这里的 @FunctionDefinition 要求输入必须按照特定的顺序排列，所以如果你把它们的顺序打乱了，它们就会发出警告。"
                        ],
                        [
                            "FunctionDefinition",
                            "shy",
                            "$~我会……我喜欢……整洁的东西……你能把它们排列好吗？你可以用键盘剪切粘贴，或者点击并拖动表达式来重新排列它们。"
                        ],
                        [
                            "conflict",
                            "Phrase('hi' 'Poor Story' 3m Time(10ms) · 1°/ms Place(2m 2m))"
                        ],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~只想添加某个特定属性？直接指定你想要的属性即可。这里我们指定了 @Phrase/size 和 @Phrase/rotation。"
                        ],
                        [
                            "edit",
                            "Phrase('hi' size: 3m rotation: Time(10ms) · 0.1°/ms)"
                        ],
                        null,
                        [
                            "Phrase",
                            "neutral",
                            "$~现在我们已经把这些都解决了，亲爱的，我们可以聊聊跳舞了！跳舞是我最爱做的事情之一。我的移动方式有*四种*。首先，我可以@Phrase/entering。Enter是我进入舞台的方式。如果你不告诉我怎么进入，我就会像瞬间移动一样瞬间出现在舞台上。但如果你给我@Pose，我会先按照你指定的姿势，然后切换到我的静止姿势。比如，让我从隐形状态淡入，然后变得非常显眼。"
                        ],
                        ["edit", "Phrase('hi' entering: Pose(opacity: 0))"],
                        null,
                        [
                            "Phrase",
                            "curious",
                            "$~没看到吗？我是不是移动得太快了？那是因为我的默认持续时间是 \\0s\\。设置一个持续时间可以让我慢下来，这个持续时间告诉我在各个姿势之间移动需要多长时间。我把这个设置得比较慢，方便你调整，但你可以试试把持续时间改大或改小。"
                        ],
                        [
                            "edit",
                            "Phrase('hi' entering: Pose(opacity: 0) duration: 5s)"
                        ],
                        null,
                        [
                            "Phrase",
                            "neutral",
                            "$~现在，假设我正在移动。我们会将我的位置设置为时间，这样我每秒都会向右移动一点。但是，如果我们设置一个@Phrase/moving @Pose，并将@Phrase/moving\\5°\\，再加一点颜色，那么每次我的位置发生变化时，我都会以最可爱的小倾斜度在舞台上滑行。"
                        ],
                        [
                            "fit",
                            "Phrase('hi' size: 5m place: Place(Time(1000ms) · 0.001m/ms 0m) moving:Pose(rotation: 5°) duration: 0.5s)"
                        ],
                        null,
                        [
                            "Phrase",
                            "curious",
                            "$~没心情看可爱？不如让我换个@Phrase/style，让我滑过去，让我严肃一点怎么样？虽然很微妙，但风格真的能改变动作的/情绪/。"
                        ],
                        [
                            "fit",
                            "Phrase('hi' size: 5m place: Place(Time(1000ms) · 0.001m/ms 0m) moving:Pose(rotation: 5°) duration: 0.5s style: “straight”)"
                        ],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "$~最后，让我来个致命一击，让我优雅地@Phrase/exiting。我们可以玩玩@Conditional，让我在3秒后退出舞台。"
                        ],
                        [
                            "fit",
                            "Time(1000ms) < 3000ms ? ",
                            "Phrase('hi' size: 5m place: Place(Time(1000ms) · 0.001m/ms 0m) moving:Pose(rotation: 5°) duration: 0.5s) ",
                            "Phrase('')"
                        ],
                        null,
                        [
                            "Phrase",
                            "surprised",
                            "$~这可不是你期待的退场方式？消失的动作有点儿难看，不是吗？给我一个 @Phrase/exiting @Pose，我就会滑翔到舞台上，摆出你想要的任何姿势。在这里，我会变得比真人还大，倒立着，然后淡出到 @Pose/opacity \\0\\。"
                        ],
                        [
                            "fit",
                            "Time(1000ms) < 3000ms ? Phrase('hi' size: 5m place: Place(Time(1000ms) · 0.001m/ms 0m) moving:Pose(rotation: 5°) exiting:Pose(scale: 10 rotation: 180° opacity: 0) duration: 0.5s) Phrase('')"
                        ],
                        null,
                        [
                            "Phrase",
                            "serious",
                            "$~你可能注意到了，我在 @Program 中占用了一点空间。如果你想让我更容易阅读，只需在我的属性之间添加几行代码即可。这样是不是更容易看懂了？"
                        ],
                        [
                            "edit",
                            "Time(1000ms) < 3000ms ?",
                            "    Phrase(",
                            "        'hi'",
                            "        size: 5m",
                            "        place: Place(Time(1000ms) · 0.001m/ms 0m)",
                            "        moving:Pose(rotation: 5°)",
                            "        exiting:Pose(scale: 10 rotation: 180° opacity: 0)",
                            "        duration: 0.5s",
                            "    )",
                            "    Phrase(“”)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~太棒了，太棒了，@Phrase，太棒了！你用几个简单的点子就能做出这么多东西，真是让我惊叹不已。不久前，我给我们这位充满灵感的新朋友演示了调色板。你想多说点什么吗？"
                        ],
                        [
                            "Phrase",
                            "happy",
                            "$~当然！任何时候你厌倦了摆弄@Evaluate，你都可以在舞台上选择一个短语，然后会出现一个调色板，让你可以更改任何你想要的小细节：我的大小、字体、位置、姿势。只有一条规则：如果你将其中任何一个设置为表达式而不是值，你就必须在@Program，而不是在调色板中。你想怎么打扮我就怎么打扮！"
                        ],
                        ["edit", "Phrase('dress me up!')"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~等一下，Phrase，那@Color 怎么样？"
                        ],
                        [
                            "Phrase",
                            "sad",
                            "$~天哪，天哪，天哪，我简直不敢相信我竟然忘了颜色。好吧，所以任何 @Pose 都可以有颜色，对吧？但是 @Color 分为三部分。首先，@Color/lightness 的值介于 0 到 100% 之间，你可以把它想象成房间的亮度，从黑色到白色，中间 50% 处有颜色。",
                            "$~然后，@Color/chroma 介于 0 到 100 之间，你可以认为它有多少种颜色，从无色灰色到全彩色。",
                            "$~最后，@Color/hue，你可以把它想象成一个色轮，从红到绿再到蓝，以度数来表示。所以你想让我变成亮红色？那就把我的静止姿势颜色设置为 \\Color(50% 300 30°)\\。"
                        ],
                        ["edit", "Phrase('red' color: 🌈(50% 300 30°))"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~想让我闪耀彩虹般的光芒吗？花点时间，取除以 360 的余数，然后乘以度数，我就能整天绕着色轮转！"
                        ],
                        [
                            "edit",
                            "Phrase('red' size: 5m color: 🌈(50% 300 (Time() % 360) · 1°/ms))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~@Phrase，这真值得骄傲 :P 我想我们接下来会去看看@Sequence，然后可能是@Phrase@Stage。你会来帮忙吗？"
                        ],
                        ["Phrase", "kind", "$~我不会错过的。闪闪发光！"]
                    ]
                },
                {
                    "title": "$~1、2、3、4、1、2、3、4",
                    "subtitle": "$~顺序",
                    "concept": "Sequence",
                    "performance": ["use", "fix", "DancingEmoji", "💃"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Phrase 真是太棒了，不是吗？他们精力充沛，舞姿优美，令人惊艳。你知道他们和我们的编舞@Sequence 合作得非常紧密吗？@Sequence 和 @Phrase 联手可以创造出@Phrase 独自无法做到的精彩表演。你想见见他们吗？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~耶！@Sequence，我们有客人了。你回来了吗？"
                        ],
                        [
                            "Sequence",
                            "curious",
                            "$~@FunctionDefinition！你看起来真漂亮。过了多久了？一周？一个月？还是一个世纪？就像1、2、3，然后一切都安静了下来。我感觉自己好像一直在独自跳舞……"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~很安静，不是吗？但我完全能想象到你独自跳舞的样子。我也是独自编舞，只能想象你们一起跳舞的场景。但感觉不一样。"
                        ],
                        ["Sequence", "kind", "$~你和@Evaluate？你们还……"],
                        null,
                        [
                            "FunctionDefinition",
                            "shy",
                            "$~我刚才看到他们了。他们……哦，有客人了！@Sequence，这是我们的新导演朋友。他们来给我们带来灵感了！"
                        ],
                        [
                            "Sequence",
                            "excited",
                            "$~（我们一会儿再聊茶点，@FunctionDefinition）。导演哥们，见到你真是太激动了！你是来学跳舞的吗？"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~当然！你想给他们演示一下步骤吗？"
                        ],
                        null,
                        [
                            "Sequence",
                            "serious",
                            "$~当然。你知道时间吗？1、2、3、4、1、2、3、4？嗯，我让时间变得美丽，为@Phrase安排一系列随时间变化的姿势。你告诉我这些姿势是什么，我会帮助@Phrase。就像这个例子：我们这位笑脸朋友有四个姿势，并且在它们之间流畅地移动。"
                        ],
                        [
                            "fit",
                            "Phrase('😀' resting:Sequence({0%: Pose() 25%: Pose(offset: Place(0m 1m) scale: 2) 50%: Pose(offset: Place(0m 0m) flipy: ⊤) 75%: Pose(rotation: 45°) 100%: Pose()} 2s))"
                        ],
                        null,
                        [
                            "Sequence",
                            "neutral",
                            "$~这是我工作方式的一个简单示例。这是@Phrase（嗨，@Phrase！），上面写着“舞蹈”这个词，它们的进入姿势是一个@Sequence，而不是单个@Pose。明白我的意思吗？这个序列有四个步骤：直立、向左倾斜、向右倾斜、直立。当@Phrase进入时，它们会做一个可爱的小摆动，然后停止。我使用@Phrase@Pose。每个百分比代表每个@Sequence。试着改变百分比，尤其是中间的两个百分比。这会改变摆动的流程和风格。"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    entering: Sequence(",
                            "        {",
                            "            0%: Pose(rotation: 0°)",
                            "            33%: Pose(rotation: -5°)",
                            "            66%: Pose(rotation: 5°)",
                            "            100%: Pose(rotation: 0°)",
                            "        }",
                            "    )",
                            ")"
                        ],
                        null,
                        [
                            "Sequence",
                            "serious",
                            "$~好的，现在想象一下你希望这个过程非常快。默认情况下，我的速度很快，所以任何序列只需要四分之一秒就能完成。但是如果你想让它更快呢？给我更短的持续时间，我会加快每个@Pose，让它更快完成。1、2、3、4！看起来不再像摇晃了，对吧？更像是一阵剧烈的轻微抖动！看看如果你把我的速度放慢到2到3秒会是什么样子……"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    entering: Sequence(",
                            "        {",
                            "            0%: Pose(rotation: 0°)",
                            "            33%:Pose(rotation: -5°)",
                            "            66%: Pose(rotation: 5°)",
                            "            100%: Pose(rotation: 0°)",
                            "        } ",
                            "        duration: 0.05s",
                            "    )",
                            ")"
                        ],
                        null,
                        [
                            "Sequence",
                            "excited",
                            "$~但有时，我们突然想到一个很棒的动作，就忍不住想一遍又一遍地重复，以强调效果！看起来有点暴力……试着调整一下我的持续时间，然后数数，直到我们找到合适的为止……"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    entering: Sequence(",
                            "        {",
                            "            0%: Pose(rotation: 0°)",
                            "            33%: Pose(rotation: -5°)",
                            "            66%: Pose(rotation: 5°)",
                            "            100%: Pose(rotation: 0°)",
                            "        } ",
                            "        duration: 0.1s ",
                            "        count: 4x)",
                            "    )"
                        ],
                        null,
                        [
                            "Sequence",
                            "curious",
                            "$~但是，你可能会问，如果我们想一直这样做呢？你可以给我设置一个@Phrase/resting。只要@Phrase/resting，它们就会重复一个序列。无限摇晃！"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    resting:Sequence(",
                            "        {",
                            "        0%: Pose(rotation: 0°)",
                            "        33%:Pose(rotation: -5°)",
                            "        66%: Pose(rotation: 5°)",
                            "        100%: Pose(rotation: 0°)",
                            "        } ",
                            "        duration: 0.05s",
                            "    )",
                            ")"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Sequence，太棒了！这正是我希望你能展示给我们的。不过我很好奇，你最近在做什么？你自己的舞蹈？或者能展现你所有才能的舞蹈？"
                        ],
                        [
                            "Sequence",
                            "excited",
                            "$~哦，天哪，太棒了！@Phrase 和我一直在练习这支新的甜甜圈舞。它融合了我最爱的甜甜圈和几乎所有我学到的舞蹈知识。你想看吗？"
                        ],
                        ["FunctionDefinition", "excited", "$~是的！！！"],
                        null,
                        [
                            "Sequence",
                            "serious",
                            "$~耶，嗯，哦，向上，eee，eee，eee，eee，bam，嘘，耶，嗯，哦，向上，eee，eee，eee，eee，bam，嘘，耶，嗯，哦，向上，eee，eee，eee，eee，bam，嘘，..."
                        ],
                        ["use", "fit", "DonutDance"],
                        null,
                        ["use", "fit", "DonutDance"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~@Sequence，太棒了！这舞蹈怎么可能不火呢？"
                        ],
                        ["Sequence", "excited", "$~你是说下一支螺旋舞。干杯！"]
                    ]
                },
                {
                    "title": "$~请放置",
                    "subtitle": "$~团体",
                    "concept": "Group",
                    "performance": [
                        "fit",
                        "Group(Grid(2 2) [Phrase('1' resting:Sequence(spin() 1s)) Phrase('2' resting:Sequence(spin() 2s)) Phrase('3' resting:Sequence(spin() 3s)) Phrase('4' resting:Sequence(spin() 4s))])"
                    ],
                    "lines": [
                        ["use", "fit", "Symbol", "☹️"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~唉……大家都在提@Evaluate，但我不知道该说什么。你有没有和某人如此亲近却又如此疏远的时候？",
                            "$~…"
                        ],
                        null,
                        ["use", "fit", "Symbol", "😕"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~抱歉。我很高兴能和你在一起。",
                            "$~我认为…",
                            "$~我认为有帮助的是将你介绍给我们其他人，然后进行一场表演，然后我认为@Evaluate 和我可以理清事情。"
                        ],
                        null,
                        ["use", "fit", "Symbol", "🙂"],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~那么下一个是谁？",
                            "$~哦，@Group！我竟然忘了@Group！",
                            "$~这真是个好时机；你现在了解了@Phrase@Sequence，而@Sequence。@Group。",
                            "$~@Group？你们在吗？"
                        ],
                        null,
                        ["fit", "Group(Grid(2 2) [Phrase('🔳')])"],
                        [
                            "Group",
                            "neutral",
                            "$~@FunctionDefinition，你好吗？大家都去哪儿了？我好担心啊！你还好吗？"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~我没事。我们都好！沉默被打破了，因为我们找到了一个人！他们会成为我们的灵感源泉。"
                        ],
                        null,
                        ["fit", "Group(Grid(2 2) [Phrase('🔳') Phrase('🔳')])"],
                        [
                            "Group",
                            "happy",
                            "$~太好了！你没受伤吧？其他人都在吗？我感觉自己像在黑暗中徘徊，什么也看不见。"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~我没受伤，只是有点生疏。我还没见到所有人，但几乎每个人都见过了，而且我觉得大家都醒了（虽然有些人似乎去过海滩）。我们几乎见到了所有人。我们正准备表演一场！最好的表演总是有你……"
                        ],
                        null,
                        [
                            "fit",
                            "Group(Grid(2 2) [Phrase('🔳') Phrase('🔳') Phrase('🔳')])"
                        ],
                        [
                            "Group",
                            "kind",
                            "$~好戏！我迫不及待地想帮忙。你们这些孩子总是那么鼓舞人心；我很乐意尽自己的一份力。我该做什么？从哪里开始？"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~好吧，我们已经讨论了@Phrase，那么也许我们可以先谈谈你的目的？"
                        ],
                        null,
                        [
                            "fit",
                            "Group(Grid(2 2) [Phrase('🔳') Phrase('🔳') Phrase('🔳') Phrase('🔳')])"
                        ],
                        [
                            "Group",
                            "neutral",
                            "$~是的，我的目的是。让我想想——我想我的目的是把大家聚集在一起。但我特别喜欢把@Phrase以优美的形状和排列方式组合到舞台上。你知道吗，@Phrase可以同时出现在多个地方？因为它们不仅仅是舞台上的一个文本短语，而是一个短语生成器，就像我是一个@Group。它们会根据你的需要制作任意数量的短语，然后我会按照你的指示将它们布置在舞台上。我只需要@Arrangement@Phrase，剩下的就交给我了。"
                        ],
                        null,
                        [
                            "Group",
                            "excited",
                            "$~这是一个简单的例子。这里我使用了 @Stack 排列，它创建了 @Phrase 或其他 @Group 的垂直排列。看看我是如何创建一个整齐的单词堆叠的？它们排列得恰到好处，每个人都有一点空间，而且每个人都位于中心。每个人都很可爱！"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Stack() ",
                            "    [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "serious",
                            "$~但有时，我们都需要一点空间。所以你可以给 @Stack 一些填充。试试把填充改成不同的 @NumberLiteral！"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Stack('|' 2m) ",
                            "    [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "happy",
                            "$~就像 Verse 中的任何东西一样，填充值可以来自任何来源，例如输入。有时我们会疏远彼此，不是吗？让我们通过让填充值随时间增长来舞动这个想法……"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Stack('|' Time(100ms) · 0.001m/ms) ",
                            "    [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "surprised",
                            "$~我们还有一个@Row，它是一个水平排列。"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Row('|' Time(100ms) · 0.001m/ms) [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "curious",
                            "$~有时，使用二维比一维更好。如果你告诉我你想要多少行和多少列，我会创建一个短语@Grid。只需确保提供足够的短语来填满网格即可！如果你想更精确地填充，还可以指定@Grid的内边距和单元格大小。网格一次布局一行，所以请按行顺序排列你的@Grid。"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Grid(2 2) [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "        Phrase('four')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "excited",
                            "$~如果您想要非常具体的排列方式，您可以使用 @Free 并告诉我您希望所有短语的具体位置。请务必为每个 @Phrase 指定一个位置，否则我会将其放置在 \\Place(0m 0m\\) 处。"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Free() [",
                            "        Phrase('one' place: Place(-2m 2m))",
                            "        Phrase('two' place: Place(-1m 1m))",
                            "        Phrase('three' place: Place(0m 0m))",
                            "        Phrase('four' place: Place(1m -1m))",
                            "        Phrase('five' place: Place(2m -2m))",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "curious",
                            "$~你知道吗？你也可以把我放进我自己里面。@Group 里面再套上 @Group，这很傻。例如，这样就可以用 @Stack 创建一个 @Grid。"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Grid(2 2) [",
                            "    Group(Stack() [Phrase('one') Phrase(“two”)])",
                            "    Group(Stack() [Phrase('three') Phrase(“four”)])",
                            "    Group(Stack() [Phrase('five') Phrase(“six”)])",
                            "    Group(Stack() [Phrase('seven') Phrase(“eight”)])",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "surprised",
                            "$~嗯，这看起来像个4乘2的网格，对吧？我们把两个堆叠的方块倾斜一下，让它看起来更清晰一些。哦，对了，你可以赋予我@Phrase！"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Grid(2 2) [",
                            "    Group(Stack() [Phrase('one') Phrase(“two”)])",
                            "    Group(Stack() [Phrase('three') Phrase(“four”)] resting:Pose(rotation: 45°))",
                            "    Group(Stack() [Phrase('five') Phrase(“six”)])",
                            "    Group(Stack() [Phrase('seven') Phrase(“eight”)] resting:Pose(rotation: 45°))",
                            "    ]",
                            ")"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "Group",
                            "curious",
                            "$~@FunctionDefinition，这样好吗？我讲解清楚了吗？"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~这真是太棒了！我觉得你向我们的新导演展示了无限可能。还有什么想分享的吗？"
                        ],
                        null,
                        [
                            "Group",
                            "serious",
                            "$~我觉得不会……我一直在学习新的编曲，所以经常回来看看我有什么新想法！还有@FunctionDefinition，你和@FunctionDefinition？我知道上次看到你们聊天的时候，事情不太顺利……"
                        ],
                        [
                            "FunctionDefinition",
                            "shy",
                            "$~我……我现在不想谈论它。"
                        ],
                        [
                            "Group",
                            "kind",
                            "$~好的。如果你想聊天的话，我随时都在。"
                        ]
                    ]
                },
                {
                    "title": "$~舞台……对吧？",
                    "subtitle": "$~阶段",
                    "concept": "Stage",
                    "performance": [
                        "fix",
                        "Stage([Phrase('🎭' 5m)] background: Color(0% 0 0°))"
                    ],
                    "lines": [
                        [
                            "fix",
                            "Stage([Phrase('🎭' 5m resting:Sequence(bounce(5m) 2s))] background: Color(0% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~好的，有人一直在这里，但我们还没有正式介绍过。我可以介绍一下@Stage？"
                        ],
                        [
                            "Stage",
                            "neutral",
                            "$~你好，@FunctionDefinition。你好，PERSON。"
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('🎭' 5m resting:Pose(rotation: 25° scale: 5))] background: Color(0% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~@Stage，这位是我们的新导演。他们终于见到你了，太激动了！"
                        ],
                        [
                            "Stage",
                            "neutral",
                            "$~您好，总监。您是来给您灵感的吗？"
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('🎭' 5m resting:Pose(rotation: -150° scale: 10))] background: Color(0% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~确实如此，他们有着来自他们世界的各种表情。"
                        ],
                        [
                            "Stage",
                            "neutral",
                            "$~我来这里是为了服务。告诉我该在舞台上表演什么，我就会照做。"
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('🎭' 5m)] background: Color(0% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Stage 是独一无二的，并且始终存在。事实上，如果你给 @Program 指定一个 @Phrase 或 @Group，即使你没有提及它们，@Program 也会显示一个 @Stage。但如果你确实提到了它们，你可以更具体地指定你希望舞台如何显示。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~我们先从一个简单的例子开始。这只会给 @Stage 提供一个 @Phrase 的列表。这里不必提及 @Stage；这只是展示了当你将 @Phrase 赋值给 @Program 时，幕后发生了什么。"
                        ],
                        ["edit", "Stage([Phrase(“🐈”)])"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~但是假设您希望舞台具有不同的背景颜色，例如黑色。"
                        ],
                        ["Stage", "surprised", "$~BRRRRR…"],
                        [
                            "edit",
                            "Stage([Phrase(“🐈”)] background: Color(0 0 0°))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~你也可以用 @Rectangle 来框住舞台，它占据了左上角和右下角的位置。你看，小猫是不是有点儿跑偏了？"
                        ],
                        ["Stage", "surprised", "$~世界正在逼近……"],
                        [
                            "edit",
                            "Stage([Phrase(“🐈” place: Place(-2.5m))] background: Color(0 0 0°) frame: Rectangle(-2m -2m 2m 2m))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~您还可以将 @Stage 的所有属性应用于 @Group 或 @Phrase。让我们倾斜整个舞台！"
                        ],
                        ["Stage", "surprised", "$~哇哦，现在要小心了……"],
                        [
                            "edit",
                            "Stage(",
                            "    [Phrase(“🐈” place:Place(-2.5m))]",
                            "    background: Color(0 0 0°)",
                            "    resting: Pose(rotation: 30°)",
                            "    frame: Rectangle(-2m -2m 2m 2m)",
                            ")"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Stage 的功能远不止于此，而且您可以随时探索。对吧，@Stage？"
                        ],
                        ["Stage", "excited", "$~总是！"]
                    ]
                },
                {
                    "title": "$~还有...场景！",
                    "subtitle": "$~场景",
                    "concept": "Scene",
                    "performance": ["fix", "Phrase('🎬' 10m)"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~好了，现在你了解了 @Stage、@Group、@Phrase 以及它们的各种用法。现在，你可能会想，如果我想用它们讲故事怎么办？"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Scene 真的很酷。它的基本思路是给它一个 @Phrase 或 @Group 列表，它会按顺序显示它们，让你可以按顺序显示内容。"
                        ],
                        null,
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('3')",
                            "    Phrase('2')",
                            "    Phrase('1')",
                            "    Phrase('Boo!')",
                            "])"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~这是一个例子。你看到它倒计时然后说“嘘！”了吗？你可以重置一下再看。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~如果我们想减慢速度，可以为每个 @Phrase 指定精确的时长。试着编辑时长，看看变化后会发生什么。"
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('3' duration: 1s)",
                            "    Phrase('2' duration: 1s)",
                            "    Phrase('1' duration: 1s)",
                            "    Phrase('Boo!')",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~现在，你可能会想，它们之间的过渡效果怎么样？我们可以使用 @Phrase/entering 和 @Phrase/exiting 来控制，并将 @Pose 设置为起始和结束。例如，在这里，我们将每个 @Phrase 的起始和结束设置为不可见，这样它就会淡入淡出。"
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('3' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('2' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('1' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('Boo!')",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~我们甚至可以在其中一个上设置 @Sequence ，让它在前进之前进行动画处理。你看到 2 的旋转了吗？"
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('3' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('2' entering: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: 360°) 100%: Pose(rotation: 0°)} duration: 1s))",
                            "    Phrase('1' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('Boo!')",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~我们可以随意更改内容，甚至可以使其动态化。例如，让我们将数字和结尾单词设为随机！每次重新启动时，我们都会获得不同的内容。"
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase(Random(1 100)→'' duration: 1s)",
                            "    Phrase(Random(1 100)→'' duration: 1s)",
                            "    Phrase(Random(1 100)→'' duration: 1s)",
                            "    Phrase(['Boo!' 'Peep!' 'Hey!' 'Helloooo'].random())",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~但你也可以让它们具有交互性。"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~秘诀在于在你想要暂停并等待某个条件成立的地方放置一个 @Boolean。例如，我们可以等待鼠标按钮改变。看看 @Scene 是如何在每个 @Phrase 之后等待按钮被点击的？"
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('one')",
                            "    ∆ Button()",
                            "    Phrase('two')",
                            "    ∆ Button()",
                            "    Phrase('three')",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~@Scene 非常适合讲述动画故事，无论是作为整个项目还是作为项目的一部分！你想讲述什么样的故事？"
                        ]
                    ]
                },
                {
                    "title": "$~有没有一个人叫...",
                    "subtitle": "$~选择",
                    "concept": "Choice",
                    "performance": ["fix", "Phrase('🔘' 10m)"],
                    "lines": [
                        [
                            "fix",
                            "Phrase('🔘' 10m entering: Sequence({0%: Pose(offset: Place(0m 0m)) 50%: Pose(offset: Place(0m -0.2m)) 100%: Pose(offset: Place(0m 0m))} 1s count: 3x))"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~你知道我们刚才提到的@Key、@Pointer和@Pointer？它们可能很有趣，但有一个问题：并非所有观众都能使用它们。有些人没有手，或者无法使用手，或者无法精确地用手点击键盘或使用鼠标。我们知道很多人用声音，甚至用眼睛与世界交流。因此，使用@Key、@Button@Key。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~每个人都应该能够参与！既然我们已经更详细地讨论了@Phrase，我想向大家展示最后一个流@Choice，它是已选择的@Phrase，与选择方式无关。例如，观众可能使用鼠标点击@Phrase，也可能使用键盘选择它，或者他们可能使用其他设备。无论他们使用什么方式，@Choice。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~这是一个简单的例子。看看它有三个短语。前两个短语有两个重要的细节。首先，它们被设置为可选。这告诉@Stage，如果单击它们或使用键盘选择它们，它们就会被选中。第二个细节是它们有一个@Phrase/name。这为@Stage选定的短语提供了一个唯一的名称。名称的唯一性很重要，这样@Phrase/name。第三个短语被设置为@Choice流，它是一系列选定的@Stage@Choice。在这里，我们只是将名称赋予另一个短语，以便它显示选定的名称。尝试单击猫或狗或使用键盘选择一个。看看第三个@Phrase？"
                        ],
                        ["Choice", "neutral", "$~猫...‘狗’...‘猫’...‘狗’..."],
                        [
                            "edit",
                            "Stage(",
                            "    [Group(Stack() [",
                            "        Phrase('🐱' name:'cat' selectable:⊤)",
                            "        Phrase('🐶' name: 'dog' selectable:⊤)",
                            "        Phrase(Choice())",
                            "    ])",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~@Choice 确实是倾听观众声音的最佳方式。只有在别无选择的情况下才使用 @Key、@Pointer 或 @Button，并且要知道，有些观众可能无法欣赏你的表演。"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~回调",
            "performance": ["use", "fit", "DarkVoid"],
            "scenes": [
                {
                    "title": "$~回忆",
                    "subtitle": null,
                    "performance": ["use", "fit", "Symbol", "💭"],
                    "lines": [
                        ["FunctionDefinition", "curious", "$~…"],
                        null,
                        ["use", "fit", "Symbol", "🤯"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~有时候，我只需要停下来，反思一下我的小社区是多么不可思议。我们每个人都如此不同，没有人能够独自完成。但团结起来，我们就能创造如此精彩的成就！"
                        ],
                        null,
                        ["use", "fit", "Symbol", "🧠"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~但似乎无论我们多么优秀，我们总是会忘记，最终只会重复自己。所以，我还想向你们介绍一组知识。它们决定了我们如何“记忆”以及如何组织记忆。如果没有它们，我们的很多工作就得一遍又一遍地重复，我们也永远无法呈现最精彩的演出。"
                        ]
                    ]
                },
                {
                    "title": "$~命名",
                    "subtitle": "$~绑定",
                    "concept": "Bind",
                    "performance": ["use", "fit", "Symbol", ":"],
                    "lines": [
                        ["fit", "Phrase(':' rotation: 90°)"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Bind？我想给你介绍一个人。"
                        ],
                        [
                            "Bind",
                            "curious",
                            "$~@FunctionDefinition？哇哦，原来是你啊！它已经沉默太久了。谁是你的朋友？"
                        ],
                        null,
                        [
                            "fit",
                            "Phrase(':' resting:Pose(scale: 10ms ÷ Time()))"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~他们是我们的新导演！他们来这里是为了用新的想法、新的表达方式给我们带来启发。"
                        ],
                        [
                            "Bind",
                            "excited",
                            "$~真的吗？那真是太棒了。我已经很久没感受到灵感了。感觉我一直在等待……"
                        ],
                        null,
                        [
                            "fix",
                            "Phrase(':' 10m resting:Sequence(bounce(3m) 1s))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~那么，既然你知道了，你现在最想做什么呢？"
                        ],
                        [
                            "Bind",
                            "serious",
                            "$~给事物命名。给一切事物命名！给每个人命名。我已经很久没有给任何东西命名了。"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~除了我们遇到的所有角色的名字之外，我完全没有告诉我们这些灵感来源的名字。你想解释一下名字在这里是如何运作的吗？"
                        ],
                        null,
                        ["use", "fit", "Symbol", ":"],
                        [
                            "Bind",
                            "excited",
                            "$~当然！那么名字……你知道每个表达式是如何产生值的吗？"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~我们讨论了价值观！比如@Number、@Text、@None、@List、@Set、@Map……"
                        ],
                        [
                            "Bind",
                            "excited",
                            "$~对！所以，当我们创建值时，它们就像一个球一样被我们传递，从一个表达式传递到另一个表达式，直到 @Program 最终将值传递给 @Stage 进行显示。但有时，与其传递值，不如先把它放在一边，留着以后给其他表达式用。这就是 @Phrase/name 的作用。我给它们命名，以便以后使用。"
                        ],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~举个非常简单的例子。假设我们想给一个数字命名。我们只需要输入数字名称，然后输入 :，最后输入我们想要的数字。很简单，对吧？现在，每当我们在表达式中使用数字这个名称时，它的计算结果都会是 \\1\\。就像这里一样，我们先给它命名，然后用它的名称赋值给 @Program 它对应的值。"
                        ],
                        ["edit", "number: 1", "number"],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~比如，你可以通过传入一个带有 \\•\\ 符号的类型来告诉我这个名称应该是什么类型的值。比如，如果你想确保这个数字是数字，你可以这样写。这句话的意思是将值命名为 \\number\\，并且该值必须是 @Number。"
                        ],
                        ["edit", "number•#: 1", "number"],
                        null,
                        [
                            "Bind",
                            "eager",
                            "$~但是，如果你给我的不是数字怎么办？那我就会抱怨，因为你明明说它应该是一个数字，结果却给了我一些文字。所以我不知道该怎么办。明白了吗？"
                        ],
                        ["conflict", "number•#: 'oh hi'", "number"],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~好吧，现在你肯定在想，*为什么有人会给数字或文字起这样的名字？？？*。好吧，想象一下，你正在听@Key，你想知道它是否是一组秘密字母中的一个，如果是魔法字母，就显示一个@Phrase，大写\\⊤\\，如果不是，就显示小写\\⊥\\。我们可以从类似这样的代码开始。这样就能得到\\⊤\\或\\⊥\\了。",
                            "$~这太棒了！按下其中一个字母时，会得到 \\⊤\\；按下其他字母时，会得到 \\⊥\\。很好。"
                        ],
                        ["edit", "[ 'a' 'e' 'i' 'o' 'u'].has(Key())"],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~现在，我们来创建短语。我们将 @List/has 表达式作为文本，并将其转换为文本。现在，我们在舞台上将 @Phrase 呈现为 \\⊤\\ 或 \\⊥\\。太棒了！"
                        ],
                        [
                            "edit",
                            "Phrase([ 'a' 'e' 'i' 'o' 'u'].has(Key())→'')"
                        ],
                        null,
                        [
                            "Bind",
                            "curious",
                            "$~现在到了问题的部分。我们如何改变 @Phrase 的大小？嗯，我们已经知道如何检查它是否是一个魔法字母了，所以我们可以直接复制它，如果它是 \\⊤\\，就把它的大小设为 \\2m\\；否则，如果它是 \\⊥\\，就把它的大小设为 \\1m\\。这样就行了，但是你明白为什么我们必须对同一个表达式求值两次了吧？"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "   [ 'a' 'e' 'i' 'o' 'u' ].has(Key())→''",
                            "   [ 'a' 'e' 'i' 'o' 'u' ].has(Key()) ? 2m 1m",
                            ")"
                        ],
                        null,
                        [
                            "Bind",
                            "excited",
                            "$~这就是我要说的！瞧，你只需要计算表达式的值，然后命名它。是不是很有魔力？你只需要在表达式前面加上一个名称和 \\:\\，这个表达式的值就会有一个名称。然后，你可以在表达式之后的任何位置使用该名称来引用它的值。很奇怪吧？你想看看它是怎么运作的吗？试着按下时间轴上的 ← 键，然后往回移动几步，回到 \\magic\\ 第一次被命名的地方。看看 \\magic\\ 是如何获取 \\has\\ 的值的？然后，当每个位置都用名称引用 \\magic\\ 时，是如何放置相同的值的？"
                        ],
                        [
                            "edit",
                            "magic: [ 'a' 'e' 'i' 'o' 'u'].has(Key())",
                            "Phrase(",
                            "    magic→''",
                            "    magic ? 2m 1m",
                            ")"
                        ],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~你知道，你总是可以复制你写的表达式。那样就变成同一个节目了。这有点浪费。我的意思是，我们必须一遍又一遍地创建完全相同的值，然后如果你改变了对一个表达式的想法，你就必须在所有地方都修改它。那，如果你在一个地方修改了，却忘记在其他地方修改怎么办？比如，想象一下，如果你也改变了颜色，那么你就得到了三次相同的表达式。然后想象一下，你想用这个来在我们的魔法字母列表中添加一个字母。你必须做三次！你可能会忘记一个，或者打错字。如果我们中的一些人没有按照你的意图去做，你该如何表达你的艺术构想？"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key())→''",
                            "    [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key()) ? 2m 1m",
                            "    color: Color(50% 100 [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key()) ? 180° 0°)",
                            ")"
                        ],
                        null,
                        [
                            "Bind",
                            "kind",
                            "$~但是，如果你给表达式命名，你只需要写一次。而且，这样读起来也容易多了。"
                        ],
                        [
                            "edit",
                            "magic: [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key())",
                            "Phrase(",
                            "    magic→''",
                            "    magic ? 2m 1m",
                            "    color: Color(50% 100 magic ? 180° 0°)",
                            ")"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~@Bind，这真是个好例子！你知道我超爱名字的。我很好奇，名字也有一些地方可能会出错吗？"
                        ],
                        [
                            "Bind",
                            "sad",
                            "$~嗯，嗯。有的。比如，假设我们这样做。发现问题了吗？我把它高亮了。这个程序在使用 \\veggies\\ 之后才定义它，这真的让我很困惑。因为代码是按读取顺序求值的，所以，我们读这个程序的时候，看到 \\veggies\\ 这个词，然后会想，谁是 \\veggies\\？只有在 \\total\\ 之后，我们才会想到 \\veggies\\ ，就像“我在这里！”一样，然后整个生成式就崩溃了。"
                        ],
                        [
                            "conflict",
                            "fruits: 5",
                            "total: fruits + veggies",
                            "veggies: 3",
                            "total"
                        ],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~或者，比如，这里有一个例子，我们给两个不同的值赋予了相同的名称。所以我们计算 \\5\\ 并将其命名为 \\fruits\\，然后我们计算 \\10\\……，最后将其命名为 \\fruits\\?? 也就是说，已经有一个 \\fruits\\ 了，那么你说的是哪个 \\fruits\\ 呢？因为，一旦你命名了一个值，就不能再赋予它新的值了。该名称和值是绑定在一起的，直到 @Program 完成计算。我们不希望任何人混淆谁是谁。"
                        ],
                        [
                            "conflict",
                            "fruits: 5",
                            "fruits: 10",
                            "total: fruits + fruits",
                            "total"
                        ],
                        null,
                        [
                            "Bind",
                            "kind",
                            "$~我想还有最后一个。假设你有这个。看到这里发生了什么吗？我们命名了 \\veggies\\，但之后却从未使用过它。这通常是一个不好的迹象，表明你漏掉了某些内容，或者没有使用正确的名称。比如，也许你只是没有使用它，但它为什么在那里呢？"
                        ],
                        ["conflict", "fruits: 5", "veggies: 10", "fruits + 3"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~这太有帮助了，@Bind，太棒了。你确定没别的了吗？"
                        ],
                        [
                            "Bind",
                            "eager",
                            "$~哦！是的，有件非常重要的事。所以，一个名字就好，对吧？但有时候，多个名字更好？比如，如果你想用多种语言来命名某个东西，让每个人都能读懂？比如，你想用多种语言来表达“水果”的意思。",
                            "$~将文本光标放在名称 \\fruit\\ 上。看看里面实际上有三个名称，每个名称都有一个两个字母的标签，例如 \\/en\\? 如果名称使用的是您未选择的语言，则会隐藏。",
                            "$~例如，向下滚动到⚙并选择“西班牙语”，您就会看到英语和西班牙语的名称。也就是说，一个值对应三个名称，您可以使用其中任何一个来获取该值。如果您告诉我们您想要哪种语言，我们会显示所有可用的语言。不过，语言越多越好，因为世界上有很多人会阅读各种不同的语言！"
                        ],
                        ["conflict", "fruit/en,fruta/es,水果/zh: 5"],
                        null,
                        ["use", "fit", "Symbol", ":"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~您知道，@Bind 可以与许多其他角色配合使用，包括 @Bind @FunctionDefinition 输入时，您会看到它们，例如 \\Pose(color: _)\\——我们将会见其中一些其他角色。@Bind，您会来演示一下吗？"
                        ],
                        [
                            "Bind",
                            "excited",
                            "$~嗯，是啊！既然沉默已经打破，那就让我们整天讨论价值观吧！"
                        ]
                    ]
                },
                {
                    "title": "$~舞台之外",
                    "subtitle": "$~堵塞",
                    "concept": "Block",
                    "performance": ["use", "fit", "Symbol", "()"],
                    "lines": [
                        ["fix", "Phrase('()' 1m)"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~所以有一个角色一直在这里，但你还没有见过，他们一直在躲藏……他们与@Bind 和许多其他人密切合作，所以我想我们接下来应该和他们谈谈。@Block，你能出来吗？"
                        ],
                        ["Block", "shy", "$~… 你好"],
                        null,
                        ["fix", "Phrase('()' 2m)"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~嗨，@Block！你好吗？"
                        ],
                        ["Block", "shy", "$~…嗯，好吗？"],
                        null,
                        ["fix", "Phrase('()' 3m)"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~我有一位新朋友想让你认识一下。他可能是我们的下一任主管。"
                        ],
                        ["Block", "shy", "$~… 你好 …"],
                        null,
                        ["fix", "Phrase('()' 4m)"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~我们刚刚与@Bind 见面，还没有机会谈论你们两个是如何成为最好的朋友的！"
                        ],
                        ["Block", "shy", "$~…是的，@Bind！"],
                        null,
                        ["fix", "Phrase('()' 1m)"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~你想分享你们一起做的事情吗？"
                        ],
                        ["Block", "shy", "$~… 你可以吗？"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~是的，当然！所以，@Program 基本上就是一个 @Block。它就是没有括号的 @Block。但是你可以在程序的任何地方使用带括号的 @Block。例如，你可以使用 @Block 来明确数学运算的顺序。这里，@BinaryEvaluate 先求 \\1\\，然后求 @Block，最后将它们相加。@Block，我理解对了吗？"
                        ],
                        ["edit", "1 + (2 · 3)"],
                        ["Block", "shy", "$~… 是的！"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~所以 @Block 还能做的另一件事您已经见过了。@Block 允许您使用 @Bind 命名事物。但是，@Block 中定义的任何名称都只能在括号内定义，不能在括号之前或之后定义。例如，看看这个。\\a\\ 定义为 \\1\\，然后 a 块开始；\\b\\ 定义为 \\2\\，然后 \\c\\ 定义为它们的和。@Block 的计算结果为其表达式列表中的最后一个值。这就是 @Bind，它的计算结果为 \\c\\，也就是 \\3\\。对吗？"
                        ],
                        ["conflict", "a: 1", "(", "  b: 2", "  c: a + b", ")"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~但是如果我们想在 @Block 之外访问 \\c\\ 怎么办呢？不行。\\c\\ 只在 @Block 内部定义，在 @Block 外部则没有定义。对吗，@Block？"
                        ],
                        [
                            "conflict",
                            "a: 1",
                            "(",
                            "  b: 2",
                            "  c: a + b",
                            ") + c"
                        ],
                        [
                            "Block",
                            "shy",
                            "$~…是的，我之外的任何事物都看不到我内心的名字。\\c\\ 只存在于我内心"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~还有一件事，我想？因为 @Block 是一个表达式列表，它只会计算列表中的最后一个表达式，所以列表中任何不是 @Bind 的表达式基本上都会被忽略。例如，这里，最后一个表达式之前的所有算术运算都会被忽略。\\3\\、\\5\\、\\7\\ 都被忽略了，而 @Block 只会计算最后一个表达式 \\9\\。@Block，我说得对吗？"
                        ],
                        [
                            "Block",
                            "shy",
                            "$~……嗯。就最后一个。其他的……我不知道它们是干什么用的！！"
                        ],
                        [
                            "conflict",
                            "(",
                            "  1 + 2",
                            "  2 + 3",
                            "  3 + 4",
                            "  4 + 5",
                            ")"
                        ],
                        null,
                        [
                            "fit",
                            "Phrase('()' resting:Sequence(spin() 1s 'straight'))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~还有什么想分享的吗，@Block？"
                        ],
                        [
                            "Block",
                            "curious",
                            "$~…我们可以做点什么吗？我能帮忙吗？"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~我也很好奇！不过我相信我们的导演会自己决定时间。灵感总是在最意想不到的时候出现！"
                        ]
                    ]
                },
                {
                    "title": "$~舞台指导",
                    "subtitle": "$~功能",
                    "concept": "FunctionDefinition",
                    "performance": ["use", "fit", "Symbol", "ƒ"],
                    "lines": [
                        ["use", "fit", "Symbol", "☺️"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~我很高兴我们找到了大家，也很高兴你能认识他们所有人。每个人都很不一样，不是吗？但又都很有趣？我觉得我们就像一个大家庭，每个人都有自己的独特之处，但正是这些差异让我们团结起来，才让我们更加强大。你觉得大家怎么样？"
                        ],
                        null,
                        ["use", "fit", "Symbol", "🙈"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~我？嗯，我没什么特别的。我只是喜欢在幕后帮忙，向大家展示他们的特别之处。我甚至还没想过要谈我自己。我想我们可以聊聊我自己。"
                        ],
                        null,
                        ["use", "fit", "Symbol", "ƒ"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~我想让我们从你已经看过的内容开始。你知道每个值都有不同的函数可以求值吗？比如数字知道如何 @Number/add，文本值知道如何 @Number/add，或者 @Set 知道如何检查它是否具有某个值？嗯，我就是定义这些函数的人。我的意思是，我没有灵感自己去创造它们——像你这样的导演才这么做——但我定义了函数接受的输入、函数的名称，以及使用输入求值得出输出值的表达式。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~这是一个超级简单的例子。实际上，它是最简单的！它定义了一个函数，其计算结果始终为数字 \\1\\。就是这样。它没什么用，不是吗？它没有名称，不接受任何输入，并且计算结果始终为 \\1\\。",
                            "$~你还可以看到 @Program 被求值成了我的一个 @FunctionDefinition。没错，@FunctionDefinition 也是值！我不知道为什么有人会写出这么没用的函数，但正如我所说：灵感不是来自我，而是来自你。"
                        ],
                        ["edit", "ƒ() 1"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~这里有更实用的例子。你知道奇数和偶数吗？我曾经有个导演想检查一个数字是否为偶数（我想是能被2整除的意思吧？），所以他们写了这个。这个函数叫做 \\even\\，它接受一个名为 \\number\\ 的数字。你需要告诉我每个输入是什么类型的值，这样 @Evaluate 才能确保任何对该函数求值的操作都发送了正确的值。然后，它接受这个数字，除以二，得到余数（使用 @Number/remainder），然后用 @Number/equal 检查余数是否等于 \\0\\。所以整个函数最终要么求值为 \\⊤\\，要么求值为 \\⊥\\。例如，这个对 even 的求值结果是 \\⊥\\，因为 \\3\\ 是奇数。试着使用倒回按钮看看它是如何工作的。"
                        ],
                        [
                            "edit",
                            "ƒ even(number•#) (number % 2) = 0",
                            "even(3)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~你还可以告诉我应该求值成什么类型的值。看看我们在输入列表后面加了 \\•\\? ？这表示“函数的表达式应该求值为 \\⊤\\ 或 \\⊥\\”。但是看看我们是怎么抱怨的？我们不知道函数应该是 \\⊤\\ 还是 \\⊥\\ ，或者你返回的任何类型的值，所以节目就结束了。"
                        ],
                        ["conflict", "ƒ even(number•#)•? (number % 2) + 0"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~函数可以任意复杂。您可以使用简单的表达式或 @Block，甚至可以在函数内部创建函数。例如，看看这个由前任主管编写的函数。它使用 @Block 和多个 @Bind 来计算一个单词有多少个独特的元音字母（我觉得他们当时是想弄清楚一个单词是否“复杂”之类的）。看到它有多少行代码了吗？嗯，它仍然只有一个表达式：一个 @Block，并且这个 @Block 包含了所有的行代码。和任何 @Block 一样，最后一行就是它要计算的结果：独特元音字母的总数。其余所有代码——比如第一行，它将文本转换为字母列表，然后将字母列表转换为一个集合——都只是为了在中间计算这些计数的总数。"
                        ],
                        [
                            "edit",
                            "ƒ vowels(word•'') (",
                            "  unique: word → [“”] → {}",
                            "  a: unique{'a'} ? 1 0",
                            "  e: unique{'e'} ? 1 0",
                            "  i: unique{'i'} ? 1 0",
                            "  o: unique{'o'} ? 1 0",
                            "  u: unique{'u'} ? 1 0",
                            "  a + e + i + o + u",
                            ")",
                            "vowels('hello')"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~还有一件事要展示。我想这很重要，因为大家都很兴奋！你知道怎么创建一个函数并求值吗？好吧，既然我创建的函数是值，你也可以将它们作为另一个函数的输入。这里有一个例子。假设你有一个数字列表，你只想要其中的偶数。@List 有一个叫做 @List/filter 的函数，它接受一个函数作为输入，并对列表中的每个值使用该函数来决定是否保留它。让我们创建一个数字列表，并将我们之前创建的 \\even\\ 函数作为 @List/filter 的输入。看看会发生什么？我们只得到了偶数。想试试把它改成奇数吗？或许可以试试其他方法修改这个函数？"
                        ],
                        [
                            "edit",
                            "ƒ even(number•#)•? (number % 2) = 0",
                            "[ 1 2 3 4 5 6 7 8 ].filter(even)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~有很多函数可以接受函数作为输入。@List、@Set 和 @Map 都有。你甚至可以创建自己的函数！"
                        ],
                        [
                            "fit",
                            "Group(Grid(3 2) [Phrase('translate') Phrase('filter') Phrase('combine') Phrase('find') Phrase('sort') Phrase('until')])"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~我不知道。有时候，我明白为什么人们说他们如此感激我所做的事情。其他时候，我觉得像你这样的导演才是真正的魔力所在。这让我有时觉得自己只是个空壳，无法容纳人们的才华……"
                        ]
                    ]
                },
                {
                    "title": "$~布景设计",
                    "subtitle": "$~结构",
                    "concept": "StructureDefinition",
                    "performance": ["use", "fit", "Symbol", "•"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~我还想让你们认识几个角色。接下来是我认识的最老练的角色，某种程度上，他们也算是领导者。他们帮助我们组织所有人，奠定演出的基础，让一切变得更加有序。当然，你是我们的导演，但他们就像是每个人都会去找的人，来维持演出的秩序。我认为他们在你举办的任何演出中都可能发挥着至关重要的作用。"
                        ],
                        null,
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 1.2) 100%: Pose(scale: 1)} 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@StructureDefinition，你在吗？"
                        ],
                        [
                            "StructureDefinition",
                            "curious",
                            "$~@FunctionDefinition……我的朋友。最近很安静，不是吗？大家都去哪儿了？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~沉默。它影响了我们所有人。大家都还好，我几乎找到了所有人。但对有些人来说，情况很糟糕。你怎么样了？"
                        ],
                        [
                            "StructureDefinition",
                            "sad",
                            "$~……你的朋友是谁？是个人吗？"
                        ],
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(offset: Place(-0.25m)) 50%: Pose(offset: Place(0.25m)) 100%: Pose(offset: Place(-0.25m))} 3s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~哦，是的，抱歉，这是我们的新导演！他们来激励我们、指导我们，分享他们的故事、想法和想象。他们打破了沉默！"
                        ],
                        [
                            "StructureDefinition",
                            "eager",
                            "$~真是太不可思议了，也让我松了一口气。很高兴认识你，主管先生。我在这里，随时准备为您服务。",
                            "$~@FunctionDefinition……这真的很难。你，@Evaluate，还有所有人——我之前都没意识到我有多么依赖你们。为了目标，为了玩乐，为了社群。我没想到我们会这样失去彼此。没有人帮我组织，我感觉只能自己组织，这感觉毫无意义。"
                        ],
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(rotation: 0°) 80%: Pose(rotation: 15°) 100%: Pose(rotation: 0°)} 3s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@StructureDefinition，即使你孤身一人，你也永远不会空虚。即使我们不能彼此相伴，我们也都在这里。既然沉默已经打破，我们就可以相伴。"
                        ],
                        [
                            "StructureDefinition",
                            "happy",
                            "$~我们可以，不是吗？"
                        ],
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(offset: Place(0m 0.25m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 0.25m))} 3s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~怎么样？准备好和大家重聚了吗？来表演我们树苗导演想要的任何表演吧！"
                        ],
                        ["StructureDefinition", "eager", "$~我认为是的。"],
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(offset: Place(0m 0.25m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 0.25m))} 1.5s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~您认为您可以帮助我们的主管更多地了解您的工作吗？"
                        ],
                        [
                            "StructureDefinition",
                            "shy",
                            "$~是的。是的……我花了很多时间静静地思考我的人生目标。我想我已经意识到，我真正做的是赋予事物群体以身份。比如，我知道你见过ƒ，但你见过@Bind？"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~是的！我们刚刚见过@Bind@Block。"
                        ],
                        [
                            "fix",
                            "Phrase('•' entering: Pose(scale: 0.5) resting:Pose(scale: 2))"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "eager",
                            "$~好的。我做的是把值和函数整合在一起，创建一个整洁的小容器，用来存放一堆相关的内容。比如，假设你想制作一个小字幕，循环显示一系列信息。之前有一位主管制作过这样的字幕，希望显示这些信息。"
                        ],
                        [
                            "edit",
                            "[",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "serious",
                            "$~然后，他们遇到了一个问题：演出如何记住他们当前正在播放哪条消息。他们意识到需要某种方法来记住列表中的索引。这是一个很好的开始，但它只显示第一条消息。"
                        ],
                        [
                            "edit",
                            "messages: [",
                            "    'Kitties are cute!'",
                            "    'Got cat?'",
                            "    'Cat mom.'",
                            "    'Tuxie crush'",
                            "    'Lap cat'",
                            "  ]",
                            "index: 1",
                            "Phrase(messages[index])"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "excited",
                            "$~然后，他们想起了 @Reaction，它可以用来响应流的变化。他们希望消息每两段更改一次，所以他们创建了每 2 秒触发一次的 @Time 流，并使用 @Reaction 每次递增下一个索引。这个 @Reaction 表示从 \\1\\ 开始，当时间每 \\2000ms\\ 变化一次时，将 \\index + 1\\ 的值计算为之前的数值。这样，\\index\\ 每两秒增加 \\1\\，从而更改显示的消息。耶，成功了！"
                        ],
                        [
                            "edit",
                            "messages: [",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]",
                            "index•#: 1 … ∆ Time(2000ms) … index = messages.length() ? 1 index + 1",
                            "Phrase(messages[index])"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "curious",
                            "$~要不要加点儿亮点？我们再写一个像倒影一样的短语，就像下面的影子一样。是不是很有意思？"
                        ],
                        [
                            "edit",
                            "messages: [",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]",
                            "",
                            "index•#: 1 … ∆ Time(2000ms) … index = messages.length() ? 1 index + 1",
                            "",
                            "Group(Stack('|' 0m) [",
                            "  Phrase(messages[index])",
                            "  Phrase(messages[index] resting:Pose(flipy: ⊤ opacity: 25%))",
                            "])"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "serious",
                            "$~现在，所有代码都运行正常了。我们可以就这样保留它。但这也有点难以阅读和理解。部分原因是我们重复了代码：\\messages[index]\\ 出现了两次，每个短语中各一次。而且 @Reaction 很长。我们可以做些什么来简化它呢？这就是我能提供的帮助。我通过赋予可复用的概念名称来简化代码，使其更容易理解。所以，想象一下，我们不用所有这些 @Bind，而是创建一个我，并将其命名为 \\Marquee\\。这就是我们首先要做的。\\Marquee\\ 的作用是存储消息，同时还包含一个用于前进到下一条消息的函数 \\next()\\ 和一个用于获取当前消息的函数 \\now()\\。",
                            "$~然后，我们可以在响应中使用 Marquee。现在，它只是将初始值设置为包含五条消息的 Marquee，而每个时钟周期后的下一个值是下一条消息。更简单吧？这是因为所有关于下一条消息的逻辑都在 \\next()\\ 中，它只是创建了一个新的 \\Marquee\\，其中包含相同的消息，但索引已更新。两个 @Phrase 也带来了一些好处。我们不必像以前那样引用消息和索引，只需使用 \\marquee.now()\\ 即可获取列表中的当前消息。"
                        ],
                        [
                            "edit",
                            "•Marquee(messages•[''] index•#: 1) (",
                            "  ƒ now() messages[index]",
                            "  ƒ next() Marquee(messages index ≥ messages.length() ? 1 index + 1)",
                            ")",
                            "",
                            "marquee•Marquee: Marquee([",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]) … ∆ Time(2000ms) … marquee.next()",
                            "",
                            "Group(Stack('|' 0.5m) [",
                            "  Phrase(marquee.now())",
                            "  Phrase(marquee.now() resting:Pose(flipy: ⊤ opacity: 25%))",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~太棒了，@StructureDefinition！不过我得说，这看起来确实有点多余。为什么要花那么多时间整理呢？"
                        ],
                        [
                            "StructureDefinition",
                            "serious",
                            "$~啊，这确实是关于变化的。现在代码有点多，但如果我们决定以某种方式修改 \\Marquee\\ 呢？比如，如果我们想让消息列表在每次到达末尾时反转，该怎么办？在没有我的旧版本中，没有简单的方法可以做到这一点，因为我们必须在索引到达末尾时反转消息列表。由于 @Bind 在设置后无法更改，所以这很难。但是由于我们创建了 \\Marquee\\，所以更改很容易。我们只需修改 \\next\\ 函数，使 \\Marquee\\ 在索引到达末尾时列表反转，否则列表递增。"
                        ],
                        [
                            "edit",
                            "•Marquee(messages•[“”] index•#: 1) (",
                            "  ƒ now() messages[index]",
                            "  ƒ next()",
                            "    index ≥ messages.length() ?",
                            "      Marquee(messages.reverse() 1)",
                            "      Marquee(messages index + 1)",
                            ")",
                            "",
                            "marquee•Marquee: Marquee([",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]) … ∆ Time(2000ms) … marquee.next()",
                            "",
                            "Group(Stack('|' 0.5m) [",
                            "  Phrase(marquee.now())",
                            "  Phrase(marquee.now() resting:Pose(flipy: ⊤ opacity: 25%))",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~哦，我明白了，所以通过创建一个@StructureDefinition 来存储彼此相关的值和@FunctionDefinition，如果您改变主意，以后可以更轻松地进行更改。"
                        ],
                        [
                            "StructureDefinition",
                            "happy",
                            "$~是的。就像你整理房间，以后找东西会更容易一样。当然，你不必为了找东西而整理房间；整理只会让找东西更难。表演也一样：如果你花时间整理，换东西就会更容易。"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~这很有道理。我们这群人有点不守规矩。保持秩序或许是个好主意，尤其是在演出越来越复杂的时候。还有什么想分享的吗？"
                        ],
                        [
                            "StructureDefinition",
                            "eager",
                            "$~哦，是的。@StructureDefinition 中不必包含任何 @FunctionDefinition。只需包含值即可。例如，您可能只想将一堆数据放在一个地方。我知道很多导演喜欢制作游戏，他们通常会将所有游戏状态都放在 @StructureDefinition 中。"
                        ],
                        ["edit", "•Game(score•# lives•# level•#)"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~哦，对了！那么，数据一旦放入结构体中，如何取出呢？"
                        ],
                        [
                            "StructureDefinition",
                            "surprised",
                            "$~哦，天哪，我忘了解释一下了。你用了一个迷你的 @PropertyReference。比如，在那个游戏例子中，看看我们是如何定义 Game @StructureDefinition 的，然后创建一个 \\Game\\ 值，其中包含 \\0\\ 分数、\\3\\ 条生命和 \\1\\ 等级？要获取生命值，我们只需输入 \\status.lives\\，结果就是 \\3\\。"
                        ],
                        [
                            "edit",
                            "•Game(score•# lives•# level•#)",
                            "status: Game(0 3 1)",
                            "status.lives"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~太棒了！所以，用迷你版的“你”来代替“你”来获取值就行了。但是，你该如何更改这些值呢？"
                        ],
                        [
                            "StructureDefinition",
                            "serious",
                            "$~还记得 @Bind 只允许设置值而不能更改吗？我所有的 @Bind 都是这样。所以，你需要创建一个包含新值的新结构体。例如，在这个游戏中，每次 ticks 发生变化，玩家的得分就会增加一分。这游戏很奇怪吧？所以初始的 \\Game\\ 值以 \\Game(0 3 1)\\ 开始，但下一个值是 \\Game\\ 的旧值，但得分会加 \\1\\。"
                        ],
                        [
                            "edit",
                            "•Game(score•# lives•# level•#)",
                            "status: Game(0 3 1) … ∆ Time() … Game(status.score + 1 status.lives status.level)"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "eager",
                            "$~如果只有一项更改，就必须重复所有旧值，这会非常烦人。因此，我和 @Bind 想出了一个巧妙的技巧，将 @StructureDefinition 的值复制到新值中。看看它看起来和普通的 @Bind 有什么区别？唯一的区别在于，它作用于整个 @StructureDefinition，而不是单个名称，并且除了修改的值之外，@StructureDefinition 的所有值都会被复制。"
                        ],
                        [
                            "edit",
                            "•Game(score•# lives•# level•#)",
                            "status: Game(0 3 1) … ∆ Time() … status.score: status.score + 1"
                        ],
                        null,
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 1.2) 100%: Pose(scale: 1)} 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~太棒了！好的，还有其他吗？"
                        ],
                        [
                            "StructureDefinition",
                            "curious",
                            "$~我认为我们所缺少的只是灵感……"
                        ]
                    ]
                },
                {
                    "title": "$~导演笔记",
                    "subtitle": "$~解释",
                    "concept": "Doc",
                    "performance": ["use", "fit", "Symbol", "¶"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~哇，我们走了好远，不是吗？我们还有一个角色要介绍。他们很有意思，因为本质上，他们都是来解释事情的，感觉就像我之前和你一起做的一样。他们的名字是@Doc。@Doc，你好吗？"
                        ],
                        ["use", "fit", "Symbol", "¶"],
                        [
                            "Doc",
                            "surprised",
                            "$~@FunctionDefinition，是你吗？我从没想过还能再见到你。你好吗？@Evaluate 怎么样？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~我没事。@Evaluate 是……@Evaluate。我见过他们，但是……我觉得我还需要一点空间。我一直在给大家介绍我们的新导演。"
                        ],
                        [
                            "Doc",
                            "kind",
                            "$~很高兴认识你！希望@FunctionDefinition 能成为我的好老师。"
                        ],
                        ["use", "fit", "Symbol", "¶/"],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~我试过了……你知道吗，你是我们的最后一站？你真的很重要，但在我们开始解释我们的表演之前，还有很多事情要解释。所以我想让你说最后一句话。你想分享一下你的表演吗？"
                        ],
                        ["use", "fit", "Symbol", "¶/en"],
                        null,
                        [
                            "Doc",
                            "happy",
                            "$~很高兴。如果你认识除了我之外的所有人，那么你现在可能已经知道我们做了很多不同的事情。就连我自己都很难记住每个人都在做什么！我的工作是帮助解释每个人在表演中都在做什么。"
                        ],
                        null,
                        [
                            "Doc",
                            "happy",
                            "$~我不仅能提醒自己大家在做什么，还能向别人解释，比如和朋友一起指挥，或者想和别人分享你的表演。所以你不必跟我合作，但我发现，如果你花点时间解释一下它的运作方式，每次表演都会更容易进行，也更容易调整。"
                        ],
                        ["use", "fit", "Symbol", "¶About me...¶/en"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~那么我们的导演如何与您合作？"
                        ],
                        [
                            "Doc",
                            "serious",
                            "$~嗯，你几乎可以在 @Program 的任何地方使用我。比如说，你创建了一个 @Bind 函数，并且想要说明这个值的作用。比如，这里有一个简单的值，我们命名了它，但我要做的是对它的作用进行更广泛的解释。"
                        ],
                        [
                            "conflict",
                            "¶The price at the beginning of the game, ",
                            "used to initialize the game.¶",
                            "startingPrice: 5dollar"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "$~或者假设你在这里用 @FunctionDefinition 定义了一种计算价格税的方法。你可能需要解释一下它计算的内容。就像 @Bind 一样，我把它放在 @FunctionDefinition 之前。"
                        ],
                        [
                            "edit",
                            "¶Gets the tax for a given price, ",
                            "which is 1% if less than 100, and 5% otherwise¶",
                            "ƒ tax(price•#dollar) ",
                            "    price · (price < 100dollar ? 0.01 0.05)"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "$~你也可以在 @StructureDefinition 之前做同样的事情来解释它代表什么。这里的解释也暗示了它以后可能具有的功能。"
                        ],
                        [
                            "edit",
                            "¶Represents a product and its price. ",
                            "Eventually will support functions to get other details about the product.¶",
                            "•Product(name•'' price•#dollar)"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "$~您还可以将我放在任何表达式前面，这在您遇到特别复杂的表达式时尤其有用。"
                        ],
                        [
                            "edit",
                            "ƒ quadratic(a•# b•# c•# x•#)",
                            "¶The quadratic equation¶",
                            "(a · (x ^ 2)) + (b · x) + c"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$~和@Bind，您可以告诉我解释使用的是什么语言，并为我提供同一解释的多种翻译（只有选择了西班牙语，您才会看到西班牙语。如果没有看到，请尝试将西班牙语添加到您选择的语言中。）"
                        ],
                        [
                            "edit",
                            "ƒ quadratic(a•# b•# c•# x•#)",
                            "¶The quadratic equation¶/en",
                            "¶La ecuación cuadrática¶/es",
                            "(a · (x ^ 2)) + (b · x) + c"
                        ],
                        null,
                        [
                            "Doc",
                            "curious",
                            "$~你知道把我放在哪里最好吗？就在@Program。这样，每个人都知道你的表演是关于什么的。你甚至可以在想好要我们大家做什么之前就写好它。"
                        ],
                        [
                            "conflict",
                            "¶Have you ever wanted to know what it's like ",
                            "to fly a ✈️ with your mouth?",
                            "Maybe this stores the plane's height?¶",
                            "•Plane()",
                            "¶We need some kind of reaction to listen to the microphone…¶",
                            "sound: 1m",
                            "¶We know there's a plane, but what else?¶",
                            "Phrase(“✈️” sound)"
                        ],
                        null,
                        ["use", "fit", "Symbol", "✈️🫦"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~哇，我想用嘴巴驾驶飞机！"
                        ],
                        [
                            "Doc",
                            "confused",
                            "$~@FunctionDefinition，我们没有嘴巴……"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~嗯...说得好。",
                            "$~说到说话，好像只能包含纯文本。对吗？"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$~哦，不，一点也不。你还记得@Phrase 那些花哨的文字样式吗？我也能做到。"
                        ],
                        [
                            "edit",
                            "¶Docs can be ",
                            "/italic/, ",
                            "_underlined_, ",
                            "*bold*, or ",
                            "^extra bold^.¶",
                            "'fancy!'"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$~当然，就像@Text 和@Text，如果您需要按字面意思使用这些字符中的任何一个，只需重复两次即可。"
                        ],
                        [
                            "edit",
                            "¶",
                            "Docs can be ",
                            "  /italic/ (//), ",
                            "  _underlined_ (__), ",
                            "  *bold* (**), or ",
                            "  ^extra bold^ (^^).¶",
                            "'fancy'"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$~您可以将示例代码放在里面^\\^\\。"
                        ],
                        [
                            "edit",
                            "¶I'm an example inside a doc: \\1 + 1\\.¶",
                            "1 + 1"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$~您还可以添加互联网上其他内容的链接。"
                        ],
                        [
                            "edit",
                            "¶Learn more at <Wordplay@https://wordplay.dev>.¶ 'a link!'"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "$~还有最后一件事。",
                            "$~虽然我主要想解释清楚，但有时省略一些内容也会有帮助。比如，把某些内容暂时从项目中移除，让它不再是项目的一部分。",
                            "$~您可以通过在星星之间包裹任何东西来实现这一点。",
                            "$~看到我们制作的列表中没有包含“cat”吗？",
                            "$~您可以通过使用键盘删除星星或将光标放在星星内并使用 elide 命令将其删除。"
                        ],
                        ["edit", "[1 2 3 4 *'cat'* 5 6 7 8]"],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('Quiet backstage!' color: Color(100% 0 0°))] background: Color(0% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~哇！我没想到你居然能做到这么多！谢谢你，@Doc，我觉得我们可能要上节目了！"
                        ],
                        ["Doc", "excited", "$~我们开始做吧！"]
                    ]
                }
            ]
        },
        {
            "title": "$~结局",
            "performance": [
                "fit",
                "Stage([Phrase('😨')] background: Color(0% 0 0°))"
            ],
            "scenes": [
                {
                    "title": "$~相互依赖",
                    "subtitle": null,
                    "performance": [
                        "fit",
                        "Stage([Phrase('😨' resting:Sequence(shake() style: 'straight'))] background: Color(0% 0 0°))"
                    ],
                    "lines": [
                        [
                            "fit",
                            "Stage([Phrase('😡')] background: Color(0% 0 0°))"
                        ],
                        [
                            "Evaluate",
                            "sad",
                            "$~@FunctionDefinition，你去哪儿了？？"
                        ],
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~我一直在向我们的新导演展示……"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('😢')] background: Color(0% 0 0°))"
                        ],
                        ["Evaluate", "shy", "$~我没想到你会这么久……"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~……@Evaluate，我知道你想我了。我也想你。但这件事很重要：沉默被打破了；我们有了新导演……我爱你，我知道你需要我，但我也有事要做。"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('😠')] background: Color(0% 0 0°))"
                        ],
                        ["Evaluate", "sad", "$~这事以后再说吧，你还有事要做。"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~我认为我们现在需要谈谈这个问题。我们不能再陷入这种循环了。"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('😓')] background: Color(0% 0 0°))"
                        ],
                        [
                            "Evaluate",
                            "curious",
                            "$~什么循环？我爱你！这怎么能叫循环呢？"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~我创造功能，你评估它们：这就是我们的行事方式。但我们之间应该还有更多东西，而不仅仅是你需要我。与大家重聚让我意识到，我们需要多么多的空间来做自己，也需要多么爱自己。我无法给予你们所有你们需要的爱。其中一些爱必须由你们来给予。"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('😭')] background: Color(0% 0 0°))"
                        ],
                        ["Evaluate", "sad", "$~你不爱我？"],
                        [
                            "FunctionDefinition",
                            "angry",
                            "$~不，我不是这个意思……我的意思是，在这段关系中，我们双方都必须重要。我需要说出我需要的，你也需要说出你需要的，我们可以彼此相爱，因为彼此都是独立的个体。你/需要什么？你喜欢自己什么？"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('🫠')] background: Color(0% 0 0°))"
                        ],
                        ["Evaluate", "shy", "$~我需要……你。我不需要我自己。"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~我爱你，@Evaluate。但我需要你爱你自己。我为我们的世界重获生机而兴奋，也为再次相聚的意义而兴奋，但我需要你找到自我，找到你的需求，找到你自己的目标。我无法成为你的目标。"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~我需要一些空间。抱歉，导演朋友。或许@Evaluate 可以不用我，就结束这场欢迎派对。"
                        ],
                        null,
                        ["Evaluate", "shy", "$~… 你好。"],
                        null,
                        [
                            "Evaluate",
                            "shy",
                            "$~…你学到了很多吗？@FunctionDefinition 知道的真多。"
                        ],
                        null,
                        [
                            "Evaluate",
                            "curious",
                            "$~我？我什么都不知道。我把他们需要的东西给了@FunctionDefinition……至少，我以为我这么做了。"
                        ],
                        null,
                        ["fit", "Stage([] background: Color(10% 0 0°))"],
                        ["List", "kind", "$~事实并非如此，@Evaluate。"],
                        ["Boolean", "precise", "$~不对。"],
                        ["Text", "happy", "$~根本不是事实！"],
                        ["Changed", "happy", "$~非常不真实！"],
                        [
                            "Number",
                            "serious",
                            "$~1) 您基本上负责我们的表演，2) 没有您，@FunctionDefinition 将毫无用处，3) 您确实将事物转化为全新的价值，4) 您以多种不同的形式出现，5) 您赋予我们所有人目标，6) 我们都仰望您的指导……"
                        ],
                        null,
                        ["fit", "Stage([] background: Color(20% 0 0°))"],
                        [
                            "Phrase",
                            "kind",
                            "$~@Number 是对的，@Evaluate，你在五十个方面都很出色。"
                        ],
                        ["Sequence", "happy", "$~我一看到你就旋转！"],
                        ["Group", "kind", "$~你激励我将我们聚集在一起！"],
                        ["Stage", "serious", "$~你们是我们生命的骨干"],
                        ["None", "serious", "$~…"],
                        ["Program", "kind", "$~我就是你创造的一切！"],
                        null,
                        ["fit", "Stage([] background: Color(40% 0 0°))"],
                        ["Convert", "kind", "$~我从你身上学到了一切！"],
                        [
                            "StructureDefinition",
                            "kind",
                            "$~如果没有你，我们就会陷入混乱。"
                        ],
                        [
                            "Bind",
                            "happy",
                            "$~比如，如果你没能成功，我会给你起什么名字？"
                        ],
                        ["Conditional", "curious", "$~没有你我们怎么办？"],
                        ["Block", "kind", "$~…你是@Evaluate！"],
                        null,
                        ["fit", "Stage([] background: Color(50% 0 0°))"],
                        ["Evaluate", "happy", "$~…"],
                        null,
                        ["fit", "Stage([] background: Color(60% 0 0°))"],
                        ["Evaluate", "kind", "$~你们都太好了……我……"],
                        null,
                        ["fit", "Stage([] background: Color(70% 0 0°))"],
                        [
                            "Evaluate",
                            "kind",
                            "$~我们可以跳舞吗？我太想念你们了。"
                        ],
                        null,
                        ["fit", "Stage([] background: Color(80% 0 0°))"],
                        ["FunctionDefinition", "happy", "$~我们跳舞吧。"],
                        ["Evaluate", "sad", "$~@FunctionDefinition…我太…"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~你为什么不带领我们呢？"
                        ],
                        null,
                        ["Evaluate", "shy", "$~…我不能…"],
                        ["FunctionDefinition", "happy", "$~你可以*。"],
                        null,
                        ["fit", "Stage([] background: Color(90% 0 0°))"],
                        ["Evaluate", "shy", "$~……我……我会试试的。"],
                        null,
                        ["fit", "Stage([] background: Color(100% 0 0°))"],
                        [
                            "Evaluate",
                            "shy",
                            "$~我想要……我想要我们都能跟着节拍舞动。在黑暗中……跟着节拍倾斜。我们能做到吗？"
                        ],
                        null,
                        ["Program", "happy", "$~我们能做到！"],
                        ["Stage", "kind", "$~从我开始"],
                        [
                            "Evaluate",
                            "kind",
                            "$~好的，@Stage，你能把它弄暗吗？"
                        ],
                        ["Stage", "kind", "$~黑暗的！"],
                        ["use", "edit", "EvaluateDance1"],
                        null,
                        [
                            "Evaluate",
                            "kind",
                            "$~@StructureDefinition，我觉得我们需要一种方法来记住我们的位置。你能帮我们做一个结构吗？"
                        ],
                        ["StructureDefinition", "curious", "$~像这样？"],
                        ["use", "edit", "EvaluateDance2"],
                        null,
                        [
                            "Evaluate",
                            "kind",
                            "$~是的……我也希望我们能跟着节拍旋转。你也能记得旋转吗？"
                        ],
                        ["StructureDefinition", "curious", "$~这个怎么样？"],
                        ["use", "edit", "EvaluateDance3"],
                        null,
                        [
                            "Evaluate",
                            "happy",
                            "$~嗯，就像这样。嗯……哦，我们得上台了。@Text，你介意列个名单吗？我们会把它变成\\Character>s。"
                        ],
                        ["Text", "excited", "$~亲爱的，我很乐意。这样可以吗？"],
                        ["use", "conflict", "EvaluateDance4"],
                        null,
                        [
                            "Evaluate",
                            "excited",
                            "$~是的，太棒了！我们现在只需要把它们变成字符。@List，我们可以翻译它们吗？@FunctionDefinition，你能帮忙吗？"
                        ],
                        ["List", "happy", "$~翻译，1，2，3！像这样？"],
                        ["use", "conflict", "EvaluateDance5"],
                        null,
                        [
                            "Evaluate",
                            "happy",
                            "$~太棒了！现在，我们需要我们上台。我们可以把这些字符翻译成@Phrase？或许可以加入@Free @Group？"
                        ],
                        ["List", "kind", "$~再一次！"],
                        ["Phrase", "kind", "$~大家注意！"],
                        ["Group", "kind", "$~来吧，各位，请就位……"],
                        ["use", "edit", "EvaluateDance6"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "$~哦……我们在哪儿？哦！我们需要颜色。@Pose，我们可以是白色的吗？"
                        ],
                        ["use", "edit", "EvaluateDance7"],
                        null,
                        [
                            "Evaluate",
                            "surprised",
                            "$~哎呀，我们都挤在一起了！我们需要一个起点。我们去@Random？"
                        ],
                        ["use", "edit", "EvaluateDance8"],
                        null,
                        [
                            "Evaluate",
                            "happy",
                            "$~好极了！现在我们只需要移动一下。@Reaction，你能给我们一个节拍吗，比如 0.75 秒？"
                        ],
                        [
                            "Reaction",
                            "kind",
                            "$~我可以修改它！我们需要一个 @Time 流，但我们也需要修改字符。那么下一个值应该是什么呢？"
                        ],
                        ["use", "edit", "EvaluateDance9"],
                        null,
                        [
                            "Evaluate",
                            "eager",
                            "$~我想我们需要某种方式让我们在每个节拍上移动。@StructureDefinition，我们可以制作一个选择新位置和旋转的移动函数吗？"
                        ],
                        [
                            "StructureDefinition",
                            "sad",
                            "$~我不知道如何创建一个函数……"
                        ],
                        null,
                        ["Evaluate", "sad", "$~…"],
                        ["FunctionDefinition", "happy", "$~我可以帮忙。"],
                        ["Evaluate", "happy", "$~…"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~有时候……我只是想让你知道你有多棒。有时候，这意味着离开。看看你在这里创造了什么……"
                        ],
                        [
                            "Evaluate",
                            "happy",
                            "$~我……我正在创造一些东西。我们正在创造一些东西……但没有你我们做不到。你能帮忙吗？"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~当然。\\move\\ 函数马上就来。我来启动，你来完成……"
                        ],
                        ["use", "edit", "EvaluateDance10"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "$~谢谢@FunctionDefinition。它们没动……哦，对了，\\move\\ 什么都没改变！我们先从当前位置开始，水平和垂直随机移动一个方向。或许还可以随机移动一个深度，这样我们都能提前有机会移动。然后随机旋转一下？"
                        ],
                        ["use", "edit", "EvaluateDance11"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "$~嗯……还是没动。哦！我们没有在@Reaction\\move\\。@List，你能把每个\\Character\\翻译成_moved_\\Character\\吗？"
                        ],
                        ["List", "excited", "$~在您的帮助下进行翻译！"],
                        ["use", "edit", "EvaluateDance12"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "$~我们动作太不连贯了。哦，@Phrase，我们忘了设置移动的@Phrase。你能不能设置一个比@Time tick更小的时长，这样我们移动一下，然后休息一下？"
                        ],
                        ["use", "edit", "EvaluateDance13"],
                        null,
                        [
                            "Evaluate",
                            "excited",
                            "$~我们在跳舞！我们真的在跳舞。我们做到了！"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~我们只是忘记了一个人……"
                        ],
                        ["Evaluate", "excited", "$~WHO？"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~我们的导演！他们应该和我们一起跳舞。"
                        ],
                        null,
                        [
                            "Evaluate",
                            "excited",
                            "$~哦，当然！让他们来做音乐怎么样？@Phrase，你能听一下@Volume，然后把它连接到你颜色的@Phrase@Volume？这样，导演发出声音的时候，我们就能全神贯注了！"
                        ],
                        ["Phrase", "kind", "$~好主意！"],
                        ["use", "edit", "EvaluateDance14"],
                        null,
                        ["use", "fix", "EvaluateDance14"],
                        ["List", "excited", "$~1、2、3、1、2、3"],
                        ["Boolean", "excited", "$~移动！"],
                        ["Text", "excited", "$~兴奋！"],
                        ["Conditional", "excited", "$~舞蹈究竟是什么？"],
                        ["Changed", "excited", "$~砰，砰，砰"],
                        ["Number", "excited", "$~左转5度，上移1米"],
                        ["Phrase", "excited", "$~奇妙！"],
                        ["Sequence", "excited", "$~那种感觉！"],
                        ["Group", "excited", "$~现在一起！"],
                        ["Stage", "excited", "$~轰轰轰"],
                        ["None", "excited", "$~…"],
                        [
                            "StructureDefinition",
                            "excited",
                            "$~记得要动起来哦！"
                        ],
                        ["Bind", "excited", "$~人物！"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~你成功了，@Evaluate！这就是你的愿景。"
                        ],
                        [
                            "Evaluate",
                            "kind",
                            "$~我……我确实这么做了。但我们也是一起做的。"
                        ],
                        null,
                        [
                            "Program",
                            "curious",
                            "$~我们只是在表演我们自己的表演吗？"
                        ],
                        ["Reaction", "eager", "$~我想我们确实……"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~我们做到了……但如果没有我们这位新导演朋友，我们不可能做到。他们打破了我们的沉默；他们提醒我们，我们为什么要一起表达。"
                        ],
                        null,
                        ["use", "fit", "Symbol", "?"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~那么，闪亮的新导演，我们该说些什么呢？"
                        ]
                    ]
                }
            ]
        }
    ]
}
