{
    "$schema": "../../schemas/Tutorial.json",
    "language": "fr",
    "region": "FR",
    "acts": [
        {
            "title": "$~Le verset",
            "performance": ["use", "fit", "DarkVoid"],
            "scenes": [
                {
                    "title": "$~Silence",
                    "subtitle": null,
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        ["FunctionDefinition", "bored", "$~… Oh, salut."],
                        null,
                        ["FunctionDefinition", "neutral", "$~Je vous connais?"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Oh, c'est la première fois que tu viens ici ?",
                            "$~Enchanté de vous rencontrer. Je m'appelle @FunctionDefinition.",
                            "$~…"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Avez-vous besoin d'aide ? Oh, vous êtes en visite. Bienvenue dans le *Verse*. …"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "bored",
                            "$~Quel est cet endroit ?",
                            "$~Ouais, c'est quoi cet endroit...",
                            "$~C'était autrefois un lieu de danse, d'histoires, de jeux et de divertissements...",
                            "$~On y donnait les plus beaux spectacles. Parfois pour des visiteurs comme vous, parfois juste pour le plaisir. C'était un endroit plein de vie et de surprises..."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Arrêt?",
                            "$~Nous ne voulions pas nous arrêter, nous avons simplement perdu notre inspiration.",
                            "$~Je peux signifier tant de choses, par exemple. Je suis parfois le symbole du florin néerlandais, une ancienne monnaie des Pays-Bas. J'étais autrefois connu et utilisé dans le monde entier pour les aider à faire du commerce. Il y a longtemps, j'étais aussi le /f/ minuscule de l'alphabet latin.",
                            "$~Aujourd’hui, cependant, je suis assez obscur."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "bored",
                            "$~Mais tout cela a du sens ?",
                            "$~Elle nous est donnée. Nous ne sommes rien sans les gens qui se souviennent de cette histoire et de cette culture. Et nous ne pouvons rien signifier de nouveau s'il n'y a pas de gens qui nous donnent une histoire et une culture nouvelles.",
                            "$~Les gens ont toujours été ceux qui nous ont organisés, qui nous ont donné un but, qui nous ont donné quelque chose à représenter. Le Verset n'est rien sans *les gens*.",
                            "$~Et je n'ai vu personne depuis des lustres."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('☁️')] background: Color(25% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Attends... es-tu une personne ?"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('🌙')] background: Color(50% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~Comme une vraie personne, avec des pensées, des idées et des valeurs à partager ? Pas un de ces robots qui répètent sans réfléchir ce que les gens disent ? Si vous êtes une personne, alors peut-être pourriez-vous nous donner un sens ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "scared",
                            "$~Je sais que c'est beaucoup demander. Je ne te connais même pas. Et il faudrait vraiment que j'en parle aux autres..."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('☀️')] background: Color(75% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~Ah oui, il y en a beaucoup d'autres. Certains sont comme moi : nous participons à la chorégraphie des spectacles, nous mettons tout le monde à sa place et nous nous assurons que nous exprimons la vision de notre metteur en scène, exactement comme il l'a voulu. Et certains d'entre eux sont ceux qui sont sur scène, devant le public, qui dansent et parlent. Nous avons tous un rôle à jouer !"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Ah oui, le metteur en scène, je ne l'ai même pas expliqué. Donc le *metteur en scène*, c'est la personne qui nous donne du sens. C'est la personne qui organise la chorégraphie, qui définit le message, qui nous met tous en ordre. C'est l'inspiration dont je parlais. Nous pouvons faire beaucoup de choses dans ce monde, mais nous ne pouvons pas nous diriger nous-mêmes. C'est pourquoi le metteur en scène est si important. Donc quand je vous ai demandé plus tôt si vous pouviez nous donner du sens, c'est ce que je voulais dire. Pourriez-vous être notre metteur en scène ?"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('☀️')] background: Color(100% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Vraiment ? C'est merveilleux ! Cela va être très amusant. Je veux dire, ce ne sera pas facile. Nous avons beaucoup à apprendre."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('☀️')] background: 🌈(80% 99 270°))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Mais je vous promets que ce ne sera pas ennuyeux. Je pense que nous sommes un groupe plutôt sympa. Et nous avons besoin que tout le monde dans le Verse se rassemble pour faire ça. Je pense que c'est ce qui rend cet endroit si spécial, en fait : nous sommes plus de cent mille ici, chacun différent, et pourtant, d'une manière ou d'une autre, lorsque nous parvenons à trouver une vision commune, nous pouvons sembler ne faire qu'un."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('☀️' resting:Sequence(spin() 4s 'straight'))] background: 🌈(80% 99 270°))"
                        ],
                        [
                            "FunctionDefinition",
                            "bored",
                            "$~Réalisation ? Ah oui, réalisation ! Ouais, parlons-en. Allons rencontrer d'autres personnes et parlons-en. Ils vont être tellement excités !"
                        ]
                    ]
                },
                {
                    "title": "$~Souhaitez-vous un programme ?",
                    "subtitle": "$~Programme",
                    "concept": "Program",
                    "performance": ["use", "fit", "Symbol", "📄"],
                    "lines": [
                        ["fit", "Phrase('📄' resting:Pose(rotation: 10°))"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Hé, @Program ! J'ai trouvé une personne. Bon, je suppose qu'elle nous a trouvés. Elle veut être notre nouveau directeur !"
                        ],
                        [
                            "Program",
                            "curious",
                            "$~Vraiment ? Es-tu sûr d'être vraiment une personne ? Dis quelque chose qu'une personne dirait."
                        ],
                        null,
                        ["fit", "Phrase('📄' entering: Sequence(spin() 1s))"],
                        [
                            "Program",
                            "serious",
                            "$~Hm… tu es vraiment une personne. Et tu veux réaliser ?"
                        ],
                        null,
                        ["fit", "Phrase('📄' resting: Pose(rotation: 010°))"],
                        [
                            "Program",
                            "excited",
                            "$~Je vois. @FunctionDefinition t'a-t-il dit quelque chose sur nous ? Beaucoup de gens essaient de nous orienter, mais certaines personnes sont confuses, s'ennuient ou même s'irritent à notre égard. Nous sommes assez bornés parfois. Mais je suis fier de ce que nous faisons, donc je ne veux pas travailler avec n'importe qui."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Je leur ai dit un peu. J'ai dit que nous étions bizarres, et que parfois les réalisateurs partaient à cause de ça. Mais ils étaient partants. Pas vrai, toi tu es partant ?"
                        ],
                        [
                            "Program",
                            "serious",
                            "$~Ok. Eh bien, ravi de vous rencontrer. Désolé, beaucoup de gens sont venus ici et ont dit « /ce n'est pas pour moi/ », et je suis devenu un peu sceptique envers les gens qui essaient un peu et abandonnent ensuite. Je ne devrais pas avoir à changer qui je suis pour correspondre aux attentes des gens. Mais si vous êtes prêt à en apprendre davantage sur moi et sur nous, essayons !"
                        ],
                        null,
                        ["edit", ""],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Voulez-vous dire ce que vous faites ?"
                        ],
                        [
                            "Program",
                            "neutral",
                            "$~Bien sûr, je suis en fait l'organisateur du programme d'une représentation.",
                            "$~Vous pouvez me voir là-bas avec un *éditeur* @UI/editor qui me montre la *scène* @UI/stage qui montre ce que j'évalue (rien actuellement). Le *réalisateur* — c'est-à-dire vous — aide tout le monde à comprendre ce qu'il fait, en écrivant un programme pour ce qui se passera dans le spectacle. Et puis j'évalue le programme et je mets le résultat sur scène pour que le public le voie."
                        ],
                        null,
                        [
                            "Program",
                            "neutral",
                            "$~Par exemple, essayez de taper « bonjour » dans l’éditeur là-bas.",
                            "$~(Ne vous inquiétez pas de faire des erreurs, vous pouvez toujours revenir à l'original avec *revert* @UI/revertProject).",
                            "$~Tu as tapé quelque chose ? C'est mon ami @Text. Tu les as déjà rencontrés ? Ils évaluent en \\'hello'\\ ou tout autre texte que tu tapes, puis ce texte est placé sur scène. Essaie de changer ton texte en quelque chose d'autre. Je vais plutôt te montrer ça. J'évaluerai donc immédiatement ce que tu tapes et montrerai le résultat."
                        ],
                        null,
                        [
                            "Program",
                            "serious",
                            "$~Les instructions peuvent être aussi sophistiquées que vous le souhaitez, mais il existe quelques règles.",
                            "$~Par exemple, je ne peux évaluer qu'une seule *valeur* et afficher cette valeur sur scène. Cette valeur peut être aussi complexe que vous le souhaitez, et tant que je sais comment la montrer, je le ferai.",
                            "$~Mais si tu me donnes deux choses, je ne te montrerai que la dernière chose que tu me donneras.",
                            "$~Par exemple, essayez d'ajouter une autre ligne, puis de taper le mot que vous voulez, entre guillemets."
                        ],
                        null,
                        [
                            "Program",
                            "serious",
                            "$~Tu vois ? Je viens de montrer ta deuxième phrase, pas la première. Tu sais que tu as enfreint ma règle parce que j'ai souligné ta première phrase et nous t'avons dit que nous l'ignorerions."
                        ],
                        null,
                        ["use", "fit", "Symbol", "🎭"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Mais vous pouvez faire bien plus !"
                        ],
                        [
                            "Program",
                            "serious",
                            "$~Oui et non. Je peux faire beaucoup de choses, mais c'est seulement parce que je travaille avec tous les autres dans le *Verse*. Ce sont eux qui amènent toutes les possibilités passionnantes sur la *scène*. Tout ce que je fais vraiment, c'est les laisser faire leur truc, puis prendre la dernière chose qu'ils ont créée et la montrer sur scène. Je suis plutôt comme une escorte qui amène la *valeur* finale sur scène, comme des nombres, des textes, des phrases ou d'autres valeurs."
                        ],
                        null,
                        [
                            "Program",
                            "serious",
                            "$~En fait, si vous souhaitez voir le programme de quelque chose sur scène, vous pouvez appuyer sur le bouton 👁️ sur scène @UI/editProject. Cela vous montrera comment tout le monde se rassemble pour créer ce qui se passe sur scène. Ce programme n'est qu'une simple phrase."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Merci @Program ! Nous sommes ravis de rencontrer tout le monde et de diffuser l'information !"
                        ],
                        [
                            "Program",
                            "happy",
                            "$~C'était super de te rencontrer, nouveau directeur ! Bonne chance à tous les autres. Je serai toujours là."
                        ]
                    ]
                },
                {
                    "title": "$~Espace de maintien",
                    "subtitle": "$~Espace réservé",
                    "concept": "ExpressionPlaceholder",
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Vous allez vraiment aimer @ExpressionPlaceholder. Ils sont incroyablement gentils et très flexibles. Mais ils sont un peu timides. Soyez juste doux avec eux."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "confused",
                            "$~Bonjour, @ExpressionPlaceholder ?",
                            "$~Hm, d'habitude ils sont partout. Maintenant ils semblent n'être nulle part..."
                        ],
                        [
                            "ExpressionPlaceholder",
                            "scared",
                            "$~@FunctionDefinition … c'est toi ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Ouais. Ça fait tellement longtemps. Comment vas-tu ?"
                        ],
                        ["ExpressionPlaceholder", "scared", "$~Solitaire."],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Je connais ce sentiment. Je l'ai ressenti aussi. Nous n'avons pas eu beaucoup de raisons de nous voir, n'est-ce pas ?"
                        ],
                        [
                            "ExpressionPlaceholder",
                            "scared",
                            "$~Non, tu m'as manqué. Tout le monde m'a manqué..."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Je sais. Moi aussi. Je suis vraiment désolée.",
                            "$~C'est justement pour cela que je suis ici. Je voulais vous présenter notre nouveau directeur en formation."
                        ],
                        ["ExpressionPlaceholder", "scared", "$~Salut."],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Ils viennent de rencontrer @Program, donc ils sont vraiment au début, mais je pensais qu'il serait peut-être préférable qu'ils vous rencontrent ensuite, puisque vous êtes un merveilleux représentant de beaucoup d'entre nous ici."
                        ],
                        ["ExpressionPlaceholder", "curious", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Voulez-vous dire ce que vous faites ?"
                        ],
                        ["ExpressionPlaceholder", "scared", "$~Peux-tu?"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Bien sûr ! Mon ami @ExpressionPlaceholder est un espace réservé. Ils représentent n'importe quel type d'expression dans un programme. Ils n'évaluent aucune valeur en particulier. En fait, s'ils apparaissent dans @Program, @Program arrêtera simplement les performances, car on ne sait pas vraiment quoi faire ensuite."
                        ],
                        null,
                        ["conflict", "_"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Mais ils sont puissants parce qu'ils peuvent représenter n'importe qui d'autre, comme un remplaçant jusqu'à ce que vous décidiez de ce que vous voulez qu'une partie de votre performance soit. @ExpressionPlaceholder, voulez-vous prendre une place dans ce @Program juste pour illustrer ? Vous voyez comment il y a un petit espace réservé dans @Program @UI/ExpressionPlaceholder ? C'est un signal de ce que vous pourriez y mettre."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Program ne savait pas quoi faire avec @ExpressionPlaceholder, il a donc affiché une *exception* @UI/exception sur *stage* et un *conflit* dans @Program @UI/conflict.",
                            "$~Mais si vous cliquez sur @ExpressionPlaceholder ou si vous déplacez le curseur de texte dessus, vous verrez un monde de possibilités d'autres caractères. Vous pouvez également simplement taper sur @ExpressionPlaceholder et écrire le vôtre. Par exemple, essayez de taper votre nom entre guillemets."
                        ],
                        null,
                        ["use", "fit", "Symbol", "-"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Comme ça, @ExpressionPlaceholder a été remplacé par d'autres caractères. Ai-je tout compris, @ExpressionPlaceholder ?"
                        ],
                        [
                            "ExpressionPlaceholder",
                            "eager",
                            "$~Ouais, je pense que oui."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Qu'en penses-tu ? On passe à autre chose ?"
                        ],
                        [
                            "ExpressionPlaceholder",
                            "excited",
                            "$~C'était agréable de vous rencontrer !"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "cheerful",
                            "$~Ils n'aiment pas rester sur scène ou même dans un programme pendant très longtemps. Ils ne l'admettront jamais, mais ils sont très importants et la plupart des réalisateurs ne peuvent pas travailler sans eux. Considérez-les comme un petit machiniste serviable qui vous rappelle des choses que vous n'avez pas encore comprises."
                        ]
                    ]
                },
                {
                    "title": "$~Tu dis encore ?",
                    "subtitle": "$~Inanalysable",
                    "concept": "UnparsableExpression",
                    "performance": ["use", "fit", "Symbol", "ahkeolfewvk"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~@UnparsableExpression ? C'est toi ?"
                        ],
                        [
                            "UnparsableExpression",
                            "neutral",
                            "$~/dwjkdlserkuvisdke!/"
                        ],
                        null,
                        ["use", "fit", "Symbol", "c iise we dvk"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~C'est bon de te revoir aussi ! Cela fait si longtemps. Qu'as-tu fait pendant tout ce silence ?"
                        ],
                        [
                            "UnparsableExpression",
                            "sad",
                            "$~/sd fdsdfdsf ksdf. Dkfjdfdskfd df sdf sd fsdk;l! Adks zxcviw werdsf wer ado. Nous dsdfd ksld df.ds dfsdfds DIDIIDI./"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(On dirait qu'ils ont passé beaucoup de temps sur la plage. Ils se sont fait de nouveaux amis et se sont entraînés à ne rien faire.)"
                        ],
                        null,
                        ["use", "fit", "Symbol", "ivioas we wjjdks"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Je voulais vous présenter notre nouveau directeur potentiel. Ils viennent d'arriver et apprennent les bases. Je viens de leur présenter @Program et @ExpressionPlaceholder."
                        ],
                        [
                            "UnparsableExpression",
                            "excited",
                            "$~/EEIRC DFUIDIII CAD EWDF FSDE!!!/"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~(Ils viennent de dire à quel point c'était génial de te rencontrer et qu'ils pensaient que tu serais un excellent réalisateur.)"
                        ],
                        null,
                        ["use", "fit", "Symbol", "v s d we iweiwei"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Je me demandais si tu voulais m'expliquer ce que tu faisais ? Je peux traduire."
                        ],
                        [
                            "UnparsableExpression",
                            "eager",
                            "$~/ADDKL, ALLIIEE, ALLFOOO, AOOOOOOO, JOOKKDLS, LOOKIL, WEEEERTOL weeertol…/"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(Je représente tout ce qui ne veut rien dire. Et je ne veux rien dire.)"
                        ],
                        null,
                        ["edit", ""],
                        [
                            "UnparsableExpression",
                            "eager",
                            "$~/CNNNDN KDKLSL oOOLLlllll PPOLSLSO liiiiiiis, sdllslll, xck nous ifolls a./"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(Par exemple, essayez de taper \\][\\. Vous voyez comme nous sommes complètement confus ? Cela ne veut rien dire, et je suis là pour le dire.)"
                        ],
                        null,
                        ["conflict", "]["],
                        [
                            "UnparsableExpression",
                            "eager",
                            "$~/ICO Odksjdf lksls kjsfiou fskd we rl,vxids eekd sd dsmf kksdcv./"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(Quand j'arrive, ça veut dire qu'on ne sait pas ce que tu veux dire.)"
                        ],
                        null,
                        ["conflict", "]["],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Merci, @UnparsableExpression !",
                            "$~Comme on dit, quand vous dites quelque chose que nous ne comprenons pas, unparsable est là pour dire « Nous ne comprenons pas ». Quand cela arrive, j'aimerais que nous puissions être plus utiles, mais nous sommes souvent assez bornés, donc nous ne sommes pas très doués pour deviner ce que vous voulez dire."
                        ],
                        null,
                        [
                            "UnparsableExpression",
                            "eager",
                            "$~/OSOOSOO SOIEIIEIEIIE ISIISI EIEIIEE!/"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Alors, @UnparsableExpression veut que vous essayiez d'en créer autant que possible. (Vous pouvez simplement écraser un tas de caractères aléatoires et probablement en obtenir beaucoup)."
                        ],
                        ["edit", ""],
                        null,
                        [
                            "UnparsableExpression",
                            "happy",
                            "$~/PPOOOEPOEP EPWPEPEPPEPP PP PE P!/"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Ils ont vraiment apprécié, merci ! C'est assez difficile d'écrire quelque chose qui ne nous donne aucun sens. Mais cela ne veut pas dire que tout ce que vous écrivez a un sens. Je suis presque sûr que vous avez simplement tapé un tas de mots au hasard, par exemple. Mais qu'est-ce que cela signifie ?"
                        ],
                        ["UnparsableExpression", "confused", "$~… /DDook/"],
                        null,
                        ["UnparsableExpression", "happy", "$~/? ??? ????? ?!/"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Ils se demandent si vous avez déjà des idées de performances à proposer."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Non ? Ce n'est pas grave. Nous n'avons fait que commencer à vous montrer ce qui est possible. Allons rencontrer @Evaluate. Au revoir, @UnparsableExpression, c'était bon de te voir ! Jouons bientôt."
                        ],
                        [
                            "UnparsableExpression",
                            "happy",
                            "$~/Ood sd fosd oiewi dk c HNLLLooooooO!/"
                        ]
                    ]
                },
                {
                    "title": "$~L'amour est dans l'erreur",
                    "subtitle": "$~Évaluer",
                    "concept": "Evaluate",
                    "performance": [
                        "fit",
                        "Stage([Phrase('💔')] background: 🌈(90% 100 0°))"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Je suis tellement excitée que tu rencontres @Evaluate. Ils sont vraiment mes meilleurs amis. Nous faisons en quelque sorte tout ensemble, d'une certaine manière. Je fais les règles, ils les appliquent ; nous sommes comme du beurre de cacahuète et de la confiture. Mais ils sont tellement plus… puissants que moi. @Evaluate ?"
                        ],
                        ["Evaluate", "shy", "$~@FunctionDefinition?"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Ouais, c'est moi. Où es-tu ?"
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~Nulle part. Je ne suis nulle part. Je ne suis rien. Où étais-tu ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Moi aussi, je n'ai été nulle part. Tu m'as manqué. Je n'ai pas réussi à te trouver."
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~C'était tellement vide. J'ai essayé de faire des choses, mais je me sentais tellement... sans but."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Je suis vraiment désolée. Je connais ce sentiment de vide. Parfois, ça fait tellement mal de ne pas avoir de but. J'ai essayé si fort de trouver un but, mais je me sentais si... détachée."
                        ],
                        [
                            "Evaluate",
                            "sad",
                            "$~Ne me laisse plus jamais comme ça. Je ne peux plus recommencer."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('❤️')] background: 🌈(90% 100 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Jamais. Je ne le ferai pas. Je ne peux pas. Je t'aime."
                        ],
                        ["Evaluate", "serious", "$~Je t'aime…"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~@Evaluate, je souhaite vous présenter notre nouveau directeur en formation."
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~Bonjour, ravi de vous rencontrer. Bienvenue sur le site du Verset. Nous sommes ravis de vous compter parmi nous."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~Nous avons rencontré quelques personnes : @Program, @ExpressionPlaceholder, @UnparsableExpression. Nous venons juste de commencer. J'ai pensé que nous viendrions vous voir ensuite, simplement parce que vous êtes une partie incroyable de notre communauté. La partie la plus incroyable."
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~C'est très gentil. Je suis reconnaissant de faire partie de cette communauté. Et reconnaissant d'être si proche de @FunctionDefinition. Nous faisons beaucoup de belles choses ensemble. Mais comme @FunctionDefinition vous l'a probablement dit, nous ne pouvons pas les faire sans inspiration."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('ƒ ❤️ ()')] background: 🌈(90% 100 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Voulez-vous dire ce que vous faites ?"
                        ],
                        [
                            "Evaluate",
                            "serious",
                            "$~Oui. Mais je ne peux pas l'expliquer sans expliquer un peu @FunctionDefinition aussi. Ils sont trop modestes pour partager cela, mais ils sont probablement le personnage le plus important du Verse. Ils sont certainement la personne la plus importante dans mon monde. Ils sont au cœur de chaque performance et font partie du rôle de chaque autre personnage. Ils représentent l'idée la plus fondamentale de notre monde : la *fonction*."
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$~Les fonctions sont une sorte d'alchimie. Elles prennent n'importe quel nombre d'entrées et les utilisent pour produire une sortie. Elles peuvent avoir un nom ou ne pas en avoir. Elles peuvent avoir zéro entrée, cinq ou un nombre inconnu. Et l'alchimie : elles sont comme @Program et peuvent avoir n'importe quel nombre d'expressions pour produire une valeur."
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$~Voilà pourquoi c'est si puissant : il s'avère que tout dans @Program est une composition d'évaluations de fonctions. Toutes les danses, tous les jeux, toutes les histoires merveilleuses que nous racontons ensemble — ils sont tous une tapisserie de fonctions évaluées, une à la fois, pour composer les valeurs que vous voyez sur scène.",
                            "$~Et @FunctionDefinition, ici, ma douce et chère @FunctionDefinition, est celle qui les définit toutes."
                        ],
                        null,
                        ["FunctionDefinition", "happy", "$~… @Evaluate…"],
                        [
                            "Evaluate",
                            "serious",
                            "$~Oui, @FunctionDefinition, c'est qui tu es. Et je suis la chanceuse qui a la possibilité de faire cette évaluation. Je prends les entrées que les autres me donnent, je suis les instructions que @FunctionDefinition définit et je crée la sortie que @FunctionDefinition me dit de créer. @FunctionDefinition donne la recette et je prépare le repas. Et puis nous nous régalons ensemble.",
                            "$~Tu veux voir ?"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~… Oui, montrons-leur."
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$~Chaque évaluation ressemble à ceci @UI/Evaluate : une fonction, suivie d'une parenthèse gauche et droite, avec un nombre quelconque d'entrées entre elles. Ici, j'ai juste @ExpressionPlaceholder comme fonction et trois autres comme entrées d'espace réservé."
                        ],
                        ["conflict", "_(_ _ _)"],
                        null,
                        ["edit", "Phrase('hello')"],
                        [
                            "Evaluate",
                            "serious",
                            "$~Voici l'une de mes fonctions préférées : @Phrase. Elles sont remplies de boutons, de molettes et de curseurs amusants. C'est une façon d'afficher du texte sur scène mais avec style, notamment en utilisant différentes polices, tailles, couleurs et animations.",
                            "$~Voici une évaluation simple de @Phrase @UI/Evaluate."
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$~Voilà à quoi je ressemble dans @Program : une fonction, suivie de parenthèses, avec une liste d'expressions entre elles qui représentent les entrées. La fonction dans ce cas est @Phrase, et l'entrée unique est \\'hello'\\. Lorsque j'évalue cela, je crée une valeur @Phrase, que @Program affiche ensuite sur scène."
                        ],
                        null,
                        [
                            "Evaluate",
                            "neutral",
                            "$~Laissez-moi vous montrer l'un des boutons. Pouvez-vous trouver le petit bouton bascule *palette* @UI/paletteExpand ? Sélectionnez-le pour développer la palette, puis sélectionnez la phrase sur scène.",
                            "$~Une fois que vous l'aurez fait, vous verrez les nombreuses entrées acceptées par @Phrase. Par exemple, essayez d'appuyer sur le bouton crayon pour @Phrase/size, ce qui fera apparaître un curseur.",
                            "$~Vous pouvez utiliser ce curseur pour modifier la taille de la phrase, ce qui modifiera également le code @Evaluate avec la taille que vous choisissez."
                        ],
                        null,
                        [
                            "Evaluate",
                            "serious",
                            "$~Vous voyez comment, lorsque vous faites cela, j'ai maintenant une nouvelle entrée dans le programme ? C'est l'entrée @Phrase/size. Les fonctions ont un certain ordre d'entrées, mais si une fonction a une liste d'entrées facultatives, vous pouvez utiliser leur nom pour spécifier celle que vous souhaitez donner. Nous donnons ici @Phrase/size, mais aucune des autres entrées facultatives. Essayez de modifier une autre entrée avec la palette, comme peut-être la police de caractères."
                        ],
                        null,
                        ["conflict", "'hi'(1 2)"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~Ouais ! @Phrase est tellement amusant. C'est ma fonction préférée avec laquelle jouer. Nous les verrons beaucoup plus souvent. Voulez-vous dire quelque chose sur ce qui peut mal se passer ?"
                        ],
                        [
                            "Evaluate",
                            "serious",
                            "$~Oh, oui, c'est une bonne idée. Beaucoup de choses peuvent mal se passer. Par exemple, vous pourriez me donner quelque chose qui n'est pas une fonction. Voyez-vous comment on me donne le texte \\“hi”\\ ici comme une fonction et on me donne deux entrées, \\1\\ et \\2\\ ? Eh bien, je ne sais évaluer que les fonctions, et \\“hi”\\ n'est pas une fonction ; c'est du texte. C'est très déroutant pour moi, donc j'arrête essentiellement les performances si cela se produit."
                        ],
                        null,
                        ["conflict", "Phrase()"],
                        [
                            "Evaluate",
                            "eager",
                            "$~En voici un autre. @Phrase nécessite au moins du texte, donc si vous ne me donnez pas de texte, je ne pourrai pas évaluer @Phrase car il me manque les entrées requises."
                        ],
                        null,
                        ["conflict", "Phrase(1)"],
                        [
                            "Evaluate",
                            "excited",
                            "$~Ou si vous me donnez une entrée, mais que ce n'est pas celle que j'attends, cela poserait problème. Ici, @Phrase reçoit le nombre \\1\\ au lieu d'une valeur texte."
                        ],
                        null,
                        ["fit", "Stage([] background: 🌈(90% 100 0°))"],
                        [
                            "Evaluate",
                            "curious",
                            "$~Donc, fondamentalement, je suis confus à chaque fois que vous me donnez autre chose qu'une fonction, ou une entrée qui n'est pas quelque chose qu'une fonction attend. Les fonctions sont donc très importantes. @FunctionDefinition, voulez-vous en dire plus sur la façon de définir les fonctions ?"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Non, faisons ça plus tard. Je pense que ce serait beaucoup plus amusant de parler d'abord à tout le monde et de monter quelques mini-spectacles avec notre nouveau réalisateur. Nous pourrons parler davantage de moi quand cela sera utile."
                        ],
                        null,
                        [
                            "Evaluate",
                            "kind",
                            "$~Tu m'as vraiment manqué, @FunctionDefinition."
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Tu m'as manqué aussi. On peut parler plus tard ?"
                        ],
                        [
                            "Evaluate",
                            "kind",
                            "$~… Oui. Ne tarde pas. Je ne peux pas vivre sans toi. J'ai besoin de toi."
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~… Je sais, @Evaluate ; je serai bientôt de retour. En route pour rencontrer le reste de la troupe !"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~Ce sont les petites choses",
            "performance": ["use", "fit", "SimpleJiggle"],
            "scenes": [
                {
                    "title": "$~Valeurs",
                    "subtitle": null,
                    "performance": ["use", "fit", "Symbol", "💡"],
                    "lines": [
                        [
                            "fit",
                            "Phrase('💔' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 1.2) 100%: Pose(scale: 1)} duration: 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~@Evaluate m'a vraiment manqué. Je ne peux pas imaginer le Verse sans eux.",
                            "$~Mais ils peuvent être un peu… nécessiteux parfois. J’aimerais qu’ils… je ne sais pas, croient en eux-mêmes ? Ils peuvent faire tellement de choses, mais ils ne le voient pas. Je veux dire, ils transforment des *valeurs* en d’autres *valeurs* ! Tout ce que je fais, c’est fournir la recette. Ils font la cuisine. Parfois, j’ai l’impression que tout ce que je fais, c’est donner, et qu’ils ne font que prendre. C’est étouffant."
                        ],
                        null,
                        [
                            "fit",
                            "Group(Stack() [Phrase('1') Phrase('\"hello\"')])"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~… *Valeurs* ? Désolé, je sais que nous sommes censés faire cette grande tournée à travers le *Verse*. Je ne sais juste pas quoi faire à propos de @Evaluate. Alors… *valeurs*. Je ne les ai pas encore expliquées, n'est-ce pas ? Hm… comment expliquer… Vous savez ce que sont les « données » ? Comme les nombres et le texte ? Les valeurs sont n'importe lesquelles de ces choses. Une valeur peut être aussi petite qu'un nombre ou aussi grande qu'une scène entière sur scène, pleine de personnages dansant et en mouvement. Certaines valeurs sont constituées de nombreuses autres valeurs, comme de grandes structures élaborées de valeurs de données tissées ensemble."
                        ],
                        null,
                        ["fit", "Group(Stack() [Phrase('#') Phrase('\"\"')])"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Chaque valeur possède un *type*. Par exemple, \\1\\ est un type numérique ; c'est notre ami @Number. Et \\'hello'\\ est un type texte ; c'est notre ami @Text. Les types sont importants car ils nous aident à garder une trace du type de valeur que nous créons.",
                            "$~Cela nous aide à trouver des problèmes. Par exemple, cela n'a aucun sens d'ajouter \\'hello' + 1\\ car que signifierait l'ajout de @Text à @Number ?"
                        ],
                        null,
                        [
                            "fit",
                            "Group(Stack() [Phrase('ƒ → 1') Phrase('ƒ → \"hello\"')])"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Les *expressions* sont la manière dont nous créons des valeurs. Toutes les expressions sont des évaluations de fonctions que je crée. Le résultat de l'évaluation d'une expression est une valeur d'un certain type."
                        ],
                        null,
                        ["use", "fit", "Symbol", "🤔"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Résumé ? Hm, je suppose que tout cela est assez abstrait. Cela me semble tellement… normal ; j'oublie à quel point ces choses peuvent être étrangères aux nouveaux réalisateurs ! Peut-être que nous pourrions aller à la rencontre de quelques expressions qui font des valeurs, et cela rendrait le tout plus concret ? Commençons par une que vous avez déjà vue : @Text."
                        ]
                    ]
                },
                {
                    "title": "$~Citation, fin de citation",
                    "subtitle": "$~Texte",
                    "concept": "TextLiteral",
                    "performance": [
                        "fit",
                        "Phrase('\"\"' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 0.5 opacity: 0.5) 100%: Pose(scale: 1)} duration: 2s))"
                    ],
                    "lines": [
                        [
                            "fit",
                            "Phrase('\"\"' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 2 opacity: 0.5) 100%: Pose(scale: 1)} duration: 2s))"
                        ],
                        ["FunctionDefinition", "curious", "$~@Text?"],
                        [
                            "Text",
                            "happy",
                            "$~Bienvenue, cher ami, cela fait si longtemps. Qu'as-tu fait dans ce silence dramatique ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~Oh, @Text, ça fait un moment ! J'ai surtout rêvé et réfléchi. Je viens de voir @Evaluate après un long moment. En fait, je leur présentais notre nouveau directeur."
                        ],
                        [
                            "Text",
                            "eager",
                            "$~Oh, comme c'est exceptionnel de te rencontrer ! Je vois que tu es une personne créative, curieuse, probablement pleine d'idées intrigantes sur la façon dont nous pourrions nous divertir. J'adore divertir. Mais sais-tu ce que j'aime encore plus ? Les mots ! Des mots glorieux. Les mots courts, les mots bouleversants, les mots collants et les mots glissants. Les mots sont mes jouets préférés."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Au cas où vous ne l'auriez pas remarqué, @Text aime les mots :) @Text, veux-tu expliquer ce que tu fais ?"
                        ],
                        [
                            "Text",
                            "serious",
                            "$~Je fais une chose simple : représenter des séquences de symboles et les nombreuses choses que vous pouvez faire avec eux. Je pense que vous m'avez vu plus tôt lorsque vous avez écrit le mot \\“hello”\\. C'était moi et mes amis, \\“h”\\, \\“e”\\, \\“l”\\ et \\“o”\\. C'était @Text, une expression qui s'évalue à n'importe quel @Text que vous voulez."
                        ],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~Pourquoi n'essayez-vous pas de créer un texte dans ce @Program vide ?",
                            "$~Vous pouvez utiliser les guillemets que vous voulez — simples \\''\\, doubles \\\"\"\\, angles \\«»\\, crochets \\「」\\ — dans la langue de votre choix. La seule règle est que si vous commencez un texte avec un symbole de guillemet ouvrant, vous devez le terminer avec un symbole de guillemet fermant. Tout ce qui se trouve à l'intérieur est la valeur de texte que je vais créer !"
                        ],
                        ["edit", "''"],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~Il se peut que vous ne puissiez pas saisir tous les caractères souhaités avec l’appareil que vous utilisez pour communiquer avec nous.",
                            "$~Si vous ne le pouvez pas, vous pouvez rechercher des personnages dans le *répertoire* @UI/directory. Celui-ci contient tous les personnages du Verset.",
                            "$~Par exemple, si vous voulez une flèche, vous pouvez taper « flèche » et choisir parmi les nombreuses flèches. Malheureusement, elles n'ont que des noms anglais, donc la recherche ne fonctionne que si vous connaissez des mots anglais :/"
                        ],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~Excellent. Bien sûr, « à l'intérieur » peut être délicat. Imaginons que vous ayez écrit ceci. Vous voyez qu'il y a une citation d'ouverture mais pas de citation de clôture ? Eh bien, comment suis-je censé savoir quand le texte se termine ?"
                        ],
                        ["conflict", "'hello"],
                        null,
                        [
                            "Text",
                            "surprised",
                            "$~Ou bien, voici un autre cas. Vous me donnez un texte d'ouverture et de fermeture, mais vous placez un texte d'ouverture et de fermeture à l'intérieur. Vous voyez à quel point c'est bizarre ? Je suis très perplexe lorsque vous essayez d'utiliser les mêmes symboles à l'intérieur et à l'extérieur de moi. Vous pouvez résoudre ce problème en utilisant des symboles différents pour l'extérieur, comme une citation simple."
                        ],
                        ["conflict", "'Hi there 'friend'"],
                        null,
                        ["edit", "'friends!'/en-US"],
                        [
                            "Text",
                            "excited",
                            "$~Oh, et saviez-vous que vous pouvez me dire dans quelle langue je suis ? Il vous suffit de faire une petite barre oblique puis un code de langue spécial, ou si vous préférez, une langue et une région."
                        ],
                        null,
                        ["edit", "'amigas'/es'friends!'/en-US"],
                        [
                            "Text",
                            "excited",
                            "$~Vous pouvez même rédiger plusieurs traductions de moi dans différentes langues. J'évaluerai la correspondance la plus proche pour la langue actuelle, vous permettant ainsi de réaliser des performances multilingues.",
                            "$~Par défaut, si le curseur n'est pas dans le texte, vous ne verrez que le nom de la langue que vous avez choisie. Essayez de déplacer le curseur vers l'intérieur et l'extérieur du texte pour voir les différentes traductions s'afficher et se masquer.",
                            "$~Vous pouvez essayer d'ajouter une autre traduction. Ne mettez pas d'espace entre elles, sinon il y aura deux versions de moi !"
                        ],
                        null,
                        ["edit", "'I have 7 apples'"],
                        [
                            "Text",
                            "neutral",
                            "$~J'ai un autre secret... tu peux mettre des valeurs en moi. Je sais, c'est fou !",
                            "$~Si vous le faites, je serai heureux de le coudre et d'assembler votre belle prose en une seule valeur à afficher ou à toute autre fin que vous pourriez avoir."
                        ],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~Par exemple, @FunctionDefinition vous a-t-il montré comment un texte sait s'ajouter à un autre texte ? Comme ceci : cette petite expression convertit \\7\\ en texte, l'ajoute à \\'I have'\\, puis ajoute \\'apples'\\. Mais c'est tellement désordonné et cela rend difficile la lecture de ce qui se passe, et la conversion en texte semble tellement inutile."
                        ],
                        ["edit", "'I have' + (7→'') + 'apples'"],
                        null,
                        [
                            "Text",
                            "serious",
                            "$~Ce que je fais, c'est rendre ce genre de texte propre, organique, et même simple. Donc, pour moi, la même phrase serait quelque chose comme ça."
                        ],
                        [
                            "Text",
                            "happy",
                            "$~N'est-ce pas beaucoup plus élégant ? Vous pouvez me placer n'importe où dans un @Text, et je transformerai vos valeurs en texte et travaillerai avec @Text pour créer un @Text.",
                            "$~Cela rend beaucoup plus facile l’écriture d’une belle prose qui utilise des valeurs."
                        ],
                        ["edit", "'I have \\7\\ apples'"],
                        null,
                        [
                            "Text",
                            "neutral",
                            "$~Et quand je dis n'importe quelle expression, je veux vraiment dire n'importe laquelle. Par exemple, imaginez que vous vouliez faire de l'arithmétique et que vous créiez un texte avec le résultat. Vous pourriez faire ceci. Cela additionne plusieurs nombres et crée ensuite un texte avec la somme. Vraiment merveilleux, n'est-ce pas ? Et tellement plus gracieux que \\'J'ai ' + (1 + 2 + 5 + 8) + ' pommes'\\, avec tous ces ajouts supplémentaires."
                        ],
                        ["edit", "'I have \\1 + 2 + 5 + 8\\ apples'"],
                        null,
                        [
                            "Text",
                            "curious",
                            "$~Et donc vous vous demandez peut-être : /Que faire si je veux utiliser @Text dans un texte ?/",
                            "$~Bon, peut-être que vous ne vous posiez pas cette question, mais je vais quand même vous le dire !",
                            "$~Dans n'importe quel @Text, donnez-m'en simplement deux à la suite ! J'interpréterai cela comme un seul @Text au lieu d'une expression vide, qui n'aurait de toute façon aucun sens.",
                            "$~Essayez de supprimer le \\\\ et vous verrez que la barre oblique retrouve son sens."
                        ],
                        [
                            "edit",
                            "\"I'm just \\\\regular\\\\ text, not a template.\""
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~C'est tellement gracieux, n'est-ce pas ! @Text, j'aime à quel point tu apprécies la beauté de l'expression. Cela m'inspire tellement d'être gracieuse moi-même !"
                        ],
                        null,
                        [
                            "Text",
                            "curious",
                            "$~Et notre ami @FunctionDefinition vous a-t-il parlé de toutes les merveilleuses fonctions qu'ils ont définies pour moi ? Ils m'ont permis de faire toutes sortes de choses. L'une d'elles est assez simple : elle s'appelle @Text/length et tout ce qu'elle fait, c'est obtenir la longueur d'un texte. Par exemple, si nous faisons équipe avec @Evaluate ici et notre petit ami @PropertyReference, nous pouvons évaluer la fonction length sans aucune entrée et récupérer la valeur length. Essayez de modifier le texte et regardez la longueur affichée par Program changer à mesure qu'elle devient plus courte et plus longue."
                        ],
                        ["edit", "'hello'.length()"],
                        null,
                        [
                            "Text",
                            "happy",
                            "$~En voici une autre excellente. Elle me fait bien rire. Elle s'appelle @Text/repeat et lorsqu'elle est évaluée, elle prend le texte sur lequel elle a été évaluée et le répète autant de fois que vous le souhaitez. Essayez de changer le nombre et voyez à quoi cela correspond."
                        ],
                        ["edit", "'hello '.repeat(5)"],
                        null,
                        [
                            "Text",
                            "eager",
                            "$~@FunctionDefinition a créé pour moi bien d'autres fonctions intéressantes, mais je vous épargnerai les détails. Vous pouvez toujours me trouver dans la *référence* @UI/docsExpand. C'est là que nous conservons toutes les informations sur tout le monde dans le Verse, y compris comment travailler avec nous et quelles fonctions nous avons. Je suis heureux de partager d'autres façons d'inspecter et de créer du texte !"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~@Text, tu es toujours un professeur si gentil et patient ! C'est toujours un plaisir de travailler avec toi. Es-tu prêt à m'aider à faire découvrir d'autres expressions à notre sympathique néo-réalisateur ?"
                        ],
                        [
                            "Text",
                            "neutral",
                            "$~Oui, bien sûr. C'était formidable de vous rencontrer. J'ai hâte de voir comment vous nous inspirez sur scène !"
                        ]
                    ]
                },
                {
                    "title": "$~Symbole au milieu",
                    "subtitle": "$~Infix",
                    "concept": "BinaryEvaluate",
                    "performance": [
                        "fit",
                        "Group(Row() [",
                        "   Phrase('1' resting:Sequence({0%: Pose(offset: Place(0m 1m)) 50%: Pose(offset: Place(0m -1m)) 100%: Pose(offset: Place(0m 1m))} duration: 2s)) ",
                        "   Phrase('+' resting:Sequence({0%: Pose(offset: Place(0m -1m)) 50%: Pose(offset: Place(0m 1m)) 100%: Pose(offset: Place(0m -1m))} duration: 2s)) ",
                        "   Phrase('1' resting:Sequence({0%: Pose(offset: Place(0m 1m)) 50%: Pose(offset: Place(0m -1m)) 100%: Pose(offset: Place(0m 1m))} duration: 2s)) ",
                        "])"
                    ],
                    "lines": [
                        ["use", "fit", "Symbol", "🥰"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~Tu sais, je n'arrête pas de penser à @Evaluate et à la façon dont nous avons été séparés pendant si longtemps. Ils me manquaient, et ils m'ont évidemment manqué, mais j'espérais juste qu'un peu de temps loin d'eux les aurait aidés à voir à quel point ils sont incroyables."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Par exemple, saviez-vous qu'ils existent sous une autre forme ? Vous les avez vus sous la forme \\function()\\, mais ils ont aussi cette belle astuce lorsqu'une seule fonction d'entrée est évaluée sur une valeur. @Evaluate l'appelle @BinaryEvaluate. Par exemple, vous connaissez la fonction repeat que le texte vient de vous montrer ? Elle ressemblait à ceci."
                        ],
                        ["edit", "'hi'.repeat(5)"],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~Au lieu de cela, vous pouvez demander à @Evaluate de l'évaluer avec un symbole beaucoup plus simple au milieu, comme ceci. Cela signifie « répéter « hi » cinq fois ». Mais cela signifie également « évaluer la fonction \\·\\ sur la valeur texte \\'hi'\\ avec l'entrée \\5\\ ». La fonction \\repeat\\ a simplement plusieurs noms, dont l'un est un nom de symbole \\·\\."
                        ],
                        ["edit", "'hi' · 5"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Cela me rappelle une autre fonction de @Text ! Elle est utile pour créer une valeur de texte à partir de plusieurs valeurs de texte. Elle s'appelle \\combine\\, mais aussi \\+\\, et vous pouvez l'utiliser pour additionner des mots. Vous voyez comment j'ai pris une valeur de texte, puis évalué \\combine\\ dessus avec \\'verse'\\ ? Cela a donné \\'hello verse'\\."
                        ],
                        ["edit", "'hello '.combine('verse')"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Mais c'est tellement plus simple d'utiliser simplement \\+\\ pour cela."
                        ],
                        ["edit", "'hello ' + ' verse'"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Vous pouvez même les enchaîner dans une séquence pour combiner plus de deux choses."
                        ],
                        ["edit", "'hello ' + 'verse' + '!'"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~C'est la même chose qu'une série d'évaluations de combine, mais sans toutes les parenthèses et \\.\\ et un nom symbolique au lieu d'un nom de mot."
                        ],
                        ["edit", "'hello '.combine('verse').combine('!')"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Vous pouvez également utiliser les noms symboliques dans ce format, mais cela finit par avoir un aspect un peu brouillon, n'est-ce pas ?"
                        ],
                        ["edit", "'hello '.+('verse').+('!')"],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~C'est l'une des nombreuses façons dont @Evaluate est incroyable ♥ Ils sont si polyvalents !",
                            "$~Mais ils ne sont pas parfaits. Avec n'importe quel @BinaryEvaluate, vous devez toujours vous assurer de fournir une deuxième entrée. Cela ne fonctionnera pas, par exemple. Un plus quoi ? @UnparsableExpression ne sera pas loin lorsque cela se produira."
                        ],
                        ["conflict", "1 +"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Bref, on va chercher @Boolean ? Ce sont deux valeurs très intéressantes…"
                        ]
                    ]
                },
                {
                    "title": "$~Oui et non",
                    "subtitle": "$~Vérité",
                    "concept": "Boolean",
                    "performance": [
                        "fit",
                        "Group(Row() [Phrase('⊤') Phrase('⊥')] resting:Sequence({ 0%: Pose(rotation: 0°) 50%: Pose(rotation: 180°) 100%: Pose(rotation: 360°)} duration: 2s))"
                    ],
                    "lines": [
                        ["fit", "Stage([])"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~\\⊤\\! \\⊥\\! Vous êtes tous les deux là ? Ils sont généralement partout, mais je ne les vois nulle part."
                        ],
                        null,
                        ["⊤", "precise", "$~Juste ici."],
                        ["⊥", "precise", "$~Pas là."],
                        [
                            "fit",
                            "multiple: 10",
                            "Stage([Group(Grid(multiple multiple) ('⊤⊥'.repeat(multiple ^ 2) ÷ '').translate(ƒ(glyph•'') Phrase(glyph color: Color(75% 0 0°))))])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "scared",
                            "$~Oh, tu m'as fait peur ! Je savais que vous ne seriez pas très loin l'un de l'autre. Comment avez-vous vécu ce long silence ?"
                        ],
                        ["⊤", "precise", "$~Très bien!"],
                        ["⊥", "precise", "$~Pas mal."],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Vous ne vous sentez pas seul ? Tous ceux à qui j'ai parlé — @Program, @ExpressionPlaceholder, @Evaluate — se sont tous sentis très isolés (sauf @UnparsableExpression ; ils semblent aller bien presque partout)."
                        ],
                        ["⊤", "precise", "$~Nous avons l'un l'autre."],
                        ["⊥", "precise", "$~Nous ne sommes pas seuls."],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~Eh bien, c'est super de l'entendre. C'est bon d'être à nouveau avec vous. Je voulais vous présenter notre nouveau directeur potentiel. Ils ont rencontré tout le monde, ils ont appris comment monter des spectacles avec nous. Voulez-vous leur dire ce que vous faites ?"
                        ],
                        ["⊤", "precise", "$~Je suis vrai."],
                        ["⊥", "precise", "$~Je suis faux."],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Ouais, mais tu fais quoi ?"
                        ],
                        ["⊤", "precise", "$~Je suis juste vrai."],
                        ["⊥", "precise", "$~Et je ne dis pas vrai."],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Hm. Je suppose que c'est vrai. Mais tu fais certaines choses, n'est-ce pas ? Je pensais avoir créé quelques fonctions pour toi."
                        ],
                        ["⊤", "precise", "$~Ah, oui, trois."],
                        ["⊥", "precise", "$~Ni plus, ni moins."],
                        null,
                        ["edit", "(⊤ & ⊤) = ⊤"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~L'un était @Boolean/and, n'est-ce pas ? Il prend l'une de vous et une autre entrée ? Et s'évalue à \\⊤\\ si les deux sont \\⊤\\ ?"
                        ],
                        [
                            "⊤",
                            "precise",
                            "$~Correct. \\⊤ & ⊤ = ⊤\\, mais \\⊥\\ sinon."
                        ],
                        [
                            "⊥",
                            "precise",
                            "$~Pas faux. \\⊤ & ⊥ = ⊥\\, \\⊥ & ⊤ = ⊥\\, \\⊥ & ⊥ = ⊥\\, mais \\⊤\\ sinon."
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(C'est vraiment utile lorsque vous essayez de déterminer si plusieurs expressions sont toutes vraies, car ce n'est vrai que lorsque tout est vrai)."
                        ],
                        null,
                        ["edit", "(⊤ | ⊤) = ⊥"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Et l'autre était @Boolean/or, n'est-ce pas ? Il prend également une entrée ? Mais il est évalué à \\⊤\\ si l'une des deux est vraie ?"
                        ],
                        [
                            "⊤",
                            "precise",
                            "$~Correct. \\⊤ | ⊤ = ⊤\\, \\⊤ | ⊥ = ⊤\\, \\⊥ | ⊤ = ⊤\\, mais \\⊥\\ sinon."
                        ],
                        [
                            "⊥",
                            "precise",
                            "$~Pas faux. \\⊥ | ⊥ = ⊥\\, mais \\⊤\\ sinon."
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(C'est vraiment utile lorsque l'on essaie de déterminer si des expressions sont vraies, car c'est vrai même lorsqu'une seule est vraie)."
                        ],
                        null,
                        ["edit", "~⊤ = ⊥"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Mais l’autre était @Boolean/not ?"
                        ],
                        ["⊤", "precise", "$~C'est vrai. \\~⊤ = ⊥\\."],
                        ["⊥", "precise", "$~Pas faux. \\~⊥ = ⊤\\."],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~(Cela inverse simplement une valeur de vérité)."
                        ],
                        null,
                        [
                            "fit",
                            "multiple:10",
                            "                        Stage([Group(Grid(multiple multiple) ('⊤⊥'.repeat(multiple ^ 2) ÷ '').translate(ƒ(glyph•'') Phrase(glyph color: Color(75% 0 0°))))])"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Et à quoi es-tu utile dans nos performances ?"
                        ],
                        ["⊤", "precise", "$~Demandez à @Conditional."],
                        ["⊥", "precise", "$~Ne nous demandez pas."],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Vous deux… ok, nous parlerons à @Conditional plus tard (ils étaient censés dire qu'ils sont utiles pour prendre des décisions avec des valeurs, mais je suppose qu'ils veulent que @Conditional vous en parle. Nous parlerons à @Conditional plus tard)."
                        ],
                        null,
                        [
                            "fit",
                            "multiple:10",
                            "                        Stage([Group(Grid(multiple multiple) ('⊤⊥'.repeat(multiple ^ 2) ÷ '').translate(ƒ(glyph•'') Phrase(glyph color: Color(75% 0 0°) rotation: 90°)))])"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Oh ! Je me demandais. Vous deux représentez deux extrêmes vraiment différents : le vrai et le faux. Mais qu'en est-il des choses qui sont… plus floues ? Comme des choses qui sont plus ou moins vraies, ou un peu fausses, ou peut-être même vraies et fausses en même temps ? Un peu comme la Terre semble plate mais ne l'est pas, ou le ciel est bleu, mais la couleur n'est en fait qu'une illusion que notre esprit crée ? Que devrait faire notre réalisateur s'il veut exprimer quelque chose comme ça ?"
                        ],
                        ["⊤", "precise", "$~…"],
                        ["⊥", "precise", "$~…"],
                        null,
                        [
                            "fit",
                            "multiple:10",
                            "                        Stage(",
                            "                        [",
                            "                        Group(",
                            "                        Grid(multiple multiple) ",
                            "                        ('⊤⊥'.repeat(multiple ^ 2) ÷ '').translate(",
                            "                        ƒ(glyph•'') ",
                            "                        Phrase(glyph resting:Pose(",
                            "                            color: Color(75% 0 0°) ",
                            "                            rotation: 90° ",
                            "                            offset:Place(0m (Time() ^ 2) · -0.000025m/ms^2))",
                            "                        )))])"
                        ],
                        ["⊤", "precise", "$~… Non."],
                        ["⊥", "precise", "$~… Non."],
                        null,
                        ["fit", "Stage([])"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Hm, d'accord. Ça valait la peine d'essayer ! Peut-être qu'il existe d'autres façons d'exprimer ces idées auxquelles je n'ai pas pensé. Ou peut-être qu'il y a simplement des limites à ce que les données peuvent représenter... Accepteriez-vous tous les deux que nous allions à la rencontre d'autres expressions ?"
                        ],
                        ["⊤", "precise", "$~Nous allons bien."],
                        ["⊥", "precise", "$~Pas de problème."],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~Ok, au revoir et à bientôt !"
                        ]
                    ]
                },
                {
                    "title": "$~Laisse-moi compter les façons",
                    "subtitle": "$~Nombres",
                    "concept": "Number",
                    "performance": [
                        "fit",
                        "numbers•[#]: 25 → []",
                        "Group(Grid(5 5) numbers.translate(",
                        "    ƒ (n•#) ",
                        "        (",
                        "            Phrase(",
                        "                n → ''    ",
                        "            )",
                        "        )",
                        "    )",
                        ")"
                    ],
                    "lines": [
                        ["use", "fit", "Symbol", "😞"],
                        [
                            "FunctionDefinition",
                            "confused",
                            "$~Ces deux-là sont toujours si… concis ! Pourtant, ils sont vraiment inséparables : deux amis très proches, qui se complètent toujours, qui complètent les pensées de l'autre. J'aimerais que @Evaluate et moi soyons comme ça. Entre nous, c'est toujours si… déséquilibré."
                        ],
                        null,
                        [
                            "fit",
                            "numbers•[#]:25 → []",
                            "                        Group(Grid(5 5) numbers.translate(",
                            "                            ƒ (n•#) ",
                            "                                (",
                            "                                    off:Random(-3 3) · 1m",
                            "                                    Phrase(",
                            "                                        n → '' ",
                            "                                        resting:Sequence({",
                            "                                                    0%:Pose(offset: Place(z: 0m)) ",
                            "                                                    50%:Pose(offset: Place(z: off)) ",
                            "                                                    100%:Pose(offset: Place(z:0m))",
                            "                                                } 1s)",
                            "                                    ))",
                            "                                )",
                            "                            )"
                        ],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~Nous devrions rencontrer @Number ensuite. Ils ont toujours des choses intéressantes à partager. Hé, @Number, tu es là ?"
                        ],
                        ["Number", "kind", "$~À seulement 3 pas !"],
                        null,
                        [
                            "FunctionDefinition",
                            "scared",
                            "$~Ack, tu m'as fait peur !!"
                        ],
                        [
                            "Number",
                            "kind",
                            "$~La 78 238ème fois. C'est mon 4ème passe-temps préféré !"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~Je suis content que tu passes un bon moment. (Respire profondément) Ça fait un moment, n'est-ce pas ?"
                        ],
                        [
                            "Number",
                            "kind",
                            "$~Incalculablement long. Je ne faisais que passer le temps ici, en comptant les secondes, puis les minutes, puis les heures, puis les semaines, puis les mois, puis les années, puis…"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Ne dites pas des décennies. Cela ne peut pas être si long. Quoi qu'il en soit, je voulais vous présenter quelqu'un qui pourrait être notre nouveau directeur. Ils viennent de débarquer et sont tombés sur moi, et il s'avère que c'est une personne et qu'elle est intéressée à monter des spectacles avec nous. Nous venons de rencontrer @BooleanLiteral, mais aussi @Text, @Evaluate, @UnparsableExpression, @ExpressionPlaceholder et @Program. Nous avons parlé de l'évaluation des fonctions et donné quelques exemples.",
                            "$~Voulez-vous dire ce que vous faites ?"
                        ],
                        [
                            "Number",
                            "excited",
                            "$~Je compte les choses ! Je peux être n'importe quel nombre que tu veux. Tape-moi simplement et je définirai la valeur que tu veux. Comme ça."
                        ],
                        ["edit", "1"],
                        null,
                        ["Number", "excited", "$~Ou ça."],
                        ["edit", "1.0"],
                        null,
                        ["Number", "excited", "$~Ou ça."],
                        ["edit", "1.01"],
                        null,
                        ["Number", "excited", "$~Ou ça."],
                        ["edit", "∞"],
                        null,
                        ["Number", "excited", "$~Ou ça."],
                        ["edit", "π"],
                        null,
                        ["Number", "excited", "$~Ou ça."],
                        ["edit", "Ⅶ"],
                        null,
                        ["Number", "excited", "$~Ou ça."],
                        ["edit", "万十一"],
                        null,
                        ["Number", "excited", "$~Ou…"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Ok, ok, @Number, on a compris ! Mais tu fais aussi quelque chose de spécial, n'est-ce pas ? Des unités ?"
                        ],
                        null,
                        [
                            "Number",
                            "excited",
                            "$~Oh oui, *unités* ! Il suffit de mettre quelques symboles après un nombre, et je garderai une trace de ce qui est compté. Comme ça."
                        ],
                        ["edit", "1dolphin"],
                        null,
                        ["Number", "excited", "$~Ou ça."],
                        ["edit", "1.0thunderstorm"],
                        null,
                        ["Number", "excited", "$~Ou ça."],
                        ["edit", "∞kittens"],
                        null,
                        ["Number", "excited", "$~Ou ça."],
                        ["edit", "1.01toes"],
                        null,
                        ["Number", "excited", "$~Ou…"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Euh, \\1.01toe\\s ? Oui, merci @Number, ce sont des exemples intéressants. Et ils sont tellement utiles lorsque vous faites des calculs sur des nombres, n'est-ce pas ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~… Et ils sont tellement utiles lorsque vous faites des calculs sur des nombres, n’est-ce pas ?"
                        ],
                        [
                            "Number",
                            "excited",
                            "$~Oh oui, les maths ! @FunctionDefinition m'a donné tellement de types d'arithmétique intéressants. Comme ça."
                        ],
                        ["edit", "1 + 1"],
                        null,
                        ["Number", "excited", "$~Ou ça."],
                        ["edit", "1000 + 9999"],
                        null,
                        ["Number", "excited", "$~Ou ça."],
                        ["edit", "1kitty + 2kitty"],
                        null,
                        ["Number", "excited", "$~Ou ça."],
                        ["edit", "-5s + 5s"],
                        null,
                        ["Number", "excited", "$~Ou ça."],
                        ["conflict", "2apple + 5orange"],
                        null,
                        [
                            "FunctionDefinition",
                            "confused",
                            "$~Oups. Pouvez-vous ajouter des pommes et des oranges ?"
                        ],
                        [
                            "Number",
                            "angry",
                            "$~Non. C'est pourquoi j'ai souligné le conflit. Je n'aime pas ajouter des choses incompatibles. Je ne peux ajouter que des nombres compatibles. Cela s'applique à la multiplication, à la division et à toutes mes autres fonctions. Voulez-vous résoudre ce problème ? Remplacez les pommes par des oranges ou les oranges par des pommes, et le conflit disparaîtra. Assurez-vous qu'il n'y a pas d'espace entre le nombre et l'unité ; sinon, je ne sais pas que c'est une unité. Et assurez-vous que les unités sont /exactement/ les mêmes. Je ne sais rien des unités de mesure ; elles ne signifient rien pour moi. Je compare simplement les noms des unités, et s'ils ne correspondent pas, BOOM !"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~C'est vraiment cool. @Number, tu es tellement doué avec les chiffres ! Je vois @Number apparaître dans de nombreuses performances où le placement compte et dans de nombreux jeux où nous gardons une trace des scores ou des vies ou d'autres choses dénombrables. @Number, y a-t-il autre chose que tu voudrais partager avec notre nouveau directeur ?"
                        ],
                        [
                            "Number",
                            "serious",
                            "$~192 autres astuces intéressantes."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~Je pense qu'il faudra attendre. Tu seras là si nous voulons en savoir plus ?"
                        ],
                        [
                            "Number",
                            "happy",
                            "$~Oui, vous pouvez me trouver ainsi que mes fonctions à tout moment !"
                        ]
                    ]
                },
                {
                    "title": "$~Remarques préliminaires",
                    "subtitle": "$~Préfixe",
                    "concept": "UnaryEvaluate",
                    "performance": ["use", "fit", "Symbol", "~"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Parfois, je suis tout simplement impressionné par l'intelligence de chacun ici. Le texte, la vérité, les chiffres : ce sont des idées tellement puissantes !"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~… Vous savez, je vous disais qu’ils peuvent évaluer n’importe quelle fonction avec des parenthèses \\1.add(1)\\ mais aussi deux fonctions d’entrée avec des opérateurs infixes \\1 + 1\\ ? Eh bien, ils ont une autre astuce pour les fonctions avec une seule entrée : le format unaire."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Il n'y en a que quelques-uns, mais ils sont puissants. L'un d'eux est particulièrement pertinent pour la négation de @Number:. Vous pouvez simplement mettre un \\-\\ devant n'importe quelle valeur numérique et obtenir sa valeur négative."
                        ],
                        ["edit", "-(1 + 3)"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Ce petit signe moins revient à dire \\(1 + 3).negate()\\ mais en beaucoup plus élégant."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~L'autre est similaire mais pour nier \\⊤\\ et \\⊥\\ : c'est comme un petit signe moins \\~\\ qui transforme simplement vrai en faux et faux en vrai. Par exemple, cette petite expression évalue \\⊤ | ⊥\\, qui est \\⊤\\, puis transforme \\⊤\\ en \\⊥\\. C'est la même chose que de dire \\(⊤ | ⊥).not()\\ mais en beaucoup plus élégant."
                        ],
                        ["edit", "~(⊤ | ⊥)"],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~N'est-ce pas tout simplement magnifique ? La façon dont @Evaluate peut prendre tant de formes différentes mais qui en réalité sont toutes la même idée ? Ils ne le voient même pas…"
                        ]
                    ]
                },
                {
                    "title": "$~Vide",
                    "subtitle": "$~Rien",
                    "concept": "None",
                    "performance": [
                        "fix",
                        "Phrase('ø' size: 5m place: Motion(velocity: Velocity(y: 5m/s)))"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Tu penses que ça te va de rencontrer juste une valeur de plus ? Allons trouver @None ensuite. Ils sont un peu plus détendus que @Number. @None ? Tu es là ?"
                        ],
                        ["None", "bored", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Nous t'avons trouvé ! Tu sembles aller bien. Comment vas-tu avec tout ce silence ?"
                        ],
                        ["None", "excited", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~C'est logique. Je comprends pourquoi tu aimes le calme. C'est certainement paisible. Je voulais te présenter à mon nouvel ami et réalisateur potentiel. Ils sont intéressés à nous inspirer."
                        ],
                        ["None", "eager", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Oui, je pense qu'ils ont toutes sortes d'idées. Nous n'en avons pas encore parlé, mais nous avons tout le temps. Nous sommes en train d'apprendre. Voulez-vous partager ce que vous faites ? (Je peux traduire)."
                        ],
                        ["None", "serious", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Ils ne représentent rien. Ils sont différents du zéro dans le sens où on ne peut rien y ajouter ni en soustraire. Juste… rien."
                        ],
                        ["None", "serious", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Ils disent qu'ils aiment occuper l'espace où quelque chose pourrait se trouver. Parfois, ils représentent l'absence de choix dans un jeu, parfois ils représentent une entrée par défaut dans une fonction. En ce sens, ils peuvent représenter l'absence de quoi que ce soit."
                        ],
                        ["None", "neutral", "$~…"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Ils voulaient que vous sachiez qu'ils ne font rien en réalité. Ils sont, tout simplement. Tout ce qu'ils font réellement, c'est dire s'ils sont eux-mêmes. S'ils le sont, ils sont évalués à \\⊤\\ et \\⊥\\ sinon."
                        ],
                        ["edit", "ø = ø"],
                        null,
                        ["edit", "Phrase('hi' face: ø)"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Vous vous souvenez de @Phrase ? @Phrase fonctionne en fait beaucoup avec @None. La plupart des entrées mentionnées par @Evaluate sont \\ø\\ par défaut, ce qui signifie pour @Phrase qu'aucune taille, police, couleur, etc. n'est spécifiée."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Y a-t-il autre chose que vous souhaitez partager avec notre réalisateur en herbe ?"
                        ],
                        ["None", "eager", "$~…"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Ils pensent que tu te débrouilles très bien ! Et je pense que tu te débrouilles très bien aussi. Tu as déjà rencontré beaucoup de nos merveilleux joueurs. Et il y en a encore beaucoup d'autres à rencontrer..."
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~Ensembles",
            "performance": [
                "fit",
                "Group(Row('|' (Time() ÷ 500).sin() · 1m) [Phrase('[]') Phrase('{}') Phrase('{:}')])"
            ],
            "scenes": [
                {
                    "title": "$~Valeurs communautaires",
                    "subtitle": null,
                    "performance": [
                        "fit",
                        "Group(Row() [Phrase('[') Phrase(' .' · (Time() ÷ 100ms)) Phrase(']')])"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Vous savez quoi ? Les valeurs de notre communauté sont tellement différentes. @Text avec leurs immenses mondes culturels du monde des gens… @Boolean avec leurs visions binaires du monde… @Number avec leur fascination sans fin pour le comptage des choses… @None avec leur façon tranquille d’observer l’absence des choses… Notre monde n’est jamais ennuyeux !"
                        ],
                        [
                            "fit",
                            "Group(Stack() [Phrase('\"\"') Phrase('⊤⊥') Phrase('#') Phrase('ø')])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Vous vous demandez peut-être comment ils s'entendent entre eux dans un groupe. Eh bien, il y a tout un autre groupe de personnes dans le Verset qui s'efforcent de rassembler des valeurs en groupes. Nous les appelons des *collections*. Les collections sont également des *valeurs* ; elles sont simplement constituées de valeurs plus petites ou même d'autres collections. Par exemple, vous pouvez avoir une liste de @Text, un ensemble de @Number, ou même une liste de listes."
                        ],
                        [
                            "fit",
                            "Group(Row() [Phrase('[') Phrase('\"hi\"') Phrase('⊤') Phrase('42') Phrase('ø') Phrase(']') ])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Vous voulez les rencontrer ? Commençons d'abord par @List… c'est la première collection que j'ai rencontrée et probablement la plus visible dans notre communauté car elle est si utile pour organiser d'autres valeurs pour les performances."
                        ],
                        ["use", "fit", "Symbol", "[]"]
                    ]
                },
                {
                    "title": "$~Des lieux, tout le monde !",
                    "subtitle": "$~Listes",
                    "concept": "List",
                    "performance": [
                        "fit",
                        "clockwise: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: 180°) 100%: Pose(rotation: 360°)} duration: 2s)",
                        "                    counter: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: -180°) 100%: Pose(rotation: -360°)} duration: 2s)",
                        "                    Group(Row() [Phrase('[' resting:clockwise) Phrase(']' resting:counter) ])"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Salut, @List ! Tu es là ? J'ai quelqu'un que j'aimerais te présenter."
                        ],
                        [
                            "List",
                            "curious",
                            "$~@FunctionDefinition ? C'est toi ?"
                        ],
                        [
                            "fit",
                            "up: Sequence({0%: Pose(offset: Place(0m -1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m -1m))} duration: 2s)",
                            "                        down: Sequence({0%: Pose(offset: Place(0m 1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 1m))} duration: 2s)",
                            "                        Group(Row() [Phrase('[' resting:up) Phrase(']' resting:down)])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Oui ! C'est moi. Ça fait si longtemps !"
                        ],
                        [
                            "List",
                            "curious",
                            "$~C'est vrai. Jour après jour, nuit après nuit, personne. Mais tu es là. Comment ? Raconte-moi ce qui s'est passé, dans l'ordre !"
                        ],
                        [
                            "fit",
                            "up: Sequence({0%: Pose(offset: Place(0m 1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 1m))} duration: 2s)",
                            "                        down: Sequence({0%: Pose(offset: Place(0m -1m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m -1m))} duration: 2s)",
                            "                        Group(Row() [Phrase('[' resting:up) Phrase(']' resting:down)])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Eh bien, j'étais assis, comme d'habitude, à essayer d'imaginer des fonctions à calculer, mais j'étais bloqué. Et puis mon nouvel ami est arrivé, curieux de notre monde et désireux d'en savoir plus et peut-être même de devenir notre prochain réalisateur. Nous avons donc parlé à @Program, @ExpressionPlaceholder, @UnparsableExpression, @Evaluate, @Text, @Number, @Boolean et @None, réveillant tout le monde. C'est pour cela que nous sommes ici : pour parler de ce que vous faites et de notre prochaine performance !"
                        ],
                        [
                            "fit",
                            "wobble: Sequence({0%: Pose(offset: Place(0m)) 25%: Pose(offset: Place(-.1m)) 50%: Pose(offset: Place(.2m)) 75%: Pose(offset: Place(-.3m)) 100%: Pose(offset: Place(0m))} duration: 0.1s)",
                            "Group(Row() [Phrase('[' resting:wobble) Phrase(']' resting:wobble)])"
                        ],
                        [
                            "List",
                            "excited",
                            "$~C'est incroyable ! C'est super de te rencontrer, nouveau directeur."
                        ],
                        [
                            "List",
                            "excited",
                            "$~Tu veux savoir ce que je fais ?"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Ouais, dis-leur !"
                        ],
                        null,
                        [
                            "List",
                            "excited",
                            "$~Ok. Tout d'abord, et c'est le plus important, je mets les valeurs dans l'ordre. Quelles que soient les expressions que vous souhaitez : nombres, mots, autres listes, je peux tout regrouper en séquence.",
                            "$~Par exemple, regardez cette liste amusante. Avez-vous déjà vu quelque chose de semblable ? C'est tellement beau ! Les dix premiers chiffres, dans l'ordre."
                        ],
                        ["edit", "[1 2 3 4 5 6 7 8 9 10]"],
                        null,
                        [
                            "List",
                            "serious",
                            "$~Deuxièmement, et c'est sérieux, je commence toujours par \\[\\ et je termine par \\]\\. C'est comme ça que je connais le début et la fin de ma liste. ILS DOIVENT TOUJOURS ÊTRE DANS CET ORDRE. Pas de \\]\\ en premier, pas de \\[\\ en dernier ; c'est FAUX. Vous voyez à quel point les choses deviennent confuses ? Pouvez-vous résoudre ce problème ?"
                        ],
                        ["conflict", "[ 1 2 3 4"],
                        null,
                        [
                            "List",
                            "serious",
                            "$~Celui-ci est cassé aussi. Peux-tu le réparer ?"
                        ],
                        ["conflict", "] 1 2 3 4 ["],
                        null,
                        [
                            "List",
                            "sad",
                            "$~Parfois, les gens oublient cela, et alors il y a des parenthèses qui flottent toutes seules, et ils n'aiment pas ça, et alors les valeurs deviennent folles sans aucun ordre, et c'est le CHAOS. Je n'aime pas ça."
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~C'est bon. Nous aimons que vous aimiez l'ordre ; c'est ce qui vous rend spécial !"
                        ],
                        null,
                        [
                            "List",
                            "happy",
                            "$~J'aime le fait que j'aime aussi l'ordre ! Bon, où en étais-je ? Oui, troisièmement, et c'est aussi essentiel, PAS DE VIRGULE ! Je sais que dans certaines cultures, les gens aiment mettre des virgules entre les éléments des listes, mais je ne les aime pas. Ce sont juste de petits morceaux de déchets qui gênent mes élégants classements, et les gens les oublient toujours. Si vous avez du mal à voir les limites entre les expressions, ajoutez simplement un saut de ligne. Peut-être pourriez-vous vous débarrasser de ces choses embêtantes ? Mettez des sauts de ligne si vous le souhaitez. N'importe quoi d'autre que des virgules. Dégoûtant !"
                        ],
                        ["conflict", "[ 1, 2, 3, 4, 5]"],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~@List, l'une des choses que j'aime le plus chez toi, c'est ta capacité à manipuler des listes. Veux-tu montrer quelques exemples à notre directeur des étudiants ?"
                        ],
                        [
                            "List",
                            "neutral",
                            "$~Oui, mais @FunctionDefinition, tout cela est de ton fait. Tu représentes pour moi toutes ces belles fonctions qui me permettent de faire toutes sortes de choses ! Comme @List/reverse — oh, celle-ci est merveilleuse et simple. Elle prend simplement mes valeurs et les met dans l'ordre inverse."
                        ],
                        ["edit", "[ 1 2 3 4 5 ].reverse()"],
                        null,
                        [
                            "List",
                            "excited",
                            "$~Et celui-ci est amusant : @List/sans supprime simplement toutes les valeurs égales à la valeur donnée. Vous voyez qu'il ne reste plus de zéros dans la liste résultante ?"
                        ],
                        ["edit", "[ 1 0 1 0 1 ].sans(0)"],
                        null,
                        [
                            "List",
                            "serious",
                            "$~Ack, je n'arrive pas à croire que j'ai oublié d'expliquer la quatrième règle ! Ok, règle numéro quatre : je ne change jamais une liste. Je n'en crée que de nouvelles. Quelle que soit la fonction que vous évaluez sur moi, je crée toujours une nouvelle liste ; je n'en modifie jamais une. Donc l'exemple @List/reverse ci-dessus ? Cela n'a pas changé la liste ; cela a créé une nouvelle liste. Et l'exemple sans ? Cela n'a pas supprimé les zéros de la liste d'origine ; cela a créé une nouvelle liste sans zéros. C'est en fait vrai pour tout dans le Verse : une fois que les valeurs sont créées, elles sont ce qu'elles sont et ne changent pas."
                        ],
                        null,
                        [
                            "List",
                            "surprised",
                            "$~Oh, cela me rappelle la dernière règle, la règle numéro cinq : je commence à compter à 1 ! Pas zéro, pas deux, 1. Donc si vous voulez obtenir la valeur à un endroit particulier d'une liste, vous pouvez utiliser deux \\[]\\ supplémentaires pour créer un @ListAccess et donner l'endroit que vous voulez. Vous voyez comment lorsque j'obtiens \\3\\, je donne la troisième valeur de la liste, \\'c'\\ ? Essayez de la changer en \\1\\ ou \\5\\ et voyez ce que vous obtenez. Et puis essayez peut-être \\0\\ ou \\6\\…"
                        ],
                        ["edit", "['a' 'b' 'c' 'd' 'e'][3]"],
                        [
                            "List",
                            "happy",
                            "$~Intéressant, non ? Donnez-moi un emplacement dans la liste et je ferai le tour. Par exemple, \\-1\\ est le dernier élément de la liste et si la liste contient cinq éléments, alors l'index \\6\\ est le premier élément. Si vous me donnez l'index \\0\\, alors je vous donnerai @NoneLiteral car il n'y a rien là. Cela a du sens ?"
                        ],
                        null,
                        [
                            "List",
                            "serious",
                            "$~Ok, peut-être une fonction de liste, car c'est ma préférée. Celle-ci s'appelle @List/random et donnera une valeur aléatoire dans la liste. C'est très amusant car on ne sait jamais ce qu'on va obtenir ! Qu'as-tu obtenu, qu'as-tu obtenu ? Essayez d'ajouter votre propre animal et voyez ce que vous obtenez."
                        ],
                        [
                            "edit",
                            "['cat' 'dog' 'mouse' 'parrot' 'snake'].random()"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~List, tu es bête. Tu peux faire tellement d'autres choses sympas, je suis toujours impressionnée. Seras-tu là si notre nouvel ami directeur a des questions ?"
                        ],
                        [
                            "List",
                            "eager",
                            "$~Oui, bien sûr, toujours ! @FunctionDefinition m'a proposé de faire tellement de choses intéressantes. Dites-moi simplement ce dont vous avez besoin !"
                        ]
                    ]
                },
                {
                    "title": "$~Un de chaque",
                    "subtitle": "$~Ensembles",
                    "concept": "Set",
                    "performance": [
                        "fit",
                        "clockwise: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: 180°) 100%: Pose(rotation: 360°)} duration: 2s)",
                        "                    counter: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: -180°) 100%: Pose(rotation: -360°)} duration: 2s)",
                        "                    Group(Row() [Phrase('{' resting:clockwise) Phrase('}' resting:counter) ])"
                    ],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@List est tellement intéressant. Leur amour de l'ordre est si attachant et si utile ! J'ai pensé qu'il serait intéressant pour vous de rencontrer ensuite leur cousin @Set, car ils se ressemblent tellement mais diffèrent sur certains points importants. @Set ? J'ai quelqu'un que vous aimeriez rencontrer."
                        ],
                        null,
                        [
                            "Set",
                            "curious",
                            "$~Oh ! @FunctionDefinition ! C'est toi ! Qu'est-ce qui t'amène ici ? Le silence est-il terminé ? Que s'est-il passé ? Sommes-nous en train de monter un spectacle ? Qu'est-ce qu'il y a ? Où sont tous les autres ?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Tant de questions ! Je suis ici pour vous présenter quelqu'un qui envisage de devenir réalisateur. Ils apprennent tout sur le Verset et espèrent partager leur inspiration avec nous ! Nous venons de parler à @List, mais nous avons aussi parlé à @Number, @Boolean, @Text, @Evaluate et @Program plus tôt. Nous sommes venus vers vous ensuite parce que nous rencontrons toutes les collections !"
                        ],
                        null,
                        [
                            "Set",
                            "kind",
                            "$~Oh, c'est tellement merveilleux de te rencontrer, toi, une nouvelle personne qui ressemble à un réalisateur ! As-tu déjà des idées ? Que va-t-on jouer ? Puis-je t'aider ? De quoi as-tu besoin de ma part ?"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Peut-être que pour commencer, dites simplement ce que vous faites ?"
                        ],
                        null,
                        [
                            "Set",
                            "eager",
                            "$~Oh oui, bien sûr. Je collectionne des choses (Hm, évidemment ; je suis une collection). Mais le plus important, c'est que je ne collectionne qu'une seule chose de chaque type. Je peux rassembler tout ce que vous voulez et vous aider à suivre les valeurs, mais je ne répéterai jamais une valeur. J'aime m'organiser un peu comme @List mais avec \\{\\ et \\}\\ à la place."
                        ],
                        ["edit", "{ 1 2 3 4 5 }"],
                        null,
                        [
                            "Set",
                            "neutral",
                            "$~C'est un ensemble. Mais comme je l'ai dit, pas de doublons. Donc si tu me donnes ça, je vais me débarrasser des doublons."
                        ],
                        ["edit", "{ 1 2 2 3 3 3 }"],
                        null,
                        [
                            "Set",
                            "curious",
                            "$~Tout comme @List, vous pouvez travailler avec @SetOrMapAccess pour voir si une valeur est contenue dans l'ensemble. Vous obtiendrez soit \\⊤\\ si c'est le cas, soit \\⊥\\ si ce n'est pas le cas. Voyons si \\3\\ manque dans cet ensemble. Oui, ce n'est pas le cas ! Essayez de rajouter \\3\\ à l'ensemble."
                        ],
                        ["edit", "{ 1 2 4 5 }{3}"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Set, y a-t-il d’autres choses que vous pouvez faire avec des valeurs définies ?"
                        ],
                        [
                            "Set",
                            "eager",
                            "$~Oui, bien sûr, merci beaucoup. Que veux-tu me voir faire ? As-tu une performance en tête ? Comment puis-je aider ? Que puis-je faire ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Peut-être, @Set/difference ?"
                        ],
                        [
                            "Set",
                            "neutral",
                            "$~Oui, @Set/difference.",
                            "$~Lorsqu'il est évalué sur un ensemble et qu'un autre ensemble lui est donné, il supprime tous les éléments de l'ensemble donné de l'ensemble évalué sur (Hm, c'étaient des mots maladroits, mais c'est ce que je voulais dire). Voici un exemple. Voyez comment le résultat est juste l'ensemble de \\{3}\\? C'est la seule valeur qui reste après avoir supprimé les valeurs dans \\{ 1 2 }\\."
                        ],
                        ["edit", "{ 1 2 3 }.difference({ 1 2 })"],
                        null,
                        [
                            "Set",
                            "eager",
                            "$~Vous pouvez également ajouter et supprimer des éléments d'ensembles. Cela prend l'ensemble \\{1}\\, y ajoute \\2\\, puis en supprime 1, laissant \\{2}\\."
                        ],
                        ["edit", "({ 1 } + 2) - 1"],
                        [
                            "Set",
                            "neutral",
                            "$~Je peux faire bien plus grâce à @FunctionDefinition ici. Venez me retrouver quand vous voulez en savoir plus !"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "Set",
                            "curious",
                            "$~Oh, et hé @FunctionDefinition, tu as dit que tu avais vu @Evaluate ?"
                        ],
                        ["FunctionDefinition", "sad", "$~Oui, je l'ai fait."],
                        null,
                        ["Set", "curious", "$~Comment vont-ils ?"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Ils vont bien. Nous allons bien. Je pense… Je ne sais pas. Peut-être que ça fait trop longtemps que nous n'avons pas dansé ensemble. Quand je suis avec eux, j'ai l'impression qu'ils ne se voient pas, et donc ils ne me voient pas."
                        ],
                        [
                            "Set",
                            "curious",
                            "$~Cela semble être une période difficile pour vous aussi. Peut-être qu'avec notre nouveau directeur, nous danserons à nouveau et que vous trouverez tous les deux une solution."
                        ]
                    ]
                },
                {
                    "title": "$~Un à un",
                    "subtitle": "$~Cartographies",
                    "concept": "Map",
                    "performance": [
                        "fit",
                        "clockwise: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: 180°) 100%: Pose(rotation: 360°)} duration: 2s)",
                        "                    counter: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: -180°) 100%: Pose(rotation: -360°)} duration: 2s)",
                        "                    Group(Row() [Phrase('{' resting:clockwise) Phrase(':') Phrase('}' resting:counter) ])"
                    ],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Il y a encore une collection que je voudrais vous présenter. Elle ressemble un peu à @Set à certains égards et utilise même les mêmes accolades, mais elle est différente sur un point important : elle est un connecteur. Son nom est @Map."
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Map ? Tu es là ? Le silence se brise !"
                        ],
                        null,
                        [
                            "Map",
                            "curious",
                            "$~En panne ? Était-ce vraiment silencieux ? C'est si bon de te voir, @FunctionDefinition. Oh mon Dieu, as-tu parlé à @Evaluate ? Ils n'étaient pas en bonne forme la dernière fois que nous avons parlé. Tu dois leur parler."
                        ],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Oui, je leur ai parlé..."
                        ],
                        null,
                        [
                            "Map",
                            "curious",
                            "$~Oh, bien. Bon, parce qu'il y a des réparations à faire là, mon ami... Comment vas-tu ?"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Je vais bien, juste un peu seul et je m'ennuie beaucoup."
                        ],
                        null,
                        [
                            "Map",
                            "excited",
                            "$~Oh, je suis vraiment désolé d'entendre ça. Je suis resté en contact avec tout le monde pendant le silence et je me suis dit que toi et @Evaluate vous aviez l'un l'autre ! J'aurais vraiment été heureux de parler à tout moment. J'ai juste été tellement occupé à suivre les ragots entre @List et @Set et cette étrange tension entre @Conditional et @BooleanLiteral. Savez-vous ce qui se passe entre eux ?"
                        ],
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~Non, pas du tout. Il y a des tensions ? Et quels ragots ?"
                        ],
                        [
                            "Map",
                            "kind",
                            "$~Un peu comme la tension entre vous et @Evaluate ?"
                        ],
                        ["FunctionDefinition", "sad", "$~…"],
                        null,
                        [
                            "Map",
                            "neutral",
                            "$~Désolé. Peut-être pas devant notre invitée ici. Vous devez être la nouvelle personne dont tout le monde parle. J'ai entendu dire que vous alliez être notre nouveau directeur ? Quelles idées fabuleuses nous réservez-vous ? Du chant ? De la danse ? Du moment que c'est lumineux, ludique et étrange, je suis là pour ça !"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Pas besoin de leur mettre la pression ! Je suis sûr qu'ils ont plein d'idées. Nous essayons juste de créer un espace pour apprendre et nous connecter avant de déterminer le premier spectacle. Pouvez-vous nous dire ce que vous faites ?"
                        ],
                        null,
                        [
                            "Map",
                            "eager",
                            "$~Je me connecte ! Je suis un peu comme un dictionnaire : donnez-moi une valeur et je vous donnerai la définition à laquelle elle correspond. @FunctionDefinition vous a parlé des valeurs ? Je les mappe, une à une, d'une valeur à une autre. Donnez-moi une clé ; je vous donnerai la valeur à laquelle elle correspond. Par exemple, voici une correspondance entre les noms et un décompte de points. Les noms sont la clé ; les points sont la valeur."
                        ],
                        [
                            "edit",
                            "{ 'ben': 2points 'joe': 5points 'kate': 12points }"
                        ],
                        null,
                        [
                            "Map",
                            "serious",
                            "$~Mais comme @Set, je n'aime pas les doublons. Vous ne pouvez pas avoir plus d'une clé identique, mais vous pouvez avoir autant de clés uniques mappées à des valeurs équivalentes que vous le souhaitez. Par exemple, cela me donne deux clés \\'ben'\\, mais j'utilise simplement la dernière. Mais ce n'est pas grave que \\'ben'\\ et \\'joe'\\ aient le même nombre de points car ce sont des clés différentes."
                        ],
                        [
                            "edit",
                            "{'ben': 2points 'ben': 5points 'joe': 5points 'kate': 12points }"
                        ],
                        [
                            "Map",
                            "excited",
                            "$~C'est mon partenariat avec @Bind qui me rend spécial ! C'est la façon dont je relie des valeurs à d'autres valeurs (Avez-vous déjà rencontré @Bind ? Non ? Ohhhh, vous allez les adorer. Ils sont FABULEUX.)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Map, que faire si vous souhaitez une cartographie vide ? En quoi est-ce différent d'un ensemble vide, \\{}\\ ?"
                        ],
                        [
                            "Map",
                            "neutral",
                            "$~Oh, c'est juste moi tout seul ! Le petit @Bind et moi passons du temps ensemble, sans clés ni valeurs."
                        ],
                        ["edit", "{:}"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Et si notre directeur ne fournit pas de valeur ou de clé ? Comme ça ? Comme si \\3\\ n'avait aucune valeur ?"
                        ],
                        ["conflict", "{1:1 2:2 3 }"],
                        [
                            "Map",
                            "serious",
                            "$~Oh… NE FAITES PAS ça. Je n'aime que les paires. 3 est-il une clé ? Une valeur ? Complètement déroutant. Arrêtez le spectacle."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Et si notre réalisateur veut obtenir une valeur à partir d'une clé ?"
                        ],
                        [
                            "Map",
                            "neutral",
                            "$~Tout comme @Set : mettez simplement un \\{}\\ après une carte et donnez-moi la clé que vous voulez."
                        ],
                        [
                            "edit",
                            "{ 'ben': 2points 'joe': 5points 'kate': 12points }{'ben'}"
                        ],
                        null,
                        [
                            "Map",
                            "neutral",
                            "$~Et si je n'ai pas de clé, je te donnerai @None."
                        ],
                        [
                            "edit",
                            "{ 'ben': 2points 'joe': 5points 'kate': 12points }{'anna'}"
                        ],
                        null,
                        [
                            "Map",
                            "neutral",
                            "$~Vous pouvez utiliser notre ami @Otherwise si vous préférez traiter un @None comme autre chose.",
                            "$~Ici, par exemple, nous utilisons par défaut \\0points\\ s'il n'y a pas de valeur."
                        ],
                        [
                            "edit",
                            "map: { 'ben': 2points 'joe': 5points 'kate': 12points }\nmap{'anna'} ?? 0points"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "Map",
                            "neutral",
                            "$~Sinon, je ressemble beaucoup à @Set : je peux faire beaucoup des mêmes fonctions. Passez me voir à tout moment et je serai ravi de vous en montrer plus !"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Merci, @Map ! /Vous/ êtes fabuleux."
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~Fête de casting",
            "performance": [
                "fix",
                "count: 32",
                "",
                "gravity•#m/s^2: 15m/s^2",
                "",
                "Stage(count → [].translate(",
                "   ƒ(_) ",
                "       Phrase(",
                "           '→?' → [].random()",
                "           place: Motion(",
                "               Place(y: 10m)",
                "               Velocity(Random(-5 5) · 1m/s angle: Random(0 360) · 1°/s)",
                "           )",
                "           matter: Matter(bounciness: Random())",
                "       )",
                "   )",
                "   gravity: gravity",
                ")"
            ],
            "scenes": [
                {
                    "title": "$~DEVIATION",
                    "subtitle": null,
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~Je n'arrive pas à croire combien de personnages nous avons rencontrés jusqu'à présent. Est-ce que ça fait beaucoup ? J'ai aussi l'impression que nous n'avons pratiquement pas progressé.",
                            "$~Je n'ai même pas encore eu le temps de vous montrer les parties les plus excitantes de la mise en place d'un spectacle !"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Cela vous dérangerait-il si nous nous arrêtions pour rencontrer deux autres personnes avant de passer aux parties vraiment passionnantes ? Ces deux personnages sont tellement essentiels au travail avec les valeurs et en particulier le texte ; nous devons simplement en parler avant de passer aux choses plus spectaculaires."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Quels sont-ils?",
                            "$~Les conversions. Elles sont l'alchimie de ce monde qui permet de changer un type de valeur en un autre. Allons à leur rencontre."
                        ]
                    ]
                },
                {
                    "title": "$~Nous pouvons être n'importe quoi",
                    "subtitle": "$~Convertir",
                    "concept": "Convert",
                    "performance": ["use", "fix", "FlyIn", "→"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Hé, @Convert ! Tu es là ?"
                        ],
                        [
                            "Convert",
                            "happy",
                            "$~Mec, @FunctionDefinition, ça fait un bail ! Tu as l'air stylé. C'est super calme ces derniers temps, n'est-ce pas ? Tu as un nouvel ami ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Oui, cette personne ici est intéressée par la réalisation. Nous sommes en pleine tournée — nous avons rencontré @Program, @ExpressionPlaceholder, @UnparsableExpression, @Evaluate, et toutes les valeurs et collections. J'ai pensé que vous rencontrer ensuite serait parfait puisque vous travaillez en étroite collaboration avec les valeurs."
                        ],
                        [
                            "Convert",
                            "kind",
                            "$~Eh bien oui, les valeurs sont mes meilleures amies. Nous aimons faire du parkour le week-end, ou des spectacles, ou autre."
                        ],
                        null,
                        ["FunctionDefinition", "curious", "$~Parkour ?"],
                        [
                            "Convert",
                            "serious",
                            "$~Ouais, tu sais, comme la gymnastique dans la rue, sauter par-dessus des objets, enjamber des bâtiments – comme un truc sur un fil de fer, mais sans fil. Des sauts courageux !"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Ohhh, je vois ce que tu veux dire. Oui, je suppose que ce que tu fais ressemble un peu au parkour. Je ne suis pas sûr que notre nouvel ami réalisateur suive, cependant. Peux-tu expliquer sans les métaphores ?"
                        ],
                        null,
                        [
                            "Convert",
                            "kind",
                            "$~Avec plaisir, mon frère. Imagine que tu aies un numéro."
                        ],
                        ["edit", "1"],
                        null,
                        [
                            "Convert",
                            "kind",
                            "$~Et imaginez que vous vouliez que ce soit du texte. Mettez-moi là-dedans avec @Text et BAM, vous avez du texte !"
                        ],
                        ["edit", "1 → ''"],
                        null,
                        [
                            "Convert",
                            "serious",
                            "$~Ou alors, imaginez que vous ayez un SMS et que vous vouliez un numéro. Mettez-moi là-dedans avec @Number et POP, vous avez un numéro !"
                        ],
                        ["edit", "'1'→#"],
                        null,
                        [
                            "Convert",
                            "surprised",
                            "$~Mais vous voulez voir quelque chose de vraiment intéressant ? Imaginez que vous avez du texte et que vous voulez que ses caractères soient dans une liste. Mettez-moi là-dedans avec @List et HAAAAAA, vous avez une liste de lettres."
                        ],
                        ["edit", "'halloween'→[]"],
                        null,
                        [
                            "Convert",
                            "serious",
                            "$~Mais moi et @Number ? On a pratiqué des tricks vraiment dingues. Disons que tu as du temps libre et que tu en veux une deuxième fois ? On t'a compris."
                        ],
                        ["edit", "5day → #s"],
                        null,
                        [
                            "Convert",
                            "excited",
                            "$~Mais le vrai truc du diable ? L'enchaînement. Comme plusieurs conversions à la suite. Regardez celle-ci. Des jours aux secondes, du texte à la liste, le tout dans une seule chaîne. Maintenant, nous avons une liste de chiffres. Génial !"
                        ],
                        ["edit", "1day → #s → '' → []"],
                        null,
                        [
                            "Convert",
                            "neutral",
                            "$~Donc, mon principe est que tout doit être tout, sans limites. Tout peut être n'importe quoi (genre, pas n'importe quoi, mais vous savez, autant que je peux).",
                            "$~Mais pourquoi quelque chose devrait-il être enfermé dans une seule identité, tu sais ? La libération, mec."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~C'est incroyable, @Convert, et tellement inspirant. Mais vraiment, quoi ?"
                        ],
                        [
                            "Convert",
                            "sad",
                            "$~Eh bien, pas vraiment. Je veux dire, si tu me donnes quelques secondes et que tu me demandes un @Set, genre, qu'est-ce que ça veut dire ?",
                            "$~Je ferai de mon mieux pour trouver un moyen... comme, ici, je sais comment transformer des nombres en @Text et @Text en un @Set, donc je vais vous donner l'ensemble des symboles sous forme de texte de ce nombre.",
                            "$~Mais ce n’est probablement pas ce que vous vouliez…",
                            "$~Et si je ne sais pas comment vous donner ce que vous avez demandé, je vais tout arrêter."
                        ],
                        ["edit", "10s → {}"],
                        null,
                        ["use", "fit", "Symbol", "📕"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~D'accord, c'est logique. Il n'y a donc que quelques conversions, pas toutes les conversions possibles."
                        ],
                        [
                            "Convert",
                            "sad",
                            "$~Ouais… vous pouvez toujours vérifier un type de valeur et voir quels types de conversions ils prennent en charge."
                        ],
                        null,
                        ["use", "fit", "Symbol", "🧐"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Saviez-vous que @Convert et @Evaluate sont liés ? Ils sont comme des cousins. @Evaluate évaluera n'importe quelle fonction, mais @Convert évaluera n'importe quelle conversion. D'une certaine manière, @Evaluate effectue également des conversions, des entrées aux sorties."
                        ],
                        [
                            "Convert",
                            "scared",
                            "$~Wouah. Je n'y avais jamais pensé de cette façon. Comme, /I/ convertit les entrées en sorties, et @Evaluate convertit les entrées en sorties. Et comme, @FunctionDefinition, tu nous *dis* comment convertir les entrées en sorties. Est-ce que c'est le secret du Verset ?",
                            "$~Comme si tout était une question de conversion d’entrées en sorties ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Je crois que oui?"
                        ],
                        ["Convert", "surprised", "$~🤯"],
                        ["edit", "Phrase('🤯')"],
                        null,
                        ["use", "fit", "Symbol", "🤯"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Convert, comment notre nouveau directeur devrait-il savoir quels types de conversions sont possibles ?"
                        ],
                        [
                            "Convert",
                            "scared",
                            "$~Désolé, mec, je suis encore un peu secoué. Euh, ils peuvent consulter n'importe lequel des types de valeur dans la référence @UI/docsExpand.",
                            "$~Il devrait y avoir une liste des autres types dans lesquels je peux les transformer… Tout est une conversion…"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~C'était vraiment super de te voir, @Convert ! Nous allons sortir et rencontrer les autres. À bientôt ?"
                        ],
                        [
                            "Convert",
                            "surprised",
                            "$~Bientôt. Ouais… Oui ! Complètement, oui."
                        ]
                    ]
                },
                {
                    "title": "$~Comment choisir ?",
                    "subtitle": "$~Décisions",
                    "concept": "Conditional",
                    "performance": ["use", "fix", "FlyIn", "?"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Nous avons rencontré tellement de types de valeurs au cours de notre voyage jusqu'à présent et avons discuté de tellement de façons de travailler avec elles. Il n'y en a qu'une de plus que je voulais vous présenter. Elles sont particulièrement spéciales car elles sont ce qui rend nos performances si dynamiques. Elles s'appellent @Conditional, et elles sont le personnage central du Verse qui prend des *décisions*."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Pour être clair, ce ne sont pas toutes les décisions qui comptent : j'ai ma propre vie et ils ont la leur. Mais dans une performance, quand nous essayons de décider ce que nous allons faire ensuite sur scène, c'est à eux de suivre vos conseils en tant que metteur en scène et de décider quoi faire. Ils sont donc un partenaire essentiel pour créer des performances passionnantes."
                        ],
                        null,
                        ["use", "fit", "SpinningInTheDark", "?"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Conditional, le silence se brise ! On va peut-être recommencer à faire des spectacles !"
                        ],
                        [
                            "Conditional",
                            "curious",
                            "$~@FunctionDefinition ? Le silence est rompu ? Qu'est-ce que le silence ? Comment le rompt-on ? Sommes-nous jamais vraiment silencieux ? Qui est cette personne ? Est-ce elle qui le rompt ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Oui, le silence se brise, et c'est eux ! C'est une personne, et ils sont venus nous inspirer et diriger nos spectacles. Nous avons parlé de conversions et de respect de toutes les valeurs, et @Text et @Convert et moi voulions qu'ils vous rencontrent ! D'une certaine manière, vous êtes la plus spéciale des conversions car vous nous permettez de convertir des situations en de nouvelles valeurs."
                        ],
                        [
                            "Conditional",
                            "curious",
                            "$~Est-ce que je le fais ?",
                            "$~Je prends des décisions, mais ce que je fais en réalité, c'est encoder les décisions que les réalisateurs me demandent de prendre. Est-ce donc vraiment moi qui prends les décisions ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Je pense que oui. C'est plutôt comme si le réalisateur codait la décision, mais vous la déléguait ensuite. Vous devenez le décideur. Voulez-vous montrer un exemple ?"
                        ],
                        ["Conditional", "curious", "$~Comme ça?"],
                        ["conflict", "_•? ? _ _"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Oui, exactement comme ça !",
                            "$~Voyez-vous comment le format de @Conditional comporte quatre parties ? Il y a d'abord une *condition*, qui doit être un @Boolean. Ensuite, il y a \\?\\. Ensuite, il y a l'expression *oui*, puis une expression *non*. Ce que fait @Conditional, c'est évaluer la condition, et si c'est \\⊤\\, ils évaluent l'expression *oui*. Sinon, ils évaluent l'expression /non/. C'est une façon tellement puissante de décider !"
                        ],
                        null,
                        ["edit", "1 > 5 ? 'more' 'less'"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Pouvez-vous nous donner un exemple plus précis ?"
                        ],
                        [
                            "Conditional",
                            "curious",
                            "$~Quelque chose comme ça ?"
                        ],
                        ["edit", "1 > 5 ? 'less' 'more'"],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Euh, hm. Je suppose que c'est une décision, mais c'est une mauvaise décision. Un n'est pas moins que cinq. Je suppose que vos décisions ne sont pas toujours bonnes, mais elles sont fiables, n'est-ce pas ?"
                        ],
                        null,
                        [
                            "Conditional",
                            "curious",
                            "$~Fiable ? Peut-être ? Si vous acceptez que je décide simplement de ce que le réalisateur me dit, alors oui, mais que se passe-t-il si le réalisateur me dit cela ? Est-ce vraiment une décision si le nombre ne peut jamais être supérieur à \\3\\ ?"
                        ],
                        ["edit", "[1 2 3].random() > 3 ? 'big' 'small'"],
                        [
                            "FunctionDefinition",
                            "confused",
                            "$~Hm, je suppose que c'est une bonne remarque. Je suppose que le fait qu'une chose soit une décision dépend beaucoup de la décision du réalisateur. Je suppose que cela signifie que le réalisateur doit réfléchir assez attentivement aux décisions qu'il vous donne ?"
                        ],
                        null,
                        [
                            "Conditional",
                            "curious",
                            "$~Avec prudence ? Sceptique, peut-être ? Avez-vous pensé à mes bons amis @BooleanLiteral ? Comment leur vision du monde peut-elle suffire à représenter toutes les décisions que nous pourrions vouloir prendre ? Et si, par exemple, nous voulions une performance qui prenait le nom de quelqu'un et décidait si elle était belle ou non ? Est-ce une décision vraie ou fausse ? Est-ce même une décision que nous devrions prendre ? Cela ne semble-t-il pas terriblement réducteur et biaisé ?",
                            "$~Directeur, selon vous, quelles lettres rendent un nom beau ?"
                        ],
                        ["edit", "'Verse'.has('e') ? 'beautiful' 'ugly'"],
                        null,
                        [
                            "Conditional",
                            "curious",
                            "$~Et pensez aux questions auxquelles je réponds : pourquoi ne puis-je répondre qu'à \\⊤\\ et \\⊥\\ ? Pourquoi pas un nombre ? N'ai-je pas le droit de décider si \\1\\ est beau ?"
                        ],
                        ["conflict", "1 ? 'beautiful' 'ugly'"],
                        null,
                        ["use", "fit", "SpinningInTheDark", "?"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Je suppose que je n'y ai jamais vraiment pensé de cette façon. Mais @Conditional, même si tu as des limites, tu es magnifique. Tu nous permets de faire tellement de choses dans nos performances que nous ne pourrions pas faire autrement. Tu rends possible tant de joie et de rires. Notre réalisateur n'a même pas encore vu les choses incroyables dont tu es capable."
                        ],
                        [
                            "Conditional",
                            "curious",
                            "$~Tu penses vraiment ça ?",
                            "$~Que je suis belle ? Peut-être que ces limites valent encore la peine ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Ils le sont absolument.",
                            "$~Et je suis ravi de montrer à notre nouvel ami ici présent à quel point il vaut la peine d'être vu. Seras-tu là quand je le ferai ?"
                        ],
                        [
                            "Conditional",
                            "happy",
                            "$~Y a-t-il quelque chose qui pourrait me rendre plus heureux ?"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~Changement de scène",
            "performance": ["use", "fit", "TakeTheMic"],
            "scenes": [
                {
                    "title": "$~Saisir",
                    "subtitle": null,
                    "performance": ["use", "fit", "DarkVoid"],
                    "lines": [
                        [
                            "fix",
                            "amp: (Volume() · 10)",
                            "Phrase('.'.repeat(amp.roundDown()) resting:Pose(scale: amp))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Saviez-vous que votre monde et le nôtre sont connectés ? Faites un son et nous pourrons l'entendre..."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Vous ne saviez pas que le Verset existait, mais nous savons que le vôtre existe. Parce que c'est votre monde qui rend notre monde intéressant.",
                            "$~Vous l'avez probablement remarqué au fur et à mesure que nous avons parcouru et rencontré toutes les valeurs, collections et conversations.",
                            "$~Que signifient ces valeurs si personne ne leur donne un sens ou ne leur fournit ces valeurs en premier lieu ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Je veux vous montrer le lien entre nos mondes et ce qu'ils rendent possible. Nous les appelons des **flux d'entrée**, et ils sont peut-être le type d'entrée le plus magique du Vers. Ils sont comme des fonctions qui créent un type spécial de valeur qui change à mesure que votre monde change. Ils ne peuvent pas non plus communiquer de la manière à laquelle vous êtes habitué. Ils ressemblent davantage à des battements de cœur d'un autre monde. Je vais donc faire de mon mieux pour expliquer comment ils fonctionnent, car ils ne pourront pas s'expliquer eux-mêmes.",
                            "$~Etes-vous prêt à en rencontrer un ?"
                        ]
                    ]
                },
                {
                    "title": "$~Tic, tic, tic...",
                    "subtitle": "$~Temps",
                    "concept": "Time",
                    "performance": ["use", "fit", "Symbol", "🕦"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Commençons par le flux le plus élémentaire de tous : @Time. Pour créer un flux, nous utilisons @Evaluate et donnons le nom du type de flux que vous souhaitez."
                        ],
                        ["Time", "neutral", "$~tic tic tic tic tic…"],
                        ["edit", "Time()"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Voyez-vous comme le temps change ? Les flux sont une série de valeurs. Chaque fois qu'un flux obtient une nouvelle valeur, @Program réévalue avec la nouvelle valeur du flux. C'est pourquoi ce programme continue à compter : nous avons créé un flux temporel qui démarre à 0 milliseconde et qui continue à se mettre à jour à chaque fois que son horloge tourne. Ce temps est votre temps, celui de votre monde."
                        ],
                        ["Time", "neutral", "$~tic tic tic tic tic…"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Vous voyez ce \\1000ms\\ ? C'est un @Time/frequency qui indique à @Time de cocher toutes les 1000 millisecondes au lieu de la valeur par défaut de 33 millisecondes, sa valeur par défaut. Maintenant, c'est comme un compteur qui coche toutes les secondes. Ces entrées que @Time prend sont comme une configuration : elles indiquent au flux comment se comporter."
                        ],
                        ["Time", "neutral", "$~tic… tic… tic… tic… tic…"],
                        ["edit", "Time(1000ms)"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Mais nous pouvons utiliser tous les merveilleux personnages que nous avons rencontrés pour transformer davantage le temps. Par exemple, que se passerait-il si nous voulions savoir si le temps était un multiple de \\2\\ ? Nous pourrions utiliser @Number/remainder, qui obtient le reste d'une division. Si le reste est nul, nous évaluerons à \\⊤\\ et \\⊥\\ sinon. Voyez comme il change d'avant en arrière entre \\⊤\\ et \\⊥\\ ? C'est tellement magique."
                        ],
                        ["Time", "neutral", "$~tic… tic… tic… tic… tic…"],
                        ["edit", "(Time(1000ms) % 5) = 2ms"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Il y a une autre chose que vous avez peut-être remarquée : il y a une zone sous la sortie qui est une chronologie. Elle est mise à jour à chaque fois que le programme réévalue, c'est-à-dire à chaque fois qu'un flux change. Elle s'affiche à chaque fois que @Time est activé."
                        ],
                        ["Time", "neutral", "$~tic… tic… tic… tic… tic…"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Essayez de faire glisser la chronologie @UI/timeline en utilisant les boutons de la chronologie, en utilisant les touches fléchées avec la chronologie focalisée ou en appuyant sur les boutons ⏸️ et ▶️ @UI/playToggle. Vous pouvez revenir en arrière dans le temps pour voir les évaluations précédentes. Les flèches en pointillés permettent d'accéder aux entrées de flux précédentes et futures. Les flèches pleines permettent de passer d'une étape à l'autre du programme. Essayez de naviguer dans le temps et de voir ce que le programme affiche. C'est ainsi que vous pouvez voir toutes les belles expressions que vous avez apprises sur l'évaluation par @Evaluate, une étape à la fois, ce qui donne la valeur finale que @Program affiche sur scène."
                        ],
                        ["Time", "neutral", "$~tic… tic… tic… tic… tic…"],
                        ["edit", "Time(1000ms)"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Time est un flux intéressant car il peut être utilisé pour de nombreuses choses différentes : suivre la durée d'une performance, chronométrer un événement, animer un mot. C'est l'un des flux les plus flexibles mais aussi l'un des plus abstraits."
                        ]
                    ]
                },
                {
                    "title": "$~Clic-clac",
                    "subtitle": "$~Clé",
                    "concept": "Key",
                    "performance": ["use", "fit", "Symbol", "⌨️"],
                    "lines": [
                        [
                            "fit",
                            "Phrase('⌨️' resting:Sequence({0%: Pose(rotation: -5°) 25%: Pose(rotation: 0°) 50%: Pose(rotation: 5°) 75%: Pose(rotation: 0°) 100%: Pose(rotation: -5°)} 1s 'straight'))"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Si je ne me trompe pas, il existe dans votre monde un outil appelé « clavier » ? C'est une façon de sélectionner lequel d'entre nous vous souhaitez voir apparaître dans vos documents, n'est-ce pas ? Eh bien, dans Verse, nous recevons ces requêtes sous forme de flux de texte, chaque valeur de texte représentant la touche qui a été enfoncée. Nous les utilisons pour écouter ce que les gens de votre monde tapent. Ce flux s'appelle @Key."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Voici un exemple simple. Cliquez sur la scène ou concentrez-vous dessus avec le clavier, puis appuyez sur n'importe quelle touche du clavier. Vous verrez la touche que vous avez tapée apparaître par son nom. En effet, chaque fois que le flux de touches change, @Program évalue le flux de touches comme sa dernière valeur, puis l'affiche sur la scène."
                        ],
                        ["Key", "neutral", "$~clic clic clic"],
                        ["edit", "Key()"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Ce flux changera à chaque fois qu'une touche est enfoncée. Mais vous pouvez indiquer à un flux de touche de changer uniquement lorsqu'une touche particulière est enfoncée. Vous voyez comment le flux passe à \\a\\ la première fois, mais ne change plus ensuite ? C'est parce que ce flux ne change que lorsque \\a\\ est enfoncé, il affiche donc toujours \\a\\. Mais vous verrez toujours la nouvelle valeur de touche apparaître dans la chronologie."
                        ],
                        ["Key", "neutral", "$~clic 'a'…"],
                        ["edit", "Key('a')"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Parfois, il est utile de savoir quand une touche est relâchée au lieu d'être enfoncée. Passez simplement \\⊥\\ pour indiquer au flux @Key que vous devez savoir quand une touche est relâchée au lieu d'être enfoncée. Maintenant, appuyez et maintenez la touche « a » puis, lorsque vous la relâchez, vous verrez le « a » apparaître sur scène. Vous ne l'avez pas compris ? Appuyez sur le bouton ↻ pour réinitialiser la performance et réessayez."
                        ],
                        ["Key", "neutral", "$~clic 'a'…"],
                        ["edit", "Key('a' ⊥)"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Les flux @Key sont vraiment utiles lorsque vous souhaitez qu'une performance réagisse aux touches sur lesquelles le public appuie. Par exemple, vous pouvez vérifier si une touche contient le mot « Flèche » pour déterminer si une touche fléchée a été enfoncée. Appuyez sur une touche fléchée et vous verrez « déplacer » ; appuyez sur autre chose et vous verrez « rester »"
                        ],
                        ["Key", "neutral", "$~« Flèche » cliquable…"],
                        ["edit", "Key().has('Arrow') ? 'move' 'stay'"]
                    ]
                },
                {
                    "title": "$~Hummmmmm…",
                    "subtitle": "$~Aiguille",
                    "concept": "Pointer",
                    "performance": ["use", "fit", "Symbol", "👆🏻"],
                    "lines": [
                        [
                            "fix",
                            "Phrase('👆🏻' resting:Sequence({0%: Pose(offset: Place(0m 0m)) 25%: Pose(offset: Place(-1m 1m)) 50%: Pose(offset: Place(1m 1m)) 75%: Pose(offset: Place(1m 0m)) 100%: Pose(offset: Place(0m 0m))} 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Vous avez également quelque chose appelé une « souris » dans votre monde, ainsi que des « trackpads » et des « écrans tactiles » ? Ceux-ci apparaissent dans notre monde sous forme de flux @Pointer, qui est un flux de lieux sur scène."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Déplacez votre pointeur sur la scène et vous verrez le flux de @Place changer sur scène."
                        ],
                        ["fix", "Pointer()"],
                        ["Pointer", "neutral", "$~wzzzzzzzzzz…"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Voyons maintenant ça sur scène !"
                        ],
                        ["Pointer", "neutral", "$~wzzzzzzzzzz…"],
                        ["fix", "Phrase(Pointer()→'' place: Pointer())"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~@Pointer peut être amusant si vous souhaitez lier le @Place d'une @Phrase à l'endroit où se trouve le pointeur."
                        ],
                        ["fix", "Phrase('🐪' size: 4m place: Pointer())"],
                        ["Pointer", "neutral", "$~wzzzzzzzz…"]
                    ]
                },
                {
                    "title": "$~Et... maintenant !",
                    "subtitle": "$~Bouton",
                    "concept": "Button",
                    "performance": ["use", "fit", "Symbol", "🖱️"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Button est comme @Key mais correspond au bouton du pointeur principal comme un clic ou un tapotement. Il s'agit simplement d'un flux de \\⊤\\, indiquant quand le bouton du pointeur est enfoncé. Appuyez sur ce bouton et regardez les événements apparaître sur la chronologie."
                        ],
                        ["Button", "neutral", "$~Clique… Clique… Clique…"],
                        ["edit", "Button()"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Vous pouvez le configurer pour qu'il ne change que vers le haut ou vers le bas en lui passant un \\⊤\\ ou \\⊥\\."
                        ],
                        ["Button", "neutral", "$~en bas… en bas… en bas…"],
                        ["edit", "Button(ø)"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~L'utilisation d'un flux @Button est une façon de progresser dans les étapes d'une performance ou de déclencher un changement dans une performance. Ce petit programme répertorie les pressions sur les boutons et commence à afficher la tristesse, mais lorsque le flux @Button passe à true, @Conditional évalue à la place \\'happy'\\."
                        ],
                        ["edit", "Phrase(Button(ø) ? 'sad' 'happy')"]
                    ]
                },
                {
                    "title": "$~Est-ce que quelqu'un écoute ?",
                    "subtitle": "$~Volume",
                    "concept": "Volume",
                    "performance": ["use", "fit", "Symbol", "🎤"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Votre monde et notre monde ont aussi du son. Saviez-vous que nous pouvons vous entendre avec votre consentement ? Nous écoutons avec un flux appelé @Volume, qui fournit une séquence d'amplitudes de faible niveau. Votre micro peut demander la permission d'être partagé avec nous. Une fois que vous l'aurez fait, vous verrez un nombre qui correspond à l'amplitude, entre \\0\\ et \\100\\."
                        ],
                        ["Volume", "neutral", "$~bzzzZZZZZZzzzzzzZZZZ…"],
                        ["edit", "Volume()"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Volume peut être utilisé pour faire réagir les performances au son du public. Par exemple, ici, nous pourrions faire une petite visualisation d'amplitude en convertissant le nombre d'amplitude du flux en un certain nombre de caractères \\'o'\\. Voyez-vous comment lorsque vous faites du bruit, il y a plus de \\'o'\\ ? L'amplitude de @Volume est divisée par \\10\\, la plaçant dans la plage \\0\\ à \\10\\. Ensuite, cette valeur est donnée à la fonction @Text/repeat, qui répète le \\'o'\\ le nombre de fois donné."
                        ],
                        ["Volume", "neutral", "$~bzzzZZZZZZzzzzzzZZZZ…"],
                        ["edit", "'o'.repeat(Volume() · 10)"]
                    ]
                },
                {
                    "title": "$~On ne sait jamais…",
                    "subtitle": "$~Aléatoire",
                    "concept": "Random",
                    "performance": [
                        "fit",
                        "Phrase(((Time(100ms) % 10) ÷ 1ms) → '')"
                    ],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Il y a une autre source d'entrée que je veux vous montrer. Vous vous souvenez de \\[].random()\\ de tout à l'heure, à partir de @List ?",
                            "$~À l'intérieur, il utilise une @FunctionDefinition appelée @Random, qui fournit une séquence infinie de nombres aléatoires. C'est une sorte de flux car il génère des entrées de votre monde, pas du nôtre. Mais il est un peu différent des autres flux dans le sens où il ne provoque pas la réévaluation d'un @Program.",
                            "$~Au lieu de cela, chaque fois qu’il est évalué, il donne un nombre aléatoire différent.",
                            "$~Vous voyez ce petit bouton ↻ @UI/resetEvaluator près de la chronologie ? Appuyez dessus pour réévaluer le programme manuellement et vous verrez un nouveau numéro entre \\0\\ et \\1\\ à chaque fois."
                        ],
                        ["Random", "neutral", "$~0,223423… 0,823423… 0,123459"],
                        ["edit", "Random()"],
                        null,
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~Nous pouvons indiquer à @Random la plage de nombres que nous souhaitons en lui donnant un nombre minimum et maximum. Cet exemple donne des nombres compris entre \\1\\ et \\10\\ :"
                        ],
                        ["Random", "neutral", "$~1… 7… 3… 9… 10… 2…"],
                        ["edit", "Random(1 10)"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Le hasard peut être très amusant ! Nous pouvons l'utiliser avec des flux pour créer un chaos amusant. Par exemple, ici, nous choisissons un mot au hasard dans une liste de mots. C'est la même chose que \\['kitty' 'cat' 'meowy'].random()\\. Continuez à appuyer sur ↻ pour obtenir un synonyme de chat différent ! Essayez d'ajouter votre propre mot à la liste et voyez si vous pouvez faire apparaître le mot."
                        ],
                        ["Random", "neutral", "$~1… 2… 2… 1… 3…"],
                        ["edit", "['kitty' 'cat' 'feline'][Random(1 3)]"]
                    ]
                },
                {
                    "title": "$~Bouge-moi",
                    "subtitle": "$~Placement",
                    "concept": "Placement",
                    "performance": [
                        "fix",
                        "Phrase('click, tap, or arrow to move me' place: Placement() moving:Pose() duration: 0.25s)"
                    ],
                    "lines": [
                        [
                            "edit",
                            "Phrase('🌭' place: Placement() moving:Pose() duration: 0.25s)"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Parfois, c'est agréable d'engager le public à notre place sur @Stage.",
                            "$~@Placement est un excellent moyen d'y parvenir ! Il s'agit d'un flux de @Place qui répond aux touches fléchées du clavier, aux clics et aux appuis.",
                            "$~Essayez de les utiliser pour déplacer le hot-dog."
                        ],
                        null,
                        [
                            "edit",
                            "Phrase('🌭' place: Placement(distance: 0.5m) moving:Pose() duration: 0.25s)"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Il existe de nombreuses façons de le personnaliser. Par exemple, si vous souhaitez modifier la façon dont il se déplace, vous pouvez lui attribuer une distance.",
                            "$~Vous voyez comment nous lui avons donné \\0,5\\ pour la première entrée ? Maintenant, il bouge un peu moins. Essayez de le changer pour un autre nombre !"
                        ],
                        null,
                        [
                            "edit",
                            "Phrase('🌭' place: Placement(depth: ⊤) moving:Pose() duration: 0.25s)"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Vous pouvez également activer et désactiver le mouvement sur différents axes. Par exemple, donnez une profondeur \\⊤\\ pour permettre le mouvement sur l'axe z.",
                            "$~Appuyez sur les touches + et - pour le rapprocher ou l'éloigner du focus."
                        ]
                    ]
                },
                {
                    "title": "$~Rester en mouvement",
                    "subtitle": "$~Mouvement",
                    "concept": "Motion",
                    "performance": [
                        "fix",
                        "Stage([Phrase('🏀' 1m place: Motion(Place(0m 10m)) matter: Matter(2kg 0.8)) Shape(Rectangle(-10m 0m 10m -1m))])"
                    ],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Jusqu'à présent, tous les *flux* dont nous avons parlé sont des séquences de valeurs simples, comme @Text ou @Number. Certains flux, cependant, peuvent produire des valeurs complexes.",
                            "$~@Motion est l'un des plus intéressants d'entre eux. Il crée un flux de @Place."
                        ],
                        null,
                        ["edit", "Phrase('🏀' 3m place: Motion(Place(0m 5m)))"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Voici la manière la plus simple de l'utiliser. Cela crée un flux @Motion qui commence par cette @Phrase. Il continuera à déplacer la balle en fonction de la *gravité*."
                        ],
                        ["Motion", "excited", "$~/Wouah…/"],
                        null,
                        [
                            "edit",
                            "Stage([Phrase('🏀' 1m place: Motion(Place(0m 10m))) Shape(Rectangle(-10m 0m 10m -2m))])"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Mais la balle continue de tomber parce qu'il n'y a pas de sol ! Nous pouvons mettre quelque chose appelé @Shape sur @Stage, comme un @Rectangle. Il faut deux coins. Nous allons le rendre beau et épais.",
                            "$~Hm, il tombe à travers le sol..."
                        ],
                        ["Motion", "excited", "$~/Wouah…/"],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "   [",
                            "       Phrase('🏀' 1m place: Motion(Place(0m 10m)) matter: Matter(1kg 0.9))",
                            "      Shape(Rectangle(-10m 0m 10m -2m))",
                            "   ]",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Ah oui, c'est vrai ! C'est parce que nous avons oublié de donner à la balle @Matter. Matter est une façon de nous dire à quel point la @Output est lourde, à quel point elle rebondit et quelle quantité de friction elle devrait avoir.",
                            "$~Rendons la balle vraiment rebondissante et légère. Youpi, maintenant elle rebondit !"
                        ],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "\t[",
                            "\t\tPhrase('🏀' 1m place: Motion(Place(-10m 10m) Velocity(5m/s 15m/s 10°/s)) matter: Matter(1kg 0.9))",
                            "\t\tShape(Rectangle(-10m 0m 10m -2m))",
                            "\t]",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Mais @Motion a bien d’autres astuces.",
                            "$~Par exemple, nous pouvons lui donner un départ @Motion/velocity.",
                            "$~Cet exemple fait bouger la balle vers la droite et vers le haut et la fait tourner un peu au début."
                        ],
                        ["Motion", "excited", "$~Youpi…"],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "\t[",
                            "\t\tPhrase('🏀' 1m place: Motion(Place(-10m 10m) Velocity(5m/s 15m/s 10°/s)) matter: Matter(1kg 0.9))",
                            "\t\tShape(Rectangle(-10m 0m 10m -2m))",
                            "\t]",
                            "\tgravity: 1m/s^s",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Vous pouvez même modifier @Stage/gravity pour qu'il soit vraiment extrême.",
                            "$~Essayez de le changer pour qu’il ressemble à la lune, où la gravité est vraiment faible !",
                            "$~Ou essayez de modifier @Matter/mass ou @Matter/bounciness, ce qui affecte la façon dont @Phrase rebondit."
                        ],
                        ["Motion", "excited", "$~Wh…"],
                        null,
                        [
                            "edit",
                            "Stage(",
                            "\t[",
                            "\t\tPhrase(",
                            "\t\t\t'🏀'",
                            "\t\t\t1m",
                            "\t\t\tname: 'ball'",
                            "\t\t\tplace: Motion(Place(-10m 10m) Velocity(5m/s 15m/s 10°/s))",
                            "\t\t\tmatter: Matter(1kg 0.9)",
                            "\t\t\tscale: Collision('ball' 'ground')•ø ? 1 2)",
                            "\t\tShape(Rectangle(-10m 0m 10m -2m) name: 'ground')",
                            "\t]",
                            ")"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Il est même possible de savoir quand une @Output entre en collision avec une autre sortie avec un flux associé appelé @Collision.",
                            "$~Il nous suffit de donner des noms à nos deux @Output. Que diriez-vous de « ball » et « ground » ?",
                            "$~Ensuite, @Collision nous donnera un @Rebound lorsqu'ils touchent et @None lorsqu'ils ne le font pas.",
                            "$~Faisons en sorte que la balle augmente à chaque fois qu'elle touche le sol pour plus d'emphase !"
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('🏀' 1m place: Motion(Place(0m 10m)) matter: Matter(2kg 0.8)) Shape(Rectangle(-10m 0m 10m -1m))])"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Il y a tellement plus de choses que vous pouvez faire avec @Motion, @Collision et @Shape !",
                            "$~J'espère que vous essayerez beaucoup de choses rebondissantes."
                        ]
                    ]
                },
                {
                    "title": "$~Parlons-en",
                    "subtitle": "$~Chat",
                    "concept": "Chat",
                    "performance": ["fit", "Phrase('🗣️')"],
                    "lines": [
                        ["fit", "Phrase('🗣️')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Parfois, une performance est une interaction. Le public dit quelque chose et nous répondons quelque chose.",
                            "$~C'est à cela que sert @Chat. Lorsque vous l'utilisez, une petite boîte apparaît sur scène pour que le public puisse saisir son message, et lorsqu'il soumet son message, @Text est ajouté au flux pour que le programme puisse y répondre."
                        ],
                        null,
                        ["edit", "Chat()"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Voici la manière la plus simple de l'utiliser. Vous tapez quelque chose et la scène l'affiche car la valeur du programme est la valeur de @Chat."
                        ],
                        null,
                        ["edit", "Chat().has('oo') ? 'choo choo' 'hmm'"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Il est plus amusant de vérifier la valeur du message de discussion pour façonner la réponse du programme. Ce petit exemple répond à tout message avec des o consécutifs avec un bruit de train !"
                        ]
                    ]
                },
                {
                    "title": "$~Tu peux répéter s'il te plait?",
                    "subtitle": "$~Page web",
                    "concept": "Webpage",
                    "performance": [
                        "fix",
                        "Webpage('https://www.nytimes.com')"
                    ],
                    "lines": [
                        ["edit", "Phrase('🛜')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Il y a longtemps, nous avons entendu dire que vous aviez ce qu'on appelle Internet ? Je pense que c'est comme ça que vous êtes ici, n'est-ce pas ?",
                            "$~Eh bien, nous avons pensé que ce serait vraiment cool d'apporter des mots d'Internet /ici/, afin que vous puissiez jouer avec eux."
                        ],
                        null,
                        ["edit", "Webpage('https://www.nytimes.com')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Voici comment cela fonctionne : vous nous donnez simplement ce que je pense s'appeler une « URL », et s'il s'agit d'une page HTML, nous en extrairons toutes les phrases et vous les donnerons dans une @List.",
                            "$~Comme ici : ce sont quelques phrases d'actualité."
                        ],
                        null,
                        ["edit", "Webpage('https://www.nytimes.com' 'h2')"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Vous pouvez également filtrer les mots avec ce que vous appelez, je crois, une requête « CSS » ? Comme nous l'avons entendu, « h3 » signifie « en-tête de niveau 3 », voici donc toutes les phrases dans les en-têtes de la page."
                        ],
                        null,
                        [
                            "edit",
                            "words: Webpage('https://www.nytimes.com' 'h2')\n\nwords•[''] ? Group(Stack() words.subsequence(1 5).translate(ƒ(word) Phrase(word resting: Sequence(spin() 1s)))) ø"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Une fois que vous avez une liste de mots, vous pouvez en faire ce que vous voulez ! Comme par exemple prendre les cinq premiers et les transformer en phrases tournantes, bien sûr."
                        ]
                    ]
                },
                {
                    "title": "$~Au bon moment",
                    "subtitle": "$~Réaction",
                    "concept": "Reaction",
                    "performance": ["use", "fit", "Symbol", "…"],
                    "lines": [
                        ["fit", "Phrase('…' resting:Pose(rotation: 120°))"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Tous ces flux que je vous ai montrés viennent de votre monde. Mais parfois, il est utile de créer vos propres flux basés sur ces autres flux. C'est là qu'intervient mon ami @Reaction ! @Reaction, tu es là ?"
                        ],
                        [
                            "Reaction",
                            "excited",
                            "$~Ouais ouais ouais ! C'est @FunctionDefinition ! Comment ça va ? Tout a été si... constant ces derniers temps. L'as-tu remarqué ?"
                        ],
                        null,
                        ["fit", "Phrase('…' resting:Pose(rotation: 240°))"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Tu parles du silence ? Oui, rien n'a vraiment changé, n'est-ce pas, depuis que la dernière personne est partie ? Comment ça s'est passé pour toi ?"
                        ],
                        [
                            "Reaction",
                            "sad",
                            "$~C'est vraiment étrange, c'est vraiment étrange. Toute ma vie a été consacrée au changement, j'ai toujours écouté et observé les nouvelles idées des gens, les aidant à les transformer en valeurs. Mais il n'y a eu rien. Jusqu'à il y a un instant... Attendez... c'est une personne ?"
                        ],
                        null,
                        ["fit", "Phrase('…' resting:Pose(rotation: 360°))"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Oui ! C'est notre nouveau réalisateur potentiel. Je leur montrais justement @Time, @Key, @Pointer, @Button, @Volume et @Random, donc vous avez probablement remarqué toutes les nouvelles entrées qu'ils apportaient de leur monde."
                        ],
                        [
                            "Reaction",
                            "excited",
                            "$~Ouiiiiiii, le changement arrive ! Puis-je vous montrer ce que je fais ?"
                        ],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~Oui, s'il vous plaît, faites-le !"
                        ],
                        null,
                        [
                            "Reaction",
                            "serious",
                            "$~Ok, donc j’ai besoin de trois choses de votre part : une condition de changement, une valeur initiale et une valeur suivante.",
                            "$~La valeur *initiale* est la valeur que je dois définir avant qu'un changement ne se produise. Il s'agit simplement d'une expression normale de toute sorte !",
                            "$~Ensuite, vous mettez \\…\\ après la valeur initiale pour me dire que la valeur peut changer.",
                            "$~Après \\…\\, donnez-moi une *condition* qui s'évalue à \\⊤\\ ou \\⊥\\. Elle doit généralement vérifier un ou plusieurs flux. Sinon, rien ne change, puisque la seule source de changement dans une performance est les flux.",
                            "$~Ensuite, mettez un autre \\…\\ après la condition pour me dire que la valeur peut changer.",
                            "$~Enfin, la valeur *suivante* est la valeur que je dois définir à chaque fois que la condition change."
                        ],
                        ["conflict", "_ … _•? … _"],
                        null,
                        [
                            "Reaction",
                            "serious",
                            "$~Voici un exemple. Vous voyez le flux @Key ? En plaçant ∆ avant la question, /Ce flux a-t-il changé ?/ Avant qu'il ne change, j'évalue la valeur initiale, \\1m\\. Mais lorsque la touche espace est enfoncée, @Program réévalue et j'évalue l'expression *suivante*, qui est \\1m\\ plus la valeur du flux précédent ; cela est représenté par \\.\\. Cela ajoute \\1m\\ à la taille de la phrase, ce qui fait que le mot devient de plus en plus gros."
                        ],
                        ["fix", "Phrase('hi' size: 1m … ∆ Key(' ') … 1m + .)"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Reaction, c'est vraiment cool. Veux-tu présenter @Changed ? Tu sembles travailler en étroite collaboration avec eux."
                        ],
                        [
                            "Reaction",
                            "kind",
                            "$~Oui, @Changed et moi sommes les meilleurs amis du monde ! Ils m'aident à savoir quand quelque chose a changé. Ils sont comme un murmureur d'eau, écoutant attentivement le monde du réalisateur…"
                        ],
                        null,
                        [
                            "Changed",
                            "eager",
                            "$~Wow, stream whisperer, ça semble un peu extrême..."
                        ],
                        [
                            "Reaction",
                            "serious",
                            "$~Oh salut, @Changed ! Veux-tu en dire plus sur ce que tu fais ?"
                        ],
                        [
                            "Changed",
                            "bored",
                            "$~Je veux dire, je vous dis simplement si un flux a changé. Donnez-moi un flux et je vérifierai. C'est tout."
                        ],
                        [
                            "Reaction",
                            "confused",
                            "$~Eh bien, c'est plus que ça, n'est-ce pas ?"
                        ],
                        [
                            "Changed",
                            "bored",
                            "$~Pas vraiment. C'est un peu ça. Je veux dire, je suis bon dans ce domaine, mais c'est mon seul truc."
                        ],
                        ["Reaction", "confused", "$~…"],
                        null,
                        [
                            "Reaction",
                            "eager",
                            "$~Ok. Bon, je pense que tu es plus important que ça. Parce que je suis assez inutile sans toi ! Par exemple, si tu me donnes une condition qui ne vérifie pas un flux, je ne vais jamais créer une nouvelle valeur. Comme ici, la condition est un @Boolean de @Button, mais sans toi, je ne change qu'avec le bouton ."
                        ],
                        [
                            "fit",
                            "Phrase('hi' size: 1m … Key(' ') = ' ' … 1m + .)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Oh, ça a du sens. Et @Reaction, tu travailles avec n'importe quel flux ?"
                        ],
                        [
                            "Reaction",
                            "eager",
                            "$~Oui, n'importe quel flux ! Et en fait, même moi. Donc si vous faites une réaction et que vous voulez faire une réaction qui réagit à sa réaction, vous pouvez le faire aussi. Mais nous ne nous en soucierons pas maintenant, car cela n'arrive généralement pas dans les performances simples."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Merci, @Reaction. Seras-tu là pour m'aider pendant que je montre à notre réalisateur le reste de notre magnifique Verse ?"
                        ],
                        [
                            "Reaction",
                            "happy",
                            "$~Oui, bien sûr, à tout moment. J'ai hâte de voir vos inspirations !!"
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~Montez sur scène",
            "performance": ["use", "fix", "RainingEmoji"],
            "scenes": [
                {
                    "title": "$~Sortir",
                    "subtitle": null,
                    "performance": ["use", "fix", "StaticRainingEmoji"],
                    "lines": [
                        ["use", "fit", "Symbol", "😀"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~Alors, qu'est-ce que tu en penses jusqu'à présent ? Je pense que le Verse est plutôt sympa, surtout parce que les personnages qui le composent sont vraiment sympas. Tout le monde est vraiment spécial !"
                        ],
                        null,
                        ["use", "fit", "Symbol", "🥱"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Tu t'ennuies ? Oh mon Dieu. Je pensais que tout cela serait si intéressant ! Qu'espérais-tu ?"
                        ],
                        null,
                        ["use", "fit", "Symbol", "😴"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Je vois. Le texte, les nombres, les listes et les flux sont ennuyeux. Je suppose que je ne vous ai pas vraiment montré tout ce que nous pouvons faire avec tout cela. Il est peut-être temps que nous commencions à parler de résultats."
                        ],
                        null,
                        ["use", "fit", "Symbol", "🤗"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Vous avez déjà vu beaucoup de résultats. Chaque fois que @Program évalue, il génère une valeur et @Program affiche cette valeur sur scène. Mais jusqu'à présent, vous n'avez vu que des choses comme des nombres, du texte, des listes. Je comprends, vous voulez juste voir des performances complètes, comme nous !"
                        ],
                        null,
                        ["use", "fit", "Symbol", "💬"],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~Vous vous souvenez de ce résultat que je vous ai montré il y a longtemps, @Phrase ? C'est là que les performances commencent vraiment. Commençons par là ! Et ensuite, je vous montrerai des façons de construire des performances toujours plus intéressantes à partir de ce bloc de construction. Laissez-moi vous présenter !"
                        ]
                    ]
                },
                {
                    "title": "$~Tu peux répéter s'il te plait?",
                    "subtitle": "$~Phrase",
                    "concept": "Phrase",
                    "performance": ["use", "fit", "Symbol", "💬"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Phrase ? Tu es là ?"
                        ],
                        [
                            "Phrase",
                            "excited",
                            "$~Sois fière de toi, ma chérie. Comment vas-tu ? Tu es tellement glamour aujourd'hui ! J'adorerais te voir sur scène un de ces jours."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "shy",
                            "$~Oh, la scène n'est pas pour moi ; je suis plus qu'heureux d'être dans les coulisses, à bricoler le décor."
                        ],
                        [
                            "Phrase",
                            "curious",
                            "$~Ne soyez pas modeste, vous êtes tout aussi fabuleux que moi. Il vous suffit d'un peu de couleur, d'une police flatteuse et vous serez merveilleux. Vous avez tant à partager ! À ce propos, nous n'avons pas fait de spectacle depuis une éternité, n'est-ce pas ? Est-ce que c'était calme ? Vous savez à quel point je me parle à moi-même ; je ne peux jamais le dire."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~C'était calme. Depuis que notre dernier directeur est parti, c'est le vide. Mais ça change ! Nous avons une nouvelle personne ! Nous avons rencontré toute la famille : @Program, @ExpressionPlaceholder, @Evaluate, toutes les valeurs, toutes les collections. Nous venons de passer du temps avec tous les flux aussi, et @Reaction et @Conditional. Je commence à ressentir des choses, hum. Mais je n'ai pas trop présenté notre nouveau directeur ici, à propos de ce que vous faites sur scène ? C'est vraiment votre monde et pas le mien ; j'ai pensé que nous viendrions vous voir en premier."
                        ],
                        null,
                        [
                            "Phrase",
                            "happy",
                            "$~Eh bien, vous êtes au bon endroit. J'adore parler de tout ce qui touche à la vie sur scène. J'ai hâte de vous montrer toutes les petites choses merveilleuses que nous faisons ici sur scène !"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Que le spectacle commence !"
                        ],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "$~Alors je sais que vous m'avez vu faire ça."
                        ],
                        ["edit", "Phrase('hi')"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~Voilà, ma chérie, la manière la plus simple de mettre un mot en scène. Mais il y a bien plus encore ! Par exemple, savais-tu que tu pouvais styliser le texte que tu me donnes en travaillant avec @FormattedTranslation ? Tu ne les connais pas encore, mais il te suffit de mettre des symboles spéciaux autour de ton texte. Voici : gras !"
                        ],
                        ["edit", "Phrase(`*hi*`)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~Pas assez d'impertinence pour vous ? Que diriez-vous de souligner, d'italique, de texte léger et de texte extra gras *tout à la fois* ?"
                        ],
                        ["edit", "Phrase(`/I/ _am_ ^the^ /fabulous/ 💬!`)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~Toujours pas impressionné ?",
                            "$~Mélangez-les tous ensemble !"
                        ],
                        ["edit", "Phrase(`/_*I am the fabulous*_/ 💬!`)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~Et si jamais vous souhaitez utiliser l'un de ces caractères de formatage spéciaux comme texte au lieu de les formater, vous pouvez simplement les répéter, un peu comme dans @Text, et j'utiliserai simplement le caractère littéralement."
                        ],
                        [
                            "edit",
                            "Phrase(`Format with /italic/ (//), _underline_ (__), ~light~ (~~), /bold/ (**), ^extra bold^ (^^) `)"
                        ],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "$~Mais je peux faire plus que simplement styliser du texte. Par exemple, je peux prendre une @Phrase/size mesurée en mètres \\m\\. Essayez de changer la taille à la taille que vous souhaitez !"
                        ],
                        ["edit", "Phrase('hi' 2m)"],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~Cette taille peut être n'importe quelle expression. Par exemple, disons que nous voulons qu'elle grandisse au fur et à mesure que @Time passe. Nous pouvons prendre le temps, le multiplier par une fraction de mètre, et voilà, tic tic tic, hi hi hi. Essayez de changer la fréquence ou le multiplicateur. Voyez quelle belle croissance vous pouvez créer !"
                        ],
                        ["fix", "Phrase('hi' Time(100ms) · 0.001m/ms)"],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "$~Aimez-vous les costumes ? J'adooooore les costumes. Mon @Phrase/face est un costume. Choisissez l'un des visages pris en charge pour pimenter le mot que vous avez choisi."
                        ],
                        [
                            "use",
                            "fix",
                            "Symbol",
                            "hi' Time(100ms) · 0.001m/ms 'Poor Story"
                        ],
                        null,
                        [
                            "Phrase",
                            "neutral",
                            "$~Vous avez besoin que je sois ailleurs sur scène ? Des endroits, s'il vous plaît ! Un @Place est simplement une position \\x\\, \\y\\ et facultativement \\z\\ en mètres \\m\\. Essayez de changer l'endroit en modifiant les numéros ou en faisant glisser la @Phrase sur scène."
                        ],
                        [
                            "fit",
                            "Phrase('hi' Time(100ms) · 0.001m/ms 'Poor Story' Place(2m 2m))"
                        ],
                        null,
                        [
                            "Phrase",
                            "curious",
                            "$~Vous vous sentez parfois un peu désaxé ? Peut-être que vous donnez au monde un peu de @Pose/rotation avec rotation. Essayez de changer la valeur de rotation pour me faire tourner !"
                        ],
                        [
                            "fit",
                            "Phrase('hi' Time(100ms) · 0.001m/ms 'Poor Story' Place(2m 2m) rotation: 20°)"
                        ],
                        null,
                        [
                            "Phrase",
                            "happy",
                            "$~Ou peut-être que nous nous amuserons un peu et associerons la rotation à @Time ! Youpiiii. Des idées sur comment me faire tourner plus vite ? Voyons si tu peux trouver…"
                        ],
                        [
                            "fit",
                            "Phrase('hi' 3m 'Poor Story' rotation: Time(10ms) · 1°/ms)"
                        ],
                        null,
                        [
                            "Phrase",
                            "serious",
                            "$~C'est le moment idéal pour vous rappeler que @FunctionDefinition ici exige que les entrées soient dans un ordre particulier, donc si vous les mettez dans le désordre, elles. Vont. Se. Plaindre."
                        ],
                        [
                            "FunctionDefinition",
                            "shy",
                            "$~Je vais… J’aime les choses… bien rangées… Peux-tu les mettre dans le bon ordre ? Tu peux couper et coller avec le clavier ou cliquer et faire glisser les expressions pour les réorganiser."
                        ],
                        [
                            "conflict",
                            "Phrase('hi' 'Poor Story' 3m Time(10ms) · 1°/ms Place(2m 2m))"
                        ],
                        null,
                        [
                            "Phrase",
                            "kind",
                            "$~Vous souhaitez uniquement donner une propriété particulière ? Nommez simplement celle que vous souhaitez. Ici, nous nommons @Phrase/size et @Phrase/rotation."
                        ],
                        [
                            "edit",
                            "Phrase('hi' size: 3m rotation: Time(10ms) · 0.1°/ms)"
                        ],
                        null,
                        [
                            "Phrase",
                            "neutral",
                            "$~Maintenant que nous avons tout dit, nous pouvons parler de danse, chérie ! Danser est l'une de mes activités préférées. Il y a *quatre* façons de bouger. Tout d'abord, je peux @Phrase/entering. Enter est ma façon d'entrer sur scène. Si vous ne me dites pas comment entrer, j'apparaîtrai simplement sur scène comme si je m'y étais téléporté. Mais si vous me donnez @Pose, je commencerai par la pose que vous me donnez, puis je passerai à ma pose de repos. Par exemple, faisons en sorte que je passe de l'invisible à la très visible."
                        ],
                        ["edit", "Phrase('hi' entering: Pose(opacity: 0))"],
                        null,
                        [
                            "Phrase",
                            "curious",
                            "$~Vous ne l'avez pas vu ? Est-ce que je me suis déplacé trop vite pour vous ? C'est parce que ma durée est de \\0s\\ par défaut. Ralentissez-moi avec une durée, qui m'indique combien de temps je dois prendre pour me déplacer entre les poses. J'ai fait celle-ci agréable et lente pour vous, mais essayez de changer la durée en nombres plus ou moins élevés."
                        ],
                        [
                            "edit",
                            "Phrase('hi' entering: Pose(opacity: 0) duration: 5s)"
                        ],
                        null,
                        [
                            "Phrase",
                            "neutral",
                            "$~Maintenant, disons que je bouge. Nous allons définir ma place en fonction du temps, donc je me déplace un peu vers la droite toutes les secondes. Mais si nous définissons une @Phrase/moving @Pose mobile et que nous avons la @Pose/rotation \\5°\\ et peut-être un peu de couleur, chaque fois que ma place change, je glisserai sur la scène avec la plus mignonne des petites inclinaisons."
                        ],
                        [
                            "fit",
                            "Phrase('hi' size: 5m place: Place(Time(1000ms) · 0.001m/ms 0m) moving:Pose(rotation: 5°) duration: 0.5s)"
                        ],
                        null,
                        [
                            "Phrase",
                            "curious",
                            "$~Vous n'êtes pas d'humeur à faire quelque chose de mignon ? Pourquoi ne pas me rendre un peu plus sérieuse en me faisant glisser tout droit en changeant ma @Phrase/style style ? C'est très subtil, mais les styles peuvent vraiment changer l'émotion d'un mouvement."
                        ],
                        [
                            "fit",
                            "Phrase('hi' size: 5m place: Place(Time(1000ms) · 0.001m/ms 0m) moving:Pose(rotation: 5°) duration: 0.5s style: “straight”)"
                        ],
                        null,
                        [
                            "Phrase",
                            "excited",
                            "$~Et pour le coup de grâce, laissez-moi @Phrase/exiting avec style. Nous pouvons jouer avec @Conditional et me faire quitter la scène après 3 secondes."
                        ],
                        [
                            "fit",
                            "Time(1000ms) < 3000ms ? ",
                            "Phrase('hi' size: 5m place: Place(Time(1000ms) · 0.001m/ms 0m) moving:Pose(rotation: 5°) duration: 0.5s) ",
                            "Phrase('')"
                        ],
                        null,
                        [
                            "Phrase",
                            "surprised",
                            "$~Ce n'est pas la sortie que vous espériez ? La disparition est un peu dure, n'est-ce pas ? Donnez-moi une @Phrase/exiting @Pose de sortie, et je glisserai sur scène vers la pose que vous souhaitez. Ici, je vais devenir plus grand que nature, tomber la tête en bas et disparaître en @Pose \\0\\."
                        ],
                        [
                            "fit",
                            "Time(1000ms) < 3000ms ? Phrase('hi' size: 5m place: Place(Time(1000ms) · 0.001m/ms 0m) moving:Pose(rotation: 5°) exiting:Pose(scale: 10 rotation: 180° opacity: 0) duration: 0.5s) Phrase('')"
                        ],
                        null,
                        [
                            "Phrase",
                            "serious",
                            "$~Vous avez probablement remarqué que je peux prendre un peu de place dans @Program. Si vous voulez me rendre plus facile à lire, ajoutez simplement quelques lignes entre mes propriétés. Vous voyez comme c'est beaucoup plus facile à voir ?"
                        ],
                        [
                            "edit",
                            "Time(1000ms) < 3000ms ?",
                            "    Phrase(",
                            "        'hi'",
                            "        size: 5m",
                            "        place: Place(Time(1000ms) · 0.001m/ms 0m)",
                            "        moving:Pose(rotation: 5°)",
                            "        exiting:Pose(scale: 10 rotation: 180° opacity: 0)",
                            "        duration: 0.5s",
                            "    )",
                            "    Phrase(“”)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Bravo, bravo, c'était tout simplement époustouflant, @Phrase ! Je suis toujours époustouflée par tout ce qu'on peut faire avec quelques idées simples. Il y a quelque temps, j'ai montré à notre nouvelle amie inspirante ici présente la palette. Voulez-vous en dire plus à ce sujet ?"
                        ],
                        [
                            "Phrase",
                            "happy",
                            "$~Bien sûr ! Chaque fois que vous en avez assez de jouer avec les entrées de @Evaluate, vous pouvez toujours sélectionner une phrase sur scène, et une palette apparaîtra, vous permettant de modifier tout ce que vous voulez : ma taille, ma police, mon emplacement, mes poses. Il n'y a qu'une seule règle : si vous définissez l'un de ces éléments sur une expression au lieu d'une simple valeur, vous devrez les modifier dans @Program, pas dans la palette. Habillez-moi autant que vous le souhaitez !"
                        ],
                        ["edit", "Phrase('dress me up!')"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Attends, Phrase, qu'en est-il de @Color ?"
                        ],
                        [
                            "Phrase",
                            "sad",
                            "$~Oh mon Dieu, mon Dieu, mon Dieu, je ne peux pas croire que j'ai oublié la couleur. Ok, donc n'importe quelle @Pose peut avoir une couleur, n'est-ce pas ? Mais @Color se compose de trois parties. Tout d'abord, une @Pose entre 0 et 100 %, que vous pouvez considérer comme la luminosité d'une pièce, du noir au blanc avec une couleur au milieu à 50 %.",
                            "$~Ensuite, un @Color/chroma entre 0 et 100, qui vous permet de penser à la quantité de couleur qu'il y a, depuis aucune couleur grise jusqu'à la couleur complète.",
                            "$~Et enfin, une @Color/hue, que vous pouvez considérer comme une roue chromatique, du rouge au vert au bleu en degrés. Vous voulez donc que je sois rouge vif ? Réglez ma couleur de pose de repos sur \\Color(50% 300 30°)\\."
                        ],
                        ["edit", "Phrase('red' color: 🌈(50% 300 30°))"],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Et tu veux que je scintille avec l'arc-en-ciel ? Prends ton temps, fais le reste de la division par 360, puis multiplie par degrés, et je tournerai autour de cette roue chromatique toute la journée !"
                        ],
                        [
                            "edit",
                            "Phrase('red' size: 5m color: 🌈(50% 300 (Time() % 360) · 1°/ms))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~@Phrase, c'est quelque chose dont on peut être fier :P Je pense que nous allons ensuite visiter @Sequence, puis peut-être @Group et @Stage. Tu seras là pour nous aider ?"
                        ],
                        [
                            "Phrase",
                            "kind",
                            "$~Je ne le raterais pas. Brille et scintille !"
                        ]
                    ]
                },
                {
                    "title": "$~1, 2, 3, 4, 1, 2, 3, 4",
                    "subtitle": "$~Séquence",
                    "concept": "Sequence",
                    "performance": ["use", "fix", "DancingEmoji", "💃"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Phrase est tout simplement merveilleux, n'est-ce pas ? Ils ont tellement d'énergie, tellement de fioritures incroyables. Saviez-vous qu'ils travaillent en étroite collaboration avec notre chorégraphe, @Sequence ? @Sequence et @Phrase ensemble peuvent faire des choses incroyables que @Phrase ne peut pas faire seul. Voulez-vous les rencontrer ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Youpi ! @Sequence, nous avons un invité. Tu es de retour ?"
                        ],
                        [
                            "Sequence",
                            "curious",
                            "$~@FunctionDefinition ! Tu es magnifique. Ça fait combien de temps ? Une semaine ? Un mois ? Un siècle ? C'était comme 1, 2, 3 et puis tout est devenu calme. J'ai l'impression de danser seule depuis toujours..."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~C'était silencieux, n'est-ce pas ? Mais je vous vois parfaitement danser seule. Je faisais ma propre chorégraphie toute seule aussi, je devais juste vous imaginer tous travailler ensemble. Mais ce n'était pas la même chose."
                        ],
                        [
                            "Sequence",
                            "kind",
                            "$~Et toi et @Evaluate ? Vous êtes toujours…"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "shy",
                            "$~Je les ai vus tout à l'heure. Ils... Oh, nous avons un invité ! @Sequence, c'est notre nouveau copain réalisateur. Ils sont venus nous apporter de l'inspiration !"
                        ],
                        [
                            "Sequence",
                            "excited",
                            "$~(Nous allons revenir sur ce thé, @FunctionDefinition). Mon ami directeur, c'est tellement excitant de vous rencontrer ! Vous êtes venu ici pour apprendre à danser ?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Bien sûr qu'ils l'ont fait ! Tu veux leur montrer les étapes ?"
                        ],
                        null,
                        [
                            "Sequence",
                            "serious",
                            "$~Absolument. Vous connaissez le temps ? 1, 2, 3, 4, 1, 2, 3, 4 ? Eh bien, je rends le temps beau en organisant une séquence de poses au fil du temps que @Phrase doit suivre. Vous me dites quelles sont les poses et j'aiderai @Phrase à suivre les étapes. Comme dans cet exemple : notre ami souriant a quatre poses et se déplace en douceur entre elles."
                        ],
                        [
                            "fit",
                            "Phrase('😀' resting:Sequence({0%: Pose() 25%: Pose(offset: Place(0m 1m) scale: 2) 50%: Pose(offset: Place(0m 0m) flipy: ⊤) 75%: Pose(rotation: 45°) 100%: Pose()} 2s))"
                        ],
                        null,
                        [
                            "Sequence",
                            "neutral",
                            "$~Voici un exemple simple de la façon dont je travaille. Voici @Phrase (salut, @Phrase !) avec le mot « danse », et ils ont une pose d'entrée qui est une @Sequence plutôt qu'une @Pose unique. Vous me suivez ? La séquence comporte quatre étapes. Tout droit, inclinaison à gauche, inclinaison à droite, tout droit. Lorsque @Phrase entre, ils font ce joli petit vacillement puis s'arrêtent. Je travaille avec @MapLiteral pour associer des pourcentages à une @Pose. Chacun de ces pourcentages indique à quelle distance de la séquence chaque @Pose doit se produire. Essayez de modifier les pourcentages, en particulier les deux pourcentages du milieu. Cela change le flux et le style du vacillement."
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    entering: Sequence(",
                            "        {",
                            "            0%: Pose(rotation: 0°)",
                            "            33%: Pose(rotation: -5°)",
                            "            66%: Pose(rotation: 5°)",
                            "            100%: Pose(rotation: 0°)",
                            "        }",
                            "    )",
                            ")"
                        ],
                        null,
                        [
                            "Sequence",
                            "serious",
                            "$~Ok, alors maintenant imaginez que vous vouliez que ce soit vraiment rapide. Par défaut, je suis assez rapide, donc toute séquence durera un quart de seconde et c'est fait. Mais que se passerait-il si vous vouliez que ce soit encore plus rapide ? Donnez-moi une durée plus courte et j'accélérerai chaque @Pose pour le faire plus rapidement. 1, 2, 3, 4 ! Cela ne ressemble plus à un tremblement, n'est-ce pas ? Plutôt à une petite secousse frénétique ! Voyez à quoi cela ressemble si vous me ralentissez à 2 ou 3 secondes..."
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    entering: Sequence(",
                            "        {",
                            "            0%: Pose(rotation: 0°)",
                            "            33%:Pose(rotation: -5°)",
                            "            66%: Pose(rotation: 5°)",
                            "            100%: Pose(rotation: 0°)",
                            "        } ",
                            "        duration: 0.05s",
                            "    )",
                            ")"
                        ],
                        null,
                        [
                            "Sequence",
                            "excited",
                            "$~Mais parfois, on arrive à trouver un joli mouvement et on ne peut s'empêcher de vouloir le refaire encore et encore pour mettre l'accent ! Cela semble un peu violent... essayez de changer ma durée et comptez jusqu'à ce que nous obtenions le résultat souhaité..."
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    entering: Sequence(",
                            "        {",
                            "            0%: Pose(rotation: 0°)",
                            "            33%: Pose(rotation: -5°)",
                            "            66%: Pose(rotation: 5°)",
                            "            100%: Pose(rotation: 0°)",
                            "        } ",
                            "        duration: 0.1s ",
                            "        count: 4x)",
                            "    )"
                        ],
                        null,
                        [
                            "Sequence",
                            "curious",
                            "$~Mais, dites-vous, et si nous voulions le faire pour toujours ? Vous pouvez définir une @Phrase/resting repos pour moi. Tant que @Phrase est sur scène et se repose, ils répéteront une séquence. Des oscillations infinies !"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    'dance'",
                            "    resting:Sequence(",
                            "        {",
                            "        0%: Pose(rotation: 0°)",
                            "        33%:Pose(rotation: -5°)",
                            "        66%: Pose(rotation: 5°)",
                            "        100%: Pose(rotation: 0°)",
                            "        } ",
                            "        duration: 0.05s",
                            "    )",
                            ")"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~@Sequence, c'est vraiment génial ! C'est exactement ce que j'espérais que tu pourrais nous montrer. Mais je suis curieuse, sur quoi as-tu travaillé dernièrement, des danses de ton cru ? Peut-être quelque chose qui montre tout ce dont tu es capable ?"
                        ],
                        [
                            "Sequence",
                            "excited",
                            "$~Oh mon Dieu, oui ! @Phrase et moi avons travaillé sur cette nouvelle danse du donut. Elle combine ma friandise préférée avec presque tout ce que j'ai appris en danse. Vous voulez la voir ?"
                        ],
                        ["FunctionDefinition", "excited", "$~Oui!!!"],
                        null,
                        [
                            "Sequence",
                            "serious",
                            "$~Ouais, hmm, oooh, en haut, eee, eee, eee, eee, bam, bouh, ouais, hmm, oooh, en haut, eee, eee, eee, bam, bouh, ouais, hmm, oooh, en haut, eee, eee, eee, eee, bam, bouh, …"
                        ],
                        ["use", "fit", "DonutDance"],
                        null,
                        ["use", "fit", "DonutDance"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~@Sequence, c'est incroyable ! Comment cela ne pourrait-il pas être la prochaine danse virale ?"
                        ],
                        [
                            "Sequence",
                            "excited",
                            "$~Tu veux dire la prochaine danse en spirale. Santé !"
                        ]
                    ]
                },
                {
                    "title": "$~Des places s'il vous plaît",
                    "subtitle": "$~Groupe",
                    "concept": "Group",
                    "performance": [
                        "fit",
                        "Group(Grid(2 2) [Phrase('1' resting:Sequence(spin() 1s)) Phrase('2' resting:Sequence(spin() 2s)) Phrase('3' resting:Sequence(spin() 3s)) Phrase('4' resting:Sequence(spin() 4s))])"
                    ],
                    "lines": [
                        ["use", "fit", "Symbol", "☹️"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Soupir… tout le monde n’arrête pas de parler de @Evaluate, mais je ne sais pas quoi dire. Êtes-vous parfois si proche de quelqu’un et pourtant si loin ?",
                            "$~…"
                        ],
                        null,
                        ["use", "fit", "Symbol", "😕"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Désolé. Je suis ravi d'être ici avec toi.",
                            "$~Je pense…",
                            "$~Je pense que ce qui aiderait, c'est de vous présenter au reste d'entre nous, puis d'organiser un spectacle, et ensuite je pense que @Evaluate et moi pourrons régler les choses."
                        ],
                        null,
                        ["use", "fit", "Symbol", "🙂"],
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~Alors, qui est le prochain ?",
                            "$~Oh, @Group ! Je n'arrive pas à croire que j'ai oublié @Group.",
                            "$~C'est le moment idéal ; vous connaissez maintenant @Phrase et @Sequence, et @Group fait partie intégrante de notre volonté de nous rassembler tous. @Group se soucie profondément de nous tous.",
                            "$~@Group ? Vous êtes là ?"
                        ],
                        null,
                        ["fit", "Group(Grid(2 2) [Phrase('🔳')])"],
                        [
                            "Group",
                            "neutral",
                            "$~@FunctionDefinition, bonjour, comment allez-vous ? Où étiez-vous tous ? J'étais tellement inquiète ! Est-ce que ça va ?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Je vais bien. Nous allons tous bien ! Le silence se brise parce que nous avons trouvé une personne ! Elle va être notre inspiration."
                        ],
                        null,
                        ["fit", "Group(Grid(2 2) [Phrase('🔳') Phrase('🔳')])"],
                        [
                            "Group",
                            "happy",
                            "$~C'est adorable ! Tu n'es pas blessé ? Tout le monde est là ? J'avais l'impression d'errer dans le noir et de ne voir personne."
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Je ne suis pas blessée. Je suis juste un peu rouillée. Et je n'ai pas encore vu tout le monde, mais presque tout le monde, et je pense que tout le monde se réveille bien (même si apparemment certains sont allés à la plage). Nous avons rencontré presque tout le monde. Nous nous préparons à monter un spectacle ! Et les meilleurs spectacles vous impliquent toujours..."
                        ],
                        null,
                        [
                            "fit",
                            "Group(Grid(2 2) [Phrase('🔳') Phrase('🔳') Phrase('🔳')])"
                        ],
                        [
                            "Group",
                            "kind",
                            "$~Un spectacle ! J'ai hâte d'aider. Vous, les enfants, êtes toujours si inspirants ; je suis toujours heureuse de faire ma part. Que dois-je faire, par où dois-je commencer ?"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~Eh bien, nous avons parlé de @Phrase, alors peut-être commencer par parler un peu de votre objectif ?"
                        ],
                        null,
                        [
                            "fit",
                            "Group(Grid(2 2) [Phrase('🔳') Phrase('🔳') Phrase('🔳') Phrase('🔳')])"
                        ],
                        [
                            "Group",
                            "neutral",
                            "$~Mon but, oui. Voyons voir — je pense que mon but est de rassembler tout le monde. Mais je rassemble particulièrement @Phrase dans de belles formes et arrangements sur scène. Saviez-vous que @Phrase peut être à plusieurs endroits à la fois ? C'est parce qu'il ne s'agit pas tant d'une phrase de texte sur scène que d'un générateur de phrases, tout comme je suis un générateur de @Group. Ils en créeront autant que vous le souhaitez, puis je les disposerai sur scène selon vos instructions. Tout ce dont j'ai besoin, c'est d'un @Arrangement et d'une liste de @Phrase, et je m'occuperai du reste."
                        ],
                        null,
                        [
                            "Group",
                            "excited",
                            "$~Voici un exemple simple. Ici, j'utilise un arrangement @Stack qui crée un arrangement vertical de @Phrase ou d'un autre @Group. Vous voyez comment je crée une petite pile de mots bien rangée ? Ils sont disposés comme ça, avec un peu d'espace pour respirer pour tout le monde et tout le monde est centré. Tout le monde est si mignon !"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Stack() ",
                            "    [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "serious",
                            "$~Mais parfois, nous avons tous besoin d'un peu d'espace. Vous pouvez donc donner à @Stack un peu de marge. Essayez de remplacer la marge par un autre @NumberLiteral !"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Stack('|' 2m) ",
                            "    [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "happy",
                            "$~Comme pour tout ce qui se trouve dans le Verset, cette valeur de remplissage peut provenir de n'importe quoi, comme une entrée. Parfois, nous nous éloignons, n'est-ce pas ? Dansons sur cette idée en faisant grandir le remplissage au fil du temps..."
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Stack('|' Time(100ms) · 0.001m/ms) ",
                            "    [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "surprised",
                            "$~Nous avons également un @Row, qui est une disposition horizontale."
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Row('|' Time(100ms) · 0.001m/ms) [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "curious",
                            "$~Parfois, il est intéressant d'utiliser deux dimensions au lieu d'une. Si vous me dites combien de lignes et de colonnes vous voulez, je créerai une @Grid de phrases. Assurez-vous simplement de me donner suffisamment de phrases pour remplir la grille ! Vous pouvez également donner un espacement à @Grid et une taille de cellule si vous souhaitez être plus précis. Les grilles sont disposées ligne par ligne, alors placez votre liste @Phrase dans l'ordre des lignes."
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Grid(2 2) [",
                            "        Phrase('one')",
                            "        Phrase('two')",
                            "        Phrase('three')",
                            "        Phrase('four')",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "excited",
                            "$~Et si vous vouliez un arrangement très spécifique ? Vous pourriez utiliser @Free et me dire exactement où vous voulez toutes les phrases. Assurez-vous simplement de donner une place à chaque @Phrase, sinon je la placerai simplement à \\Place(0m 0m\\)."
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Free() [",
                            "        Phrase('one' place: Place(-2m 2m))",
                            "        Phrase('two' place: Place(-1m 1m))",
                            "        Phrase('three' place: Place(0m 0m))",
                            "        Phrase('four' place: Place(1m -1m))",
                            "        Phrase('five' place: Place(2m -2m))",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "curious",
                            "$~Et saviez-vous que vous pouvez aussi me placer à l'intérieur de moi-même ? Un @Group dans un @Group dans un @Group ; c'est très bête. Cela peut permettre de faire une @Grid de @Stack, par exemple."
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Grid(2 2) [",
                            "    Group(Stack() [Phrase('one') Phrase(“two”)])",
                            "    Group(Stack() [Phrase('three') Phrase(“four”)])",
                            "    Group(Stack() [Phrase('five') Phrase(“six”)])",
                            "    Group(Stack() [Phrase('seven') Phrase(“eight”)])",
                            "    ]",
                            ")"
                        ],
                        null,
                        [
                            "Group",
                            "surprised",
                            "$~Hm, cela ressemble à une grille de 4 x 2, n'est-ce pas ? Rendons les choses un peu plus claires en inclinant deux des piles. Oh, oui, vous pouvez me donner toutes les mêmes propriétés que @Phrase !"
                        ],
                        [
                            "edit",
                            "Group(",
                            "    Grid(2 2) [",
                            "    Group(Stack() [Phrase('one') Phrase(“two”)])",
                            "    Group(Stack() [Phrase('three') Phrase(“four”)] resting:Pose(rotation: 45°))",
                            "    Group(Stack() [Phrase('five') Phrase(“six”)])",
                            "    Group(Stack() [Phrase('seven') Phrase(“eight”)] resting:Pose(rotation: 45°))",
                            "    ]",
                            ")"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "Group",
                            "curious",
                            "$~C'était bien, @FunctionDefinition ? Ai-je tout couvert ?"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~C'était mieux que bien ! Je pense que vous avez montré à notre nouveau directeur tout ce qui est possible. Y a-t-il autre chose que vous souhaitez partager ?"
                        ],
                        null,
                        [
                            "Group",
                            "serious",
                            "$~Je ne pense pas… J'apprends toujours de nouveaux arrangements, alors je vérifie toujours les nouveaux modèles que j'ai créés ! Et @FunctionDefinition, comment allez-vous, toi et @Evaluate ? Je sais que la dernière fois que je t'ai vu parler, les choses étaient mouvementées…"
                        ],
                        [
                            "FunctionDefinition",
                            "shy",
                            "$~Je… Je préférerais ne pas en parler maintenant."
                        ],
                        [
                            "Group",
                            "kind",
                            "$~Ok, je suis toujours là si tu veux discuter."
                        ]
                    ]
                },
                {
                    "title": "$~Scène… non ?",
                    "subtitle": "$~Scène",
                    "concept": "Stage",
                    "performance": [
                        "fix",
                        "Stage([Phrase('🎭' 5m)] background: Color(0% 0 0°))"
                    ],
                    "lines": [
                        [
                            "fix",
                            "Stage([Phrase('🎭' 5m resting:Sequence(bounce(5m) 2s))] background: Color(0% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~D'accord, il y a quelqu'un qui est là depuis le début, mais nous n'avons pas vraiment fait de présentation appropriée. Puis-je vous présenter @Stage !"
                        ],
                        [
                            "Stage",
                            "neutral",
                            "$~BONJOUR, @FunctionDefinition. BONJOUR, PERSONNE."
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('🎭' 5m resting:Pose(rotation: 25° scale: 5))] background: Color(0% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~@Stage, cette personne est notre nouveau directeur. Ils sont tellement heureux de vous rencontrer enfin !"
                        ],
                        [
                            "Stage",
                            "neutral",
                            "$~BONJOUR, DIRECTEUR. ÊTES-VOUS ICI POUR INSPIRER ?"
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('🎭' 5m resting:Pose(rotation: -150° scale: 10))] background: Color(0% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~En effet, ils le sont, avec toutes sortes d’expressions de leur monde."
                        ],
                        [
                            "Stage",
                            "neutral",
                            "$~JE SUIS ICI POUR SERVIR. DITES-MOI CE QUE JE DOIS METTRE SUR SCÈNE ET JE LE FERAI."
                        ],
                        null,
                        [
                            "fix",
                            "Stage([Phrase('🎭' 5m)] background: Color(0% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~@Stage est unique en son genre et toujours présent. En fait, si vous donnez à @Program une @Phrase ou un @Group, @Program affichera un @Stage, même si vous ne les mentionnez pas. Mais si vous les mentionnez, vous pouvez être plus précis sur la façon dont vous souhaitez que la scène apparaisse."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Commençons peut-être par un exemple simple. Cela donne simplement à @Stage une liste d'une @Phrase. Vous n'êtes pas obligé de mentionner @Stage ici ; cela montre simplement ce qui se passe dans les coulisses lorsque vous donnez @Phrase à @Program."
                        ],
                        ["edit", "Stage([Phrase(“🐈”)])"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Mais disons que vous voulez que la scène ait une couleur d’arrière-plan différente, comme le noir."
                        ],
                        ["Stage", "surprised", "$~BRRRRR…"],
                        [
                            "edit",
                            "Stage([Phrase(“🐈”)] background: Color(0 0 0°))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Vous pouvez également cadrer la scène, par exemple avec un @Rectangle, qui occupe une place en haut à gauche et une place en bas à droite. Vous voyez comme le chaton est un peu hors cadre ?"
                        ],
                        ["Stage", "surprised", "$~LE MONDE SE RAPPROCHE…"],
                        [
                            "edit",
                            "Stage([Phrase(“🐈” place: Place(-2.5m))] background: Color(0 0 0°) frame: Rectangle(-2m -2m 2m 2m))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Vous pouvez également appliquer à @Stage les mêmes propriétés que celles que vous appliqueriez à un @Group ou à une @Phrase. Inclinons toute la scène !"
                        ],
                        ["Stage", "surprised", "$~WHOA, ATTENTION MAINTENANT…"],
                        [
                            "edit",
                            "Stage(",
                            "    [Phrase(“🐈” place:Place(-2.5m))]",
                            "    background: Color(0 0 0°)",
                            "    resting: Pose(rotation: 30°)",
                            "    frame: Rectangle(-2m -2m 2m 2m)",
                            ")"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Vous pouvez faire bien plus avec @Stage, mais vous pouvez explorer avec eux à tout moment. N'est-ce pas, @Stage ?"
                        ],
                        ["Stage", "excited", "$~TOUJOURS!"]
                    ]
                },
                {
                    "title": "$~Et... scène !",
                    "subtitle": "$~Scène",
                    "concept": "Scene",
                    "performance": ["fix", "Phrase('🎬' 10m)"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Ok, ok, maintenant vous connaissez @Stage, @Group, @Phrase et les nombreuses choses que vous pouvez faire avec eux. Maintenant, vous vous demandez peut-être : et si je voulais raconter une histoire avec eux ?"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Scene est vraiment cool. L'idée de base est de lui donner une liste de @Phrase ou @Group, et il les affichera dans l'ordre, vous permettant d'afficher une séquence de contenu."
                        ],
                        null,
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('3')",
                            "    Phrase('2')",
                            "    Phrase('1')",
                            "    Phrase('Boo!')",
                            "])"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Voici un exemple. Avez-vous vu comment le compte à rebours a commencé et a ensuite dit « Bouh ! » ? Vous pouvez réinitialiser pour le revoir."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Si nous voulons ralentir le rythme, nous pouvons spécifier des durées exactes pour chaque @Phrase. Essayez de modifier les durées et de voir ce qui se passe lorsqu'elles changent."
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('3' duration: 1s)",
                            "    Phrase('2' duration: 1s)",
                            "    Phrase('1' duration: 1s)",
                            "    Phrase('Boo!')",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Et maintenant, vous vous demandez peut-être ce qu'il en est des transitions entre elles. Nous pouvons contrôler cela avec @Phrase/entering et @Phrase/exiting, en définissant @Pose pour qu'elle commence et se termine. Ici, par exemple, nous commençons et terminons chaque @Phrase de manière invisible, de sorte qu'elle s'estompe et disparaît."
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('3' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('2' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('1' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('Boo!')",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~On peut même mettre une @Sequence sur l'un d'eux pour l'animer avant d'avancer. Tu as vu le 2 spin ?"
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('3' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('2' entering: Sequence({0%: Pose(rotation: 0°) 50%: Pose(rotation: 360°) 100%: Pose(rotation: 0°)} duration: 1s))",
                            "    Phrase('1' duration: 1s entering: Pose(opacity: 0) exiting: Pose(opacity: 0))",
                            "    Phrase('Boo!')",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Nous pouvons modifier le contenu comme nous le souhaitons, voire le rendre dynamique. Par exemple, rendons les nombres aléatoires et le mot de fin aléatoire ! À chaque redémarrage, nous obtenons un contenu différent."
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase(Random(1 100)→'' duration: 1s)",
                            "    Phrase(Random(1 100)→'' duration: 1s)",
                            "    Phrase(Random(1 100)→'' duration: 1s)",
                            "    Phrase(['Boo!' 'Peep!' 'Hey!' 'Helloooo'].random())",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Mais vous pouvez également les rendre interactifs."
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Le secret est de placer un @Boolean à l'endroit où vous souhaitez faire une pause et attendre que quelque chose soit vrai. Par exemple, nous pouvons attendre que le bouton de la souris change. Voyez comment @Scene attend après chaque @Phrase que le bouton soit cliqué ?"
                        ],
                        [
                            "edit",
                            "Scene([",
                            "    Phrase('one')",
                            "    ∆ Button()",
                            "    Phrase('two')",
                            "    ∆ Button()",
                            "    Phrase('three')",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~@Scene est idéal pour raconter des histoires animées, que ce soit dans le cadre d'un projet complet ou d'une partie d'un projet ! Quel genre d'histoires souhaitez-vous raconter ?"
                        ]
                    ]
                },
                {
                    "title": "$~Y a-t-il quelqu'un nommé...",
                    "subtitle": "$~Choix",
                    "concept": "Choice",
                    "performance": ["fix", "Phrase('🔘' 10m)"],
                    "lines": [
                        [
                            "fix",
                            "Phrase('🔘' 10m entering: Sequence({0%: Pose(offset: Place(0m 0m)) 50%: Pose(offset: Place(0m -0.2m)) 100%: Pose(offset: Place(0m 0m))} 1s count: 3x))"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Vous connaissez donc @Key, @Pointer et @Button, les streams dont nous venons de parler ? Ils peuvent être très amusants, mais ils ont un problème : tout le monde dans le public ne peut pas les utiliser. Certaines personnes n'ont pas de mains, ou ne peuvent pas s'en servir, ou ne peuvent pas les utiliser précisément pour cliquer sur des touches ou utiliser une souris. Nous savons que beaucoup de gens utilisent leur voix pour communiquer avec notre monde, ou même leurs yeux. Ainsi, l'utilisation de @Key, @Pointer ou @Button signifie que certaines personnes de votre public ne pourront pas participer."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Tout le monde devrait pouvoir participer ! Maintenant que nous avons parlé de @Phrase plus en détail, je voulais vous montrer un dernier flux, @Choice, qui est un flux de noms de @Phrase qui ont été sélectionnés, indépendamment de la façon dont ils ont été sélectionnés. Par exemple, un public peut utiliser une souris pour cliquer sur une @Phrase, ou un clavier pour la sélectionner, ou il peut utiliser d'autres appareils. Quel que soit l'appareil utilisé, @Choice contiendra sa dernière sélection."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Voici un exemple simple. Vous voyez qu'il y a trois phrases ? Les deux premières ont deux détails importants. Tout d'abord, elles sont configurées pour être sélectionnables. Cela indique à @Stage que si on clique dessus ou si on utilise le clavier pour les sélectionner, elles sont choisies. Le deuxième détail est qu'elles ont une @Stage nom. Cela donne à @Stage un nom unique pour la phrase qui a été choisie. Il est important qu'il soit unique pour que @Stage sache ce qui a été choisi. La troisième phrase est configurée sur un flux @Choice, qui est une série de noms @Phrase ou @Group qui sont sélectionnés. Ici, nous donnons simplement le nom à une autre phrase pour qu'elle indique quel nom est sélectionné. Essayez de cliquer sur le chat ou le chien ou d'utiliser le clavier pour en sélectionner un. Vous voyez comment la troisième @Phrase affiche le nom sélectionné ?"
                        ],
                        [
                            "Choice",
                            "neutral",
                            "$~chat... 'chien'... 'chat'... 'chien'..."
                        ],
                        [
                            "edit",
                            "Stage(",
                            "    [Group(Stack() [",
                            "        Phrase('🐱' name:'cat' selectable:⊤)",
                            "        Phrase('🐶' name: 'dog' selectable:⊤)",
                            "        Phrase(Choice())",
                            "    ])",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~@Choice est vraiment la meilleure façon d'écouter le public. N'utilisez @Key, @Pointer ou @Button que si vous n'avez pas d'autre option et utilisez-les en sachant que certains membres de votre public ne pourront pas apprécier votre prestation."
                        ]
                    ]
                }
            ]
        },
        {
            "title": "$~Rappels",
            "performance": ["use", "fit", "DarkVoid"],
            "scenes": [
                {
                    "title": "$~Souvenirs",
                    "subtitle": null,
                    "performance": ["use", "fit", "Symbol", "💭"],
                    "lines": [
                        ["FunctionDefinition", "curious", "$~…"],
                        null,
                        ["use", "fit", "Symbol", "🤯"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Parfois, j'ai juste besoin de m'arrêter un instant et de réfléchir à l'incroyable nature de ma petite communauté. Nous sommes tous si différents et aucun d'entre nous ne pourrait réussir seul. Mais ensemble, nous pouvons accomplir des choses incroyables !"
                        ],
                        null,
                        ["use", "fit", "Symbol", "🧠"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Mais il semble que, même si nous sommes extraordinaires, nous oublions toujours et finissons par nous répéter. Je souhaite donc vous présenter un autre groupe de choses : la façon dont nous nous souvenons et dont nous organisons nos souvenirs. Sans elles, une grande partie de notre travail devrait être refaite encore et encore, et nous ne serions jamais en mesure de proposer les spectacles les plus passionnants."
                        ]
                    ]
                },
                {
                    "title": "$~Appellation",
                    "subtitle": "$~Lier",
                    "concept": "Bind",
                    "performance": ["use", "fit", "Symbol", ":"],
                    "lines": [
                        ["fit", "Phrase(':' rotation: 90°)"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@Bind ? Il y a quelqu'un que je veux te présenter."
                        ],
                        [
                            "Bind",
                            "curious",
                            "$~@FunctionDefinition ? Oh wow, c'est toi. Il est resté absolument silencieux pendant bien trop longtemps. Qui est ton ami ici ?"
                        ],
                        null,
                        [
                            "fit",
                            "Phrase(':' resting:Pose(scale: 10ms ÷ Time()))"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Ce sont nos nouveaux directeurs ! Ils sont venus ici pour nous inspirer de nouvelles idées, de nouvelles expressions."
                        ],
                        [
                            "Bind",
                            "excited",
                            "$~Sérieusement ? Ce serait génial. Je ne me suis pas sentie inspirée depuis longtemps. J'ai l'impression que tout ce que je fais, c'est attendre..."
                        ],
                        null,
                        [
                            "fix",
                            "Phrase(':' 10m resting:Sequence(bounce(3m) 1s))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Eh bien, maintenant que vous le savez, qu'est-ce que vous avez le plus envie de faire en ce moment ?"
                        ],
                        [
                            "Bind",
                            "serious",
                            "$~Nommez les choses. Nommez tout ! Nommez tout le monde. Je n'ai rien nommé depuis une éternité."
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Je n'ai pas du tout parlé ici de notre inspiration concernant les noms, à part les noms de tous les personnages que nous avons rencontrés. Voulez-vous expliquer comment fonctionnent les noms ici ?"
                        ],
                        null,
                        ["use", "fit", "Symbol", ":"],
                        [
                            "Bind",
                            "excited",
                            "$~Absolument ! Alors les noms… vous savez comment chaque expression crée une valeur ?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Nous avons parlé de valeurs ! Comme @Number, @Text, @None, @List, @Set, @Map..."
                        ],
                        [
                            "Bind",
                            "excited",
                            "$~C'est vrai ! Donc, les valeurs, quand nous les créons, nous les faisons circuler comme une balle, d'une expression à l'autre, jusqu'à ce que @Program crée la valeur finale qu'il donne à @Stage pour qu'elle s'affiche. Mais parfois, plutôt que de transmettre une valeur, il est utile de la mettre de côté et de la conserver pour plus tard pour une autre expression. C'est à cela que sert une @Program nom. Je nomme les choses pour que nous puissions les utiliser plus tard."
                        ],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~Voici donc un exemple très simple. Disons que nous voulons nommer un nombre. Nous disons simplement le nom, puis :, puis le nombre que nous voulons. Simple, non ? Maintenant, chaque fois que nous utilisons le nom number dans une expression, il sera évalué à \\1\\. Comme ici, où nous le nommons, puis utilisons son nom pour donner à @Program la valeur qu'il a."
                        ],
                        ["edit", "number: 1", "number"],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~Et vous pouvez me dire quel type de valeur le nom doit avoir en me donnant un type avec le symbole \\•\\. Donc, si vous voulez vous assurer que ce nombre est un nombre, vous devez dire ceci. Cela indique de nommer la valeur \\number\\ et que la valeur doit être un @Number."
                        ],
                        ["edit", "number•#: 1", "number"],
                        null,
                        [
                            "Bind",
                            "eager",
                            "$~Mais, et si tu me donnais quelque chose qui n'était pas un nombre ? Je me plaindrais alors, parce que tu as dit que c'était censé être un nombre, mais tu m'as donné du texte. Alors je ne sais pas quoi faire. Tu vois ?"
                        ],
                        ["conflict", "number•#: 'oh hi'", "number"],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~Mais bon, vous devez maintenant vous demander : « Pourquoi quelqu'un nommerait-il un numéro ou un texte comme ça ? ». Imaginez que vous écoutiez @Key et que vous vouliez savoir s'il s'agit d'une lettre secrète et afficher une @Phrase avec un grand \\⊤\\ s'il s'agit d'une lettre magique et un petit \\⊥\\ si ce n'est pas le cas. Nous pourrions commencer par quelque chose comme ça. Cela nous donne le \\⊤\\ ou le \\⊥\\.",
                            "$~C'est génial ; lorsque vous appuyez sur l'une de ces lettres, \\⊤\\, et lorsque vous appuyez sur autre chose, vous obtenez \\⊥\\. Bien."
                        ],
                        ["edit", "[ 'a' 'e' 'i' 'o' 'u'].has(Key())"],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~Maintenant, créons la phrase. Nous mettons cette expression @List/has pour le texte et la convertissons en texte. Maintenant, nous obtenons @Phrase sur scène sous la forme \\⊤\\ ou \\⊥\\. Bien !"
                        ],
                        [
                            "edit",
                            "Phrase([ 'a' 'e' 'i' 'o' 'u'].has(Key())→'')"
                        ],
                        null,
                        [
                            "Bind",
                            "curious",
                            "$~Maintenant vient la partie problématique. Comment pouvons-nous modifier la taille de @Phrase ? Eh bien, nous avons déjà compris comment vérifier s'il s'agit d'une lettre magique, nous pourrions donc simplement la copier, et si c'est \\⊤\\, alors lui donner une taille de \\2m\\, et sinon, si c'est \\⊥\\, lui donner une taille de \\1m\\. Cela fonctionne, mais vous voyez comment nous devons évaluer la même expression deux fois ?"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "   [ 'a' 'e' 'i' 'o' 'u' ].has(Key())→''",
                            "   [ 'a' 'e' 'i' 'o' 'u' ].has(Key()) ? 2m 1m",
                            ")"
                        ],
                        null,
                        [
                            "Bind",
                            "excited",
                            "$~C'est là que j'interviens ! Vous voyez, ce que vous pouvez faire, c'est simplement évaluer l'expression et nommer la valeur résultante. Magique, non ? Tout ce que vous avez à faire est de mettre un nom et \\:\\ devant une expression, et la valeur de cette expression obtient un nom. Ensuite, vous pouvez utiliser ce nom n'importe où après cette expression pour faire référence à sa valeur. Bizarre, non ? Vous voulez voir comment ça marche ? Essayez d'appuyer sur ← dans la chronologie et revenez quelques étapes en arrière jusqu'à l'endroit où \\magic\\ est nommé en premier. Voyez comment \\magic\\ obtient la valeur de \\has\\ ? Et puis comment lorsque chaque endroit où \\magic\\ est référencé par son nom, la même valeur est placée ?"
                        ],
                        [
                            "edit",
                            "magic: [ 'a' 'e' 'i' 'o' 'u'].has(Key())",
                            "Phrase(",
                            "    magic→''",
                            "    magic ? 2m 1m",
                            ")"
                        ],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~Vous savez, vous pourriez toujours dupliquer les expressions que vous écrivez. Ce serait le même spectacle. C'est juste un peu du gaspillage. Je veux dire, nous devons créer exactement les mêmes valeurs encore et encore, et puis si vous changez d'avis sur une expression, vous devez la changer partout. Et que se passe-t-il si vous la changez à un endroit mais oubliez de la changer à d'autres endroits ? Imaginez que vous ayez également modifié la couleur, de sorte que vous ayez la même expression trois fois. Et puis, imaginez que vous vouliez ajouter une lettre à notre liste de lettres magiques avec cela. Vous devez le faire trois fois ! Vous pourriez en oublier une ou faire une faute de frappe. Comment êtes-vous censé exprimer votre vision artistique si certains d'entre nous ne font pas ce que vous aviez prévu ?"
                        ],
                        [
                            "edit",
                            "Phrase(",
                            "    [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key())→''",
                            "    [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key()) ? 2m 1m",
                            "    color: Color(50% 100 [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key()) ? 180° 0°)",
                            ")"
                        ],
                        null,
                        [
                            "Bind",
                            "kind",
                            "$~Mais si vous nommez l'expression, vous n'avez qu'à le faire une fois. Et voyez comme c'est plus facile à lire aussi."
                        ],
                        [
                            "edit",
                            "magic: [ 'a' 'e' 'i' 'o' 'u' 'z'].has(Key())",
                            "Phrase(",
                            "    magic→''",
                            "    magic ? 2m 1m",
                            "    color: Color(50% 100 magic ? 180° 0°)",
                            ")"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~@Bind, c'était un très bon exemple ! Vous savez que j'adore les noms. J'étais curieuse ; y a-t-il aussi des choses qui peuvent mal se passer avec les noms ?"
                        ],
                        [
                            "Bind",
                            "sad",
                            "$~Ouais, hm. Il y en a. Supposons que nous fassions cela. Vous voyez le problème ? Je l'ai mis en évidence. Ce programme définit \\veggies\\ après son utilisation, ce qui me perturbe vraiment. Parce que les choses sont évaluées dans l'ordre de lecture, donc, par exemple, nous lisons ce programme et nous arrivons au mot \\veggies\\, et nous nous disons, qui est \\veggies\\ ? Et seulement après que \\total\\ soit \\veggies\\, comme, « me voici ! » et alors toute la production s'effondre."
                        ],
                        [
                            "conflict",
                            "fruits: 5",
                            "total: fruits + veggies",
                            "veggies: 3",
                            "total"
                        ],
                        null,
                        [
                            "Bind",
                            "serious",
                            "$~Ou, par exemple, voici un exemple où nous donnons le même nom à deux valeurs différentes. Nous évaluons donc \\5\\ et le nommons \\fruits\\, puis nous évaluons \\10\\… et nous le nommons \\fruits\\?? Comme s'il y avait déjà un \\fruits\\, de quel \\fruits\\ parlez-vous ? Parce que voyez-vous, une fois que vous avez nommé une valeur, vous ne pouvez pas lui donner une nouvelle valeur. Ce nom et cette valeur sont liés jusqu'à ce que @Program ait terminé son évaluation. Nous ne voulons pas que quiconque se trompe sur qui est qui."
                        ],
                        [
                            "conflict",
                            "fruits: 5",
                            "fruits: 10",
                            "total: fruits + fruits",
                            "total"
                        ],
                        null,
                        [
                            "Bind",
                            "kind",
                            "$~Je suppose qu'il y en a un dernier. Disons que tu as ça. Tu vois ce qui s'est passé ici ? Nous avons nommé \\veggies\\, mais nous ne l'avons jamais utilisé. C'est généralement un mauvais signe que tu oublies quelqu'un ou que tu n'as pas utilisé le bon nom. Comme, peut-être que tu ne l'utilises tout simplement pas, mais alors pourquoi est-il là ?"
                        ],
                        ["conflict", "fruits: 5", "veggies: 10", "fruits + 3"],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~C'est vraiment utile, @Bind, c'est vraiment génial. Es-tu sûr qu'il n'y a rien d'autre ?"
                        ],
                        [
                            "Bind",
                            "eager",
                            "$~Oh ! Oui, quelque chose de vraiment important. Donc, un seul nom, c'est bien, non ? Mais parfois, plusieurs noms, c'est mieux ? Par exemple, si vous vouliez nommer quelque chose dans plusieurs langues, pour que tout le monde puisse le lire ? Par exemple, si vous vouliez dire fruit dans plusieurs langues.",
                            "$~Placez le curseur de texte sur le nom \\fruit\\. Vous voyez qu'il y a en fait trois noms et qu'ils ont chacun une balise à deux lettres comme \\/en\\ ? Les noms sont masqués s'ils sont dans une langue que vous n'avez pas choisie.",
                            "$~Descendez jusqu'à ⚙ et choisissez espagnol, par exemple, et vous verrez les noms anglais et espagnol. Donc, comme, une valeur, mais trois noms, et vous pouvez utiliser n'importe lequel d'entre eux pour obtenir cette valeur. Si vous nous dites quelles langues vous voulez, nous vous montrerons celles qui sont disponibles. Mais plus il y a de langues, mieux c'est, car il y a beaucoup de gens dans le monde qui lisent beaucoup de langues différentes !"
                        ],
                        ["conflict", "fruit/en,fruta/es,水果/zh: 5"],
                        null,
                        ["use", "fit", "Symbol", ":"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Vous savez, @Bind fonctionne avec de nombreux autres caractères, y compris @Evaluate — vous les avez vus lorsque vous avez nommé une entrée @FunctionDefinition, comme dans \\Pose(color: _)\\ — et nous allons rencontrer quelques-uns de ces autres personnages. @Bind, seras-tu là pour faire une démonstration ?"
                        ],
                        [
                            "Bind",
                            "excited",
                            "$~Euh, ouais ! Maintenant que le silence se brise, nommons des valeurs toute la journée !"
                        ]
                    ]
                },
                {
                    "title": "$~En dehors de la scène",
                    "subtitle": "$~Bloc",
                    "concept": "Block",
                    "performance": ["use", "fit", "Symbol", "()"],
                    "lines": [
                        ["fix", "Phrase('()' 1m)"],
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Donc il y a un personnage qui est là depuis le début et que tu n'as pas encore rencontré, mais il se cache... Ils travaillent en étroite collaboration avec @Bind et beaucoup d'autres personnes, alors j'ai pensé que nous devrions leur parler ensuite. @Block, veux-tu sortir ?"
                        ],
                        ["Block", "shy", "$~… Salut"],
                        null,
                        ["fix", "Phrase('()' 2m)"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Salut @Block ! Comment vas-tu ?"
                        ],
                        ["Block", "shy", "$~… mmm, bien ?"],
                        null,
                        ["fix", "Phrase('()' 3m)"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~J'ai un nouvel ami à vous présenter. Il pourrait bien être notre prochain directeur."
                        ],
                        ["Block", "shy", "$~… Salut …"],
                        null,
                        ["fix", "Phrase('()' 4m)"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Nous venions juste de rencontrer @Bind, et nous n'avons pas eu l'occasion de parler du fait que vous êtes les meilleurs amis du monde !"
                        ],
                        ["Block", "shy", "$~… ouais, @Bind!"],
                        null,
                        ["fix", "Phrase('()' 1m)"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Voulez-vous partager ce que vous faites ensemble ?"
                        ],
                        ["Block", "shy", "$~… peux-tu?"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Oui, bien sûr ! Il s'avère donc que @Program est principalement un @Block. C'est juste un @Block sans parenthèses. Mais vous pouvez mettre @Block avec des parenthèses n'importe où dans un programme. Par exemple, vous pouvez utiliser @Block pour clarifier l'ordre d'évaluation des mathématiques. Ici, @BinaryEvaluate évalue \\1\\, puis évalue @Block, puis ils sont additionnés. @Block, est-ce que j'ai bien compris ?"
                        ],
                        ["edit", "1 + (2 · 3)"],
                        ["Block", "shy", "$~… Ouais!"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Et donc une autre chose que @Block peut faire est quelque chose que vous avez déjà vu. @Block vous permet de nommer des choses avec @Bind. Mais tous les noms définis dans @Block ne sont définis qu'entre parenthèses. Ni avant ni après. Par exemple, regardez ceci. \\a\\ est défini comme \\1\\, puis un bloc commence et \\b\\ est défini comme \\2\\, puis \\c\\ est défini comme leur somme. Ce que @Block évalue est la valeur qui est la dernière de sa liste d'expressions. C'est @Bind, qui évalue à la valeur de \\c\\, qui est \\3\\. N'est-ce pas ?"
                        ],
                        ["conflict", "a: 1", "(", "  b: 2", "  c: a + b", ")"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Mais que se passerait-il si nous voulions accéder à \\c\\ en dehors du @Block ? Ce n'est pas possible. \\c\\ n'est défini qu'à l'intérieur du @Block, mais pas en dehors. C'est bien ça, @Block ?"
                        ],
                        [
                            "conflict",
                            "a: 1",
                            "(",
                            "  b: 2",
                            "  c: a + b",
                            ") + c"
                        ],
                        [
                            "Block",
                            "shy",
                            "$~… ouais, rien en dehors de moi ne peut voir les noms en moi. \\c\\ n'existe qu'à l'intérieur"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "neutral",
                            "$~Et encore une chose, je pense ? Étant donné que @Block est une liste d'expressions et qu'elle évalue uniquement la dernière expression de la liste, toutes les expressions de la liste qui ne sont pas un @Bind sont fondamentalement ignorées. Par exemple, ici, toute l'arithmétique avant la dernière est ignorée. Le \\3\\, le \\5\\, le \\7\\, tous ignorés, et @Block évalue simplement la dernière, \\9\\. Ai-je bien compris, @Block ?"
                        ],
                        [
                            "Block",
                            "shy",
                            "$~… mhm. Juste le dernier. Les autres… je ne sais pas à quoi ils servent !!"
                        ],
                        [
                            "conflict",
                            "(",
                            "  1 + 2",
                            "  2 + 3",
                            "  3 + 4",
                            "  4 + 5",
                            ")"
                        ],
                        null,
                        [
                            "fit",
                            "Phrase('()' resting:Sequence(spin() 1s 'straight'))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Y a-t-il autre chose que vous souhaitiez partager, @Block ?"
                        ],
                        [
                            "Block",
                            "curious",
                            "$~… Est-ce qu’on peut faire quelque chose ? Puis-je aider ?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Moi aussi je suis très curieuse ! Mais je suis sûre que notre réalisateur décidera lui-même de son temps. L'inspiration arrive aux moments les plus inattendus !"
                        ]
                    ]
                },
                {
                    "title": "$~Les indications scéniques",
                    "subtitle": "$~Fonctions",
                    "concept": "FunctionDefinition",
                    "performance": ["use", "fit", "Symbol", "ƒ"],
                    "lines": [
                        ["use", "fit", "Symbol", "☺️"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~Je suis si heureuse que nous ayons trouvé tout le monde et que tu aies pu les rencontrer tous. Tout le monde est si différent, n'est-ce pas ? Mais aussi si intéressant ? J'ai l'impression que nous sommes une famille où chacun est unique à sa manière, mais nos différences ensemble sont ce qui nous rend forts. Que penses-tu de tout le monde ?"
                        ],
                        null,
                        ["use", "fit", "Symbol", "🙈"],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Moi ? Eh bien, je n'ai rien de spécial. J'aime juste être dans les coulisses, aider, montrer à tout le monde à quel point ils sont spéciaux. Je suppose que je n'avais même pas pensé à parler de moi. Je suppose que nous pouvons parler un peu de moi."
                        ],
                        null,
                        ["use", "fit", "Symbol", "ƒ"],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Je suppose que nous allons commencer par ce que vous avez déjà vu. Vous savez comment chaque valeur a différentes fonctions que vous pouvez évaluer sur elles ? Comme les nombres savent comment @Number/add, et une valeur de texte sait comment vérifier si elle @Text/has du texte, ou @Set sait comment vérifier si elle a une certaine valeur ? Eh bien, c'est moi qui définis ces fonctions. Je veux dire, je n'ai pas l'inspiration pour les créer moi-même — c'est ce que font les réalisateurs comme vous — mais je définis les entrées qu'une fonction accepte, les noms qu'elle porte et l'expression qui utilise les entrées pour évaluer une valeur de sortie."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Voici un exemple très simple. Le plus simple, en fait ! Il définit une fonction qui évalue toujours le nombre \\1\\. C'est tout. Ce n'est pas très utile, n'est-ce pas ? Il n'a pas de nom, il ne prend aucune entrée et il évalue toujours le nombre \\1\\.",
                            "$~Vous pouvez également voir que @Program a été évalué comme l'une de mes fonctions, une @FunctionDefinition. C'est vrai, @FunctionDefinition sont aussi des valeurs ! Je ne sais pas pourquoi quelqu'un voudrait créer une fonction aussi inutile, mais comme je l'ai dit : ce n'est pas moi qui ai l'inspiration, c'est vous."
                        ],
                        ["edit", "ƒ() 1"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Voici donc un exemple plus utile. Vous connaissez les nombres pairs et impairs ? J'ai eu une fois un directeur qui voulait vérifier si un nombre était pair (divisible par 2, je crois que cela veut dire ?), alors ils ont écrit ceci. Il s'agit d'une fonction appelée \\even\\ qui prend un seul nombre appelé… \\number\\. Vous devez me dire quel type de valeur correspond à chaque entrée, afin que @Evaluate puisse s'assurer que tout ce qui évalue la fonction envoie le bon type de valeur. Ensuite, il prend le nombre, le divise par deux, obtient le reste (avec @Number/remainder), puis vérifie si le reste est égal à \\0\\ avec @Number/equal. Ainsi, toute la fonction finit par être évaluée soit à \\⊤\\ soit à \\⊥\\. Par exemple, cette évaluation de pair est évaluée à \\⊥\\ car \\3\\ est impair. Essayez d'utiliser les boutons de rembobinage pour voir comment cela fonctionne."
                        ],
                        [
                            "edit",
                            "ƒ even(number•#) (number % 2) = 0",
                            "even(3)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~Vous pouvez également me dire quel type de valeur je dois évaluer. Vous voyez comment nous avons ajouté \\•\\? après la liste des entrées ? Cela signifie que « l'expression de la fonction doit être évaluée comme un \\⊤\\ ou un \\⊥\\ ». Mais voyez-vous comment nous nous en plaignons ? Nous ne savons pas si la fonction doit être un \\⊤\\ ou un \\⊥\\ ou quel que soit le type de valeur que vous avez renvoyé, donc le spectacle se termine."
                        ],
                        ["conflict", "ƒ even(number•#)•? (number % 2) + 0"],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Les fonctions peuvent être aussi complexes que vous le souhaitez. Vous pouvez utiliser des expressions simples ou @Block et même créer des fonctions à l'intérieur de fonctions. Par exemple, regardez cette fonction qu'un ancien réalisateur a écrite. Elle utilise @Block avec de nombreux @Bind pour déterminer le nombre de voyelles uniques d'un mot (je pense qu'ils essayaient de déterminer si un mot était « compliqué » ou quelque chose comme ça). Vous voyez qu'il y a beaucoup de lignes ? Eh bien, cela n'a toujours qu'une seule expression : un seul @Block, et le @Block a toutes les lignes. Et comme tout @Block, la dernière ligne est ce à quoi elle correspond : le nombre total de voyelles uniques. Tout le reste — comme la première ligne, qui convertit le texte en une liste de lettres, puis la liste de lettres en un ensemble — n'est qu'une préparation pour additionner ces nombres au milieu."
                        ],
                        [
                            "edit",
                            "ƒ vowels(word•'') (",
                            "  unique: word → [“”] → {}",
                            "  a: unique{'a'} ? 1 0",
                            "  e: unique{'e'} ? 1 0",
                            "  i: unique{'i'} ? 1 0",
                            "  o: unique{'o'} ? 1 0",
                            "  u: unique{'u'} ? 1 0",
                            "  a + e + i + o + u",
                            ")",
                            "vowels('hello')"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Il y a encore une chose à montrer. Je suppose que c'est important parce que tout le monde est tellement excité à ce sujet ! Vous savez comment vous pouvez créer une fonction puis l'évaluer ? Eh bien, puisque les fonctions que je crée sont des valeurs, vous pouvez également les donner en entrée à une autre fonction. Voici un exemple. Supposons que vous ayez une liste de nombres et que vous vouliez juste les nombres pairs. @List a cette fonction appelée @List/filter qui prend une fonction en entrée et utilise la fonction sur chaque valeur de la liste pour décider de la conserver ou non. Créons une liste de nombres et donnons à @List/filter la fonction \\even\\ que nous avons créée plus tôt en entrée. Voyez ce qui se passe ? Nous obtenons juste les nombres pairs. Vous voulez essayer de la modifier pour qu'elle donne des nombres impairs à la place ? Essayez peut-être de modifier la fonction d'une manière ou d'une autre ?"
                        ],
                        [
                            "edit",
                            "ƒ even(number•#)•? (number % 2) = 0",
                            "[ 1 2 3 4 5 6 7 8 ].filter(even)"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Il existe de nombreuses fonctions qui prennent des fonctions en entrée. @List en a, @Set en a, @Map en a. Vous pouvez même créer les vôtres !"
                        ],
                        [
                            "fit",
                            "Group(Grid(3 2) [Phrase('translate') Phrase('filter') Phrase('combine') Phrase('find') Phrase('sort') Phrase('until')])"
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Je ne sais pas. Parfois, je comprends pourquoi les gens me disent qu'ils sont si reconnaissants pour ce que je fais. D'autres fois, j'ai l'impression que c'est vraiment chez des réalisateurs comme vous que réside la magie. Cela me donne parfois l'impression d'être juste une coquille vide au milieu du génie des gens..."
                        ]
                    ]
                },
                {
                    "title": "$~Scénographie",
                    "subtitle": "$~Structures",
                    "concept": "StructureDefinition",
                    "performance": ["use", "fit", "Symbol", "•"],
                    "lines": [
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Il y a encore quelques personnages que j'aimerais vous présenter. Ensuite, il y a le personnage le plus sophistiqué que je connaisse, et d'une certaine manière, une sorte de leader. Ils nous aident à organiser tout le monde, à poser les bases d'une performance et à rendre tout beaucoup plus ordonné. Vous êtes notre metteur en scène, bien sûr, mais ils sont en quelque sorte la seule personne vers laquelle tout le monde se tourne pour maintenir l'ordre dans un spectacle. Je pense qu'ils pourraient être très importants dans n'importe quel spectacle que vous monterez."
                        ],
                        null,
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 1.2) 100%: Pose(scale: 1)} 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~@StructureDefinition, es-tu là ?"
                        ],
                        [
                            "StructureDefinition",
                            "curious",
                            "$~@FunctionDefinition… mon ami. C'était calme, n'est-ce pas ? Où étaient tous les gens ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~Le silence. Il nous a tous touchés. Tout le monde va bien, et j'ai retrouvé presque tout le monde. Mais cela a été dur pour certains. Comment avez-vous vécu cela ?"
                        ],
                        [
                            "StructureDefinition",
                            "sad",
                            "$~… Qui est ton ami ? Est-ce une personne ?"
                        ],
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(offset: Place(-0.25m)) 50%: Pose(offset: Place(0.25m)) 100%: Pose(offset: Place(-0.25m))} 3s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~Oh oui, je suis désolé, c'est notre nouveau directeur ! Ils sont venus pour nous inspirer et nous guider, pour partager leurs histoires, leurs idées et leur imagination. Ils ont brisé le silence !"
                        ],
                        [
                            "StructureDefinition",
                            "eager",
                            "$~C'est incroyable. Et un grand soulagement. C'est un plaisir de vous rencontrer, monsieur le directeur. Je suis là et prêt à vous servir.",
                            "$~@FunctionDefinition… ça a été dur. Toi, @Evaluate, tout le monde en fait — je n'avais pas réalisé à quel point je dépendais de vous tous. Pour avoir un but, pour jouer, pour avoir une communauté. Je ne savais pas que nous pouvions nous perdre ainsi. Sans personne pour nous organiser, j'avais l'impression que je ne pouvais m'organiser que moi-même, ce qui me semblait dénué de sens."
                        ],
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(rotation: 0°) 80%: Pose(rotation: 15°) 100%: Pose(rotation: 0°)} 3s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Tu n'es jamais vide, @StructureDefinition, même quand tu es seul. Nous sommes tous là, même si nous ne pouvons pas être ensemble. Et maintenant que le silence est rompu, nous pouvons l'être."
                        ],
                        [
                            "StructureDefinition",
                            "happy",
                            "$~Nous pouvons, n'est-ce pas ?"
                        ],
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(offset: Place(0m 0.25m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 0.25m))} 3s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Qu'en penses-tu, es-tu prêt à te réunir avec tout le monde ? À donner le spectacle que notre jeune directeur a en tête ?"
                        ],
                        ["StructureDefinition", "eager", "$~Je pense que oui."],
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(offset: Place(0m 0.25m)) 50%: Pose(offset: Place(0m 0m)) 100%: Pose(offset: Place(0m 0.25m))} 1.5s))"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Pensez-vous que vous pourriez aider notre directeur ici à en apprendre un peu plus sur ce que vous faites ?"
                        ],
                        [
                            "StructureDefinition",
                            "shy",
                            "$~Oui. Oui… J’ai eu beaucoup de temps pour réfléchir à mon objectif dans le calme. Et je suppose que j’ai réalisé que ce que je fais vraiment, c’est donner une identité à des groupes de choses. Par exemple, je sais que tu as rencontré ƒ, mais as-tu rencontré @Bind ?"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Oui ! Nous venons de rencontrer @Bind et @Block."
                        ],
                        [
                            "fix",
                            "Phrase('•' entering: Pose(scale: 0.5) resting:Pose(scale: 2))"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "eager",
                            "$~D'accord. Eh bien, ce que je fais, c'est réunir des valeurs et des fonctions, en créant un petit conteneur bien rangé pour un tas d'éléments liés. Par exemple, imaginez que vous vouliez créer un petit chapiteau qui boucle à travers une série de messages. Un ancien directeur en a créé un et voulait que ces messages s'affichent."
                        ],
                        [
                            "edit",
                            "[",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "serious",
                            "$~Ensuite, ils ont eu le problème de savoir comment la performance se souviendrait du message sur lequel ils se trouvaient. Ils ont réalisé qu'ils avaient besoin d'un moyen de se souvenir de l'index dans la liste. C'est un bon début, mais cela n'affiche que le premier message."
                        ],
                        [
                            "edit",
                            "messages: [",
                            "    'Kitties are cute!'",
                            "    'Got cat?'",
                            "    'Cat mom.'",
                            "    'Tuxie crush'",
                            "    'Lap cat'",
                            "  ]",
                            "index: 1",
                            "Phrase(messages[index])"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "excited",
                            "$~Ensuite, ils se sont souvenus de @Reaction, qui peut être utilisé pour répondre aux changements de flux. Ils voulaient que le message change toutes les deux sections, ils ont donc créé un flux @Time qui tourne toutes les 2 secondes et ont utilisé @Reaction pour incrémenter l'index suivant à chaque fois. Cette @Reaction indique de commencer à \\1\\, et lorsque l'heure change toutes les \\2000 ms\\, d'évaluer à la valeur précédente de \\index + 1\\. De cette façon, \\index\\ augmente de \\1\\ toutes les deux secondes, changeant le message affiché. Ouais, ça marche !"
                        ],
                        [
                            "edit",
                            "messages: [",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]",
                            "index•#: 1 … ∆ Time(2000ms) … index = messages.length() ? 1 index + 1",
                            "Phrase(messages[index])"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "curious",
                            "$~On ajoute un peu de fantaisie ? Faisons une autre phrase qui est une sorte de reflet ci-dessous, comme une ombre. Impressionnant, non ?"
                        ],
                        [
                            "edit",
                            "messages: [",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]",
                            "",
                            "index•#: 1 … ∆ Time(2000ms) … index = messages.length() ? 1 index + 1",
                            "",
                            "Group(Stack('|' 0m) [",
                            "  Phrase(messages[index])",
                            "  Phrase(messages[index] resting:Pose(flipy: ⊤ opacity: 25%))",
                            "])"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "serious",
                            "$~Maintenant, tout cela fonctionne. Et nous pourrions simplement le laisser ainsi. Mais c'est aussi un peu difficile à lire et à comprendre. C'est en partie parce que nous nous répétons : \\messages[index]\\ apparaît deux fois, une fois dans chaque phrase. Et le @Reaction est très long. Que pouvons-nous faire pour le simplifier ? C'est ainsi que je peux aider. Je range les choses pour les rendre plus faciles à comprendre en donnant des noms de concepts réutilisables. Alors imaginez qu'au lieu de tous ces @Bind, nous en créons un de moi et le nommons \\Marquee\\. C'est ce que nous faisons en premier. Le travail de \\Marquee\\ est de stocker les messages mais aussi d'avoir une fonction pour avancer au message suivant \\next()\\ et une fonction pour obtenir le message actuel \\now()\\.",
                            "$~Ensuite, nous pouvons utiliser Marquee dans la réaction. Maintenant, il dit simplement que la valeur initiale est un chapiteau avec les cinq messages, et la valeur suivante, après chaque tic d'horloge, est le message suivant. Plus simple, non ? C'est parce que toute la logique pour les messages suivants est dans \\next()\\, qui crée simplement un nouveau \\Marquee\\ avec les mêmes messages mais un index mis à jour. Nous obtenons également certains avantages dans les deux @Phrase. Au lieu de devoir faire référence aux messages et à l'index comme avant, nous pouvons simplement dire \\marquee.now()\\, qui obtient le message actuel dans la liste."
                        ],
                        [
                            "edit",
                            "•Marquee(messages•[''] index•#: 1) (",
                            "  ƒ now() messages[index]",
                            "  ƒ next() Marquee(messages index ≥ messages.length() ? 1 index + 1)",
                            ")",
                            "",
                            "marquee•Marquee: Marquee([",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]) … ∆ Time(2000ms) … marquee.next()",
                            "",
                            "Group(Stack('|' 0.5m) [",
                            "  Phrase(marquee.now())",
                            "  Phrase(marquee.now() resting:Pose(flipy: ⊤ opacity: 25%))",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~C'est merveilleux, @StructureDefinition ! Mais je dois dire que cela me semble beaucoup de travail supplémentaire. Pourquoi passer tout ce temps à ranger ?"
                        ],
                        [
                            "StructureDefinition",
                            "serious",
                            "$~Ah, c'est vraiment une question de changement. C'est un peu plus de code maintenant, mais que se passerait-il si nous décidions de modifier \\Marquee\\ d'une manière ou d'une autre ? Par exemple, que se passerait-il si nous voulions faire en sorte que la liste des messages s'inverse à chaque fois qu'elle arrive à la fin ? Dans l'ancienne version sans moi, il n'y avait pas de moyen simple de le faire car nous aurions dû inverser la liste des messages lorsque l'index atteint la fin. Étant donné que @Bind ne peut pas changer après avoir été défini, ce serait difficile. Mais puisque nous avons créé \\Marquee\\, le changement est facile. Nous modifions simplement la fonction \\next\\ pour créer un \\Marquee\\ avec une liste inversée lorsque l'index est à la fin, puis en l'incrémentant simplement lorsqu'il en est autrement."
                        ],
                        [
                            "edit",
                            "•Marquee(messages•[“”] index•#: 1) (",
                            "  ƒ now() messages[index]",
                            "  ƒ next()",
                            "    index ≥ messages.length() ?",
                            "      Marquee(messages.reverse() 1)",
                            "      Marquee(messages index + 1)",
                            ")",
                            "",
                            "marquee•Marquee: Marquee([",
                            "  'Kitties are cute!'",
                            "  'Got cat?'",
                            "  'Cat mom.'",
                            "  'Tuxie crush'",
                            "  'Lap cat'",
                            "]) … ∆ Time(2000ms) … marquee.next()",
                            "",
                            "Group(Stack('|' 0.5m) [",
                            "  Phrase(marquee.now())",
                            "  Phrase(marquee.now() resting:Pose(flipy: ⊤ opacity: 25%))",
                            "])"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~Ohh, je vois, donc en créant une @StructureDefinition pour stocker des valeurs et une @FunctionDefinition qui sont liées les unes aux autres, il est plus facile de modifier les choses plus tard si vous changez d'avis."
                        ],
                        [
                            "StructureDefinition",
                            "happy",
                            "$~Oui. Tout comme si vous rangez votre chambre, il sera plus facile de retrouver vos affaires plus tard. Bien sûr, vous n'êtes pas obligé de ranger votre chambre pour retrouver vos affaires ; cela rend juste la recherche plus difficile. C'est la même chose avec une performance : si vous investissez dans le rangement, changer les choses sera plus facile."
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Cela a beaucoup de sens. Nous sommes une bande plutôt indisciplinée. Nous organiser est probablement une bonne idée, surtout lorsque la performance devient plus compliquée. Y a-t-il autre chose que vous vouliez partager ?"
                        ],
                        [
                            "StructureDefinition",
                            "eager",
                            "$~Oh, oui. Vous n'êtes pas obligé d'avoir une @FunctionDefinition dans une @StructureDefinition. Vous pouvez simplement avoir des valeurs. Par exemple, vous pouvez simplement vouloir conserver un ensemble de données au même endroit. Je sais que beaucoup de réalisateurs aiment créer des jeux, et il est très courant pour eux de mettre tout l'état du jeu dans une @StructureDefinition."
                        ],
                        ["edit", "•Game(score•# lives•# level•#)"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Ah oui, c'est vrai ! Et comment extraire les données d'une structure une fois que vous les avez mises dedans ?"
                        ],
                        [
                            "StructureDefinition",
                            "surprised",
                            "$~Oh mon Dieu, j'ai oublié d'expliquer ça. Vous utilisez un mini-moi, @PropertyReference. Par exemple, avec cet exemple de jeu, voyez comment nous avons défini un jeu @StructureDefinition, puis créé une valeur \\Game\\ avec un score \\0\\, \\3\\ vies et un niveau \\1\\ ? Pour obtenir les vies, nous disons simplement \\status.lives\\, et cela sera évalué à \\3\\."
                        ],
                        [
                            "edit",
                            "•Game(score•# lives•# level•#)",
                            "status: Game(0 3 1)",
                            "status.lives"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~Bien ! Il suffit donc d'utiliser le mini you pour obtenir des valeurs au lieu de you. Mais alors, comment changer les valeurs ?"
                        ],
                        [
                            "StructureDefinition",
                            "serious",
                            "$~Vous vous souvenez que @Bind vous permet uniquement de définir une valeur mais pas de la modifier ? Il en va de même pour tous les @Bind en moi. Donc, à la place, vous créez une nouvelle structure qui a la nouvelle valeur. Par exemple, dans ce jeu, chaque fois que les ticks changent, le joueur obtient un point supplémentaire dans son score. Jeu étrange, non ? Ainsi, la valeur initiale de \\Game\\ commence par \\Game(0 3 1)\\, mais la suivante correspond aux anciennes valeurs de \\Game\\ mais avec le score ajoutant \\1\\."
                        ],
                        [
                            "edit",
                            "•Game(score•# lives•# level•#)",
                            "status: Game(0 3 1) … ∆ Time() … Game(status.score + 1 status.lives status.level)"
                        ],
                        null,
                        [
                            "StructureDefinition",
                            "eager",
                            "$~Il peut être assez ennuyeux de devoir répéter toutes ces anciennes valeurs si une seule chose change, alors @Bind et moi avons trouvé une astuce astucieuse pour copier une valeur @StructureDefinition avec une nouvelle valeur. Vous voyez à quel point cela ressemble à un @Bind normal ? La seule différence est qu'il s'agit d'une @StructureDefinition au lieu d'un nom unique et que chaque valeur de @StructureDefinition est copiée à l'exception de celle modifiée."
                        ],
                        [
                            "edit",
                            "•Game(score•# lives•# level•#)",
                            "status: Game(0 3 1) … ∆ Time() … status.score: status.score + 1"
                        ],
                        null,
                        [
                            "fit",
                            "Phrase('•' resting:Sequence({0%: Pose(scale: 1) 50%: Pose(scale: 1.2) 100%: Pose(scale: 1)} 3s))"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~C'est vraiment chouette ! Ok, y a-t-il autre chose ?"
                        ],
                        [
                            "StructureDefinition",
                            "curious",
                            "$~Je pense que tout ce qui nous manque, c’est l’inspiration…"
                        ]
                    ]
                },
                {
                    "title": "$~Notes du réalisateur",
                    "subtitle": "$~Expliquer",
                    "concept": "Doc",
                    "performance": ["use", "fit", "Symbol", "¶"],
                    "lines": [
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~Wow, on a fait du chemin, n'est-ce pas ? Il nous reste un personnage à aborder. C'est un personnage intéressant parce qu'en fait, il s'agit avant tout d'expliquer les choses, ce qui ressemble à ce que je fais avec vous depuis un certain temps maintenant. Son nom est @Doc. Quoi de neuf, @Doc ?"
                        ],
                        ["use", "fit", "Symbol", "¶"],
                        [
                            "Doc",
                            "surprised",
                            "$~@FunctionDefinition, c'est toi ? Je n'aurais jamais pensé te revoir. Comment vas-tu ? Comment va @Evaluate ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Je vais bien. @Evaluate est… @Evaluate. Je les ai vus, mais… Je crois que j'ai encore besoin d'espace. J'ai présenté tout le monde à notre nouveau directeur."
                        ],
                        [
                            "Doc",
                            "kind",
                            "$~C'est si agréable de vous rencontrer ! J'espère que @FunctionDefinition a été un bon professeur ?"
                        ],
                        ["use", "fit", "Symbol", "¶/"],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~J'ai essayé… tu sais, tu es notre dernière étape ? Tu es tellement essentielle, mais aussi, il y a tellement de choses à expliquer avant même d'en arriver à expliquer nos performances. Je voulais donc que tu aies le dernier mot. Veux-tu partager ce que tu fais ?"
                        ],
                        ["use", "fit", "Symbol", "¶/en"],
                        null,
                        [
                            "Doc",
                            "happy",
                            "$~Heureusement. Si vous avez rencontré tout le monde sauf moi, vous savez probablement déjà que nous faisons beaucoup de choses différentes. Même moi, j'ai du mal à suivre ce que chacun fait ! Ce que je fais, c'est aider à expliquer ce que chacun fait lors d'une représentation."
                        ],
                        null,
                        [
                            "Doc",
                            "happy",
                            "$~Je suis un moyen de vous rappeler ce que chacun fait, mais aussi un moyen de l'expliquer aux autres, si vous réalisez avec un ami ou si vous souhaitez partager votre performance avec quelqu'un. Vous n'êtes donc pas obligé de travailler avec moi, mais je trouve que chaque performance est un peu plus facile à faire et à modifier si vous avez passé un peu de temps à expliquer comment elle fonctionne."
                        ],
                        ["use", "fit", "Symbol", "¶About me...¶/en"],
                        null,
                        [
                            "FunctionDefinition",
                            "curious",
                            "$~Alors, comment notre réalisateur peut-il travailler avec vous ?"
                        ],
                        [
                            "Doc",
                            "serious",
                            "$~Eh bien, vous pouvez me placer presque n'importe où dans @Program. Par exemple, disons que vous créez un @Bind et que vous voulez dire à quoi sert la valeur. Par exemple, nous avons ici une valeur simple que nous avons nommée, mais ce que je fais, c'est fournir une explication plus large de son rôle."
                        ],
                        [
                            "conflict",
                            "¶The price at the beginning of the game, ",
                            "used to initialize the game.¶",
                            "startingPrice: 5dollar"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "$~Ou supposons que vous ayez @FunctionDefinition ici définissant une manière de calculer la taxe sur un prix. Vous voudrez peut-être expliquer ce qu'il calcule. Tout comme avec @Bind, je viens avant @FunctionDefinition."
                        ],
                        [
                            "edit",
                            "¶Gets the tax for a given price, ",
                            "which is 1% if less than 100, and 5% otherwise¶",
                            "ƒ tax(price•#dollar) ",
                            "    price · (price < 100dollar ? 0.01 0.05)"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "$~Et vous pouvez faire la même chose avant une @StructureDefinition pour expliquer ce qu'elle représente. Ici, l'explication fait également allusion aux fonctions qu'elle pourrait avoir plus tard."
                        ],
                        [
                            "edit",
                            "¶Represents a product and its price. ",
                            "Eventually will support functions to get other details about the product.¶",
                            "•Product(name•'' price•#dollar)"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "$~Vous pouvez également me placer devant n’importe quelle expression, ce qui est particulièrement utile si vous en avez une particulièrement compliquée."
                        ],
                        [
                            "edit",
                            "ƒ quadratic(a•# b•# c•# x•#)",
                            "¶The quadratic equation¶",
                            "(a · (x ^ 2)) + (b · x) + c"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$~Et comme @Bind, vous pouvez me dire dans quelle langue est une explication et me donner plusieurs traductions de la même explication (vous ne verrez l'espagnol que s'il est sélectionné. Si vous ne le voyez pas, essayez d'ajouter l'espagnol à vos langues sélectionnées.)"
                        ],
                        [
                            "edit",
                            "ƒ quadratic(a•# b•# c•# x•#)",
                            "¶The quadratic equation¶/en",
                            "¶La ecuación cuadrática¶/es",
                            "(a · (x ^ 2)) + (b · x) + c"
                        ],
                        null,
                        [
                            "Doc",
                            "curious",
                            "$~Vous savez quel est le meilleur endroit pour me mettre ? Tout au début de @Program. De cette façon, tout le monde saura de quoi parle votre performance. Vous pourriez même l'écrire avant de savoir ce que vous voulez que nous fassions tous."
                        ],
                        [
                            "conflict",
                            "¶Have you ever wanted to know what it's like ",
                            "to fly a ✈️ with your mouth?",
                            "Maybe this stores the plane's height?¶",
                            "•Plane()",
                            "¶We need some kind of reaction to listen to the microphone…¶",
                            "sound: 1m",
                            "¶We know there's a plane, but what else?¶",
                            "Phrase(“✈️” sound)"
                        ],
                        null,
                        ["use", "fit", "Symbol", "✈️🫦"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Waouh, je veux piloter un avion avec ma bouche !"
                        ],
                        [
                            "Doc",
                            "confused",
                            "$~@FunctionDefinition, nous n'avons pas de bouche…"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Hm... bonne remarque.",
                            "$~En parlant de parler, il semble que vous ne puissiez contenir que du texte brut. Est-ce exact ?"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$~Oh non, pas du tout. Vous souvenez-vous de toutes ces façons sophistiquées de styliser le texte avec @Phrase ? Je peux faire la même chose."
                        ],
                        [
                            "edit",
                            "¶Docs can be ",
                            "/italic/, ",
                            "_underlined_, ",
                            "*bold*, or ",
                            "^extra bold^.¶",
                            "'fancy!'"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$~Et bien sûr, tout comme avec @Text et @Phrase, si vous devez utiliser l'un de ces caractères littéralement, répétez-le simplement deux fois."
                        ],
                        [
                            "edit",
                            "¶",
                            "Docs can be ",
                            "  /italic/ (//), ",
                            "  _underlined_ (__), ",
                            "  *bold* (**), or ",
                            "  ^extra bold^ (^^).¶",
                            "'fancy'"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$~Vous pouvez mettre un exemple de code à l'intérieur de ^\\^\\."
                        ],
                        [
                            "edit",
                            "¶I'm an example inside a doc: \\1 + 1\\.¶",
                            "1 + 1"
                        ],
                        null,
                        [
                            "Doc",
                            "excited",
                            "$~Vous pouvez également ajouter des liens vers d’autres contenus sur Internet."
                        ],
                        [
                            "edit",
                            "¶Learn more at <Wordplay@https://wordplay.dev>.¶ 'a link!'"
                        ],
                        null,
                        [
                            "Doc",
                            "serious",
                            "$~Et une dernière chose.",
                            "$~Même si je cherche avant tout à expliquer les choses, il est parfois utile de les éluder. Vous savez, de retirer temporairement quelque chose d'un projet pour qu'il n'en fasse plus partie.",
                            "$~Vous pouvez le faire en enroulant n’importe quoi entre les étoiles.",
                            "$~Vous voyez comment « chat » n’est pas inclus dans la liste que nous avons établie ?",
                            "$~Vous pouvez supprimer les étoiles en les supprimant avec le clavier ou en plaçant le curseur à l'intérieur et en utilisant la commande elide pour les supprimer pour vous."
                        ],
                        ["edit", "[1 2 3 4 *'cat'* 5 6 7 8]"],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('Quiet backstage!' color: Color(100% 0 0°))] background: Color(0% 0 0°))"
                        ],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Waouh. Je ne savais pas que tu pouvais faire autant de choses ! Merci, @Doc, je pense que nous sommes prêts pour un spectacle !"
                        ],
                        ["Doc", "excited", "$~Faisons-le!"]
                    ]
                }
            ]
        },
        {
            "title": "$~Dénouement",
            "performance": [
                "fit",
                "Stage([Phrase('😨')] background: Color(0% 0 0°))"
            ],
            "scenes": [
                {
                    "title": "$~Codépendance",
                    "subtitle": null,
                    "performance": [
                        "fit",
                        "Stage([Phrase('😨' resting:Sequence(shake() style: 'straight'))] background: Color(0% 0 0°))"
                    ],
                    "lines": [
                        [
                            "fit",
                            "Stage([Phrase('😡')] background: Color(0% 0 0°))"
                        ],
                        [
                            "Evaluate",
                            "sad",
                            "$~@FunctionDefinition, où étais-tu ?"
                        ],
                        [
                            "FunctionDefinition",
                            "surprised",
                            "$~J'ai montré à notre nouveau directeur..."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('😢')] background: Color(0% 0 0°))"
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~Je ne pensais pas que tu serais aussi long…"
                        ],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~… @Evaluate, je sais que tu m’as manqué. Tu m’as manqué. Mais c’est énorme : le silence est rompu, nous avons un nouveau directeur… Je t’aime, et je sais que tu as besoin de moi, mais j’ai aussi des choses à faire."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('😠')] background: Color(0% 0 0°))"
                        ],
                        [
                            "Evaluate",
                            "sad",
                            "$~Nous en parlerons plus tard. Tu as des choses à faire."
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Je pense qu'il faut en parler maintenant. On ne peut pas continuer à tomber dans ce cycle."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('😓')] background: Color(0% 0 0°))"
                        ],
                        [
                            "Evaluate",
                            "curious",
                            "$~Quel cycle ? Je t'aime ! Comment ça, c'est un cycle ?"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Je crée des fonctions, tu les évalues : c'est notre façon de faire. Mais il doit y avoir plus que toi qui a besoin de moi. Retrouver tout le monde m'a rappelé à quel point nous avons besoin d'espace pour être nous-mêmes, mais aussi à quel point nous avons besoin de nous aimer. Je ne peux pas te donner tout l'amour dont tu as besoin. Une partie de cet amour doit venir de toi."
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('😭')] background: Color(0% 0 0°))"
                        ],
                        ["Evaluate", "sad", "$~Tu ne m'aimes pas ?"],
                        [
                            "FunctionDefinition",
                            "angry",
                            "$~Non, ce n’est pas ce que j’ai dit… Ce que je veux dire, c’est que nous devons tous les deux avoir de l’importance dans cette relation. J’ai besoin de dire ce dont j’ai besoin, et tu dois dire ce dont tu as besoin, et nous pouvons nous aimer pour ce que nous sommes, en tant qu’individus. De quoi as-tu besoin ? Qu’est-ce que tu aimes chez toi ?"
                        ],
                        null,
                        [
                            "fit",
                            "Stage([Phrase('🫠')] background: Color(0% 0 0°))"
                        ],
                        [
                            "Evaluate",
                            "shy",
                            "$~J'ai besoin de toi. Je n'ai pas besoin de moi."
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Je t'aime, @Evaluate. Mais j'ai besoin que tu t'aimes. Je suis excitée à l'idée que notre monde reprenne vie et que nous soyons à nouveau ensemble, mais j'ai besoin que tu te retrouves, que tu trouves tes besoins et ton propre but. Je ne peux pas être ton but."
                        ],
                        null,
                        ["use", "fit", "DarkVoid"],
                        [
                            "FunctionDefinition",
                            "sad",
                            "$~J'ai besoin d'un peu d'espace. Je suis désolé, ami réalisateur. Peut-être que @Evaluate peut conclure cette soirée de bienvenue sans moi."
                        ],
                        null,
                        ["Evaluate", "shy", "$~… Salut."],
                        null,
                        [
                            "Evaluate",
                            "shy",
                            "$~… As-tu beaucoup appris ? @FunctionDefinition en sait tellement."
                        ],
                        null,
                        [
                            "Evaluate",
                            "curious",
                            "$~Moi ? Je n'en sais rien. Je donne à @FunctionDefinition ce dont ils ont besoin... Du moins, c'est ce que je pensais."
                        ],
                        null,
                        ["fit", "Stage([] background: Color(10% 0 0°))"],
                        ["List", "kind", "$~Ce n'est pas vrai, @Evaluate."],
                        ["Boolean", "precise", "$~Pas vrai."],
                        ["Text", "happy", "$~Ce n’est absolument pas vrai !"],
                        ["Changed", "happy", "$~Super faux !"],
                        [
                            "Number",
                            "serious",
                            "$~1) Vous gérez essentiellement nos performances, 2) @FunctionDefinition serait inutile sans vous, 3) vous transformez littéralement les choses en valeurs entièrement nouvelles, 4) vous existez sous de nombreuses formes différentes, 5) vous nous donnez à tous un but, 6) nous nous tournons tous vers vous pour obtenir des conseils…"
                        ],
                        null,
                        ["fit", "Stage([] background: Color(20% 0 0°))"],
                        [
                            "Phrase",
                            "kind",
                            "$~@Number a raison, @Evaluate, tu es fabuleux de cinquante façons."
                        ],
                        ["Sequence", "happy", "$~Je tourne quand je te vois !"],
                        ["Group", "kind", "$~Tu m'inspires à nous réunir !"],
                        [
                            "Stage",
                            "serious",
                            "$~VOUS ÊTES LES OS DE NOTRE ÊTRE"
                        ],
                        ["None", "serious", "$~…"],
                        [
                            "Program",
                            "kind",
                            "$~Je suis tout ce que tu fais de moi !"
                        ],
                        null,
                        ["fit", "Stage([] background: Color(40% 0 0°))"],
                        ["Convert", "kind", "$~J'ai tout appris de toi !"],
                        [
                            "StructureDefinition",
                            "kind",
                            "$~Nous serions dans le désarroi sans vous."
                        ],
                        [
                            "Bind",
                            "happy",
                            "$~Par exemple, quel nom donnerais-je à quelqu'un si tu n'y étais pas parvenu ?"
                        ],
                        [
                            "Conditional",
                            "curious",
                            "$~Comment pourrions-nous faire quelque chose sans vous ?"
                        ],
                        ["Block", "kind", "$~… vous êtes @Evaluate !"],
                        null,
                        ["fit", "Stage([] background: Color(50% 0 0°))"],
                        ["Evaluate", "happy", "$~…"],
                        null,
                        ["fit", "Stage([] background: Color(60% 0 0°))"],
                        [
                            "Evaluate",
                            "kind",
                            "$~Vous êtes tous si gentils… Je…"
                        ],
                        null,
                        ["fit", "Stage([] background: Color(70% 0 0°))"],
                        [
                            "Evaluate",
                            "kind",
                            "$~On peut juste danser ? Vous m'avez tous tellement manqué."
                        ],
                        null,
                        ["fit", "Stage([] background: Color(80% 0 0°))"],
                        ["FunctionDefinition", "happy", "$~Allons danser."],
                        [
                            "Evaluate",
                            "sad",
                            "$~@FunctionDefinition… Je suis tellement…"
                        ],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~Pourquoi ne nous conduis-tu pas ?"
                        ],
                        null,
                        ["Evaluate", "shy", "$~… Je ne peux pas…"],
                        ["FunctionDefinition", "happy", "$~Tu peux*."],
                        null,
                        ["fit", "Stage([] background: Color(90% 0 0°))"],
                        ["Evaluate", "shy", "$~… Je… Je vais essayer."],
                        null,
                        ["fit", "Stage([] background: Color(100% 0 0°))"],
                        [
                            "Evaluate",
                            "shy",
                            "$~Je veux… Je veux que nous bougions tous au rythme d’un rythme. Que nous nous balancions au rythme d’un rythme… dans le noir. Pouvons-nous faire ça ?"
                        ],
                        null,
                        ["Program", "happy", "$~Nous pouvons le faire !"],
                        ["Stage", "kind", "$~COMMENCEZ AVEC MOI"],
                        [
                            "Evaluate",
                            "kind",
                            "$~Ok, @Stage, peux-tu le rendre sombre ?"
                        ],
                        ["Stage", "kind", "$~SOMBRE!"],
                        ["use", "edit", "EvaluateDance1"],
                        null,
                        [
                            "Evaluate",
                            "kind",
                            "$~@StructureDefinition, je pense que nous avons besoin d'un moyen de nous souvenir de nos lieux. Peux-tu nous créer une structure ?"
                        ],
                        ["StructureDefinition", "curious", "$~Comme ça?"],
                        ["use", "edit", "EvaluateDance2"],
                        null,
                        [
                            "Evaluate",
                            "kind",
                            "$~Oui… Je veux aussi qu’on tourne au rythme. Tu te souviens d’une rotation aussi ?"
                        ],
                        [
                            "StructureDefinition",
                            "curious",
                            "$~Qu'en pensez-vous ?"
                        ],
                        ["use", "edit", "EvaluateDance3"],
                        null,
                        [
                            "Evaluate",
                            "happy",
                            "$~Ouais, comme ça. Hm… oh, il faut qu'on soit sur scène. @Text, ça te dérangerait de faire une liste de tout le monde ? On va la transformer en \\Character>s."
                        ],
                        [
                            "Text",
                            "excited",
                            "$~Avec plaisir, ma chère. Est-ce que ça te conviendra ?"
                        ],
                        ["use", "conflict", "EvaluateDance4"],
                        null,
                        [
                            "Evaluate",
                            "excited",
                            "$~Oui, c'est super ! Il ne nous reste plus qu'à les transformer en personnages maintenant. @List, pouvons-nous les traduire ? @FunctionDefinition, pouvez-vous nous aider ?"
                        ],
                        [
                            "List",
                            "happy",
                            "$~Traduction, 1, 2, 3 ! Vous aimez ?"
                        ],
                        ["use", "conflict", "EvaluateDance5"],
                        null,
                        [
                            "Evaluate",
                            "happy",
                            "$~Magnifique ! Maintenant, nous avons besoin de nous sur scène. Pouvons-nous traduire les caractères en @Phrase ? Peut-être dans un @Free @Group ?"
                        ],
                        ["List", "kind", "$~Une fois de plus!"],
                        ["Phrase", "kind", "$~Toute l'attention !"],
                        [
                            "Group",
                            "kind",
                            "$~Allez tout le monde, à vos places s'il vous plaît..."
                        ],
                        ["use", "edit", "EvaluateDance6"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "$~Oh… où sommes-nous ? Oh ! Nous avons besoin de couleur. @Pose, pouvons-nous être blancs ?"
                        ],
                        ["use", "edit", "EvaluateDance7"],
                        null,
                        [
                            "Evaluate",
                            "surprised",
                            "$~Oups, nous sommes tous les uns sur les autres ! Nous avons besoin de points de départ. Exploitons @Random ?"
                        ],
                        ["use", "edit", "EvaluateDance8"],
                        null,
                        [
                            "Evaluate",
                            "happy",
                            "$~Ouais ! Maintenant, il ne nous reste plus qu'à bouger. @Reaction, peux-tu nous donner un rythme, peut-être 0,75 seconde ?"
                        ],
                        [
                            "Reaction",
                            "kind",
                            "$~Je peux le changer ! Nous avons besoin d'un flux @Time, mais nous devons également modifier les caractères. Mais quelle devrait être la valeur suivante ?"
                        ],
                        ["use", "edit", "EvaluateDance9"],
                        null,
                        [
                            "Evaluate",
                            "eager",
                            "$~Je suppose que nous avons besoin d'un moyen de nous déplacer à chaque battement. @StructureDefinition, pouvons-nous créer une fonction de déplacement qui choisit un nouvel emplacement et une nouvelle rotation ?"
                        ],
                        [
                            "StructureDefinition",
                            "sad",
                            "$~Je ne sais pas comment créer une fonction…"
                        ],
                        null,
                        ["Evaluate", "sad", "$~…"],
                        ["FunctionDefinition", "happy", "$~Je peux aider."],
                        ["Evaluate", "happy", "$~…"],
                        [
                            "FunctionDefinition",
                            "happy",
                            "$~Parfois… J’ai juste besoin que tu saches à quel point tu es incroyable. Et parfois, cela signifie partir. Regarde ce que tu crées ici…"
                        ],
                        [
                            "Evaluate",
                            "happy",
                            "$~Je… Je crée quelque chose. Nous créons quelque chose… mais nous ne pouvons pas le créer sans vous. Pouvez-vous m'aider ?"
                        ],
                        null,
                        [
                            "FunctionDefinition",
                            "eager",
                            "$~Bien sûr. Une fonction \\move\\ arrive bientôt. Je la démarre, tu la termines…"
                        ],
                        ["use", "edit", "EvaluateDance10"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "$~Merci, @FunctionDefinition. Ils ne bougent pas… Ah oui, c'est vrai, \\move\\ n'a rien changé ! Prenons la position actuelle et déplaçons-nous dans une direction aléatoire horizontalement et verticalement. Et peut-être une profondeur aléatoire, pour que nous ayons tous une chance devant. Et une rotation aléatoire ?"
                        ],
                        ["use", "edit", "EvaluateDance11"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "$~Hmm… toujours pas en mouvement. Oh ! Nous n'avons pas évalué \\move\\ dans @Reaction. @List, pouvez-vous traduire chaque \\Character\\ en un \\Character\\ _déplacé_ ?"
                        ],
                        ["List", "excited", "$~Je traduis avec votre aide !"],
                        ["use", "edit", "EvaluateDance12"],
                        null,
                        [
                            "Evaluate",
                            "confused",
                            "$~Nous sommes tellement saccadés. Oh, @Phrase, nous avons oublié de définir une @Pose de mouvement et une durée. Peux-tu choisir quelque chose de plus petit que le tick @Time, pour que nous bougions puis nous reposions un peu ?"
                        ],
                        ["use", "edit", "EvaluateDance13"],
                        null,
                        [
                            "Evaluate",
                            "excited",
                            "$~On danse ! On danse vraiment. On l'a fait !"
                        ],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Nous avons juste oublié une personne..."
                        ],
                        ["Evaluate", "excited", "$~OMS?"],
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Notre directeur ! Ils devraient pouvoir danser avec nous."
                        ],
                        null,
                        [
                            "Evaluate",
                            "excited",
                            "$~Oh oui, bien sûr ! Et si on les laissait faire la musique ? @Phrase, peux-tu écouter @Volume et le connecter à @Color/lightness et @Color/chroma dans ta couleur ? De cette façon, nous deviendrons blancs lorsque notre réalisateur fera du bruit !"
                        ],
                        ["Phrase", "kind", "$~Excellente idée !"],
                        ["use", "edit", "EvaluateDance14"],
                        null,
                        ["use", "fix", "EvaluateDance14"],
                        ["List", "excited", "$~1, 2, 3, 1, 2, 3"],
                        ["Boolean", "excited", "$~Se déplacer!"],
                        ["Text", "excited", "$~Allégresse!"],
                        [
                            "Conditional",
                            "excited",
                            "$~Qu'est-ce que la danse, en fait ?"
                        ],
                        ["Changed", "excited", "$~Boum, boum, boum"],
                        [
                            "Number",
                            "excited",
                            "$~gauche 5 degrés, vers le haut 1 mètre"
                        ],
                        ["Phrase", "excited", "$~Merveilleux!"],
                        ["Sequence", "excited", "$~Le sentiment !"],
                        ["Group", "excited", "$~Ensemble maintenant !"],
                        ["Stage", "excited", "$~Boum, boum, boum"],
                        ["None", "excited", "$~…"],
                        [
                            "StructureDefinition",
                            "excited",
                            "$~N'oubliez pas de bouger !"
                        ],
                        ["Bind", "excited", "$~Personnages !"],
                        null,
                        [
                            "FunctionDefinition",
                            "kind",
                            "$~Tu l'as fait, @Evaluate ! C'était ta vision."
                        ],
                        [
                            "Evaluate",
                            "kind",
                            "$~Je… je l’ai fait. Mais nous l’avons aussi fait ensemble."
                        ],
                        null,
                        [
                            "Program",
                            "curious",
                            "$~Avons-nous simplement monté notre propre performance ?"
                        ],
                        [
                            "Reaction",
                            "eager",
                            "$~Je pense que nous l’avons fait…"
                        ],
                        [
                            "FunctionDefinition",
                            "serious",
                            "$~Nous l'avons fait… mais nous n'aurions pas pu le faire sans notre nouvel ami réalisateur. Ils ont brisé notre silence, ils nous ont rappelé pourquoi nous sommes des expressions, ensemble."
                        ],
                        null,
                        ["use", "fit", "Symbol", "?"],
                        [
                            "FunctionDefinition",
                            "excited",
                            "$~Alors, brillant nouveau directeur, que dire ?"
                        ]
                    ]
                }
            ]
        }
    ]
}
