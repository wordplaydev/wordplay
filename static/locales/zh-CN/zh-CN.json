{
    "$schema": "../../schemas/Locale.json",
    "language": "zh",
    "region": "CN",
    "wordplay": "双关语",
    "newProject": "$?",
    "term": {
        "evaluate": "评价",
        "bind": "联结",
        "decide": "决定",
        "document": "文件",
        "project": "工程",
        "source": "来源",
        "input": "输入",
        "output": "输出",
        "convert": "转变",
        "act": "表演",
        "scene": "场景",
        "phrase": "短语",
        "group": "组",
        "stage": "舞台",
        "type": "类型",
        "start": "开始",
        "entered": "进入",
        "changed": "改变了",
        "moved": "移动了",
        "name": "姓名",
        "value": "价值",
        "text": "文字",
        "boolean": "布尔值",
        "map": "映射?",
        "number": "数字",
        "function": "函数",
        "exception": "异常",
        "table": "表格",
        "none": "空的",
        "list": "列表",
        "stream": "溪流",
        "structure": "结构",
        "index": "索引",
        "query": "询问",
        "row": "排",
        "set": "组",
        "key": "钥匙"
    },
    "token": {
        "EvalOpen": "评估开放",
        "EvalClose": "评估结束",
        "SetOpen": "设置打开",
        "SetClose": "设置关闭",
        "ListOpen": "组打开",
        "ListClose": "组关闭",
        "TagOpen": "标签打开",
        "TagClose": "标签关闭",
        "Bind": "联结",
        "Access": "访问",
        "Function": "函数",
        "Borrow": "借",
        "Share": "分享",
        "Convert": "转变",
        "Doc": "文件",
        "Formatted": "格式化的",
        "FormattedType": "格式化类型",
        "Words": "字",
        "Link": "链接",
        "Italic": "斜体",
        "Underline": "底线",
        "Light": "轻",
        "Bold": "粗体",
        "Extra": "额外的",
        "Concept": "概念",
        "URL": "网址",
        "Code": "代码",
        "Mention": "提到",
        "Branch": "分支",
        "None": "空的",
        "Type": "类型",
        "TypeOperator": "类型运算符",
        "TypeOpen": "类型打开",
        "TypeClose": "类型关闭",
        "Separator": "分隔器",
        "Language": "语言",
        "Region": "地区",
        "BooleanType": "布尔类型",
        "NumberType": "数字类型",
        "JapaneseNumeral": "日语数字",
        "RomanNumeral": "罗马数字",
        "Pi": "Pi",
        "Infinity": "无穷",
        "TableOpen": "表格打开",
        "TableClose": "表格关闭",
        "Select": "选择",
        "Insert": "插入",
        "Update": "更新",
        "Delete": "删除",
        "Union": "联盟",
        "Stream": "溪流",
        "Change": "改变",
        "Initial": "初步",
        "Previous": "以前的",
        "Placeholder": "占位符",
        "Etc": "Etc",
        "This": "这",
        "Operator": "运算符",
        "Conditional": "有条件的",
        "Text": "文本",
        "Number": "数字",
        "Decimal": "小数",
        "Base": "基数",
        "Boolean": "布尔值",
        "Name": "名字",
        "Unknown": "不明",
        "Locale": "语言环境",
        "End": "结束"
    },
    "node": {
        "Dimension": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "Doc": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "Docs": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?"
        },
        "KeyValue": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "Language": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?",
            "conflict": {
                "UnknownLanguage": "$?",
                "MissingLanguage": "$?"
            }
        },
        "Name": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "Names": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "Row": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?",
            "conflict": {
                "InvalidRow": "$?",
                "MissingCell": { "primary": "$?", "secondary": "$?" },
                "UnknownColumn": "$?",
                "ExtraCell": {
                    "primary": "$?",
                    "secondary": "$?"
                },
                "UnexpectedColumnBind": {
                    "primary": "$?",
                    "secondary": "$?"
                }
            }
        },
        "Token": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "TypeInputs": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "TypeVariable": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?",
            "conflict": {
                "DuplicateTypeVariable": { "primary": "$?", "secondary": "$?" }
            }
        },
        "TypeVariables": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "Markup": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "Paragraph": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "WebLink": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "ConceptLink": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "Words": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "Example": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "Mention": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "Branch": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "BinaryEvaluate": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?",
            "right": "$?",
            "start": "$?",
            "finish": "$?",
            "conflict": {
                "OrderOfOperations": "$?"
            }
        },
        "Bind": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?",
            "finish": "$?",
            "conflict": {
                "DuplicateName": { "primary": "$?", "secondary": "$?" },
                "DuplicateShare": { "primary": "$?", "secondary": "$?" },
                "IncompatibleType": { "primary": "$?", "secondary": "$?" },
                "MisplacedShare": "$?",
                "MissingShareLanguages": "$?",
                "RequiredAfterOptional": "$?",
                "UnexpectedEtc": "$?",
                "UnusedBind": "$?"
            }
        },
        "Block": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?",
            "statement": "$?",
            "start": "$?",
            "finish": "$?",
            "conflict": {
                "ExpectedEndingExpression": "$?",
                "IgnoredExpression": { "primary": "$?", "secondary": "$?" }
            }
        },
        "BooleanLiteral": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?"
        },
        "Borrow": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?",
            "source": "$?",
            "bind": "$?",
            "version": "$?",
            "conflict": {
                "UnknownBorrow": "$?",
                "BorrowCycle": "$?"
            },
            "exception": {
                "CycleException": {
                    "description": "$?",
                    "explanation": "$?"
                }
            }
        },
        "Changed": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?"
        },
        "Conditional": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?",
            "afterthen": "$?",
            "else": "$?",
            "finish": "$?",
            "condition": "$?",
            "yes": "$?",
            "no": "$?",
            "conflict": {
                "ExpectedBooleanCondition": {
                    "primary": "$?",
                    "secondary": "$?"
                }
            }
        },
        "ConversionDefinition": {
            "name": "$?",
            "description": "$1 → $2",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?",
            "conflict": {
                "MisplacedConversion": "$?"
            }
        },
        "Convert": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?",
            "finish": "$?",
            "conflict": {
                "UnknownConversion": "$?"
            },
            "exception": {
                "ConversionException": {
                    "description": "$?",
                    "explanation": "$?"
                }
            }
        },
        "Delete": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?",
            "finish": "$?"
        },
        "DocumentedExpression": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?"
        },
        "Evaluate": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?",
            "evaluate": "$?",
            "finish": "$?",
            "function": "$?",
            "input": "$?",
            "conflict": {
                "IncompatibleInput": { "primary": "$?", "secondary": "$?" },
                "UnexpectedTypeInput": { "primary": "$?", "secondary": "$?" },
                "MisplacedInput": "$?",
                "MissingInput": { "primary": "$?", "secondary": "$?" },
                "NotInstantiable": "$?",
                "UnexpectedInput": { "primary": "$?", "secondary": "$?" },
                "UnknownInput": { "primary": "$?", "secondary": "$?" },
                "InputListMustBeLast": "$?"
            },
            "exception": {
                "FunctionException": {
                    "description": "$?",
                    "explanation": "$?"
                }
            }
        },
        "ExpressionPlaceholder": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?",
            "placeholder": "$?",
            "conflict": {
                "Placeholder": "$?"
            },
            "exception": {
                "UnimplementedException": {
                    "description": "$?",
                    "explanation": "$?"
                }
            }
        },
        "FunctionDefinition": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?",
            "conflict": {
                "NoExpression": "$?"
            }
        },
        "Iteration": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?",
            "initialize": "$?",
            "next": "$?",
            "check": "$?",
            "finish": "$?"
        },
        "Initial": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "Insert": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?",
            "finish": "$?"
        },
        "Is": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?",
            "finish": "$?",
            "conflict": {
                "ImpossibleType": "$?"
            },
            "exception": {
                "TypeException": {
                    "description": "$?",
                    "explanation": "$?"
                }
            }
        },
        "IsLocale": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?"
        },
        "ListAccess": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?",
            "finish": "$?"
        },
        "ListLiteral": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?",
            "finish": "$?",
            "item": "$?"
        },
        "Spread": {
            "name": "$?",
            "emotion": "serious",
            "doc": "$?"
        },
        "MapLiteral": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?",
            "finish": "$?",
            "conflict": {
                "NotAKeyValue": { "primary": "$?", "secondary": "$?" }
            }
        },
        "NumberLiteral": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?",
            "conflict": {
                "NotANumber": "$?"
            }
        },
        "InternalExpression": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?"
        },
        "NoneLiteral": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?"
        },
        "Previous": {
            "name": "之前",
            "emotion": "严肃",
            "doc": [
                "你曾经想过要回忆过去吗?",
                "我是诗节的官方记录保管人。给我一个流和一个数字来回顾，我会告诉你这个流在历史上的价值。",
                "例如，以下是五分钟前@Time的情况:",
                "\\← 5 时间(1000ms)\\",
                "看看它是如何在5秒钟内@None，然后突然变成了前一次?",
                "如果你想要最后几个值，给我箭头，我会把这个数字解释为一个计数:",
                "\\←← 5 时间(1000ms)\\",
                "看到了吗，这是之前的五次，而不是一次?",
                "当你想要创造依赖于过去的表演时，我会对你很有帮助。"
            ],
            "start": "$?",
            "finish": "$?"
        },
        "Program": {
            "name": "项目",
            "emotion": "严肃",
            "doc": [
                "我是一场表演开始和结束的地方，包含了所有其他角色编排的表演。",
                "您知道@Block如何计算表达式列表，并计算到列表中的最后一个表达式吗? ",
                "我是一样的，但不是把我的值赋给我所在的表达式，而是把值赋给@Stage。",
                "该值可以是任何值:@Number， @Text，或@Boolean， @List， @Set， @Map，甚至更复杂的东西，如@Phrase， @Group，或@Stage。",
                "如果你不给我一个在舞台上展示的价值，我会问你要一个。",
                "如果在表演过程中出现问题，我会指出这个问题。",
                "如果你的性能依赖于“流”，我将在每次流改变时重新评估。"
            ],
            "unevaluated": "你选择的节点没有求值",
            "start": "$1[$1]流变成$2![这是我的第一次评估]",
            "halt": "遇到异常，停止",
            "finish": "完成后，我求值为1$",
            "done": "没有东西评估",
            "exception": {
                "BlankException": {
                    "description": "空项目",
                    "explanation": "让我们表演一下吧!我们应该从哪里开始呢?"
                },
                "EvaluationLimitException": {
                    "description": "评估限制",
                    "explanation": "@评估，我已经厌倦了评估，尤其是1$。$1有没有可能永远在求值，从不停止?"
                },
                "StepLimitException": {
                    "description": "步骤限制",
                    "explanation": "有这么多。很多。步骤太多，完成不了!你能让表演简单点吗?"
                },
                "ValueException": {
                    "description": "缺少数值",
                    "explanation": "我期望得到一个值，但没有得到!"
                }
            }
        },
        "PropertyBind": {
            "name": "精炼",
            "description": "精炼$1[$1|缺少名称]",
            "emotion": "善良",
            "doc": [
                "有时，当你创建一个@StructureDefinition时，你想要改变它的最小的东西，而不必用所有相同的值创建一个新的。",
                "例如，如果你正在保存猫的记录，但然后想创建一个具有不同爱好的猫的副本，该怎么办?我可以帮你改。",
                "\\•猫(名称•爱好•“颜色•)\n\nkitty:猫(“洒”“橙色”“舔”)\nkitty.hobby: \\“呼噜声”",
                "这比做一个全新的\\猫\\ \\要简单得多，除了爱好之外，还有相同的值，不是吗?"
            ],
            "start": "首先让我们获取值",
            "finish": "我复制了这个结构，但是把1$改成了2$"
        },
        "PropertyReference": {
            "name": "性质",
            "description": "属性$1[$1|缺少名称]",
            "emotion": "善良",
            "doc":  [
                "当您创建一个@StructureDefinition时，您如何获得它的一个输入?我如何",
                "比如，如果你有一个关于城市的结构，你可以像这样得到它的值:",
                "\\•城市(名称•人口•#people)\n\nportland:城市('Portland' 800000people)\n\nportland.population\\"
            ],
            "start": "首先让我们获取值",
            "finish": "发现属性$1，它是$2",
            "property": "性质"
        },
        "Reaction": {
            "name": "反应",
            "emotion": "兴奋",
            "doc": [
                "流是如此的棒!我可以根据它们的变化来制作新的，这太酷了!",
                "比如，如果你想让@Time打勾，但想显示单词而不是数字，你可以这样做:",
                "\\时间:时间(1000毫秒)\n 'start“∆时间……((% 2)= 0 ms) ?“偶数”\\“奇数”",
                "这就像说“/以单词'start'开始，然后如果时间改变，根据时间改变为偶数或奇数。/\\”",
                "所以我就像一个流，但是一个基于其他流的流。挺奇怪吧,是吧?"
            ],
            "start": "让我们看看是否应该更新流",
            "finish": "新的流值是1$",
            "initial": "初始",
            "condition": "条件",
            "next": "下一项",
            "conflict": {
                "ExpectedStream": "$1没有引用流，所以我永远不会做出反应!"
            }
        },
        "Reference": {
            "name": "参考",
            "description": "$1",
            "emotion": "害羞",
            "doc": [
                "你知道@Bind怎么给东西@Name吗?我就是你所说的他们。我看看@Bind是否有那个名字，如果有，给你它的值。是这样的:",
                "\\鹦鹉:\nparrot \\“波利”",
                "如果我找不到名字，我就不知道该怎么办了。",
                "\\鹦鹉:\nperry\\“波利”"
            ],
            "start": "1$有什么价值?",
            "conflict": {
                "UnknownName": "我不知道有谁叫$1在$2里$2这个@Block你能给我一个名字吗?］",
                "ReferenceCycle": "1$的价值取决于它本身，所以我怎么知道应该给它什么价值呢?",
                "UnexpectedTypeVariable": "我不知道该怎么处理这些输入"
            },
            "exception": {
                "NameException": {
                    "description": "未知名字",
                    "explanation": "$1[我不知道有谁在$2[$2]中命名$1[$2]…］"
                }
            }
        },
        "Select": {
            "name": "选择",
            "emotion": "兴奋的",
            "doc": [
                "有时你有一张桌子，你只想占有它的一部分。我可以帮你拿来!",
                "比如，如果你在游戏中有一张玩家表，你想找出得分在10分以上的人，看看谁赢了:",
                "\\球员:⎡名字•“团队•”点•#⎦\n⎡“jen”“红色”8⎦\n⎡“琼”“蓝”11⎦\n⎡“杰夫”“红色”9⎦\n⎡“珍妮”“蓝”7⎦\nplayers⎡吗?名称⎦分≥10\\",
                "就这样，我得到了一排获胜者的名单!记住，我不会换桌子，我会做一张新的。你得决定把它放在哪里。"
            ],
            "start": "我们先拿那个表格",
            "finish": "我用选定的行和列创建了一个新表!",
            "conflict": {
                "ExpectedSelectName": "我至少需要一个列名"
            }
        },
        "SetLiteral": {
            "name": "具体组",
            "description": "$1，物体",
            "emotion": "急切的",
            "doc": "我是特定值的特定集合。查看@Set了解更多关于如何与我合作的信息。",
            "start": "让我们先估计数值吧",
            "finish": "我做了一个组$1"
        },
        "SetOrMapAccess": {
            "name": "组/映射组的访问",
            "emotion": "善良",
            "doc": [
                "我可以看到@Set或@Map是否有值或键。",
                "这并不难。是这样的:",
                "\\最爱:{“鸭”“鹅”‘猴子’}\nfaves{‘老鼠’}\\",
                "或者使用@Map:",
                "\\faves: {' mac&cheese':五星'麦片':2星'稀饭':1星}\nfaves{'稀饭'}\\"
            ],
            "start": "地图是什么?",
            "finish": "数值为$1",
            "conflict": {
                "IncompatibleKey": { "primary": "我想要一把1$的钥匙", "secondary": "我得到了1$，而不是2$" }
            }
        },
        "Source": {
            "name": "资源",
            "emotion": "好奇",
            "doc": [
                "哦，你知道@Program吗?我帮你取名字。把我想象成@Program周围的窗口，以及你给他们起的名字。",
                "你也可以创建其他@Source @UI/addSource，使用其他@Program，并从其他@Program中@Borrow东西以供其他程序使用。",
                "这是将大型表现组织到单独文档中的好方法。"
            ]
        },
        "StreamDefinition": {
            "name": "流",
            "emotion": "好奇",
            "doc": "我/我想/我应该创造新的溪流。但我真的不知道该怎么做。现在，我想就用现有的流吧?",
            "start": "创建这种新的流"
        },
        "StructureDefinition": {
            "name": "结构",
            "description": "结构 $1",
            "emotion": "善良",
            "doc": [
                "你好，你好吗?我吗?我很好。我喜欢定义存储值和功能的结构，所以只要我能整天这样做，我就很高兴。",
                "我这样工作！",
                "\\•披萨( \\ 原料•['']\n大小•#in\n) (\n\tƒ 成本() 大小 · 10美元/in\n)\n\n披萨(['意大利腊肠' '胡椒'] 12in).成本()\\",
                "明白是怎么回事了吧?我定义了\\Pizza\\，它有两个输入，\\ingredients\\ (@Text列表)和\\size\\(以英寸为单位的数字)。",
                "在内部，@FunctionDefinition创建了一个计算披萨价格的函数，假设每英寸$10。",
                "我不需要@FunctionDefinition。我可以只是输入。",
                "\\•披萨(\n原料•['']\n大小•#in\n)\\",
                "我也可以把@Bind放在里面，这样我们就可以提前评估成本。",
                "\\•披萨(\n原料•['']\n大小•#in\n) (\n\t成本: 大小 · 10美金/in\n)\n\n披萨(['意大利腊肠' '胡椒'] 12in).cost\\"
            ],
            "start": "让我们来定义这个可爱的结构",
            "conflict": {
                "DisallowedInputs": "我不能有输入，因为我的一个或多个接口函数没有实现",
                "IncompleteImplementation": "我的函数要么需要全部实现，要么不需要实现。没有混乱的混合物!",
                "NotAnInterface": "我不是一个界面;一个结构只能实现接口，而不能实现其他结构",
                "UnimplementedInterface": "我实现了1$，但没有实现2$"
            }
        },
        "TableLiteral": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?",
            "finish": "$?"
        },
        "TextLiteral": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?"
        },
        "Translation": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "FormattedLiteral": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?"
        },
        "FormattedTranslation": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "This": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?",
            "conflict": {
                "MisplacedThis": "$?"
            }
        },
        "UnaryEvaluate": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?",
            "finish": "$?"
        },
        "UnparsableExpression": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?",
            "conflict": {
                "UnparsableConflict": "$?",
                "UnclosedDelimiter": "$?"
            },
            "exception": {
                "UnparsableException": {
                    "description": "$?",
                    "explanation": "$?"
                }
            }
        },
        "Update": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?",
            "start": "$?",
            "finish": "$?",
            "conflict": {
                "ExpectedColumnBind": "$?",
                "IncompatibleCellType": { "primary": "$?", "secondary": "$?" }
            }
        },
        "AnyType": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "BooleanType": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "ConversionType": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "FormattedType": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "ExceptionType": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "FunctionType": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "ListType": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "MapType": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "NumberType": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "NameType": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?",
            "conflict": {
                "UnknownTypeName": "$?"
            }
        },
        "NeverType": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "NoneType": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "SetType": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "StreamDefinitionType": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "StreamType": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "StructureType": {
            "name": "$?",
            "description": "$1",
            "emotion": "$?",
            "doc": "$?"
        },
        "UnknownType": {
            "name": "$?",
            "connector": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "TableType": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?",
            "conflict": {
                "ExpectedColumnType": "$?"
            }
        },
        "TextType": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "TypePlaceholder": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "UnionType": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "Unit": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "UnparsableType": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "VariableType": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "CycleType": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "UnknownVariableType": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "NotAType": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "NoExpressionType": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "NotEnclosedType": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "NotImplementedType": {
            "name": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "UnknownNameType": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?"
        },
        "NonFunctionType": {
            "name": "$?",
            "description": "$?",
            "emotion": "$?",
            "doc": "$?"
        }
    },
    "basis": {
        "Boolean": {
            "doc": "$?",
            "name": "$?",
            "function": {
                "and": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "or": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "not": { "doc": "$?", "names": "$?", "inputs": [] },
                "equals": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "notequal": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                }
            },
            "conversion": { "text": "$?" }
        },
        "None": {
            "doc": "$?",
            "name": "$?",
            "function": {
                "equals": {
                    "doc": "$?",
                    "names": ["=", "equals"],
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "notequals": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                }
            },
            "conversion": { "text": "$?" }
        },
        "Text": {
            "doc": "$?",
            "name": "$?",
            "function": {
                "length": { "doc": "$?", "names": "$?", "inputs": [] },
                "equals": {
                    "doc": "$?",
                    "names": ["=", "equals"],
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "notequals": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "repeat": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "segment": {
                    "doc": "$?",
                    "names": ["segmentar"],
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "combine": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "has": {
                    "doc": "$?",
                    "names": ["tiene"],
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "starts": {
                    "doc": [
                        "\\⊤\\ 如果我以 @Text 来开始",
                        "\\'你好，诗句！'。以('你好')开始\\",
                        "\\'你好，诗句！'。以('诗句')开始\\"
                    ],
                    "names": ["开始"],
                    "inputs": [{
                        "doc": "这样的 @Text 为我检查了文本的开头",
                        "names": "文本"
                        }
                    ]
                },
                "ends": {
                    "doc": [
                        "\\⊤\\ 如果我以 @Text 来结尾。",
                        "\\'我是一个问句吗？'。以('?')结尾\\",
                        "\\'我不是一个问句。'。 以('?')结尾\\"
                    ],
                    "names": ["ends"],
                    "inputs": [
                        {
                            "doc": "这样的 @Text 为我检查了文本的结尾。",
                            "names": "文本"
                        }
                    ]
                }
            },
            "conversion": { "list": "$?", "number": "$?" }
        },
        "Number": {
            "doc": [
                "如果我创造一个 @Number, 这个数字可以是你能想象到的任何单位",
                "这是我能想到的前五项：",
                "\\0\\",
                "\\1个故事\\",
                "\\π派\\",
                "\\∞个石头\\",
                "\\1000000个拥抱\\",
                "简单来说，我们有无数个数字。",
                "同时，我们也有无数个单位！",
                "同样地，无数个数字和单位的排列组合……",
                "我可以是整数、实数、负数、正数、分数、小数，甚至不是一个数字。",
                "你可以将我用不同的数字系统表达, 像阿拉伯数字 \\123\\, 罗马数字 \\ⅩⅩⅩⅠⅩ\\, 日本数字 \\二十\\, 甚至将它们混合起来:",
                "\\1 + Ⅰ + 一\\",
                "你也可以将我写成二进制，比如二进制的16会像这样：",
                "\\2;11111111\\",
                "\\10;255\\",
                "\\16;FF\\",
                "这里有一个特殊的数字叫 NaN ，它可能出现在你没有写下数字的时候：",
                "\\2;22\\",
                "这里没有数字显示，是因为数字2不会出现在二进制当中。 如果你想要将非数字的文本变成数字，NaN 同样会出现：",
                "\\'嗨'→#\\"
            ],
            "name": ["#", "数字"],
            "function": {
                "add": {
                    "doc": [
                        "我把自己加上一个同样 @Unit 的 @Number ， 就会出现同样的 @Unit 的 @Number 。",
                        "比如：",
                        "\\1 + 1\\",
                        "\\3只猫 + 5只猫\\",
                        "如果它们的单位不一样，就不会出现结果。",
                        "\\3只猫 + 5只狗\\"
                    ],
                    "names": ["+", "加号"],
                    "inputs": [
                        { "doc": "要添加的 @Number 。", "names": "数字" }
                    ]
                },
                "subtract": {
                    "doc": [
                        "我把自己减去你指定的 @Number ， 得出一个以同样的 @Unit 结尾的新的 @Number 。",
                        "比如：",
                        "\\1 - 1\\",
                        "\\3只猫 - 5只猫\\",
                        "如果它们的单位不一样，就不会出现结果。",
                        "\\3只猫 - 5只狗\\"
                    ],
                    "names": ["-", "减号"],
                    "inputs": [
                        {
                            "doc": "这是我要从我自己减去的 @Number 。",
                            "names": "数字"
                        }
                    ]
                },
                "multiply": {
                    "doc": [
                        "我在我自己的基础上乘以你给我的 @Number ， 得到以我的 @Unit 和指定数字的 @Unit 相结合的结果：",
                        "\\5 · 5\\",
                        "\\5米 · 5米\\",
                        "\\5米 · 1/秒\\"
                    ],
                    "names": ["·", "乘号"],
                    "inputs": [
                        { "doc": "需要相乘的数字", "names": "数字" }
                    ]
                },
                "divide": {
                    "doc": [
                        "我将自己除以你指定的 @Number ， 得到以我的 @Unit 和指定数字的 @Unit 相结合的结果：",
                        "\\5 ÷ 5\\",
                        "\\5米 ÷ 5米\\",
                        "\\5米 ÷ 5秒\\"
                    ],
                    "names": ["÷", "除以"],
                    "inputs": [
                        {
                            "doc": "让我被除的 @Number 。",
                            "names": "数字"
                        }
                    ]
                },
                "remainder": {
                    "doc": [
                        "我把自己除以你指定的 @Number ，但我会给出这个结果的余数：",
                        "\\10 % 2\\",
                        "\\10米 % 2\\",
                        "\\10米/秒 % 3\\"
                    ],
                    "names": ["%", "取模"],
                    "inputs": [
                        {
                            "doc": "让我被除的 @Number 。",
                            "names": "数字"
                        }
                    ]
                },
                "positive": {
                    "doc": [
                        "我会给出一个新的 @Number 使我是一个正数，即使输入的数字是一个负数。",
                        "\\-200.正数()\\"
                    ],
                    "names": ["正数"],
                    "inputs": []
                },
                "round": {
                    "doc": [
                        "我会把 @Number 四舍五入成最接近的一个整数。",
                        "\\9.4.四舍五入()\\",
                        "\\9.5.四舍五入()\\",
                        "\\9.6.四舍五入()\\"
                    ],
                    "names": ["四舍五入"],
                    "inputs": []
                },
                "roundDown": {
                    "doc": [
                        "我会把 @Number 变成最接近我的比我小的整数。",
                        "\\10.5.roundDown()\\",
                        "\\10.1.roundDown()\\",
                        "\\10.01.roundDown()\\"
                    ],
                    "names": ["$? down"],
                    "inputs": []
                },
                "roundUp": {
                    "doc": "$?",
                    "names": ["$? up"],
                    "inputs": []
                },
                "power": {
                    "doc": "$?",
                    "names": ["^", "power"],
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "root": {
                    "doc": "$?",
                    "names": ["√", "root"],
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "lessThan": {
                    "doc": "$?",
                    "names": ["<", "lessthan"],
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "lessOrEqual": {
                    "doc": "$?",
                    "names": ["≤", "lessorequal"],
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "greaterThan": {
                    "doc": "$?",
                    "names": [">", "greaterthan"],
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "greaterOrEqual": {
                    "doc": "$?",
                    "names": ["≥", "greaterorequal"],
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "equal": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "notequal": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "cos": {
                    "doc": "$?",
                    "names": ["cos", "cosine"],
                    "inputs": []
                },
                "sin": { "doc": "$?", "names": ["sin", "sine"], "inputs": [] },
                "min": {
                    "doc": "$?",
                    "names": "$? min",
                    "inputs": [
                        {
                            "doc": "$?",
                            "names": "$?"
                        }
                    ]
                },
                "max": {
                    "doc": "$?",
                    "names": "$? max",
                    "inputs": [
                        {
                            "doc": "$?",
                            "names": "$?"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$?",
                "list": "$?",
                "s2m": "$?",
                "s2h": "$?",
                "s2day": "$?",
                "s2wk": "$?",
                "s2year": "$?",
                "s2ms": "$?",
                "ms2s": "$?",
                "min2s": "$?",
                "h2s": "$?",
                "day2s": "$?",
                "wk2s": "$?",
                "yr2s": "$?",
                "m2pm": "$?",
                "m2nm": "$?",
                "m2micro": "$?",
                "m2mm": "$?",
                "m2cm": "$?",
                "m2dm": "$?",
                "m2km": "$?",
                "m2Mm": "$?",
                "m2Gm": "$?",
                "m2Tm": "$?",
                "pm2m": "$?",
                "nm2m": "$?",
                "micro2m": "$?",
                "mm2m": "$?",
                "cm2m": "$?",
                "dm2m": "$?",
                "km2m": "$?",
                "Mm2m": "$?",
                "Gm2m": "$?",
                "Tm2m": "$?",
                "km2mi": "$?",
                "mi2km": "$?",
                "cm2in": "$?",
                "in2cm": "$?",
                "m2ft": "$?",
                "ft2m": "$?",
                "g2mg": "$?",
                "mg2g": "$?",
                "g2kg": "$?",
                "kg2g": "$?",
                "g2oz": "$?",
                "oz2g": "$?",
                "oz2lb": "$?",
                "lb2oz": "$?"
            }
        },
        "List": {
            "doc": "$?",
            "name": "$?",
            "kind": "$?",
            "out": "$?",
            "outofbounds": "$?",
            "function": {
                "add": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "append": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "replace": {
                    "doc": "$?",
                    "names": ["reemplazar"],
                    "inputs": [
                        { "doc": "$?", "names": "$?" },
                        { "doc": "$?", "names": "$?" }
                    ]
                },
                "length": { "doc": "$?", "names": "$?", "inputs": [] },
                "random": { "doc": "$?", "names": "$?", "inputs": [] },
                "first": { "doc": "$?", "names": "$?", "inputs": [] },
                "last": { "doc": "$?", "names": "$?", "inputs": [] },
                "has": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "join": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "subsequence": {
                    "doc": "$?",
                    "names": "$? subsequence",
                    "inputs": [
                        {
                            "doc": "$?",
                            "names": "$?"
                        },
                        {
                            "doc": "$?",
                            "names": "$?"
                        }
                    ]
                },
                "sansFirst": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": []
                },
                "sansLast": { "doc": "$?", "names": "$?", "inputs": [] },
                "sans": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "sansAll": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "reverse": { "doc": "$?", "names": "$?", "inputs": [] },
                "equals": {
                    "doc": "$?",
                    "names": ["=", "equals"],
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "notequals": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "translate": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }],
                    "translator": [
                        { "doc": "$?", "names": "$? item" },
                        { "doc": "$?", "names": "$? index" },
                        {
                            "doc": "$?",
                            "names": "$?"
                        }
                    ]
                },
                "filter": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }],
                    "checker": [
                        { "doc": "$?", "names": "$? item" },
                        { "doc": "$?", "names": "$? index" },
                        {
                            "doc": "$?",
                            "names": "$?"
                        }
                    ]
                },
                "all": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }],
                    "checker": [
                        { "doc": "$?", "names": "$? item" },
                        { "doc": "$?", "names": "$? index" },
                        {
                            "doc": "$?",
                            "names": "$?"
                        }
                    ]
                },
                "until": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }],
                    "checker": [
                        { "doc": "$?", "names": "$? item" },
                        { "doc": "$?", "names": "$? index" },
                        {
                            "doc": "$?",
                            "names": "$?"
                        }
                    ]
                },
                "find": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }],
                    "checker": [
                        { "doc": "$?", "names": "$? value" },
                        { "doc": "$?", "names": "$? index" },
                        {
                            "doc": "$?",
                            "names": "$?"
                        }
                    ]
                },
                "combine": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [
                        { "doc": "$?", "names": "$?" },
                        { "doc": "$?", "names": "$?" }
                    ],
                    "combiner": [
                        { "doc": "$?", "names": "$?" },
                        { "doc": "$?", "names": "$?" },
                        { "doc": "$?", "names": "$?" },
                        {
                            "doc": "$?",
                            "names": "$?"
                        }
                    ]
                },
                "sorted": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$", "names": "$? sequencer" }],
                    "sequencer": [{ "doc": "$?", "names": "$? value" }]
                }
            },
            "conversion": { "text": "$?", "set": "$?" }
        },
        "Set": {
            "doc": "$?",
            "name": "$?",
            "kind": "$?",
            "out": "$?",
            "function": {
                "size": {
                    "doc": "$?",
                    "names": "$? size",
                    "inputs": []
                },
                "equals": {
                    "doc": "$?",
                    "names": ["=", "equals"],
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "notequals": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "add": {
                    "doc": "$?",
                    "names": ["add", "+"],
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "remove": {
                    "doc": "$?",
                    "names": ["remove", "-"],
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "union": {
                    "doc": "$?",
                    "names": ["union", "∪"],
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "intersection": {
                    "doc": "$?",
                    "names": ["intersection", "∩"],
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "difference": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "filter": {
                    "doc": "$?",
                    "names": "filter",
                    "inputs": [{ "doc": "$?", "names": "$? checker" }],
                    "checker": [
                        { "doc": "$?", "names": "$? value" },
                        {
                            "doc": "$?",
                            "names": "$? set"
                        }
                    ]
                },
                "translate": {
                    "doc": "$?",
                    "names": "translate",
                    "inputs": [{ "doc": "$?", "names": "$? translator" }],
                    "translator": [
                        { "doc": "$?", "names": "$? value" },
                        {
                            "doc": "$?",
                            "names": "$? set"
                        }
                    ]
                }
            },
            "conversion": { "text": "$?", "list": "$?" }
        },
        "Map": {
            "doc": "$?",
            "name": "$?",
            "key": "$?",
            "value": "$?",
            "result": "$?",
            "function": {
                "size": {
                    "doc": "$?",
                    "names": "$? size",
                    "inputs": []
                },
                "equals": {
                    "doc": "$?",
                    "names": ["=", "equals"],
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "notequals": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "set": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [
                        { "doc": "$?", "names": "$?" },
                        { "doc": "$?", "names": "$?" }
                    ]
                },
                "unset": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "remove": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$?" }]
                },
                "filter": {
                    "doc": "$?",
                    "names": "filter",
                    "inputs": [{ "doc": "$?", "names": "$? checker" }],
                    "checker": [
                        { "doc": "$?", "names": "$? key" },
                        { "doc": "$?", "names": "$? value" },
                        { "doc": "$?", "names": "$?" }
                    ]
                },
                "translate": {
                    "doc": "$?",
                    "names": "translate",
                    "inputs": [{ "doc": "$?", "names": "$? translator" }],
                    "translator": [
                        { "doc": "$?", "names": "$? key" },
                        { "doc": "$?", "names": "$? value" },
                        { "doc": "$?", "names": "$?" }
                    ]
                }
            },
            "conversion": { "text": "$?", "set": "$?", "list": "$?" }
        },
        "Table": {
            "doc": "$?",
            "name": "$?",
            "row": "$?",
            "function": {
                "equals": {
                    "doc": "$?",
                    "names": "$? equals",
                    "inputs": [{ "doc": "$?", "names": "$? value" }]
                },
                "notequal": {
                    "doc": "$?",
                    "names": "$?",
                    "inputs": [{ "doc": "$?", "names": "$? value" }]
                }
            },
            "conversion": {
                "list": "$?",
                "text": "$?"
            }
        },
        "Structure": {
            "doc": "$?",
            "name": "$?",
            "function": {
                "equals": {
                    "doc": "$?",
                    "names": "$? =",
                    "inputs": [
                        {
                            "doc": "$?",
                            "names": "$? value"
                        }
                    ]
                },
                "notequal": {
                    "doc": "$?",
                    "names": "$? ≠",
                    "inputs": [
                        {
                            "doc": "$?",
                            "names": "$? value"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$?"
            }
        }
    },
    "input": {
        "Random": {
            "doc": [
                "17!",
                "/@方法的定义在这路, 我会解释这个./",
                "所以 @随机 是一个充满好奇心的生成随机数的方法 他很好奇，因为每次你评估它时，它都会创造出不同的东西。",
                "这造成了一种奇妙的混乱，并伴随着不可预测性。",
                "在默认情况下, 他会给出 @数字类型 在 \\0\\ 和 \\1\\之间的值:",
                "\\随机()\\",
                "但是你可以给他输入一个参数, 他就会生成一个在\\0\\ 和那个参数之间的值：",
                "\\随机(10)\\",
                "如果你给他输入两个参数，那他就会生成两个参数之间的值:",
                "\\随机(-10 10)\\",
                "如果你的区间有单位的话，单位会被保存 (如果单位不统一，最小的单位会被采用):",
                "\\随机(-10m 10m)\\",
                "如果您给出的数字在小数点后具有特定数量的有效数字，则将保留该精度。",
                "\\随机(1.00 10.00)\\"
            ],
            "names": ["🎲","随机"],
            "inputs": [
                { "names": "最小值", "doc": "最小的可能值" },
                { "names": "最大值", "doc": "最大的可能值" }
            ]
        },
        "Choice": { "doc": [
            "/clickety tap!/",
            "/@这是方法定义, 我来解释下这个吧！/",
            "将 @Choice 视为由受众选择的 @Phrase/name 流。如果有人在带有名称的 @Phrase 上单击、敲击或按 /Enter/ 进行键盘选择，@Choice 将有一个与名称匹配的新值。",
            "因此，使用它的最佳方法是使用命名的可选短语@Phrase 创建一个表演，然后使用@Reaction 来决定选择该名称时要执行的操作。",
            "这里有一个简单的例子：",
            "\\Group(\nStack() \n[\nPhrase('一个'可选:⊤名称:'1') \nPhrase('两个'可选:⊤名称:'2') \nPhrase(Choice())\n ]\n)\\",
            "将其复制到编辑器中，然后选择两个 @Phrase 之一。您将看到第三个 @Phrase 显示所选的名称。"
        ], 
        "names": ["🔘", "选择"] },
        "Button": {
            "doc": [
                "/click click click/",
                "/@FunctionDefinition 这里，我解释一下这个。/",
                "@Button 是监听鼠标或触控板的好方法。当然，鼠标或触控板并不是聆听观众讲话的理想选择，因为并非每个人都可以使用。更容易访问的选择是@Choice。",
                "但如果您/确实/需要监听鼠标按钮，这就是实现的方法。它将提供一个 @Boolean 流，表示主按钮是向上 \\⊥\\ 还是向下 \\⊤\\。",
                "这是一个简单的例子：",
                "\\短语(按钮() → '')\\",
                "这只是创建一个@Phrase，它是流的文本值。如果将其复制到编辑器中并单击，您将看到它在 \\⊥\\ 和 \\⊤\\ 之间来回切换。"
            ],
            "names": ["按钮"],
            "down": { "names": "按下", "doc": "如果@None，流将提供向上和向下值。如果@Boolean，它只会提供给定@Boolean值的值。" }
        },
        "Pointer": { "doc": [
            "/嗡嗡嗡/",
            "/@FunctionDefinition 这里，我解释一下这个。/",
            "您了解鼠标、触控板和触摸屏吗？有时您想知道观众指向哪里。这就是 @Pointer 提供的。",
            "当然，这不是一个易于访问的选择：并非每个人都可以看到或轻松指出，因此请务必确保您不会排除某人通过使用此流参与。",
            "如果您确定没有人被排除在外，那么使用 @Pointer 就像创建一个流一样简单：",
            "\\Pointer()\\",
            "它提供的@Place将对应于@Stage上指针所指向的位置。"
        ],
        "names": ["⛓", "链接"] },
        "Key": {
            "doc": [
                "/咔嗒！/",
                "/@FunctionDefinition在这里，我来解释一下",
                "键盘有很多键，不是吗?@Key会告诉你哪个人在按哪个键。",
                "试试这个吧！",
                "\\Key()\\",
                "看到了吗，当你输入一个键时，它会出现在@Stage上?每次按下一个键时，一个新的@Text将被添加到流中，描述按下的键。",
                "对于表示字符的键，其值将是字符@Text。",
                "对于特殊的键，如/Escape/键，将使用@Text描述键，使用<预定义名称@https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values>，不幸的是只有英文版本。",
                "如果你只想知道一个特定的密钥，你可以提供它:",
                "\\Key('a')\\",
                "如果你只想知道@Key什么时候被释放而不是按下，你可以提供一个@布尔值:",
                "\\Key('a' ⊥)\\"
            ],
            "names": ["⌨️", "钥匙"],
            "key": { "names": "钥匙", "doc": "如果是@None，则提供所有键。如果是特定的@Text，则只提供该键" },
            "down": { "names": "下", "doc": "如果@None，则按下键生成输入。如果\\⊥\\，那么只提供向下的输入，如果\\⊥\\，那么只提供释放的输入。" }
        },
        "Time": {
            "doc": [
                "/嘀嗒嘀嗒嘀嗒～/",
                "@FunctionDefinition在这里，我将解释@Time，因为它没有说话。",
                "时间是一条以一定频率滴答作响的溪流。",
                "每次执行时，@Program用新的时间值重新求值。",
                "比如说：",
                "\\Time()\\",
                "如果您为时间提供@Time/frequency，它将以该速率滴答。例如:",
                "\\Time(1000ms)\\",
                "然而，它可以有多小是有限的，因为@Program需要时间来评估，然后才能响应下一个tick。",
                "最小的可能在\\20ms\\左右."
            ],
            "names": ["🕕", "时间"],
            "frequency": { "names": ["频率"],
             "doc": "这是时间应该滴答作响的频率。它的默认值是\\33ms\\，大约每秒30次。" }
        },
        "Volume": {
            "doc":[
                "/滋滋滋～/",
                "@FunctionDefinition，我来拿麦克风吧。",
                "该流是一系列介于0和1之间的音量，以您选择的频率采样。默认情况下，频率为30hz，即每秒30次，但您可以将其更改为更低的频率。",
                "\\Volume()\\",
                "这对于倾听听众的声音是很好的!"
            ],
            "names": ["🔊", "音量"],
            "frequency": { "names": ["频率"], "doc": "采样间隔时间" }
        },
        "Pitch": {
            "doc": [
                "/嗡嗡嗡/",
                "@FunctionDefinition在这里，让我们来谈谈pitch!",
                "这个流是一系列以赫兹为单位的频率，表示声音的音高，以你选择的频率采样。我们发现人类的声音在20Hz到5000Hz之间，所以计划在这个范围内的数字。",
                "\\Pitch()\\",
                "这对听别人说话或唱歌的语气很有帮助。"
            ],
            "names": ["🎵", "音调"],
            "frequency": { "names": ["频率"], "doc": "采样间隔时间" }
        },
        "Camera": {
            "doc": [
                "/嗡嗡嗡～/",
                "@FunctionDefinition在这里，我可以解释@Camera!",
                "所以@Camera提供了一个来自你的世界的@Color的@List。该列表本质上代表一个图像，但如何处理它取决于您",
                "您可以尝试使用一堆@Phrase来表示图像，这看起来非常酷!试着复制这个…",
                "\\colors: Camera(32px 24px 33ms)\n\nStage(\ncolors.combine(\n[] \nƒ(phrases•[Phrase] row•[Color] y•#) \nphrases.append(\nrow.translate(\nƒ(color•Color x•#)\nPhrase('o' place: Place((x - 1) · 0.5m y · -0.5m) color: color duration: 0s\n)\n)\n)\n)\n)\\",
                "但是你也可以通过分析颜色来决定一盏灯是开着还是关着，或者一种特定的颜色是否常见，让观众用他们展示的颜色来影响表演。"
            ],
            "names": ["🎥", "相机"],
            "width": { "names": ["宽度"], "doc": "要在一行中采样的@Color的数量。" },
            "height": { "names": ["高度"], "doc": "列中要采样的@Color的个数。" },
            "frequency": { "names": ["频率"], "doc": "@Color样本之间的时间间隔。" }
        },
        "Motion": {
            "names":  ["⚽️", "运动"],
            "doc": [
                "/砰！砰！砰！/",
                "/嗨！@FunctionDefinition这里。我来解释一下@Motion怎么样?",
                "基本上，@Motion是@Phrase的流。你给它一个起始的@Phrase，然后它会根据重力用一个新的位置和旋转来改进它。",
                "它可以让你做一些非常简单的事情，比如创建弹跳的表情符号:",
                "\\运动(短语('o') startplace: Place(0m 10m))\\",
                "看到0是如何反弹的了吗?在第一次评估时，我们给它一个@Stage的高位置，但之后，它得到@None，这允许@Motion将其更改为重力将其放置的任何位置。",
                "查看下面配置它的许多其他方法"
            ],
            "place": { "doc": "开始点", "names": " place" },
            "velocity": { "doc": "初始速度", "names": " velocity" },
            "nextplace": { "doc": "下一地点，无视物理", "names": " nextplace" },
            "nextvelocity": { "doc": "下一地点，无视速度", "names": " nextvelocity" }
        },
        "Chat": {
            "doc": [
                "/你好!@FunctionDefinition这里。你想聊聊吗?",
                "聊天流的基本思想是受众输入消息，然后程序对其进行响应。",
                "例如，这个简单的程序检查消息是否为“hello”，如果是，程序计算为“hi”。否则，它的求值为 \"huh\" ?",
                "\\Chat().has('hello') ? 'hi!' 'huh?'\\",
                "就是这样!你可以用它制作各种各样的表演，比如聊天机器人、文本冒险或其他表演的基于文本的控制方案。"
            ],
            "names": ["🗣️", "聊天"]
        },
        "Placement": {
            "doc":[
                "/嘿，这里是@FunctionDefinition。我们来谈谈如何让我们行动起来!/",
                "所以有很多方法可以把我们放在@Stage上。你可以给我们一个显式的@Place。你可以使用@Motion，让重力发挥作用。你也可以把我们放在一个@Group里，让他们按照特定的方式安排我们。",
                "但有时你想让观众控制我们在舞台上的位置。这就是@Placement的作用。",
                "它的工作原理是这样的:你只需要创建一个@Placement并把它赋给我们的@Place:",
                "\\Phrase('hi' place: Placement())\\",
                "然后，每当观众使用箭头键或在舞台上点击或轻敲时，@Placement将创建一个新的@Place，该@Place将朝着所需的方向移动。",
                "试着把这个复制到你的程序中，然后用指针或键盘移动箭头。",
                "您可以自定义@Place，在某些维度上启用和禁用移动，更改@Place移动的距离，以及流开始的初始@Place。"
            ],
            "names": ["✥", "摆放"],
            "inputs": [
                {
                    "doc": "开始的初始位置。",
                    "names": "初始"
                },
                {
                    "doc": "当观众要求移动时，场地应该移动多少米。",
                    "names": "距离"
                },
                {
                    "doc": "如果为true，则允许在水平轴上移动。默认为开启。",
                    "names": "水平的"
                },
                {
                    "doc": "如果为true，则允许在垂直轴上移动。默认为开启。",
                    "names": "竖直的"
                },
                {
                    "doc": "如果为true，则允许使用and -键在z轴上移动。",
                    "names": "深度"
                }
            ]
        },
        "Webpage": {
            "doc": [
                "/嘿，这里是@FunctionDefinition。让我们来谈谈如何从互联网上获得网页!/",
                "当我们第一次听说你们的互联网时，我们觉得它很迷人。一个充满了相互连接的计算机共享文档的世界?那太神奇了!",
                "所以我们制作了一条与之相连的流。你给我们一个URL，我们会得到所有的文本。是这样的:",
                "\\Webpage('https://wordplay.dev')\\",
                "而且显然有一种东西叫做 <CSS@https://developer.mozilla.org/en-US/docs/Learn/CSS/First_steps/What_is_CSS>, 它想让你在网页上查询东西?给我们一个CSS选择查询，我们将只获得与该查询匹配的文本。就像这个例子，它获得一级标头",
                "\\Webpage('https://wordplay.dev' 'h1')\\",
                "这款手机可能会出很多问题。如果你失去了互联网连接，或者URL不能解析任何东西，或者URL不是公开的，或者URL不是HTML页面……所有这些都可能导致异常。如果你找到一个合适的页面，你会得到一个@数字，表示完成百分比，然后是一个@页面上的单词列表。"
            ],
            "names": ["🔗", "网页"],
            "url": { "doc": "要获取的HTML网页URL。", "names": " url" },
            "query": { "doc": "要在HTML上计算的CSS查询", "names": "请求" },
            "frequency": { "doc": "在再次获取该页之前应该经过的分钟数", "names": "频率" },
            "error": {
                "invalid": "这不是一个有效的URL",
                "unvailable": "这个URL无法访问",
                "notHTML": "这个回应不是HTML",
                "noConnection": "无法连接到双关语",
                "limit": "对该域的请求太多"
            }
        },
        "Collision": {
            "names": "撞击",
            "doc": [
                "/你好!@FunctionDefinition这里。看看这个很酷的输入/",
                "它可以帮助您发现@Output何时相互碰撞!当我们相互碰撞时，这是一种很好的方式，而不是像@Output那样相互反弹。",
                "只要给我一个@Output的名字，当它碰到另一个名字时，我将创建一个新的@Rebound值。@Rebound有关于碰撞的名字和它们碰撞的方向的信息。",
                "如果你给了我两个名字，我只会在两个名字相遇的时候创建一个新值。",
                "在我创建一个新值之后，我将创建一个\\ø\\，因为碰撞是在它发生之后完成的。这表明不会再发生碰撞。",
                ""
            ],
            "subject": {
                "names": "主题",
                "doc": "我应该查找碰撞的@Output的名称。"
            },
            "object": {
                "names": "其他",
                "doc": "我应该查找碰撞的另一个@Output的名称。"
            }
        },
        "Rebound": {
            "names": "回弹Rebound",
            "doc": "我来自@Collision，代表谁被碰撞了，碰撞发生在哪个方向。用我来决定是否以某种特殊的方式对碰撞做出反应，而不是普通的物理反应。",
            "direction": {
                "names": "$? direction",
                "doc": "碰撞的方向和大小，相对于碰撞的主体"
            },
            "subject": {
                "names": "主观subject",
                "doc": "主观所命中的输出的名称"
            },
            "object": {
                "names": "客观object",
                "doc": "击中主题的输出的名称"
            }
        },
        "Direction": {
            "names": "方向",
            "doc": "我是方向和大小，沿着x轴和y轴。",
            "x": {
                "names": "x",
                "doc": "沿着x轴方向的方向和大小。"
            },
            "y": {
                "names": "y",
                "doc": "沿y轴方向的方向和大小。"
            }
        }
    },
    "output": {
        "Output": {
            "names": "输出 Output",
            "doc": "我不是你真正可以制作的@结构定义。但我是一个非常重要的人，因为我激发了我们舞蹈中最重要的元素：@短语、@组和@舞台。去见见他们，去了解更多关于如何使用它们的信息。"
        },
        "Stage": {
            "names": "$?",
            "doc": "$?",
            "description": "$?",
            "content": { "doc": "$?", "names": "$?" },
            "frame": { "doc": "$?", "names": "$?" },
            "size": { "doc": "$?", "names": "$?" },
            "face": { "doc": "$?", "names": "$?" },
            "place": { "doc": "$?", "names": "$?" },
            "name": { "doc": "$?", "names": "$?" },
            "selectable": { "doc": "$?", "names": "$?" },
            "color": {
                "doc": "$?",
                "names": "$? color"
            },
            "background": { "doc": "$?", "names": "$? background" },
            "opacity": {
                "doc": "$?",
                "names": "$? opacity"
            },
            "offset": {
                "doc": "$?",
                "names": "$? offset"
            },
            "rotation": {
                "doc": "$?",
                "names": "$? rotation"
            },
            "scale": {
                "doc": "$?",
                "names": "$? scale"
            },
            "flipx": {
                "doc": "$?",
                "names": "$? flipx"
            },
            "flipy": {
                "doc": "$?",
                "names": "$? flipy"
            },
            "entering": { "doc": "$?", "names": "$?" },
            "resting": { "doc": "$?", "names": "$?" },
            "moving": { "doc": "$?", "names": "$?" },
            "exiting": { "doc": "$?", "names": "$?" },
            "duration": { "doc": "$?", "names": ["$?"] },
            "style": { "doc": "$?", "names": "$?" },
            "gravity": { "doc": "$?", "names": "$? gravity" }
        },
        "Group": {
            "names": "组",
            "doc": "哦你好，你过的怎么样？当有其他人在身边时，我总是很愉快，所以能和你在一起真是太好了！\n 我将@短语和@组组合在一起放在@舞台上，并将它们放在@整理中，这样它们的位置就有了一些秩序。\n 要使我工作，你需要给我一个@整理，然后是一个@输出的@列表以进行安排。\n 例如，在这里我用了一个@堆栈排列和一些垂直堆叠的@短语：\n \\组(堆栈() [短语('第一个') 短语('第二个')])\\ \n 我如何安排事物取决于你给我的@整理。" ,
            "description": "$1[$1|] $2 $3",
            "content": { 
                "doc": "安排的@输出列表。", 
                "names": "内容" },
            "layout": { 
                "doc": "将@输出放置在其位置的安排方式。", 
                "names": "布局" },
            "matter": {
                "doc": "如果我不小心碰到其他物体，我应该如何反应。",
                "names": "物体 matter"
            },
            "size": { 
                "doc": "我内心里美好的内容应该有多高，除非它们有自己的尺寸！", 
                "names": "尺寸" },
            "face": { 
                "doc": "我内部的字体名称内容应该有，除非他们有自己的字体可以使用。", 
                "names": "表面" },
            "place": { 
                "doc": "舞台上我应该在的位置。 我内部的内容会相对于那里进行排列。", 
                "names": "位置" },
            "name": { "doc": "与@短语/名称相同！", "names": "名称" },
            "selectable": { "doc": "与@短语/可选择的相同! ", "names": "可选择的" },
            "color": {
                "doc": "我内部的内容应该是@颜色，除非它们有自己的颜色。",
                "names": "颜色 color"
            },
            "background": { "doc": "投影在我背后的@颜色。", "names": "背景 background" },
            "opacity": {
                "doc": "我体内的一切在 \\0\\ 和 \\1\\ 之间应该是多么透明，除非被不同的@姿势覆盖。",
                "names": "透明 opacity"
            },
            "offset": {
                "doc": "一个 @位置 指示它与我的正常 @位置 的偏移量，除非被不同的 @姿势 覆盖。 有助于就地摆动。",
                "names": "抵消 offset"
            },
            "rotation": {
                "doc": "我应该围绕我的中心倾斜多少，我的@姿势有不同的倾斜。",
                "names": "自转 rotation"
            },
            "scale": {
                "doc": "相对于我原来的尺寸我应该有多大。",
                "names": "比例 scale"
            },
            "flipx": {
                "doc": "与@短语/水平翻转相同！",
                "names": "水平翻转 flipx"
            },
            "flipy": {
                "doc": "与@短语/垂直翻转相同！",
                "names": "垂直翻转flipy"
            },
            "entering": { "doc": "与@短语/进入相同！", "names": "进入" },
            "resting": { "doc": "与@短语/休息相同！", "names": "休息" },
            "moving": { "doc": "与@短语/移动相同！", "names": "移动" },
            "exiting": { "doc": "与@短语/退出相同！", "names": "退出" },
            "duration": { "doc": "与@短语/持续时间相同！", "names": ["持续时间"] },
            "style": { "doc": "与@短语/风格相同！", "names": "风格" }
        },
        "Phrase": {
            "names": ["💬", "Frase"],
            "doc": "你好，你好！还记得我吗？怎么会有人忘记/我/。没错，我就是伟大的@短语，准备好在@舞台上表达最可爱的@文字。\n 只要让我这样，我就会出现在@舞台：\n \\短语('太棒了！')\\ \n 显然，我需要一些 @文字，但除此之外，我可以做任何@输出可以做的所有事情，包括更改我的大小、字体、旋转，以及使用@姿势和@顺序进行所有令人难以置信的舞蹈。 \n 你也可以在@舞台上选择我，然后在隔壁的调色板上编辑我。",
            "text": { "doc": "在@舞台上展示的角色。", "names": "文字" },
            "description": "$3[$3 米 |]短语 $1 $2[命名 $2|] $4[$4|] $5",
            "size": { "doc": "我应该多高，以米为单位！", "names": "尺寸" },
            "face": { "doc": "我应该使用的字体名称。", "names": "表面" },
            "place": { "doc": "舞台上我应该在的地方。", "names": "位置" },
            "wrap": {
                "doc": "我应该包裹符号的边缘，或者 \\ø\\ 如果我不应该包裹它们。",
                "names": "包裹 wrap"
            },
            "alignment": {
                "doc": "如果有@舞台/包裹的边界集，我是否应该将符号与边缘的开始、中心或结束对齐。",
                "names": "对齐 alignment"
            },
            "matter": {
                "doc": "碰到东西时可以使用的属性！",
                "names": "物体 matter"
            },
            "name": { 
                "doc": "你给我起一个名字！这对很多事情都有帮助。\n 首先，如果我有名字，我会用它在屏幕阅读器描述中描述自己。\n 第二，在制作动画时，您可能有多个不同的表达式，这些表达式应该在舞台上表示相同的内容；给它们相同的名称，它们就会作为一个动画。 \n 最后，我对 @选择很有帮助：你给我的名字出现在该信息流中。 \n 如果有帮助的话，您可以给我许多不同的名称，每个名称都采用不同的语言。我将始终在第一个选定的区域设置中使用该名称", 
                "names": "名字" },
            "selectable": { "doc": "如果是\\⊤\\，则表示我可以通过指针或键盘选择。", "names": "可选择的" },
            "color": {
                "doc": "@颜色应该是默认的，除非被不同的@姿势覆盖。",
                "names": "颜色 color"
            },
            "background": { "doc": "投射在我身后的@颜色", "names": "背景 background" },
            "opacity": {
                "doc": "默认情况下我应该有多透明，在 \\0\\ 和 \\1\\ 之间，除非被不同的@姿势覆盖。有助于淡入和淡出。",
                "names": "透明 opacity"
            },
            "offset": {
                "doc": "一个@位置指示它与我的@位置的偏移量，除非被不同的@姿势覆盖。 有助于就地摆动。",
                "names": "抵消 offset"
            },
            "rotation": {
                "doc": "我应围绕其中心旋转的度数，除非被不同的@姿势覆盖。",
                "names": "自转 rotation"
            },
            "scale": {
                "doc": "我应该相对于其原始大小放大多少，除非被不同的@姿势覆盖。",
                "names": "比例 scale"
            },
            "flipx": {
                "doc": "我是否应该在x轴上镜像，除非被不同的@姿势覆盖。",
                "names": "水平翻转 flipx"
            },
            "flipy": {
                "doc": "我是否应该在y轴上镜像，除非被不同的@姿势覆盖。",
                "names": "垂直翻转 flipy"
            },
            "entering": { "doc": "上台时我应该做的@姿势或@顺序", "names": "进入" },
            "resting": { 
                "doc": "我应该在进入舞台之后、退出之前以及我的@位置没有改变的情况下执行@姿势或@顺序。 如果您不给我，我将使用默认值。", 
                "names": "休息" },
            "moving": { 
                "doc": "在舞台上移动位置时我应该执行的@姿势或@顺序，而不是我的默认设置。", 
                "names": "移动" },
            "exiting": { "doc": "@姿势或@顺序应该在退出阶段之前执行。", "names": "退出" },
            "duration": { "doc": "移动到舞台上不同位置时适用的持续时间。", "names": ["持续时间"] },
            "style": { "doc": "移动到舞台上不同位置时使用的动画风格。", "names": "风格" }
        },
        "Arrangement": { "names": ["Arrangement"], "doc": "$?" },
        "Row": {
            "names": ["Fila"],
            "doc": "$?",
            "description": "$?",
            "alignment": {
                "doc": "$?",
                "names": "$? alignment"
            },
            "padding": { "doc": "$?", "names": "$?" }
        },
        "Stack": {
            "names": "$?",
            "doc": "$?",
            "description": "$?",
            "padding": { "doc": "$?", "names": "$?" },
            "alignment": {
                "doc": "$?",
                "names": "$? alignment"
            }
        },
        "Grid": {
            "names": "$?",
            "doc": "$?",
            "description": "$?",
            "rows": { "doc": "$?", "names": "$?" },
            "columns": { "doc": "$?", "names": "$?" },
            "padding": { "doc": "$?", "names": "$?" },
            "cellWidth": { "doc": "$?", "names": "$?" },
            "cellHeight": { "doc": "$?", "names": "$?" }
        },
        "Free": {
            "names": "$?",
            "doc": "$?",
            "description": "$?"
        },
        "Shape": {
            "names": "$? shape",
            "doc": "$?",
            "form": { "doc": "$?", "names": "$? form" },
            "name": { "doc": "$?", "names": "$? name" },
            "selectable": { "doc": "$?", "names": "$? selectable" },
            "color": {
                "doc": "$?",
                "names": "$? color"
            },
            "background": { "doc": "$?", "names": "$? background" },
            "opacity": {
                "doc": "$?",
                "names": "$? opacity"
            },
            "offset": {
                "doc": "$?",
                "names": "$? offset"
            },
            "rotation": {
                "doc": "$?",
                "names": "$? rotation"
            },
            "scale": {
                "doc": "$?",
                "names": "$? scale"
            },
            "flipx": {
                "doc": "$?",
                "names": "$? flipx"
            },
            "flipy": {
                "doc": "$?",
                "names": "$? flipy"
            },
            "entering": { "doc": "$?", "names": "$? entering" },
            "resting": { "doc": "$?", "names": "$? resting" },
            "moving": { "doc": "$?", "names": "$? moving" },
            "exiting": { "doc": "$?", "names": "$? exiting" },
            "duration": { "doc": "$?", "names": ["$? duration"] },
            "style": { "doc": "$?", "names": "$? style" }
        },
        "Rectangle": {
            "names": "$?",
            "doc": "$?",
            "left": { "doc": "$?", "names": "$?" },
            "top": { "doc": "$?", "names": "$?" },
            "right": { "doc": "$?", "names": "$?" },
            "bottom": { "doc": "$?", "names": "$?" },
            "z": { "doc": "$?", "names": "$? z" }
        },
        "Pose": {
            "names": "$?",
            "doc": "$?",
            "duration": { "doc": "$?", "names": "$?" },
            "style": { "doc": "$?", "names": "$?" },
            "color": { "doc": "$?", "names": "$?" },
            "opacity": { "doc": "$?", "names": "$?" },
            "offset": { "doc": "$?", "names": "$?" },
            "rotation": { "doc": "$?", "names": "$?" },
            "scale": { "doc": "$?", "names": "$?" },
            "flipx": { "doc": "$?", "names": "$?" },
            "flipy": { "doc": "$?", "names": "$?" },
            "description": "$?"
        },
        "Color": {
            "names": "$?",
            "doc": "$?",
            "lightness": { "doc": "$?", "names": ["luminosidad"] },
            "chroma": { "doc": "$?", "names": ["croma"] },
            "hue": { "doc": "$?", "names": ["matiz"] }
        },
        "Sequence": {
            "names": "$?",
            "doc": "$?",
            "poses": { "doc": "$?", "names": "$?" },
            "duration": {
                "doc": "$?",
                "names": "$? duration"
            },
            "style": {
                "doc": "$?",
                "names": "$? style"
            },
            "count": { "doc": "$?", "names": "$? count" }
        },
        "Place": {
            "names": ["Posición"],
            "doc": "$?",
            "x": { "doc": "$?", "names": "$? x" },
            "y": { "doc": "$?", "names": "$? y" },
            "z": { "doc": "$?", "names": "$? z" },
            "rotation": { "doc": "$?", "names": "$? rotation" }
        },
        "Velocity": {
            "doc": "$?",
            "names": "$? Velocity",
            "x": {
                "doc": "$?",
                "names": "$? x"
            },
            "y": {
                "doc": "$?",
                "names": "$? y"
            },
            "angle": {
                "doc": "$? ",
                "names": "$? angle"
            }
        },
        "Matter": {
            "doc": "$?",
            "names": "$? Matter",
            "mass": { "doc": "$?", "names": "$? mass" },
            "bounciness": {
                "doc": "$?",
                "names": "$? bounciness"
            },
            "friction": {
                "doc": "$?",
                "names": "$? friction"
            },
            "roundedness": {
                "doc": "$?",
                "names": "$? roundedness"
            },
            "text": {
                "doc": "$?",
                "names": "$? text"
            },
            "shapes": {
                "doc": "$?",
                "names": "$? shapes"
            }
        },
        "Easing": {
            "straight": "$?",
            "cautious": "$?",
            "pokey": "$?",
            "zippy": "$?"
        },
        "sequence": {
            "sway": {
                "doc": "$?",
                "names": ["vaivén"],
                "angle": { "doc": "$?", "names": ["ángulo"] }
            },
            "bounce": {
                "doc": "$?",
                "names": ["rebotar"],
                "height": { "doc": "$?", "names": ["altura"] }
            },
            "spin": { "doc": "$?", "names": ["girar"] },
            "fadein": { "doc": "$?", "names": ["revelar"] },
            "popup": { "doc": "$?", "names": ["surgir"] },
            "shake": { "doc": "$?", "names": ["agitar"] }
        }
    },
    "ui": {
        "font": {
            "app": "Noto Sans Simplified Chinese",
            "code": "Noto Mono"
        },
        "phrases": {
            "welcome": "你好"
        },
        "widget": {
            "confirm": {
                "cancel": "取消"
            },
            "dialog": {
                "close": "关闭"
            },
            "loading": {
                "message": "正在加载字体和文本，请稍候！"
            },
            "back": "返回上一页"
        },
        "tile": {
            "toggle": {
                "fullscreen": {
                    "on": "退出全屏",
                    "off": "扩展到全屏"
                },
                "show": {
                    "on": "隐藏此瓷砖",
                    "off": "显示此瓷砖"
                }
            },
            "button": {
                "collapse": "折叠窗口"
            }
        },
        "project": {
            "error": {
                "unknown": "该演出不存在或未公开"
            },
            "button": {
                "showCollaborators": "显示合作者对话框",
                "removeCollaborator": "移除合作者",
                "copy": "将项目复制为文本",
                "addSource": "创建新的$source",
                "duplicate": "复制这个项目",
                "revert": "恢复到原始代码",
                "focusOutput": "聚焦舞台上的键盘乐器",
                "focusSource": "聚焦到下一个源",
                "focusDocs": "聚焦文档",
                "focusPalette": "聚焦调色板",
                "focusCycle": "聚焦到下一个瓷砖"
            },
            "field": {
                "name": {
                    "description": "编辑项目名称",
                    "placeholder": "名称"
                }
            },
            "help": "显示键盘快捷键"
        },
        "gallery": {
            "untitled": "未命名",
            "subheader": {
                "curators": {
                    "header": "策展人",
                    "explanation": "管理此画廊的创作者。"
                },
                "creators": {
                    "header": "创作者",
                    "explanation": "为此画廊做出贡献的创作者。"
                },
                "delete": {
                    "header": "删除",
                    "explanation": "删除该图库不会删除其项目。图库将被永久删除。"
                }
            },
            "confirm": {
                "delete": {
                    "description": "删除画廊",
                    "prompt": "删除"
                },
                "remove": {
                    "description": "从画廊中删除项目",
                    "prompt": "删除"
                }
            },
            "error": {
                "unknown": "此画廊不存在或不是公开的。"
            },
            "field": {
                "name": {
                    "description": "画廊名称",
                    "placeholder": "名称"
                },
                "description": {
                    "description": "画廊描述",
                    "placeholder": "描述您的画廊。它的主题、目标或社区是什么？"
                }
            }
        },
        "source": {
            "label": "程序编辑器",
            "empty": [
                "让我们开始吧！您可以...",
                "• 打开 📕 并将 🖱️ 拖到此程序中。",
                "• 输入 $1 并从菜单中选择我们。",
                "• 如果您熟悉我们，可以开始输入。",
                "• 浏览画廊以获取灵感。",
                "如果遇到困难，请参阅 <learn more@://learn>。"
            ],
            "overwritten": "收到了更新版本！",
            "confirm": {
                "delete": {
                    "description": "删除此$source",
                    "prompt": "删除"
                }
            },
            "toggle": {
                "blocks": {
                    "on": "隐藏块背景",
                    "off": "显示块背景"
                },
                "glyphs": {
                    "on": "折叠匹配的字形",
                    "off": "展开匹配的字形"
                }
            },
            "button": {
                "selectOutput": "在舞台上显示此输出",
                "expandSequence": "展开此折叠的代码"
            },
            "field": {
                "name": {
                    "description": "编辑源名称",
                    "placeholder": "名称"
                }
            },
            "menu": {
                "label": "自动完成菜单",
                "show": "显示自动完成菜单",
                "back": "退出子菜单"
            },
            "cursor": {
                "priorLine": "将光标移至前一行",
                "nextLine": "将光标移至后一行",
                "priorInline": "将光标移到前一个位置",
                "nextInline": "将光标移到后一个位置",
                "lineStart": "将光标移到行的开头",
                "lineEnd": "将光标移到行的末尾",
                "priorNode": "选择前一个邻居",
                "nextNode": "选择后一个邻居",
                "parent": "选择容器",
                "selectAll": "选择程序",
                "incrementLiteral": "增加数字、文本或布尔值",
                "decrementLiteral": "减少数字、文本或布尔值",
                "insertSymbol": "插入$1",
                "insertTrue": "插入 true",
                "insertFalse": "插入 false",
                "insertNone": "插入无符号",
                "insertNotEqual": "插入不等号",
                "insertProduct": "插入乘号",
                "insertQuotient": "插入除号",
                "insertDegree": "插入度符号",
                "insertFunction": "插入函数",
                "insertLessOrEqual": "插入小于或等于",
                "insertGreaterOrEqual": "插入大于或等于",
                "insertType": "插入类型符号",
                "insertStream": "插入流符号",
                "insertConvert": "插入转换符号",
                "insertPrevious": "插入前一个符号",
                "insertTable": "插入表符号",
                "insertLine": "插入换行符",
                "backspace": "删除选择或前一个字符",
                "cut": "剪切选择",
                "copy": "复制选择",
                "paste": "粘贴键盘内容",
                "parenthesize": "括号化选择",
                "enumerate": "枚举选择",
                "type": "键入字符",
                "undo": "类型字符",
                "redo": "撤销上次编辑",
                "search": "查找要插入的特殊字符"
            }
        },
        "conflicts": {
            "label": "冲突"
        },
        "output": {
            "label": "程序输出",
            "toggle": {
                "grid": {
                    "on": "隐藏网格线",
                    "off": "显示网格线"
                },
                "fit": {
                    "on": "手动控制缩放",
                    "off": "适应内容缩放"
                },
                "paint": {
                    "on": "场所输出",
                    "off": "放置输出"
                }
            },
            "field": {
                "key": {
                    "description": "聆听按键",
                    "placeholder": "消息"
                }
            },
            "button": {
                "submit": "提交此聊天消息"
            }
        },
        "timeline": {
            "label": "时间轴",
            "slider": "时间轴滑块",
            "button": {
                "play": "对程序进行实时输入响应的评估",
                "pause": "暂停程序，允许前进和后退",
                "backStep": "后退一步",
                "backNode": "后退到上一个节点评估",
                "backInput": "后退一个输入",
                "out": "退出此功能",
                "forwardStep": "前进一步",
                "forwardNode": "前进到下一个节点评估",
                "forwardInput": "前进到下一个流输入",
                "present": "到现在",
                "start": "返回开头",
                "reset": "重新启动性能"
            }
        },
        "docs": {
            "label": "文档浏览器",
            "link": "在文档中显示概念 $1",
            "learn": "了解更多...",
            "nodoc": "我是谁？我是什么？我的目的是什么？",
            "button": {
                "home": "返回主页",
                "back": "返回上一页"
            },
            "field": {
                "search": "使用关键词搜索概念"
            },
            "header": {
                "inputs": "投入",
                "interfaces": "接口",
                "properties": "属性",
                "functions": "函数",
                "conversions": "转换"
            }
        },
        "dialog": {
            "share": {
                "header": "分享",
                "explanation": "控制谁可以编辑和查看此项目。",
                "subheader": {
                    "collaborators": {
                        "header": "合作者",
                        "explanation": "合作者可以查看和编辑此项目。通过电子邮件添加或删除他们。"
                    },
                    "gallery": {
                        "header": "画廊",
                        "explanation": "将此项目添加到画廊中，与其他创作者并列，或在您的 <projects@://projects> 页面上创建一个画廊。如果您将项目添加到公开画廊，您的项目将变为公开。"
                    },
                    "public": {
                        "header": "公开/私有",
                        "explanation": "公开项目和画廊可以被世界上任何人看到。通过将项目或画廊设为公开，您承诺："
                    }
                },
                "field": {
                    "email": {
                        "placeholder": "电子邮件",
                        "description": "您希望授予编辑权限的人的电子邮件地址。"
                    }
                },
                "mode": {
                    "public": {
                        "label": "可见性",
                        "modes": ["私有", "公开"]
                    }
                },
                "error": {
                    "unknown": "我们不知道这封邮件的创建者是谁。"
                },
                "button": {
                    "submit": "通过此电子邮件地址分享项目"
                }
            },
            "settings": {
                "header": "设置",
                "explanation": "更改布局、设备和主题设置。",
                "button": {
                    "show": "显示设置对话框"
                },
                "mode": {
                    "layout": {
                        "label": "布局",
                        "modes": ["自动", "水平", "垂直", "自由"]
                    },
                    "animate": {
                        "label": "动画",
                        "modes": [
                            "关闭",
                            "开启",
                            "半速",
                            "三分之一速度",
                            "四分之一速度"
                        ]
                    },
                    "dark": {
                        "label": "主题",
                        "modes": [
                            "浅色",
                            "深色",
                            "使用设备设置"
                        ]
                    },
                    "writing": {
                        "label": "写作布局",
                        "modes": [
                            "水平，从左到右",
                            "垂直，从右到左",
                            "垂直，从左到右"
                        ]
                    }
                }
            },
            "locale": {
                "header": "语言",
                "explanation": "选择您的语言和地区",
                "subheader": {
                    "selected": "选择",
                    "supported": "可用的",
                    "help": "帮我们翻译 。。。"
                },
                "button": {
                    "show": "切换语言",
                    "add": "添加语言",
                    "remove": "删除语言"
                }
            },
            "help": {
                "header": "快捷键",
                "explanation": "使用这些键盘命令进行更高效的编辑。",
                "subheader": {
                    "moveCursor": "移动",
                    "editCode": "编辑",
                    "insertCode": "插入",
                    "debug": "调试"
                }
            }
        },
        "palette": {
            "label": "调色板",
            "labels": {
                "mixed": "混合的",
                "computed": "计算的",
                "default": "默认",
                "inherited": "继任",
                "notSequence": "不是一个序列",
                "notContent": "不是内容列表"
            },
            "button": {
                "revert": "回复默认设置",
                "set": "编辑此属性",
                "addPhrase": "在此之后添加一个短语",
                "addGroup": "在此之后添加一个群组",
                "addShape": "在此之后添加一个形状",
                "addMotion": "将位置设置为运动流",
                "addPlacement": "将位置设置为放置流",
                "remove": "移除这个内容",
                "up": "将此内容上移",
                "down": "将此内容下移",
                "edit": "编辑这个内容",
                "sequence": "转换为序列",
                "createPhrase": "创建一个短语，显示现有值为文本",
                "createGroup": "创建一个群组，将任何现有的短语包裹起来",
                "createStage": "创建一个舞台，将任何现有的群组或短语包裹起来"
            },
            "prompt": {
                "offerPhrase": "你创造了一个漂亮的值！我应该在 @舞台 上展示吗？",
                "offerGroup": "你做了一个很棒的 @短语。你想将它们组合到 @组 中，以便进行排列吗？",
                "offerStage": "非常好的 @程序。将我添加到控制灯光、颜色和帧数的项目中。",
                "pauseToEdit": "如果你 ⏸️ 舞台，你可以选择 💬、🔳 或 🎭 来编辑！",
                "editing": "编辑我！"
            },
            "field": {
                "coordinate": "编辑坐标",
                "text": "编辑文本"
            },
            "sequence": {
                "button": {
                    "add": "添加姿势",
                    "remove": "移除姿势",
                    "up": "姿势往上移",
                    "down": "姿势往下移"
                },
                "field": {
                    "percent": "编辑百分比"
                }
            }
        },
        "save": {
            "saving": "保存",
            "saved": "在线保存",
            "local": "本地保存",
            "unsaved": "未保存"
        },
        "page": {
            "unknown": {
                "header": "哎呀！",
                "message": "这是什么地方？我们能回家吗？"
            },
            "landing": {
                "call": ["$?"],
                "link": {
                    "about": "这个地方为什么存在？",
                    "learn": "这是什么地方？",
                    "projects": "创建并分享表演",
                    "galleries": "体验他人的表演",
                    "rights": "责任，我们的和你们的"
                }
            },
            "learn": {
                "header": "学习",
                "error": "我们无法找到这种语言的教程。",
                "button": {
                    "next": "对话中的下一个暂停",
                    "previous": "对话中的前一个暂停"
                }
            },
            "projects": {
                "header": "项目",
                "projectprompt": "准备好说些什么了吗？您可以开始创建一个新项目，或者继续在现有项目上工作。如果您遇到困难，继续学习 <learning@://learn>",
                "galleriesheader": "画廊",
                "galleryprompt": "创建和策划画廊，与他人分享项目集合",
                "button": {
                    "newproject": "新项目",
                    "editproject": "编辑这个项目",
                    "newgallery": "新画廊"
                },
                "confirm": {
                    "archive": {
                        "description": "存档这个表演",
                        "prompt": "存档"
                    }
                },
                "error": {
                    "noaccess": "无法连接网络。",
                    "loggedout": "您必须登录才能创建和更改画廊。",
                    "newgallery": "我们无法创建新的画廊。"
                }
            },
            "galleries": {
                "header": "画廊",
                "prompt": "这些是其他人创作的表演作品。体验它们，学习它们，或者将它们改编成您自己的作品陈述。",
                "examples": "例子"
            },
            "about": {
                "header": "关于",
                "content": [
                    "你是否曾经感觉到编程只是为那些懂英语、非残疾的西方人，他们痴迷于计算机？",
                    "是的，我们也有同感。",
                    "这不是偶然的。自计算机诞生以来，编程语言一直由同一群人设计和构建——主要是美国和欧洲的白人、身份认同符合自己性别的男性，还有一些出色的女性数学家。他们在后殖民、胜者通吃的时代进行工作，而编程语言是确保他们权力的关键工具。",
                    "无论是有意还是无意，这段历史导致了计算的愿景主要是关于速度、逻辑、利润和统治。",
                    "这是一种不公正。因为计算，无论是好是坏，现在以可见和不可见的方式支撑着日常生活，而有权创建的人大多与它的创造者相似。其余的人类仍然受制于这种力量，因为想象任何不同的事物都需要能够获得，而这被语言障碍、无障碍性障碍、经济障碍和公共教育中的不平等所阻碍。",
                    "*Wordplay*的愿景是与众不同的。这是一个旨在全球范围内支持 /所有/ 世界语言，同时也是 /关于/ 世界语言的编程平台。在这个平台上，每个人都可以创造，无论他们有什么能力，都可以分享任何人都可以体验的互动内容，无论他们有什么能力。这是为年轻人和年轻成年人设计的，他们想要以*富有游戏性*、*艺术性*和*互动性*的方式表达自己。并非为了获取权力，而是为了创建一个多元化的社区，认识到我们美丽的差异所带来的不可思议的力量。",
                    "我们是一个由设计师、教育者和开发者组成的社区，试图将这一愿景变为现实。我们是有色人种，我们是跨性别者，我们是酷儿，我们是残疾人，我们来自世界各地。我们的中心在美国华盛顿州西雅图的<华盛顿大学@https://washington.edu> <信息学院@https://ischool.uw.edu/>，这是一个希望欢迎每个人并试图消除今天仍然存在的殖民主义破坏的地方。创建这种编程语言和平台是这个使命的一部分。",
                    "请查看我们的<里程碑@https://github.com/amyjko/wordplay/milestones>以了解我们正在进行的工作，如果您想帮助，请了解<如何做出贡献@https://github.com/amyjko/wordplay/blob/main/CONTRIBUTING.md>。或者向我们的社区组织者<Amy@https://amyjko.phd>提问。"
                ]
            },
            "login": {
                "header": "登录",
                "anonymous": "匿名",
                "prompt": {
                    "login": "您的表演保存在本设备上，而不是在线。要将它们保存在线，请提交您的电子邮件以获取登录链接。",
                    "enter": "看起来您的登录链接来自不同的浏览器或设备。您可以再次输入您的电子邮件地址，以确保是您吗？",
                    "play": "您已登录，现在我们可以将您的项目保存在线上！想要创建点什么吗？",
                    "change": "想要更改您的电子邮件地址吗？提交新的电子邮件地址，我们将向旧的地址发送确认信息。",
                    "sent": "请检查您的电子邮件以获取登录链接。",
                    "logout": "离开共享设备，想要保持项目的私密性吗？注销，我们将从该设备中删除您的项目。它们仍将在线存储。",
                    "success": "帐户已创建！",
                    "confirm": "请检查您的旧电子邮件地址以确认您的新地址。",
                    "delete": "希望我们忘记您在这里做的一切吗？这将无法撤消。",
                    "reallyDelete": "您确定吗？您的帐户和设置将立即被删除，并且您的项目将被安排删除。您项目的合作者将立即失去对它们的访问权限。请输入您的电子邮件地址以确认您的选择。",
                    "name": "选择一个表情符号代表您自己。"
                },
                "error": {
                    "expired": "此链接已过期。",
                    "invalid": "此链接无效。",
                    "email": "此电子邮件地址无效。",
                    "failure": "无法登录 :(",
                    "offline": "您似乎处于离线状态。",
                    "unchanged": "我们无法更改您的电子邮件地址，但我们不知道原因。",
                    "delete": "我们无法删除您的帐户，但我们不知道原因。"
                },
                "feedback": {
                    "changing": "正在提交新的电子邮件地址...",
                    "deleting": "好的，正在删除您的项目和设置..."
                },
                "field": {
                    "email": {
                        "description": "编辑登录邮件",
                        "placeholder": "邮件"
                    }
                },
                "button": {
                    "logout": {
                        "tip": "登出你的账号",
                        "label": "登出"
                    },
                    "login": "用这个邮件登录，发送一个登录链接",
                    "update": "修改邮件",
                    "delete": {
                        "tip": "注销我的账号",
                        "label": "删除我的用户信息。。。"
                    },
                    "reallyDelete": {
                        "tip": "永远注销账号",
                        "label": "注销！！！"
                    }
                }
            },
            "rights": {
                "header": "权利",
                "content": [
                    "你好！",
                    "这里是我们关于你的权利和我们的期望的地方（也考虑到政策，比如 <COPPA@https://www.ecfr.gov/current/title-16/chapter-I/subchapter-C/part-312> 和 <GDPR@https://gdpr.eu/compliance-checklist-us-companies/>)",
                    "首先要知道的是，我们不是一个商业实体。我们是一个社区性的研究项目，隶属于一个非盈利大学。我们的目标是创建一个平台，为你带来快乐，并帮助我们在计算机领域探索更加公平和正义的世界。我们对在这个平台上赚钱没有兴趣；我们收集到的任何资金（通常是通过公共资助获得）都是用来维持这个平台，而不是让任何参与其中的人（或为其做出贡献的人）受益。",
                    "因为我们不追求利润，这也意味着我们不能对这个平台的可靠性、可用性或持久性作出任何承诺。话虽如此，<Amy@https://amyjko.phd> 致力于长期维持它，并且作为终身教授，她的工作相当稳定。",
                    "这就引出了*数据*。以下是我们在云端收集和存储的内容：",
                    "• 你的*电子邮件地址*。我们使用它来确保只有你和你分享的人可以访问你的项目和设置。",
                    "• 你的*项目*。你做出的任何贡献我们都会存储。这包括你在项目中输入的任何个人身份信息（因为都是文本，所以内容可能是任何东西！）。",
                    "• 你的*设置*。这包括你选择的语言环境、动画偏好和教程进度。其他所有内容都存储在你的设备上。",
                    "• *流量*。我们使用基本的<Google Analytics@https://en.wikipedia.org/wiki/Google_Analytics>来收集关于人们访问哪些页面和项目以及访问次数的聚合匿名数据。我们使用这些数据帮助筹集资金以维持这个平台。",
                    "我们不存储其他任何东西。除了谷歌分析使用的“cookie”外，没有其他跟踪标识符，没有摄像头或麦克风输入的录音。我们的<源代码@https://github.com/amyjko/wordplay/tree/main/src>是公开的，你可以随时验证这一点。",
                    "*你*拥有你的数据，而不是我们。这意味着：",
                    "• 你可以控制谁能访问你的项目。它们默认是私有的，但你可以将它们与个人、团体分享，或者完全公开。",
                    "• 你可以随时完全删除任何项目或你自己的帐户。",
                    "• 你可以随时导出任何项目或整个帐户。",
                    "下面是我们会和不会使用你的数据的方式：",
                    "• 我们不会与任何人分享你的数据，除非法律明确要求。你的数据可能被未经许可取走（即“数据泄露”）。如果我们发现发生了这种情况，我们会通过你与我们分享的电子邮件通知你。",
                    "• 我们不会通过你的电子邮件地址联系你，除非你 1) 进行需要我们联系的帐户更改，2) 你明确同意我们联系你，或者 3) 在上述的数据泄露情况下。",
                    "• 我们可能会分析平台上的项目，以了解每个人在制作什么以及制作方式。我们可能会在学术出版物中分享这些汇总的、匿名的见解。我们只会在受美国联邦法律监管的机构审查委员会的监督下进行。",
                    "最后，关于言论的一点。在这个平台上，你可以在*私下*说任何你想说的话。项目默认是私有的，即使你将它们分享给特定的电子邮件地址，它们仍然被视为私有的。在私人项目中，我们不会进行任何审查。",
                    "但是将一个项目设为*公开*，或者将其包含在公共画廊中，是一种特权。这是一个以爱、认可、尊重和尊严为基础的平台。因此，我们期望你的*公共*内容遵循这些规则："
                ],
                "consequences": ["如果我们发现一个项目或画廊违反了这些规定，我们将把它标记为私有，并阻止他们将来发布任何公开项目。您可以通过举报任何您认为违反规定的内容来帮助我们执行这些规定。"]
            }
        },
        "edit": {
            "node": "$1$2[, 类型 $2|]",
            "before": "$?",
            "inside": "$?",
            "between": "$?",
            "line": "$?",
            "conflicts": "$1 冲突",
            "assign": "/$2[急于插入|考虑离开].../",
            "append": "/急于插入。。。/",
            "remove": "/考虑离开。。。/",
            "replace": "/想要介入。。。/",
            "wrap": "加括号",
            "unwrap": "揭开",
            "bind": "给这个表达命名"
        },
        "template": {
            "unwritten": "待定",
            "unparsable": "无法解析的模板: $1"
        }
    },
    "rules": {
        "violence": "不得发表煽动、鼓励或庆祝暴力、伤害或自残的言论。",
        "dehumanization": "不得以种族、族裔、国籍、种姓、性取向、性别、宗教、年龄、能力或外貌为基础，对个人或群体进行非人化的言辞。"
    }
}
