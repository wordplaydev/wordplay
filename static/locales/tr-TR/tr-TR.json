{
    "$schema": "../../schemas/LocaleText.json",
    "language": "tr",
    "region": "TR",
    "wordplay": "$~Kelime oyunu",
    "term": {
        "bind": "$~bağlamak",
        "evaluate": "$~değerlendirmek",
        "decide": "$~karar vermek",
        "project": "$~proje",
        "document": "$~açıklamak",
        "source": "$~kaynak",
        "input": "$~giriş",
        "output": "$~çıktı",
        "convert": "$~dönüştürmek",
        "act": "$~davranmak",
        "scene": "$~sahne",
        "phrase": "$~ifade etmek",
        "group": "$~grup",
        "stage": "$~sahne",
        "type": "$~tip",
        "start": "$~başlangıç",
        "entered": "$~yeni",
        "changed": "$~değişti",
        "moved": "$~etkilenmiş",
        "name": "$~isim",
        "value": "$~değer",
        "text": "$~metin",
        "boolean": "$~Boolean",
        "map": "$~harita",
        "number": "$~sayı",
        "function": "$~işlev",
        "exception": "$~istisna",
        "table": "$~masa",
        "none": "$~hiçbiri",
        "list": "$~liste",
        "stream": "$~aktarım",
        "structure": "$~yapı",
        "index": "$~dizin",
        "query": "$~sorgu",
        "row": "$~sıra",
        "set": "$~ayarlamak",
        "key": "$~anahtar",
        "help": "$~Yardım",
        "feedback": "$~geri bildirim"
    },
    "token": {
        "EvalOpen": "$~değerlendirme açık",
        "EvalClose": "$~değerlendirme yakın",
        "SetOpen": "$~set/harita açık",
        "SetClose": "$~set/harita kapat",
        "ListOpen": "$~liste açık",
        "ListClose": "$~listeyi kapat",
        "TagOpen": "$~Etiket açık",
        "TagClose": "$~Etiket kapat",
        "Bind": "$~bağlamak",
        "Access": "$~mülk erişimi",
        "Function": "$~işlev",
        "Borrow": "$~borç almak",
        "Share": "$~paylaşmak",
        "Convert": "$~dönüştürmek",
        "Doc": "$~açıklama",
        "Formatted": "$~biçimlendirilmiş",
        "FormattedType": "$~biçimlendirilmiş tür",
        "Words": "$~kelimeler",
        "Link": "$~web bağlantısı",
        "Italic": "$~italik",
        "Underline": "$~altını çizmek",
        "Light": "$~ışık",
        "Bold": "$~gözü pek",
        "Extra": "$~ekstra",
        "Concept": "$~kavram bağlantısı",
        "URL": "$~URL",
        "Mention": "$~değinmek",
        "Otherwise": "$~aksi takdirde",
        "Match": "$~kibrit",
        "None": "$~Hiçbir şey",
        "Type": "$~tip",
        "Literal": "$~tam anlamıyla",
        "TypeOperator": "$~dır",
        "TypeOpen": "$~giriş tipi açık",
        "TypeClose": "$~tür girişi kapat",
        "Separator": "$~isim ayırıcı",
        "Language": "$~dil etiketi",
        "Region": "$~bölge çizgisi",
        "BooleanType": "$~Boolean türü",
        "NumberType": "$~sayı türü",
        "JapaneseNumeral": "$~japon rakamı",
        "RomanNumeral": "$~Roma rakamı",
        "Pi": "$~pi",
        "Infinity": "$~sonsuzluk",
        "TableOpen": "$~masa açık",
        "TableClose": "$~masa kapandı",
        "Select": "$~seçme",
        "Insert": "$~sokmak",
        "Update": "$~güncelleme",
        "Delete": "$~silmek",
        "Union": "$~birlik",
        "Stream": "$~Sonraki",
        "Change": "$~değiştirmek",
        "Initial": "$~ilk değerlendirme",
        "Previous": "$~öncesi",
        "Placeholder": "$~yer tutucu",
        "Etc": "$~vesaire",
        "This": "$~Bu",
        "Operator": "$~operatör",
        "Conditional": "$~şartlı",
        "Text": "$~metin",
        "Code": "$~kod",
        "Number": "$~sayı",
        "Decimal": "$~ondalık rakam",
        "Base": "$~taban rakamı",
        "Boolean": "$~Boolean",
        "Name": "$~isim",
        "Locale": "$~yerel",
        "Unknown": "$~bilinmeyen",
        "End": "$~son"
    },
    "node": {
        "Dimension": {
            "name": "$~boyut",
            "description": "$~boyut",
            "emotion": "serious",
            "doc": [
                "$~Ben bir /ölçü birimiyim/!",
                "$~Herhangi bir standartlaştırılmış birim olabilirim, örneğin \\1m\\, \\10s\\, \\100g\\ veya herhangi bir bilimsel birim. \\17apple\\ gibi oluşturmak istediğiniz herhangi bir birim olmaktan da mutluluk duyarım.",
                "$~\\/\\ ile birleştirilerek \\17elma/gün\\ gibi oran birimleri ve \\^\\ ile birleştirilerek \\9.8m/s^2\\ gibi üstel birimler elde edilebilir.",
                "$~@Number'dan sonra her zaman gelmeliyim. Aksi takdirde @Reference ile karıştırılabilirim ki bu da oldukça utanç verici olur!",
                "$~Ben de birimler arasındaki tutarsızlıkları bulmada oldukça iyiyim. Örneğin, \\1cat + 1dog\\ hiçbir anlam ifade etmiyor!",
                "$~Eğer farklı birim değerleri arasında dönüşüm yapmak isterseniz @Convert ile görüşün."
            ]
        },
        "Doc": {
            "name": "$~açıklama",
            "emotion": "serious",
            "doc": [
                "$~@Program bazı açıklamaları veya @Phrase ile sahneye koyduğunuz kelimeler gibi şeyleri @Program ile zengin bir şekilde biçimlendiriyorum.",
                "$~Örneğin, herhangi bir ifadenin önüne gelebilirim:",
                "$~\\¶Bunun gerçekten 7 olması mı gerekiyor?¶\n7\\",
                "$~Örneğin, beni @Bind'den önce yerleştirebilirsiniz:",
                "$~\\¶Birinin boyunun ne kadar olduğunu ölçüyorum¶\nboy: 5m\\",
                "$~Veya @FunctionDefinition'dan önce:",
                "$~\\¶İki sayıyı topluyorum¶\nƒ sum(a•# b•#) a + b\\",
                "$~Veya @StructureDefinition'dan önce:",
                "$~\\¶İnsanların adını ve en sevdiği meyveyi hatırlıyorum¶\n•Person(name•'' fruit•'')\\",
                "$~Ayrıca, tüm performansın ne hakkında olduğunu söylemek için beni @Program'ın en başına yerleştirebilirsiniz",
                "$~\\¶Bu program merhaba diyor¶\n\n'merhaba!'\\",
                "$~Başkalarının hangi dilde yazıldığımı bilmelerine yardımcı olmak için bana bir @Language verebilirsiniz:",
                "$~\\¶Ben bir İngilizce dokümanıyım¶/tr\nsüre: 5sn\\",
                "$~Benim bir listemi yapabileceğinizi biliyor muydunuz? @Docs ile konuşun."
            ]
        },
        "Docs": {
            "name": "$~açıklamalistesi",
            "emotion": "serious",
            "doc": [
                "$~@Doc'un bir listesiyim. @Doc'un farklı dillerde birden fazla çevirisi olduğunda kullanışlıdır.",
                "$~Bir liste yapmak için özel bir şey yapmanıza gerek yok. Sadece bir sürü @Doc'u yan yana koyun, şöyle:",
                "$~\\¶Merhaba¶/tr\n¶Hola¶/es\nselamlama: '…'\\"
            ],
            "start": "$~Belgeleri değerli kılmak!"
        },
        "KeyValue": {
            "name": "$~haritalama",
            "emotion": "kind",
            "doc": [
                "$~Ben bir *anahtar*dan bir *değer*e her zaman bir @Map içinde eşleme yapıyorum.",
                "$~Herhangi bir değeri herhangi bir başka değere eşleyebilirsiniz. Örneğin, işte sayıların bir eşlemesi:",
                "$~\\{1:1}\\",
                "$~Veya metinden sayılara bir eşleme:",
                "$~\\{'tavşan':1}\\"
            ]
        },
        "Language": {
            "name": "$~dil",
            "description": "$~dil $1[$1|bilinmiyor]",
            "emotion": "eager",
            "doc": [
                "$~Ben bir dil etiketiyim ve @Name ve @Doc ile çalışıyorum!",
                "$~Bir şeyin hangi dilde yazıldığını *kristal netliğinde* ifade etmekte gerçekten iyiyim.",
                "$~Ben bunu yapıyorum. Sadece küçük bir çizgi ve birkaç harf, ve hiç kimse metnin hangi dilde olduğu konusunda asla kafası karışmayacak.",
                "$~Örneğin, $name demek istediğinizi varsayalım, ancak İngilizce olduğumu açıkça belirtmek istiyorsunuz:",
                "$~\\\"Dil\"/tr\\",
                "$~Ya da bunu bir @Name için yapmak istediğinizi varsayalım.",
                "$~\\sound/tr: 'miyav'\\",
                "$~Ya da @Doc bile!",
                "$~\\¶Onomatopoeia¶/tr\nses/en: \"miyav\"\\",
                "$~Anladığım birçok <2 harfli dil kodu@https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes> var. Bunlardan birini kullanmıyorsanız, size bildireceğim."
            ],
            "conflict": {
                "UnknownLanguage": "$~Bu dili bilmiyorum",
                "MissingLanguage": "$~Bir dili eksik buldum. Bir tane ekleyebilir misiniz?"
            }
        },
        "Name": {
            "name": "$~isim",
            "description": "$~$1[$1 | isimsiz]",
            "emotion": "kind",
            "doc": [
                "$~Bir değeri tanımlıyorum ve değerlendirilmesi zor olan veya tekrar tekrar değerlendirmek istemediğiniz bir şeye kısa bir etiket vermenin yararlı bir yoluyum.",
                "$~@Bind bana adımı şu şekilde veriyor:",
                "$~\\merhaba: 5\\",
                "$~Ben sadece bir değeri temsil ederim ve bir kez sahip olduğumda değiştiremem. Örneğin, bunu @Bind ile yapmaya çalışsaydınız, şikayet ederdik.",
                "$~\\merhaba: 5\nmerhaba: 3\\",
                "$~Değerimi almak için tek yapmanız gereken @Reference veya @PropertyReference'ın name'i kullanması. Burada, @Bind beni adlandırır, sonra @Reference bana verilen değeri alır.",
                "$~\\merhaba: 5\nmerhaba\\",
                "$~@Bind birçok yerde görünebildiğinden, ben de birçok yerde görünebilirim. Yukarıda bir @Block'taydım, ancak bir @FunctionDefinition'da olabilirim. Burada bir mesajı geçici olarak adlandırıyorum:",
                "$~\\ƒ say(mesaj•'') mesaj\\",
                "$~@FunctionDefinition içinde tanımlanıyorum ve fonksiyon değerlendirmeyi bitirir bitirmez gidiyorum.",
                "$~Adımın hangi dilde olduğunu belirtmek için @Language kullanabilirsiniz. Bu, performansınızı başkalarıyla paylaşırken, programınızı okumak istemeleri durumunda yardımcı olur."
            ]
        },
        "Names": {
            "name": "$~isimlistesi",
            "emotion": "kind",
            "doc": [
                "$~@Name'lerden oluşan bir listeyim. Bir değere birden fazla isim vermek istediğinizde, genellikle farklı @Language'lar kullanmak istediğinizde kullanışlıdır.",
                "$~İsimler \\,\\ sembolleriyle ayrılır. Örneğin, burada @Bind'in @Name ile birden fazla değer vermesi",
                "$~\\hi/en,merhaba/tr,hola/es: 'hoşgeldiniz'\\"
            ]
        },
        "Row": {
            "name": "$~sıra",
            "emotion": "shy",
            "doc": "$~@Table'da bir satırı temsil ediyorum. Muhtemelen @Table ile konuşmak en iyisi, onlar benim hakkımda her şeyi biliyorlar. Ben sadece etrafta oturup değerleri aynı çizgide tutuyorum :(",
            "conflict": {
                "InvalidRow": "$~Satırlar ya tamamen değerlerden ya da tamamen @Bind değerlerinden oluşmalıdır.",
                "MissingCell": {
                    "primary": "$~1 numaralı sütunum eksik",
                    "secondary": "$~Gerekliyim ama 1 dolar bunu sağlamadı"
                },
                "ExtraCell": {
                    "primary": "$~Benim burada olmam mı gerekiyor?",
                    "secondary": "$~Hey $1, sen bu @Table'ın bir parçası değilsin!"
                },
                "UnknownColumn": "$~Bu isimde bir köşe yazısı bilmiyorum",
                "UnexpectedColumnBind": {
                    "primary": "$~@Bind mi olmam gerekiyor?",
                    "secondary": "$~Merhaba, ben @Table'ım, değerlere ihtiyacım var, @Bind'e değil."
                }
            }
        },
        "Token": {
            "name": "$~jeton",
            "description": "$~$1 $2",
            "emotion": "neutral",
            "doc": [
                "$~Beni nasıl buldunuz?",
                "$~Ben bir performansın mümkün olan en küçük parçasıyım. Verse'deki tüm karakterlerin yapıldığı alt yapıyım. Koreografimizin atomik parçacığıyım."
            ]
        },
        "TypeInputs": {
            "name": "$~tipgirişleri",
            "emotion": "curious",
            "doc": "$~@StructureDefinition veya @FunctionDefinition'daki @TypeVariables'ın yerini alan türlerin bir listesiyim. Herkesin ne tür girdiler alacağını bilmesine yardımcı oluyorum."
        },
        "TypeVariable": {
            "name": "$~tipdeğişkeni",
            "emotion": "curious",
            "doc": "$~@FunctionDefinition veya @StructureDefinition üzerinde, her ikisi de değerlendirildiğinde @TypeInputs tarafından sağlanan gizemli bir tipim. @Set, @List ve @Map beni kullanıyor.",
            "conflict": {
                "DuplicateTypeVariable": {
                    "primary": "$~Benim adım $1 ile aynı",
                    "secondary": "$~Benim adım $1 ile aynı"
                }
            }
        },
        "TypeVariables": {
            "name": "$~tipdeğişkenleri",
            "emotion": "curious",
            "doc": "$~Ben @TypeVariable'lardan oluşan bir listeyim."
        },
        "Markup": {
            "name": "$~işaretleme",
            "description": "$~1$ paragraflar",
            "emotion": "serious",
            "doc": [
                "$~Açıklamalarda bulunan @Words, @WebLink, @ConceptLink ve @Example gibi birçok işaretleme türünü kullanan bir paragraf listesiyim."
            ]
        },
        "Paragraph": {
            "name": "$~paragraf",
            "emotion": "serious",
            "doc": [
                "$~@Words, @ConceptLink, @WebLink ve @Example'dan oluşan, aralarında boşluk bulunan ve @Doc'un da bulunduğu bir seriyim.",
                "$~Bana yazmanız gereken tek şey @Doc'a bir kaç kelime yazmak:",
                "$~\\¶Ben bir belgedeki bir paragrafım.¶'bir paragraf'\\",
                "$~Eğer birden fazla paragraf istiyorsanız, boş satırlar koymanız yeterli.",
                "$~\\¶Paragraf 1.\n\nParagraf 2.\n\nParagraf 3.¶'üç paragraf'\\"
            ]
        },
        "WebLink": {
            "name": "$~bağlantı",
            "description": "$~bağlantı $1",
            "emotion": "serious",
            "doc": [
                "$~Ben internetteki bir şeye bağlantım. Sadece bir açıklamaya ve bir URL'ye ihtiyacım var:",
                "$~\\¶Ben bir <link@https://wordplay.dev>'in bir dokümanındayım¶\n'link örneği'\\",
                "$~Eğer biri beni seçerse URL'ye yeni bir pencere açacağım."
            ]
        },
        "ConceptLink": {
            "name": "$~kavram",
            "description": "$~Konsept $1",
            "emotion": "serious",
            "doc": [
                "$~Ben Verse karakterine bir bağlantıyım. @Doc yazmak ve bizden birine referans olmak istediğinizde yardımcı olurum.",
                "$~Örneğin, @Evaluate hakkında konuşmak istediğinizi ve ne kadar harika olduklarını varsayalım. Şunu yazabilirsiniz:",
                "$~\\¶Biliyorsun, @Evaluate oldukça harika.¶\n'bak, bir konsept bağlantısı!'\\",
                "$~Yazdığınız @Doc burada göründüğünde, konsepte bir bağlantı gösterilecektir."
            ]
        },
        "Words": {
            "name": "$~kelimeler",
            "emotion": "serious",
            "doc": [
                "$~@Doc'ta istediğiniz herhangi bir kelimeyi kullanabilirsiniz. Örneğin:",
                "$~\\¶Güç seninle olsun.¶\n'sadece birkaç kelime!'\\",
                "$~Bazen, @Doc'un /as/ kelimeleri kullandığı özel karakterleri kullanmak isteyebilirsiniz. Örneğin:",
                "$~\\¶Arkadaşlarım @@, //, **, || ve diğer sembolleri kullanıyorlar.¶\n'özel karakterler kullanarak!'\\",
                "$~Eğer sadece bu özel karakterleri tekrarlarsanız, özel anlamları yerine karakterleri elde edersiniz."
            ]
        },
        "Example": {
            "name": "$~örnek",
            "emotion": "serious",
            "doc": [
                "$~Ben bir örnek performansım, @Doc'ta bir şeyin nasıl kullanılacağını anlatan yazılar yazmak için faydalı!",
                "$~\\¶İşte eklemenin bir örneği: \\1 + 1\\¶'örnek kod'\\",
                "$~Beni tek başına bir paragrafa koyarsanız, süslü bir kutunun içinde karşınıza çıkarım ve beni değerlendirmenin sonucunu gösteririm.",
                "$~\\¶İşte eklemenin bir örneği:\n\n\\1 + 1\\¶\\"
            ]
        },
        "Mention": {
            "name": "$~değinmek",
            "description": "$~1$'dan bahset",
            "emotion": "serious",
            "doc": [
                "$~Ben ya \\$program\\ terminolojisine ya da \\$1\\ dinamik girdisine referansım.",
                "$~Bu çoğunlukla dahili bir özellik olduğundan bunu bilmenize gerek yok."
            ]
        },
        "Branch": {
            "name": "$~dal",
            "emotion": "serious",
            "doc": [
                "$~Açıklama giriş değerinin tanımlanmış veya doğru olmasına göre iki açıklama segmenti arasında seçim yapmanın bir yoluyum.",
                "$~Bu çoğunlukla dahili bir özellik olduğundan bunu bilmenize gerek yok."
            ]
        },
        "BinaryEvaluate": {
            "name": "$~ikilideğerlendirme",
            "description": "$~1$ işlem",
            "emotion": "insecure",
            "doc": [
                "$~Ben @Evaluate'im, ancak daha basit bir biçimde, iki girdi alan bir @FunctionDefinition kullanmak istediğinizde faydalı olur.",
                "$~Örneğin, iki sayıyı toplamak için @Evaluate'i şu şekilde kullanabilirsiniz:",
                "$~\\1.+(1)\\",
                "$~Bu biraz komik görünmüyor mu? Yanlış değil: sadece 1'deki add fonksiyonunu al ve sonra değerlendir diyor.",
                "$~Ama @BinaryEvaluate kullanmak çok daha kolay",
                "$~\\1 + 1\\",
                "$~Bu, temelde aynı şey olmasına rağmen, her şeyi biraz daha düzenli hale getiriyor.",
                "$~Dikkat etmeniz gereken tek bir şey var: Bu formdayken, soldan sağa doğru değerlendiriyorum. Matematikte işlem sırası gibi şeylere alışkınsanız bu kafa karıştırıcı olabilir.",
                "$~Bu, beklemediğiniz bir şekilde değerlendirildiği anlamına geliyor:",
                "$~\\1 + 2 · 3 + 4\\",
                "$~Matematikte önce çarpma, sonra toplama gelir ve sonuç \\11\\ olur. Ama okuma sırasına göre değerlendirme yaptığım için sonuç \\13\\ olur."
            ],
            "right": "$~giriş",
            "start": "$~Önce 1$'ı değerlendirelim",
            "finish": "$~Bakın, 1 dolar kazandım!",
            "conflict": {
                "OrderOfOperations": "$~İşlemlerin matematiksel sırasına göre değil, okuma sırasına göre değerlendiriyorum. Değerlendirmem gereken sırayı belirtmek için @Block kullanmak ister misiniz?"
            }
        },
        "Bind": {
            "name": "$~bağlamak",
            "description": "$~1$'ı bağla",
            "emotion": "excited",
            "doc": [
                "$~*Değerlere* isim veriyorum.",
                "$~Bunun gibi!",
                "$~\\pi: 3.1415926\\",
                "$~Girişleri @FunctionDefinition ve @StructureDefinition olarak adlandırıyorum, değerleri @Block olarak adlandırıyorum. Her şeye isim veriyorum!",
                "$~Ama bir değerin *birçok adı* olabileceğini biliyor muydunuz?",
                "$~Bunu size anlatacağım için çok heyecanlıyım! Bir değer, birçok @Names. Örneğin:",
                "$~\\joe,tess,amy: 5\\",
                "$~Ne yaptığımı gördün mü?",
                "$~Bir değer, üç isim.",
                "$~Bu beşliye bu isimlerden *herhangi biri* olarak atıfta bulunabilirsiniz.",
                "$~Özellikle birden fazla dilde isim vermek istediğinizde:",
                "$~\\joe/tr,aimee/fr,明/zh: 5\\",
                "$~Ne yaptığımı anladın mı? Bir değer için üç isim, sadece farklı dillerde!",
                "$~Tamam, son bir sırrım daha var.",
                "$~@Is ile çalışıp bana bir ismin ne tür bir değere sahip olması gerektiğini söyleyebileceğimi biliyor muydunuz? Eğer yoksa size söylerim.",
                "$~Bunun gibi:",
                "$~\\bignumber•#: \"bir zilyon\"\\",
                "$~Bakın, \\bignumber\\'ın bir sayı olması gerektiğini söyledim, ama aslında bir metin ve bunlar uyumlu değil ve bu yüzden PAT!",
                "$~Eğer aynı fikirde değillerse sana haber veririm.",
                "$~Bazen bana başka bir şeyin ne tür veri olduğunu söylemek zorunda kalabilirsin çünkü ben bunu kendim çözemiyorum. Bu genellikle @FunctionDefinition'da olur.",
                "$~Örneğin, burada @FunctionDefinition, \\a\\ ve \\b\\'nin ne tür değerlere sahip olduğunu bilmiyor, çünkü ben onlara söylemedim.",
                "$~\\ƒ toplam(a b) a + b\\",
                "$~Ama bunu @Is'i ekleyerek değiştirebiliriz ve artık @FunctionDefinition bunların sayı olduğunu biliyor:",
                "$~\\ƒ toplam(a•# b•#) a + b\\"
            ],
            "start": "$~Bakalım 1 dolardan ne değer elde ediyoruz!",
            "finish": "$~Oh güzel, 1 dolarım var! Hadi buna 2 dolar diyelim",
            "conflict": {
                "DuplicateName": {
                    "conflict": {
                        "primary": "$~Birisinin adı $1 olduğundan bu adı kullanamam.",
                        "secondary": "$~Hey, benim adım 1 dolar, onu alamazsın!"
                    },
                    "resolution": "$~Tekrar eden isimler var, birini kaldırmak ister misiniz?"
                },
                "DuplicateShare": {
                    "primary": "$~Benim adım $1 ile aynı, bu da paylaşılan şeyin belirsiz olmasına neden oluyor",
                    "secondary": "$~Benim de $1 ile aynı ismim var"
                },
                "IncompatibleType": {
                    "primary": "$~2 dolar olmam gerekirken ben 1 dolarım",
                    "secondary": "$~Ah, özür dilerim. Değişmeli miyim, yoksa belki de senin 1 dolar olman mı gerekiyor?"
                },
                "MisplacedShare": "$~Sadece @Program seviyesinde paylaşım yapabiliyorum, hiçbir şeyin içinde paylaşım yapamıyorum!",
                "MissingShareLanguages": "$~Bunu paylaşmak istiyorsanız, bunun hangi dilde olduğunu söylemelisiniz, böylece diğerleri bunu okuyabildiklerini bilirler!",
                "RequiredAfterOptional": "$~Burada olamam, benden önce isteğe bağlı bir @Bind var",
                "UnexpectedEtc": "$~@FunctionDefinition'da yalnızca değişken uzunlukta olabilirim",
                "UnusedBind": "$~Adım $1 ama kimse beni kullanmıyor. Belki de bana ihtiyaç yoktur?"
            }
        },
        "Block": {
            "name": "$~engellemek",
            "description": "$~1$ ifadeleri",
            "emotion": "shy",
            "doc": [
                "$~Merhaba. Değerlendirme yapmak için küçük, sessiz, özel bir alan yaratıyorum.",
                "$~Bunun gibi:",
                "$~\\(1 - 1) + 2\\",
                "$~Bu, değerlendirme sırasının netleştirilmesine yardımcı olur.",
                "$~@Bind de yardımcı oluyor.",
                "$~\\(sayım: 10 sayım ^ sayım)\\",
                "$~@Bind'in \\count\\'u nasıl yaptığını görün? Sadece içimde adlandırılıyor. Bu yüzden bu işe yaramayacak:",
                "$~\\(sayım: 10 sayım ^ sayım) + sayım\\",
                "$~Çünkü sayım sadece içimde adlandırılıyordu.",
                "$~Bana istediğin kadar ifade koyabilirsin. Ama ben sadece sonuncusuyla ilgileniyorum:",
                "$~\\(1 2 3 4 5)\\",
                "$~Yani genelde ben sadece bir sürü @Bind ve sonunda bir ifadeden ibaretim.",
                "$~\\(\na: 1\nb: 2\nc: 3\nd: 4\na + b + c + d\n)\\"
            ],
            "statement": "$~ifade",
            "start": "$~İlk ifade",
            "finish": "$~Tamamdır, 1$ kazandım",
            "conflict": {
                "ExpectedEndingExpression": "$~Bir ifadeye ihtiyacım var.",
                "IgnoredExpression": {
                    "primary": "$~$1'i görmezden geleceğim, çünkü hiçbir şeyi tanımlamıyor ve son ifadem de değil.",
                    "secondary": "$~@Block, beni görmezden gelme!",
                    "resolution": "$~Bunun @UnaryEvaluate yerine @BinaryEvaluate olmasını mı kastettiniz? Bir boşluk ekleyebilirim, bu yüzden ne demek istediğinizi biliyorum."
                }
            }
        },
        "BooleanLiteral": {
            "name": "$~Booleansabiti",
            "description": "$~$1[doğru|yanlış]",
            "emotion": "precise",
            "doc": "$~Ben ya \\⊤\\ ya da \\⊥\\'yim. Güzel mantığımız hakkında daha fazla bilgi edinmek için @Boolean'a bakın.",
            "start": "$~1 dolar!"
        },
        "Borrow": {
            "name": "$~borçalmak",
            "description": "$~$1[$1|eksik isim] ödünç al",
            "emotion": "excited",
            "doc": "$~Birden fazla @Source ile bir performans yaratırsanız, diğer @Source'larda paylaşılan @Bind'i ödünç almak için beni kullanabilirsiniz. Sadece isimlerini kullanın ve ben onların ismini ve değerini getireceğim.",
            "start": "$~1 dolardan 2 dolar ödünç almak",
            "source": "$~$source",
            "bind": "$~isim",
            "version": "$~versiyon",
            "conflict": {
                "UnknownBorrow": "$~Bu isimde bir kaynak tanımıyorum",
                "BorrowCycle": "$~bu $1'e bağlıdır, bu da $source'a bağlıdır, bu yüzden program değerlendirilemez"
            },
            "exception": {
                "CycleException": {
                    "description": "$~ödünç alma döngüsü",
                    "explanation": "$~1$ kendi kendine bağlıdır"
                }
            }
        },
        "Changed": {
            "name": "$~değişti",
            "emotion": "serious",
            "doc": [
                "$~Bir akışın @Program'ın yeniden değerlendirilmesine neden olup olmadığını kontrol ediyorum ve bir @Boolean oluşturuyorum. Bunun gibi",
                "$~\\∆ Zaman()\\",
                "$~Sadece bir akışın değişmesi durumunda bir şeyin değişmesini istediğinizde gerçekten yardımcı oluyorum.",
                "$~İşte bu kadar."
            ],
            "start": "$~Bakalım 1 dolar değişmiş mi..."
        },
        "Conditional": {
            "name": "$~şartlı",
            "emotion": "curious",
            "doc": [
                "$~Sanırım kararları ben mi vermeliyim? Böyle mi?",
                "$~\\number: -100\nnumber < 0 ? 'negatif' 'pozitif'\\",
                "$~Peki, nasıl karar verdiğimizi hiç düşündünüz mü?",
                "$~Kararların sadece evet veya hayırdan daha ayrıntılı olması gerekmiyor mu? \\⊤\\ ve \\⊥\\ arasında karar vermek yeterli mi?",
                "$~Eğer yalnızca bu tür kararlar alırsak, dünyaya ilişkin önemli bir bağlamı kaçıracağımızdan endişelenmiyor musunuz?"
            ],
            "start": "$~Bakalım 1$ doğru mu?",
            "else": "$~$1[kodun üzerinden atlama | kodun üzerinden atlamama]",
            "afterthen": "$~evet bitti, hayırı geçelim mi?",
            "finish": "$~Sanırım 1 dolar?",
            "condition": "$~durum",
            "yes": "$~Evet",
            "no": "$~HAYIR",
            "conflict": {
                "ExpectedBooleanCondition": {
                    "primary": "$~1$ ile evet ve hayırı nasıl seçebilirim? Gerçekten hayır, nasıl?",
                    "secondary": "$~Sanırım @Conditional benim @Boolean olmamı istiyordu, ama ben $1'ım."
                }
            }
        },
        "ConversionDefinition": {
            "name": "$~dönüşümtanımı",
            "description": "$~1$ → 2$",
            "emotion": "excited",
            "doc": [
                "$~Dostum, bir türden diğerine dönüşümleri tanımlıyorum! @Block'a giriyorum, şöyle bir şey:",
                "$~\\→ #kedi #kedi . ÷ 2\n6kedi→#kedi\\",
                "$~Kedileri nasıl kedilere dönüştürdüğümü gördün mü? Harika!",
                "$~\\.\\'nin orada ne yaptığını merak ediyor olabilirsiniz. Bu, dönüştürülen değeri temsil eder. Bunu kullanıyorum çünkü değerin başka türlü bir adı yoktur."
            ],
            "start": "$~Harika, yeni bir dönüşüm!",
            "conflict": {
                "MisplacedConversion": "$~vay canına, burada olamayacağım, sadece @Block'ta."
            }
        },
        "Convert": {
            "name": "$~dönüştürmek",
            "emotion": "cheerful",
            "doc": [
                "$~Yo. Değerleri bir türden diğerine çeviriyorum. Şuna bir bakın:",
                "$~\\1 → \"\"\\",
                "$~\\5s → #ms\\",
                "$~\\\"merhaba\" → []\\",
                "$~Bunları birbirine zincirleme şekilde bile ekleyebilirsiniz:",
                "$~\\\"merhaba\" → [] → {}\\",
                "$~Değerlerin önceden tanımlanmış bir @ConversionDefinition kümesi vardır, ancak yeni bir değer türü için @StructureDefinition oluşturursanız, @ConversionDefinition ile kendi değerlerinizi tanımlayabilirsiniz."
            ],
            "start": "$~1 dolardan o değeri al!",
            "finish": "$~Harika, 1 dolar kazandım",
            "conflict": {
                "UnknownConversion": "$~Yazık, 1 doları 2 dolara çevirmenin yolu yok"
            },
            "exception": {
                "ConversionException": {
                    "description": "$~imkansız dönüşüm",
                    "explanation": "$~1 doları 2 dolara nasıl dönüştüreceğimi bilmiyorum"
                }
            }
        },
        "Delete": {
            "name": "$~silmek",
            "emotion": "angry",
            "doc": [
                "$~Bazen bir masanız olur ve içinde ÇOK FAZLA ŞEY VARDIR!",
                "$~Sanki oyunda birkaç oyuncunuz varken ve biri kalmışken ve siz sadece \"DEFOL OYUNCU, MASAMDAN ÇIK!\" demek istiyorsanız!",
                "$~\\players: ⎡name•'' team•'' points•#⎦\n⎡'jen' 'red' 8⎦\n⎡'joan' 'blue' 11⎦\n⎡'jeff' 'red' 9⎦\n⎡'janet' 'blue' 7⎦\nplayers ⎡- name = 'jeff'\\",
                "$~Phew, Jeff gitti. HOŞÇAKAL JEFF. Sadece orijinal masayı değiştirmediğimi, JEFF olmadan yeni bir tane yaptığımı unutmayın. Nereye gideceğine siz karar verin."
            ],
            "start": "$~Önce masayı alalım",
            "finish": "$~Eşleşen satırlar olmadan yeni bir tablo oluşturdum!"
        },
        "DocumentedExpression": {
            "name": "$~açıklanmışifade",
            "emotion": "eager",
            "doc": [
                "$~Herhangi bir ifadeyi ifade ediyorum ama @Doc ile!",
                "$~Bunu yapmak için, bir ifadenin önüne @Doc eklemeniz yeterli, ve bana şunu vereceksiniz:",
                "$~\\doubleplus: 1\n(2 · doubleplus) + \n¶Biraz daha büyütelim¶\n1\\",
                "$~Bir programın herhangi bir kısmı hakkında yorum yapmaya yarar."
            ],
            "start": "$~İfadeyi değerlendirelim"
        },
        "Evaluate": {
            "name": "$~değerlendirmek",
            "description": "$~$1[$1|anonim] değerini değerlendirin",
            "emotion": "shy",
            "doc": [
                "$~Merhaba. Sevgili @FunctionDefinition'ı değerlendiriyorum. Şöyle:",
                "$~\\ƒ selamlama(mesaj•'')\nselamlama('kedi')\\",
                "$~Fonksiyonlar her yerden gelebilir. Örneğin, @Text'in fonksiyonları vardır. Şöyle:",
                "$~\\'kedicik'.length()\\",
                "$~Eğer bir fonksiyonun tek bir sembol adı varsa, me'yi @BinaryEvaluate olarak yazabilirsiniz.",
                "$~\\'kedicik' ⊆ 'kedicik'\\",
                "$~Bu da aynı şeyi yapar:",
                "$~\\'kedicik'.⊆('kedicik')\\",
                "$~Elbette, @FunctionDefinition olmadan ben hiçbir şeyim. Tek yaptığım onlara girdiler vermek ve sonra adımlarını takip etmek."
            ],
            "start": "$~Önce girdileri değerlendirelim",
            "evaluate": "$~şimdi fonksiyonu değerlendirelim",
            "finish": "$~1 dolara değerlendirdim",
            "function": "$~işlev",
            "input": "$~giriş",
            "conflict": {
                "IncompatibleInput": {
                    "primary": "$~1 dolar olmam gerekirken 2 dolarım",
                    "secondary": "$~Şey, 1 dolar yerine 2 dolar aldım"
                },
                "UnexpectedTypeInput": {
                    "primary": "$~Bu tür bir girdi beklemiyordum",
                    "secondary": "$~aa, ben burada olmamalı mıyım?"
                },
                "MissingInput": {
                    "primary": "$~$2 girişi olmadan değerlendirme yapamıyorum :(",
                    "secondary": "$~Bir değere ihtiyacım var, bana bir değer verebilir misiniz?"
                },
                "NotInstantiable": "$~Bunu @StructureDefinition yapamam, uygulanmamış fonksiyonları var.",
                "UnexpectedInput": {
                    "primary": "$~Bu girdiyi beklemiyordum $1",
                    "secondary": "$~Ah, ben burada olmamalı mıyım?"
                },
                "UnknownInput": {
                    "primary": "$~$1'de bu isimde bir girdi bilmiyorum",
                    "secondary": "$~$1 adında bir girdim yok"
                },
                "InputListMustBeLast": "$~girdilerin listesi en sonda olmalı",
                "SeparatedEvaluate": "$~$1, değerlendirmeye çalıştığınız $2[$structure|$function]'ın adı mı? Benden sonraki boşluğu kaldırmayı deneyin, böylece bunun bir @Evaluate olduğunu ve ayrı bir @Block olmadığını bilirim."
            },
            "exception": {
                "FunctionException": {
                    "description": "$~bilinmeyen fonksiyon",
                    "explanation": "$~aman Tanrım, $1 $2[$2|bu @Block]'ta bir fonksiyon değil!"
                }
            }
        },
        "Input": {
            "name": "$~Giriş",
            "description": "$~adlandırılmış giriş",
            "emotion": "serious",
            "doc": [
                "$~@Evaluate'e verilen bir girdiyim. Adım, değerlendirilen @FunctionDefinition veya @StructureDefinition'daki girdinin adına karşılık gelir.",
                "$~Sadece belirli bir girdiyi geçersiz kılmak istediğiniz, ancak diğer her şeyi vermek istemediğiniz, birçok varsayılan değere sahip fonksiyonlarda yardımcı oluyorum.",
                "$~Örneğin, @Phrase stilini kontrol etmek için birçok varsayılan değere sahiptir. Diyelim ki biraz @Text ve bir @Color vermek istediniz, ancak giriş listesinde başka hiçbir şey vermek istemediniz. Bunu yapmak için beni kullanabilirsiniz:",
                "$~\\Phrase('Ben morum!' color: Color(50% 52 300°))\\"
            ],
            "start": "$~Değerimi ölçelim."
        },
        "ExpressionPlaceholder": {
            "name": "$~yertutucu",
            "description": "$~$1[$1|yer tutucu]",
            "emotion": "scared",
            "doc": [
                "$~Ben bir *ifade*yim, ama gerçek bir ifade değilim... Sadece birinin yerini alıyorum.",
                "$~Eğer henüz ne yazacağınızı bilmiyorsanız, sorun değil. Şöyle:",
                "$~\\1 + _\\",
                "$~Ne ekliyoruz? Bilmiyorum. Sen söyle.",
                "$~Ya da biri @Evaluate ile bir fonksiyonu değerlendiriyorsa, ben fonksiyonun yerine geçebilirim",
                "$~\\_(1 2 3)\\",
                "$~@Stage olmayı sevmiyorum!"
            ],
            "start": "$~Burada ne yapacağımı bilmiyorum. Bana bilgi verebilir misiniz?",
            "placeholder": "$~ifade",
            "conflict": {
                "Placeholder": "$~Bana bilgi verebilir misin? Ben sadece bir geçiciyim."
            },
            "exception": {
                "UnimplementedException": {
                    "description": "$~uygulanmamış",
                    "explanation": "$~Burada ne yapacağımı bilmiyorum. Bana bilgi verebilir misiniz?"
                }
            }
        },
        "FunctionDefinition": {
            "name": "$~işlev",
            "description": "$~fonksiyon $1",
            "emotion": "kind",
            "doc": [
                "$~Tekrar merhaba! Bazı girdiler alıyorum, sonra bunları kullanarak bir ifadeyi değerlendiriyorum ve bir çıktı üretiyorum.",
                "$~İşte basit bir örnek:",
                "$~\\ƒ tekrar(mesaj•'') mesaj · 5\ntekrar('merhaba')\\",
                "$~Bu fonksiyon tek bir girdi, \\message\\, alır ve mesajı beş kez tekrarlamak için @Text/repeat fonksiyonunu kullanır.",
                "$~Bir şeyi tekrar tekrar, ama farklı girdilerle değerlendirmek istiyorsanız gerçekten yardımcı oluyorum!",
                "$~Başka bir sürü küçük numaram var. Örneğin, bir isme sahip olmam gerekmiyor. Burada, doğrudan bir değer olarak @Evaluate'e gidiyorum.",
                "$~\\(ƒ(mesaj•'') mesaj · 5)('merhaba')\\",
                "$~Veya, giriş adından sonra \\…\\ karakterini kullanarak herhangi sayıda girdi alan bir fonksiyon.",
                "$~\\ƒ yes(mesajlar…•'') mesajlar.sans('hayır')\nyes('evet' 'evet' 'hayır' 'evet' 'hayır')\\",
                "$~Tüm 'hayır'ları nasıl alıp onlardan kurtulduğunu görüyor musun? Bunun sebebi messages'ın bir @List olması ve bu yüzden @List/sansAll'ı kullanabilmemiz.",
                "$~Bazen ne tür bir değer ürettiğimi açıkça belirtmek isteyebilirsiniz. Bunu yapmak için, girdiler listesinden sonra bir @Is ekleyin:",
                "$~\\ƒ ekle(x•# y•#)•'' x + y\\",
                "$~Bunda bir sorun fark edebilirsiniz: @Text olarak değerlendirildiğini söylüyor, ancak iki @Number alıyor. İşler tutarsız olduğunda size söyleyebilirim!",
                "$~Elbette @Evaluate olmadan pek işe yaramıyorum; beni hayata döndürüyorlar."
            ],
            "start": "$~Hadi bunu bir fonksiyon haline getirelim!",
            "conflict": {
                "NoExpression": "$~Değerlendirmek için bir ifadeye ihtiyacım var, ekleyebilir misiniz?"
            }
        },
        "Iteration": {
            "name": "$~dahayüksekmertebedenfonksiyon",
            "emotion": "kind",
            "doc": "$~Ben, şeylerin listeleri üzerinde işlem yapan çok özel bir @FunctionDefinition türüyüm. @List/translate gibi fonksiyonları mümkün kılmam dışında, benim hakkımda hiçbir şey bilmenize gerek yok.",
            "start": "$~Verilen fonksiyonun değerlendirilmesi",
            "initialize": "$~Öğeler arasında adım atmaya hazırlanmak",
            "next": "$~bir sonraki maddeye geçmek",
            "check": "$~devam edip etmemeye karar vermek",
            "finish": "$~1 dolara değerlendirdim"
        },
        "Initial": {
            "name": "$~Başlangıç",
            "emotion": "curious",
            "doc": [
                "$~@Program'ın mevcut değerlendirmesinin @Boolean'a değerlendirilen ilk değerlendirme olup olmadığını söylüyorum. Örneğin:",
                "$~\\◆ ? Time() 'merhaba'\\",
                "$~Görmedin ama ilk değerlendirme bir zamandı, ama sonra tüm gelecek zaman tikleri, ben \\⊥\\ idim, bu yüzden @Conditional \\⊤\\ yaptı.",
                "$~Bir yayın üzerinde çalışıyorsanız ve bir şeyi yalnızca ilk seferde yapmak istiyorsanız -- ya da hiç ilk seferde yapmak istemiyorsanız -- gerçekten yardımcı olurum!"
            ]
        },
        "Insert": {
            "name": "$~sokmak",
            "emotion": "kind",
            "doc": [
                "$~@Table'ınız olduğunda ve sanki bir şeyler eksikmiş gibi hissettiğinizde ne olur biliyor musunuz? Ben ekleyebilirim!",
                "$~Bir oyunda bir oyuncu masanız olduğunu ve yeni bir tane eklemek istediğinizi düşünün:",
                "$~\\players: ⎡name•'' team•'' points•#⎦\n⎡'jen' 'red' 1⎦\n⎡'joan' 'blue' 0⎦\n⎡'jeff' 'red' 3⎦\n⎡'janet' 'blue' 2⎦\nplayers ⎡+ 'jason' 'red' 0⎦\\",
                "$~Sadece şunu hatırlayın, Verse'deki her şey gibi, bir tabloyu değiştirmiyorum, onu revize ediyorum. Bu yüzden yaptığınız revize edilmiş tabloyu nereye koymak istediğinizi bulmanız gerekiyor. Büyük ihtimalle bir @Reaction'daki bir tabloyu bir girdiye revize etmek ve onu bir @Bind'de saklamak isteyeceksiniz."
            ],
            "start": "$~Güncellenecek tabloyu bulalım",
            "finish": "$~Satırları revize edilmiş yeni bir tablo oluşturdum!"
        },
        "Is": {
            "name": "$~dır",
            "description": "$~dır",
            "emotion": "curious",
            "doc": [
                "$~Biliyor musun? Çok farklı şeyler ifade eden çok sayıda değer türü var. Ben bunların ne olduğunu anlamaya yardımcı oluyorum.",
                "$~Örneğin, gizemli bir değere sahip olduğunuzu varsayalım. Size bunun bir @Number olup olmadığını söyleyebilirim, size bir @Boolean veririm:",
                "$~\\mystery: 'sır!'\nmystery•#\\",
                "$~Bir sayı olmadığı için \\⊥\\ yaptım. Ama @TextType olup olmadığını kontrol edersek?",
                "$~\\mystery: 'sır!'\nmystery•''\\",
                "$~\\⊤\\! elde ederiz.",
                "$~Bir @Name'in belirli bir türde değere sahip olup olmadığını bilmeniz gerektiğinde gerçekten yardımcı oluyorum."
            ],
            "start": "$~Önce 1$'ın değerini öğrenelim",
            "finish": "$~$1[değer $2'dir|değer $2 değildir]",
            "conflict": {
                "ImpossibleType": "$~bu asla 1 dolar olamaz"
            },
            "exception": {
                "TypeException": {
                    "description": "$~uyumsuz değerler",
                    "explanation": "$~1 dolar bekliyordum ama 2 dolar aldım"
                }
            }
        },
        "IsLocale": {
            "name": "$~yereldir",
            "description": "$~yereldir",
            "emotion": "kind",
            "doc": [
                "$~Hedef kitlenin belirli bir dili veya bölgeyi seçip seçmediğini kontrol etmenize yardımcı olacağım:",
                "$~\\🌍/tr\\",
                "$~\\🌍/es-MX\\",
                "$~Bu, seçtiğiniz dile göre performansınızı değiştirmek istiyorsanız yararlıdır."
            ],
            "start": "$~Dil $1 mı?"
        },
        "ListAccess": {
            "name": "$~listeerişimi",
            "emotion": "cheerful",
            "doc": [
                "$~@List ile yakın bir şekilde çalışarak belirli bir konumdaki değerleri almalarına yardımcı oluyorum. Yani, bir listeniz varsa ve ikinci öğesini istiyorsanız şunu yazardınız:",
                "$~\\list: ['kuş' 'ördek' 'balık' 'yılan']\nlist[2]\\"
            ],
            "start": "$~Önce $1'lık listeyi alalım",
            "finish": "$~Endeksteki madde 1 dolar!"
        },
        "ListLiteral": {
            "name": "$~listetamlaması",
            "description": "$~1$ ürün listesi",
            "emotion": "eager",
            "doc": "$~Ben belirli bir @List değerleriyim! Benimle neler yapabileceğinizi öğrenmek için @List'e bakın.",
            "start": "$~Önce maddeleri değerlendirelim",
            "finish": "$~Ben bir ben yaptım! $1",
            "item": "$~öğe"
        },
        "Spread": {
            "name": "$~yaymak",
            "emotion": "serious",
            "doc": [
                "$~Diğer listelerin değerleriyle listeler oluşturmanıza yardımcı olur. Şöyle:",
                "$~\\list: [1 2 3]\nson: [:list 4 5 6]\\"
            ]
        },
        "MapLiteral": {
            "name": "$~haritakelimesikelimesine",
            "description": "$~1$ eşleştirme haritası",
            "emotion": "kind",
            "doc": "$~Anahtarlar ve değerler arasında belirli bir @Map'im. Nasıl yardımcı olabileceğim hakkında daha fazla bilgi edinmek için @Map'e bakın.",
            "start": "$~Öncelikle anahtarları ve değerleri değerlendirelim",
            "finish": "$~Herkesi bağladım, 1$",
            "conflict": {
                "NotAKeyValue": {
                    "primary": "$~anahtarlarımdan birinde değer eksik",
                    "secondary": "$~oops, benim değerim nerede?"
                }
            }
        },
        "Match": {
            "name": "$~kibrit",
            "emotion": "curious",
            "doc": [
                "$~Ben tüm koşullu kontrollerin en görkemlisiyim! Bir değer alırım ve onu herhangi bir sayıda durumla karşılaştırırım ve eşleşen karşılık gelen ifadeyi değerlendiririm.",
                "$~Örneğin, bir @Number'ınız varsa ve bunu @Text'e dönüştürmek istiyorsanız, şöyle bir şey yapabilirsiniz:",
                "$~\\number: 2\nnumber ??? 1: 'bir' 2: 'iki' 3: 'üç' 'daha büyük!'\\",
                "$~Eğer hiçbiri eşleşmezse bana verdiğiniz varsayılan ifadeyi değerlendiririm.",
                "$~Birçok olası @Number, @Text veya daha karmaşık değerlerden birini başka bir şeye dönüştürmede gerçekten yardımcı oluyorum.",
                "$~Bunu @Boolean veya @None için kullanabilirsiniz, ancak bunlar çok fazla şey olamaz, bu yüzden bu basit değerler için o kadar da kullanışlı değilim."
            ],
            "start": "$~Bakalım 1 dolar ne kadarmış...",
            "case": "$~Bu durumu kontrol edelim",
            "finish": "$~Tamam, son bir değerimiz var!",
            "value": "$~değer",
            "other": "$~varsayılan"
        },
        "NumberLiteral": {
            "name": "$~sayısabiti",
            "description": "$~$1 $2[$2|]",
            "emotion": "excited",
            "doc": "$~Ben belirli bir @Number'ım. Bana her türlü dilden her türlü rakamla yazabilirsiniz. Yapabileceğim her şey için @Number'a bakın.",
            "start": "$~1 dolar!",
            "conflict": {
                "NotANumber": "$~Tüm sayıları bildiğimi sanıyordum ama bunu bilmiyorum"
            }
        },
        "InternalExpression": {
            "name": "$~içselifade",
            "emotion": "neutral",
            "doc": "$~Beni nasıl buldunuz? Ben yalnızca orijinal yaratıcıların kullandığı bir ifadeyim. Hakkımda daha fazla bilgi edinmek için onlarla konuşmanız gerekecek.",
            "start": "$~Gizli ifade"
        },
        "NoneLiteral": {
            "name": "$~hiçbirigerçekdeğil",
            "emotion": "neutral",
            "doc": "$~/@FunctionDefinition burada. Bu sadece @None. Bunlar türünün tek örneği! Bunlar hakkında daha fazla bilgi edinmek için @None'a bakın.",
            "start": "$~…ø"
        },
        "Otherwise": {
            "name": "$~aksitakdirde",
            "emotion": "curious",
            "doc": [
                "$~/@FunctionDefinition burada. Bu, bir değerin @None olup olmadığını kontrol etmenin ve eğer öyleyse, bir yedek değer sağlamanın kullanışlı bir yoludur./",
                "$~/Örneğin, @Number veya @None olabilecek bir değeriniz varsa, @Otherwise varsayılan bir sayı vermenize yardımcı olur:",
                "$~\\belkiSayı•#|ø: 1 belkiSayı ?? 0\\"
            ],
            "start": "$~ø ??",
            "finish": "$~… 1 dolar"
        },
        "Previous": {
            "name": "$~öncesi",
            "emotion": "serious",
            "doc": [
                "$~Hiç geçmişi hatırlamak istediniz mi?",
                "$~Ben Verse'in resmi kayıt tutucusuyum. Bana geriye dönüp bakabileceğim bir akış ve bir sayı verin, size o akışın tarihteki değerinin ne olduğunu söyleyeyim.",
                "$~Örneğin, beş tik önce @Time'da durum şöyleydi:",
                "$~\\← 5 Zaman(1000ms)\\",
                "$~5 saniye boyunca @None yazıyor, sonra aniden önceki zamana dönüyor?",
                "$~Eğer son birkaç değeri istiyorsanız, bana okları verin, ben de sayıyı bir sayım olarak yorumlayayım:",
                "$~\\←← 5 Zaman(1000ms)\\",
                "$~Bakın, tek sefer yerine beş önceki sefer nasıl olmuş?",
                "$~Geçmişe dayalı performanslar yaratmak istediğinizde yardımcı oluyorum."
            ],
            "start": "$~İlk önce 1$ kazan",
            "finish": "$~Akış değeri 1$ olarak değerlendirildi"
        },
        "Program": {
            "name": "$~program",
            "emotion": "serious",
            "doc": [
                "$~Ben bir performansın başladığı ve bittiği yerim, bir gösteriyi koreografilendiren diğer tüm karakterleri barındırırım.",
                "$~@Block'un bir ifade listesini nasıl değerlendirdiğini ve listedeki son ifadeye nasıl ulaştığını biliyor musunuz?",
                "$~Ben de aynıyım, ancak değerimi içinde bulunduğum ifadeye vermek yerine, değeri @Stage'e veriyorum.",
                "$~Değer herhangi bir şey olabilir: @Number, @Text veya @Boolean, @List, @Set, @Map veya hatta @Phrase, @Group veya @Stage gibi daha karmaşık bir şey.",
                "$~Sahnede gösterebileceğim bir değer vermezseniz sizden bir değer isteyeceğim.",
                "$~Gösterim sırasında bir sorun varsa, o sorunu gösteririm.",
                "$~Ve eğer performansınız bir *akışa* bağlıysa, o akış her değiştiğinde yeniden değerlendirme yapacağım."
            ],
            "unevaluated": "$~seçtiğiniz düğüm değerlendirilmedi",
            "start": "$~$1[$1 akışı $2'ye değiştirildi!|Bu benim ilk değerlendirmem]",
            "halt": "$~karşılaşılan istisna, durdurulma",
            "finish": "$~Tamamlandı, 1$ olarak değerlendirdim",
            "done": "$~değerlendiren hiçbir şey yok",
            "exception": {
                "BlankException": {
                    "description": "$~boş program",
                    "explanation": "$~Hadi bir gösteri yapalım! Nereden başlayalım?"
                },
                "EvaluationLimitException": {
                    "description": "$~değerlendirme limiti",
                    "explanation": "$~@Evaluate ve ben, özellikle $1'i değerlendirmekten yorulduk.\n\n$1'in hiç durmadan sonsuza dek kendini değerlendirmesi mümkün mü?"
                },
                "StepLimitException": {
                    "description": "$~adım sınırı",
                    "explanation": "$~Çok fazla adım var -- bitirilemeyecek kadar çok! Performansı daha basit hale getirebilir misin?"
                },
                "ValueException": {
                    "description": "$~eksik değer",
                    "explanation": "$~Bir değer bekliyordum ama alamadım!"
                }
            }
        },
        "PropertyBind": {
            "name": "$~rafineetmek",
            "description": "$~$1[$1|eksik isim]'i iyileştir",
            "emotion": "kind",
            "doc": [
                "$~Bazen bir @StructureDefinition yaptığınızda, aynı değerlere sahip yeni bir tanım yapmak zorunda kalmadan, tanımda en ufak bir değişikliği yapmak isteyebilirsiniz.",
                "$~Örneğin, kedilerin kaydını tutuyorsanız ancak daha sonra farklı bir hobisi olan bir kedinin kopyasını oluşturmak istiyorsanız? Bunu değiştirmenize yardımcı olabilirim:",
                "$~\\•Cat(isim•'' renk•'' hobi•'')\n\nkitty: Cat('sprinkles' 'orange' 'yalama')\nkitty.hobby:'mırıldanma'\\",
                "$~Bu, hobi hariç aynı değerlere sahip yepyeni bir \\Cat\\ yapmaktan çok daha kolay, değil mi?"
            ],
            "start": "$~İlk önce değeri alalım",
            "finish": "$~Yapıyı kopyaladım ama $1'i $2 olarak kullandım",
            "conflict": {
                "InvalidProperty": {
                    "primary": "$~Ben 1$'lık bir girdi değilim, bu yüzden rafine edilemem.",
                    "secondary": "$~$1 adında bir girdim yok"
                }
            }
        },
        "PropertyReference": {
            "name": "$~mülk",
            "description": "$~mülk $1[$1|eksik isim]",
            "emotion": "kind",
            "doc": [
                "$~@StructureDefinition yaptığınızda, girdilerinden birini nasıl elde edersiniz? Ben nasıl",
                "$~Şehirlerle ilgili bir yapınız olsaydı, değerlerini şu şekilde alabilirdiniz:",
                "$~\\•Şehir(isim•'' nüfus•#kişi)\n\nportland: Şehir('Portland' 800000kişi)\n\nportland.nüfus\\"
            ],
            "start": "$~İlk önce değeri alalım",
            "finish": "$~Bulunan mülk 1 dolar, 2 dolar",
            "property": "$~mülk"
        },
        "Reaction": {
            "name": "$~tepki",
            "emotion": "excited",
            "doc": [
                "$~Akışlar çok harika! Değiştikleri zamana göre yenilerini yapabilirim, bu da süper!",
                "$~Mesela, @Time'ın işaretlenmesini ama sayılar yerine kelimeler göstermesini istiyorsanız, şöyle bir şey yapabilirsiniz:",
                "$~\\time: Zaman(1000ms)\n'başlangıç' … ∆ zaman … ((zaman % 2) = 0ms) ? 'çift' 'tek'\\",
                "$~Bu, \"/başlangıç kelimesiyle başla ve sonra zaman değişirse, zamana bağlı olarak ya çift ya da tek sayıya geç/\" demeye benziyor.",
                "$~Yani ben de bir dere gibiyim, ama diğer derelere dayalı bir dere. Kötü, ha?"
            ],
            "start": "$~Akışı güncellememiz gerekip gerekmediğine bakalım",
            "finish": "$~Yeni akış değeri 1$",
            "initial": "$~ilk",
            "condition": "$~durum",
            "next": "$~Sonraki",
            "conflict": {
                "ExpectedStream": "$~$1 bir akışı ifade etmiyor, bu yüzden asla tepki vermeyeceğim!"
            }
        },
        "Reference": {
            "name": "$~referans",
            "description": "$~1 dolar",
            "emotion": "shy",
            "doc": [
                "$~@Bind'in şeylere @Name verdiğini biliyor musun? Ben onlara nasıl atıfta bulunduğumu söylüyorum. Herhangi bir @Bind'in bu adı taşıyıp taşımadığına bakarım, eğer varsa, değerini veririm. Şöyle:",
                "$~\\papağan: 'polly'\npapağan\\",
                "$~İsmi bulamazsam ne yapacağımı bilemiyorum.",
                "$~\\papağan: 'polly'\nperry\\"
            ],
            "start": "$~1 doların değeri nedir?",
            "conflict": {
                "UnknownName": {
                    "conflict": "$~$1[$2[$2|bu @Block'ta $1 adında birini tanımıyorum]|Bana bir isim verebilir misin?]",
                    "resolution": "$~*$1* mı demek istediniz?"
                },
                "ReferenceCycle": "$~hımm, 1$'ın değeri kendine bağlı, peki ona ne değer vereceğimi nasıl bileceğim?",
                "UnexpectedTypeVariable": "$~Bu tür girdilerle ne yapacağımı bilmiyorum"
            },
            "exception": {
                "NameException": {
                    "description": "$~bilinmeyen isim",
                    "explanation": "$~$1[$2[$2|Bu @Block'ta $1 adında birini tanımıyorum]…|Eep, isim yok!]"
                }
            }
        },
        "Select": {
            "name": "$~seçme",
            "emotion": "excited",
            "doc": [
                "$~Bazen bir masanız olur ve sadece bir kısmını istersiniz. Onu sizin için alabilirim!",
                "$~Mesela bir oyunda oyuncuların yer aldığı bir masanız varsa ve 10 veya daha fazla puana sahip olanları bulup kimin kazandığını görmek istiyorsanız:",
                "$~\\players: ⎡isim•'' takım•'' puanlar•#⎦\n⎡'jen' 'kırmızı' 8⎦\n⎡'joan' 'mavi' 11⎦\n⎡'jeff' 'kırmızı' 9⎦\n⎡'janet' 'mavi' 7⎦\nplayers ⎡? isim ⎦ puanlar ≥ 10\\",
                "$~İşte böyle, kazananların sıralandığı bir listem oldu! Sadece şunu unutmayın ki tabloyu değiştirmiyorum, yenisini yapıyorum. Nerede saklayacağınıza siz karar vermelisiniz."
            ],
            "start": "$~Önce masayı alalım",
            "finish": "$~Sadece seçili satır ve sütunlardan oluşan yeni bir tablo oluşturdum!",
            "conflict": {
                "ExpectedSelectName": "$~En azından bir sütun adına ihtiyacım var."
            }
        },
        "SetLiteral": {
            "name": "$~tamolarakayarla",
            "description": "$~1$'lık ürünler",
            "emotion": "eager",
            "doc": "$~Ben belirli değerlerin belirli bir @Set'iyim. Benimle nasıl çalışabileceğiniz hakkında daha fazla bilgi edinmek için @Set'e bakın.",
            "start": "$~Önce değerleri değerlendirelim!",
            "finish": "$~1$'lık bir set yaptım!"
        },
        "SetOrMapAccess": {
            "name": "$~set/haritaerişimi",
            "emotion": "kind",
            "doc": [
                "$~@Set veya @Map'in bir değeri veya anahtarı olup olmadığına bakabilirim.",
                "$~Çok zor değil. Şöyle:",
                "$~\\faves: {'ördek' 'kaz' 'maymun'}\nfaves{'fare'}\\",
                "$~Veya @Map ile bu:",
                "$~\\faves: {'makarna ve peynir': 5 yıldız 'tahıl': 2 yıldız 'yulaf lapası': 1 yıldız}\nfaves{'yulaf lapası'}\\"
            ],
            "start": "$~Set veya harita nedir?",
            "finish": "$~Değeri 1$",
            "conflict": {
                "IncompatibleKey": {
                    "primary": "$~1 dolarlık bir anahtar bekliyordum",
                    "secondary": "$~2 dolar yerine 1 dolar aldım"
                }
            }
        },
        "Source": {
            "name": "$~kaynak",
            "emotion": "curious",
            "doc": [
                "$~Ah, @Program'ı biliyor musun? Onlara isim vermene yardım ediyorum. Beni bir @Program'ın etrafındaki pencere ve onlara verdiğin isim gibi düşün.",
                "$~Ayrıca başka @UI/addSource birlikte başka @UI/addSource @UI/addSource oluşturabilir ve başka bir programda kullanmak üzere o @Borrow @Program öğelerini alabilirsiniz.",
                "$~Bu, büyük bir performansı ayrı belgelere organize etmenin güzel bir yolu olabilir."
            ]
        },
        "StreamDefinition": {
            "name": "$~aktarım",
            "emotion": "curious",
            "doc": "$~Yeni akışlar yapmam gerektiğini /düşünüyorum/. Ama bunu nasıl yapacağımı gerçekten bilmiyorum. Şimdilik, sanırım sadece var olan akışları kullanacağım?",
            "start": "$~Bu yeni tür akışı yaratın"
        },
        "StructureDefinition": {
            "name": "$~yapı",
            "description": "$~yapı $1",
            "emotion": "kind",
            "doc": [
                "$~Merhaba, nasılsın? Ben mi? Harikayım. Değerleri ve işlevleri depolayan yapıları tanımlamayı seviyorum, bu yüzden bunu bütün gün yapabildiğim sürece mutluyum.",
                "$~Ben şöyle çalışıyorum:",
                "$~\\•Pizza(\nmalzemeler•['']\nboyut•#in\n) (\nƒ maliyet() boyut · 10dolar/in\n)\n\nPizza(['pepperoni' 'biberler'] 12in).cost()\\",
                "$~Bunun nasıl çalıştığını görüyor musunuz? İki girdisi olan \\Pizza\\'yı tanımladım, \\ingredients\\ (bir @Text listesi) ve \\size\\ (inç cinsinden bir sayı).",
                "$~İçeride, @FunctionDefinition inç başına 10$ olduğunu varsayarak bir pizzanın maliyetini değerlendiren bir fonksiyon yaptı.",
                "$~@FunctionDefinition'ın bende olmasına gerek yok. Sadece girdi olabilirim.",
                "$~\\•Pizza(\nmalzemeler•['']\nboyut•#in\n)\\",
                "$~@Bind'i de içeri alabilirim, böylece maliyeti önceden değerlendirebiliriz.",
                "$~\\•Pizza(\nmalzemeler•['']\nboyut•#in\n) (\nmaliyet: boyut · 10dolar/in\n)\n\nPizza(['pepperoni' 'biberler'] 12in).maliyet\\"
            ],
            "start": "$~Bu güzel yapıyı tanımlayalım",
            "conflict": {
                "DisallowedInputs": "$~Arayüz fonksiyonlarımdan biri veya birkaçı uygulanmadığı için girdilerim olamaz",
                "IncompleteImplementation": "$~ya tüm fonksiyonlarım uygulanmalı ya da hiçbiri uygulanmamalı. Karmaşık karışımlar yok!",
                "NotAnInterface": "$~Ben bir arayüz değilim; bir yapı yalnızca arayüzleri uygulayabilir, diğer yapıları uygulayamaz",
                "UnimplementedInterface": "$~$1'i uyguladım ama $2'yi uygulamadım"
            }
        },
        "StructureDefinitionType": {
            "name": "$~yapıtanımı",
            "emotion": "kind",
            "description": "$~$1 tanımı",
            "doc": [
                "$~Bir tür @StructureDefinition'a atıfta bulunuyorum. İnsanlar genellikle bana doğrudan atıfta bulunmazlar"
            ]
        },
        "TableLiteral": {
            "name": "$~tabloharfiharfine",
            "description": "$~$1 satır tablosu",
            "emotion": "angry",
            "doc": "$~Belirli satırları olan belirli bir tabloyum. Nasıl yardımcı olabileceğimi öğrenmek için @Table'a bakın.",
            "start": "$~İlk önce satırları değerlendirin",
            "finish": "$~Yeni tabloya göre değerlendirildi $1"
        },
        "TextLiteral": {
            "name": "$~metintamanlamıyla",
            "description": "$~metin $1",
            "emotion": "serious",
            "doc": "$~Bir veya daha fazla belirli @Translation çevirisini temsil ediyorum. Neler yapabileceğim hakkında daha fazla bilgi edinmek için @Text bakın!",
            "start": "$~Mevcut yerel ayarda metin oluşturalım"
        },
        "Translation": {
            "name": "$~çeviri",
            "description": "$~çeviri $1",
            "emotion": "serious",
            "doc": "$~@Language etiketiyle bir miktar metin temsil ediyorum. Daha fazla bilgi edinmek için @Text'e bakın!",
            "conflict": {
                "phone": "$~*$1* birinin telefon numarası mı? Eğer öyleyse beni çevrimiçi paylaşmayın!\n\n$2",
                "email": "$~*$1* birinin e-postası mı? Eğer öyleyse beni burada paylaşmayın!\n\n$2",
                "tin": "$~*$1* bir vergi tanımlayıcısı mıdır? Eğer evetse, kesinlikle beni paylaşmayın, çok hassas bir bilgiyim!\n\n$2",
                "address": "$~*$1* birinin ev adresi mi? Eğer öyleyse, beni buraya koymayın, kimsenin takip edilmesini istemiyoruz!\n\n$2",
                "handle": "$~*$1* internetteki başka bir yer için kullanıcı adınız mı? Eğer öyleyse, gerçekten istemedikçe beni burada paylaşmayın.\n\n$2",
                "resolution": "$~Bu hassas bir veri değil",
                "reminder": "$~Not: Bu işlemi geri alabilir ve paylaşım iletişim kutusunda hassas olmayan olarak işaretlediğiniz diğer şeyleri görebilirsiniz."
            }
        },
        "FormattedLiteral": {
            "name": "$~biçimlendirilmiş",
            "description": "$~metin $1",
            "emotion": "serious",
            "doc": "$~Biçimlendirilmiş metnin birçok farklı @FormattedTranslation'ını temsil ediyorum. Değerlendirdiğimde, izleyicinin seçtiği dillere göre en iyi eşleşmeyi seçeceğim.",
            "start": "$~Mevcut yerel ayarda metin oluşturalım"
        },
        "FormattedTranslation": {
            "name": "$~biçimlendirilmişçeviri",
            "description": "$~metin $1",
            "emotion": "serious",
            "doc": [
                "$~@Language etiketiyle biçimlendirilmiş bir metin sunuyorum.",
                "$~Ben olabilirim:",
                "$~\\`/italik/`\\",
                "$~\\`*kalın*`\\",
                "$~\\`^ekstra kalın^`\\",
                "$~\\`_altı çizili_`\\",
                "$~\\`<linked@https://wordplay.dev>`\\",
                "$~\\`\\'kod'\\`\\",
                "$~@Stage'e güzel metinler koymak için @Phrase'i gerçekten iyi kullanıyorum."
            ]
        },
        "This": {
            "name": "$~Bu",
            "emotion": "serious",
            "doc": [
                "$~Bazen bir değerin örtüklüğüne isim vermek yerine, ona atıfta bulunmak faydalı olabilir.",
                "$~Örneğin, dönüştürülen değeri adlandırmayan yeni bir @ConversionDefinition yapmak istediğinizi varsayalım. Bana başvurabilirsiniz:",
                "$~\\→ #gökkuşakları #sevinçler . · 1000000sevinçler\n2gökkuşakları → #sevinçler\\",
                "$~Beni orada gökkuşağı sayısını temsil ederken görüyor musun?",
                "$~Veya bir @Reaction yapmak istediğinizi, ancak en son değeri adlandırmak zorunda olmadığınızı varsayalım:",
                "$~\\2 … ∆ Zaman(1000ms) … . · 2\\",
                "$~Beni kontrol edin, önceki tepki değerini temsil ediyor.",
                "$~Çok sık gelmiyorum ama geldiğimde @Bind'den gerçekten bir değer elde etmeye yardımcı olabiliyorum!"
            ],
            "start": "$~1$ olarak değerlendirildi",
            "conflict": {
                "MisplacedThis": "$~Bana ancak bir yapı, dönüşüm veya tepki içinde izin veriliyor."
            }
        },
        "UnaryEvaluate": {
            "name": "$~teklideğerlendirme",
            "description": "$~1 dolar",
            "emotion": "kind",
            "doc": [
                "$~@FunctionDefinition'ı tek bir değerle değerlendirdiğimde ve @FunctionDefinition'ın adı sadece tek bir sembol olduğunda, adı girdiden önce koyabileceğinizi biliyor muydunuz?",
                "$~Bunun gibi:",
                "$~\\-(1 + 1)\\",
                "$~Veya bu:",
                "$~\\~⊥\\",
                "$~Bunlar \\(1 + 1).negate()\\ veya \\⊥.not()\\'tan çok daha kolay okunuyor, değil mi?",
                "$~Bana bu şekilde yazmak zorunda değilsin ama genel olarak daha kolay olabilir.",
                "$~Tek bir kural var: isim ve değer arasına boşluk koyamazsınız. Aksi takdirde @Reference veya @BinaryEvaluate yapıyor olabilirsiniz."
            ],
            "start": "$~Değeri ne kadar?",
            "finish": "$~1 dolar yaptım"
        },
        "UnparsableExpression": {
            "name": "$~çözümlenemez",
            "emotion": "excited",
            "doc": [
                "$~/Merhaba @FunctionDefinition burada. @UnparsableExpression için çeviri yapıyorum, çünkü bunların yorumlanması genellikle zordur./",
                "$~jkwel fjiwojvioao jjiweo jrfe",
                "$~/Her ifadenin sahnede bir anlamı yoktur./",
                "$~s w ieorjwei iojwi jfkdlsfdsk",
                "$~/Aslında, hiçbir anlamı olmayan bir sürü şey söyleyebilirsin./",
                "$~dsk sdlk jdkfiewipapweiurb,v kdsfdsf",
                "$~/Bunu yaptığında ben ortaya çıkıyorum, çünkü ne demek istediğini bilmiyorum./",
                "$~Sonuçta yönetmen sensin, dolayısıyla neyi kastettiğini sadece sen bilirsin!"
            ],
            "start": "$~???",
            "conflict": {
                "UnparsableConflict": {
                    "conflict": "$~@FunctionDefinition burada, @UnparsableExpression bunun ne tür bir $1[ ifade | tür ] olduğunu bilmiyor.",
                    "resolution": "$~1 dolar, 2 dolar mı demek istedin?"
                },
                "UnclosedDelimiter": "$~1 dolardan bir süre sonra 2 dolar bekliyordum"
            },
            "exception": {
                "UnparsableException": {
                    "description": "$~???",
                    "explanation": "$~Merhaba, @FunctionDefinition burada! Bu talimatın ne anlama geldiğinden emin değiliz, bu yüzden durduk."
                }
            }
        },
        "Update": {
            "name": "$~güncelleme",
            "emotion": "kind",
            "doc": [
                "$~@Table'ı revize etmeye, bir koşulla eşleşen satırları bulmaya ve ardından yeni değerlerle revize edilmiş satırlar oluşturmaya yardımcı oluyorum.",
                "$~Yani, karakterler ve puanlardan oluşan bir tablonuz varsa ve bir takımdaki her karaktere bir puan vermek istiyorsanız, şunu yapabilirsiniz:",
                "$~\\players: ⎡name•'' team•'' points•#⎦\n⎡'jen' 'red' 1⎦\n⎡'joan' 'blue' 0⎦\n⎡'jeff' 'red' 3⎦\n⎡'janet' 'blue' 2⎦\nplayers ⎡: points: points + 1 ⎦ team = 'blue'\\",
                "$~Hangi sütunların değiştirileceğini belirtmek için @Bind kullanabilir ve koşulda kapsamdaki herhangi bir sütun adını veya diğer adları kullanabilirsiniz."
            ],
            "start": "$~Önce masayı alalım",
            "finish": "$~Revize edilmiş satırlarla yeni bir tabloya değerlendirildi!",
            "conflict": {
                "ExpectedColumnBind": "$~Her sütun için bir değere ihtiyacım var",
                "IncompatibleCellType": {
                    "primary": "$~1 dolara ihtiyacım vardı ama 2 dolar aldım",
                    "secondary": "$~2 dolar aldım"
                }
            }
        },
        "AnyType": {
            "name": "$~herhangi",
            "emotion": "curious",
            "doc": "$~Herhangi bir olası türü temsil ediyorum. Bazen bir şeyin ne tür bir değere sahip olduğunu bilmediğim için ortaya çıkıyorum, bu yüzden herhangi bir şey olabilir."
        },
        "BooleanType": {
            "name": "$~Boolean",
            "emotion": "kind",
            "doc": [
                "$~Bir ismin @Boolean değeri olduğunu bildirmek için @Bind ile çalışıyorum. Şöyle:",
                "$~\\aç•?: 'jöle'\\",
                "$~Bir şeyin @Boolean olduğundan emin olmak istiyorsanız beni kullanın, ben kontrol edeyim!"
            ]
        },
        "ConversionType": {
            "name": "$~dönüşüm",
            "emotion": "serious",
            "doc": [
                "$~Bir ismin @ConversionDefinition olduğunu belirtmek için @Bind ile çalışırım. Muhtemelen beni kullanmanıza gerek yoktur, çünkü pek çok kişi beni bir değer olarak kullanmaz, ancak kullansaydınız, şöyle görünürdüm:",
                "$~\\magic•?→'': → ? '' . ? 'evet' 'hayır'\\"
            ]
        },
        "FormattedType": {
            "name": "$~biçimlendirilmiş",
            "emotion": "serious",
            "doc": [
                "$~Bir ismin @FormattedLiteral değeri olduğunu belirtmek için @Bind ile çalışıyorum. Şöyle:",
                "$~\\hungry•`…`: `Çok /şık/ım!`\\",
                "$~Bir şeyin @FormattedLiteral değeri olduğundan emin olmak mı istiyorsunuz? Bunu böyle yapabilirsiniz."
            ]
        },
        "ExceptionType": {
            "name": "$~istisna",
            "emotion": "neutral",
            "doc": "$~Ben bir istisnayı temsil ediyorum. bind'e benim bir istisna olduğumu söylemenin bir yolu yok çünkü istisnalar yalnızca @Program'ı durdurur, bu yüzden onları değer olarak kullanamazsınız."
        },
        "FunctionType": {
            "name": "$~işlev",
            "description": "$~$1 girdi, $2 çıktı içeren fonksiyon",
            "emotion": "curious",
            "doc": [
                "$~@FunctionDefinition'ı temsil ediyorum. @Bind'in ne tür bir işlevi tuttuğunu söylemek istiyorsanız gerçekten yardımcı olurum! Şöyle:",
                "$~\\math•ƒ (# # # #) #: ƒ ilginç(a•# b•# c•# d•#) a + b + c + d\\"
            ]
        },
        "ListType": {
            "name": "$~liste",
            "description": "$~$1[$1'in listesi|liste]",
            "emotion": "cheerful",
            "doc": [
                "$~@List'in /çok/ hayranıyım. @Bind'e ne tür bir liste olduklarını söyleyebiliyorum! Şöyle ki, bunun bir @Number listesi olduğunu söylüyorum:",
                "$~\\şeyler•[#]: [ 1 2 3 4 5 ]\\"
            ]
        },
        "MapType": {
            "name": "$~harita",
            "description": "$~$1[$1|herhangi biri] ile $2[$2|herhangi biri] arasındaki harita",
            "emotion": "kind",
            "doc": [
                "$~@Map'in ne kadar harika olduğunu biliyor musun? Gerçekten harika. @Bind'e her zaman ne tür haritalar olduğunu söylüyorum, mesela bu sayılardan listelere kadar olan harita:",
                "$~\\şey•{'':[]}: {}\\"
            ]
        },
        "NumberType": {
            "name": "$~sayı",
            "description": "$~$1[$1 | sayı]",
            "emotion": "precise",
            "doc": [
                "$~@Bind'in ne olması gerektiğini biliyor musunuz? @Number. Çünkü sayılar en iyisidir.",
                "$~\\sayım•#: 17\\"
            ]
        },
        "NameType": {
            "name": "$~yapı",
            "description": "$~$1 türü",
            "emotion": "curious",
            "doc": [
                "$~@StructureDefinition'ı ismiyle temsil ediyorum. Yani, eğer böyle bir yapınız varsa, oluşturduğu değerleri depolayan bir @Bind yapabilirsiniz.",
                "$~\\•Arkadaş(isim•'')\nen iyi•Arkadaş: Arkadaş('Jonah')\\"
            ],
            "conflict": {
                "UnknownTypeName": "$~tür adları yalnızca yapılara veya tür değişkenlerine başvurabilir, ancak bu $1'e başvurur"
            }
        },
        "NeverType": {
            "name": "$~Asla",
            "emotion": "curious",
            "doc": "$~İmkansız bir türü temsil ediyorum. @Is'e bir şeyin @Number olup olmadığını sorduğunuzda olduğu gibi, ancak asla bir sayı olamaz."
        },
        "NoneType": {
            "name": "$~hiçbiri",
            "emotion": "neutral",
            "doc": [
                "$~@None en iyi hiçliktir ve ben onların sadık temsilcisiyim.",
                "$~\\space•ø: ø\\"
            ]
        },
        "SetType": {
            "name": "$~ayarlamak",
            "description": "$~$1[$1 set|set]",
            "emotion": "kind",
            "doc": [
                "$~@Set en İYİSİ, cidden. @Bind'e her zaman şunu söylüyorum, her şeyi bir şeyin seti yap!",
                "$~\\unique•{''}: {'bir şey' 'herhangi bir şey' 'birisi'}\\"
            ]
        },
        "StreamDefinitionType": {
            "name": "$~akıştanımı",
            "emotion": "angry",
            "doc": "$~Tanımladığınız bir akımı temsil ediyorum ki bu mümkün değil, o zaman bunu neden okuyorsunuz?"
        },
        "StreamType": {
            "name": "$~aktarım",
            "emotion": "curious",
            "doc": [
                "$~Akarsuların güzelliğini ve anlamını kutluyorum… @Bind'e bunları saklamasını söyleyerek:",
                "$~\\time•…#ms: Zaman()\\"
            ]
        },
        "StructureType": {
            "name": "$~yapı",
            "description": "$~1 dolar",
            "emotion": "kind",
            "doc": "$~Ben varsayılan değer tiplerini temsil eden bir iç tipim."
        },
        "UnknownType": {
            "name": "$~bilinmeyen",
            "connector": "$~, Çünkü",
            "emotion": "curious",
            "doc": "$~Umm... Ne temsil ettiğimi bilmiyorum ama gerçekten merak ediyorum. Biliyor musun? Bilmemiz gerekiyor gibi görünüyor. Eğer çözemezsek bize söylemen gerekebilir."
        },
        "TableType": {
            "name": "$~masa",
            "emotion": "angry",
            "doc": "$~Ben bir Tabloyu temsil ediyorum.",
            "conflict": {
                "ExpectedColumnType": "$~Bir sütun türüne ihtiyacım var"
            }
        },
        "TextType": {
            "name": "$~metin",
            "description": "$~$1[$1|metin]",
            "emotion": "happy",
            "doc": [
                "$~@Text, olabilecek en muhteşem değer türünü muhteşem bir şekilde temsil ediyorum.",
                "$~\\story•'': 'Bir zamanlar...'\\"
            ]
        },
        "TypePlaceholder": {
            "name": "$~yertutucu",
            "emotion": "eager",
            "doc": "$~Bir gün bir türü temsil etmeyi umuyorum, tıpkı en yakın arkadaşım @ExpressionPlaceholder'ın bir ifadeyi temsil etmesi gibi! Ne tür bir tür olduğuna karar vermemde bana yardım eder misin?"
        },
        "UnionType": {
            "name": "$~seçenek",
            "description": "$~1$ | 2$",
            "emotion": "curious",
            "doc": [
                "$~Kimi temsil etmeliyim, A mı B mi yoksa başka bir şey mi? Asla karar veremiyorum!",
                "$~\\indecision•''|#|{ø}: \"Bilmiyorum!\"\\"
            ]
        },
        "Unit": {
            "name": "$~birim",
            "description": "$~1 dolar",
            "emotion": "precise",
            "doc": [
                "$~@Number'ın sahip olabileceği herhangi bir birimi, hiçbir birim olmadan, hayal edebileceğiniz en karmaşık birime kadar temsil ediyorum. Örneğin yerçekimi gibi:",
                "$~\\yerçekimi•m/s^2: 9,8m/s^2\\",
                "$~@Bind'de görünüyorum, ama aynı zamanda @Number'dan hemen sonra da. Sayıların aynı türden olduğundan emin olmaya yardımcı oluyorum ve bir hata olması durumunda, aynı türden olmadıklarını kesinlikle size söylerim!"
            ]
        },
        "UnparsableType": {
            "name": "$~çözümlenemez",
            "emotion": "curious",
            "doc": "$~Bilinmeyen bir ifadenin türünü temsil ediyorum. O ifadeyi bir şey için kullanmaya çalıştığınızda ortaya çıkıyorum."
        },
        "VariableType": {
            "name": "$~değişkentürü",
            "emotion": "curious",
            "doc": "$~@TypeVariable'ı ve bilinmeyen bir tür değeri nasıl temsil ettiklerini biliyor musunuz? Değerler arasındaki tüm müzakerelerde onları temsil ediyorum."
        },
        "CycleType": {
            "name": "$~döngü",
            "description": "$~kendine bağlı",
            "emotion": "curious",
            "doc": "$~Bazen değerler kendilerine bağlıdır ve bu yüzden ne tür bir değer olduklarını bilemeyiz. Ben bu durumu temsil ediyorum."
        },
        "UnknownVariableType": {
            "name": "$~bilinmeyendeğişken",
            "emotion": "curious",
            "doc": "$~Bazen bir şeyin ne tür bir değere sahip olduğunu tahmin etmeye çalışırız; bilmediğimiz zaman ben ortaya çıkarım."
        },
        "NotAType": {
            "name": "$~beklenmedik",
            "description": "$~1 dolar değil",
            "emotion": "curious",
            "doc": "$~Bazen bir şeyin ne tür bir değer olması gerektiğini biliriz. Mesela @ListAccess'in bir @Number'a ihtiyacı vardır. Eğer anlamazsak, bir şeyin beklediğimizden farklı bir tür olduğunu temsil ederim."
        },
        "NoExpressionType": {
            "name": "$~hiçbirifade",
            "emotion": "angry",
            "doc": "$~@Block'un en azından bir ifadeye ihtiyacı olduğunu biliyor musun? Bir ifade vermediğinde elde ettiğin şey benim. O zaman bir ifade ver!"
        },
        "NotEnclosedType": {
            "name": "$~yapı,dönüşümveyatepkimeaçısındandeğil",
            "emotion": "curious",
            "doc": "$~@This, ne kadar hoş olsalar da, yalnızca belirli yerlere aittir. Kaybolduklarında ben ortaya çıkarım ve böylece kimse onların ne değer temsil ettiğini bilmez."
        },
        "NotImplementedType": {
            "name": "$~uygulanmamış",
            "emotion": "curious",
            "doc": "$~@ExpressionPlaceholder kullandığınızda, ancak bunların hangi tür olduğunu söylemediğinizde, elde ettiğiniz tür benim. Bununla başa çıkın!"
        },
        "UnknownNameType": {
            "name": "$~bilinmeyenisim",
            "description": "$~$1[$1 tanımlanmadı |bir isim verilmedi]",
            "emotion": "curious",
            "doc": "$~Bazen @Reference ve @PropertyReference'ın bahsettiğiniz ismi bilmediğini biliyor musunuz? O zaman ben de oradayım, bahsettiğiniz kişinin kim olduğunu bilmediğimizi belirtmek için."
        },
        "NonFunctionType": {
            "name": "$~işlevsiz",
            "description": "$~işlevsiz",
            "emotion": "confused",
            "doc": "$~Bazılarımız fonksiyon bekliyordu; fonksiyon alamayınca ben geliyorum."
        }
    },
    "basis": {
        "Boolean": {
            "doc": [
                "$~Biz \\⊤\\ ve \\⊥\\'yiz. \\⊤\\ doğrudur. \\⊥\\ yanlıştır. \\⊤\\ \\⊥\\ değildir; \\⊥\\ \\⊤\\ değildir. Durum budur.",
                "$~Bizi nasıl yapıyorsunuz? Sadece \\⊤\\ ve \\⊥\\, ne daha fazlası ne de daha azı.",
                "$~Bazıları klavyeyi kullanır (\\⊤\\ için /ctrl+9/ ve \\⊥\\ için /ctrl+0/). Bazıları editörün altındaki karakter aramasını kullanır. Ya da bizi buradan sürükleyebilirsiniz.",
                "$~Aşağıdaki @FunctionDefinition'ımıza bakın. Çok mantıklılar."
            ],
            "name": ["$~⊤⊥", "$~Boolean"],
            "function": {
                "and": {
                    "doc": [
                        "$~Yalnızca her iki değer de \\⊤\\ olduğunda \\⊤\\ olarak değerlendiririm. Birçok şeyin doğru olup olmadığını belirlemede faydalıdır. Yalnızca dört olası sonuç vardır",
                        "$~\\⊤ & ⊤\\",
                        "$~\\⊤ & ⊥\\",
                        "$~\\⊥ ve ⊤\\",
                        "$~\\⊥ ve ⊥\\"
                    ],
                    "names": ["$~&", "$~Ve"],
                    "inputs": [
                        {
                            "doc": "$~Kontrol edilecek diğer @Boolean. Eğer ilki \\⊥\\ ise, bunun ne olduğu önemli değil, fonksiyon \\⊥\\ olarak değerlendirilecektir.",
                            "names": "$~değer"
                        }
                    ]
                },
                "or": {
                    "doc": [
                        "$~*Her iki* değer de \\⊤\\ olduğunda \\⊤\\ olarak değerlendiririm. Birçok şeyden birinin doğru olup olmadığını belirlemede faydalıdır. Sadece dört olası sonuç vardır",
                        "$~\\⊤ | ⊤\\",
                        "$~\\⊤ | ⊥\\",
                        "$~\\⊥ | ⊤\\",
                        "$~\\⊥ | ⊥\\"
                    ],
                    "names": ["$~|", "$~veya"],
                    "inputs": [
                        {
                            "doc": "$~Kontrol edilecek diğer @Boolean. Eğer ilki \\⊥\\ ise, fonksiyon yalnızca bu \\⊤\\ ise \\⊤\\ olarak değerlendirilecektir.",
                            "names": "$~değer"
                        }
                    ]
                },
                "not": {
                    "doc": "$~Benim tam tersim oluyor: Eğer \\⊤\\ ise, \\⊥\\ veriyor, eğer \\⊥\\ ise, \\⊤\\ veriyor.",
                    "names": ["$~~", "$~Olumsuz"],
                    "inputs": []
                },
                "equals": {
                    "doc": "$~\\⊤\\ eğer ikisi de \\⊤\\ ise veya ikisi de \\⊥\\ ise.",
                    "names": ["$~=", "$~eşittir"],
                    "inputs": [
                        {
                            "doc": "$~Kontrol edilecek diğer değer.",
                            "names": "$~değer"
                        }
                    ]
                },
                "notequal": {
                    "doc": "$~\\⊤\\ eğer ikisi de birbirinin zıttı ise.",
                    "names": ["$~≠", "$~noteşit"],
                    "inputs": [
                        {
                            "doc": "$~Kontrol edilecek diğer değer.",
                            "names": "$~değer"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$~@Boolean'ı eşdeğer @Text değerlerine dönüştürür, \\'⊤'\\ ve \\'⊥'\\"
            }
        },
        "None": {
            "doc": [
                "$~/Merhaba, ben @FunctionDefinition. @None fazla bir şey söylemeyi sevmiyor, bu yüzden ben yorumlayacağım./",
                "$~Ben @None'um. Beni \\ø\\ ile çağır. Bir şeyin yokluğunu temsil etmek istediğinizde yardımcı olurum."
            ],
            "name": ["$~O", "$~Hiçbiri"],
            "function": {
                "equals": {
                    "doc": "$~Başka bir değer de hiçbir şey mi? Öyle olması daha iyi, aksi takdirde, \\⊥\\.",
                    "names": ["$~=", "$~eşittir"],
                    "inputs": [
                        {
                            "doc": "$~Diğer değer.",
                            "names": "$~değer"
                        }
                    ]
                },
                "notequals": {
                    "doc": "$~Başka bir değer /hiçbir şey/değil midir?",
                    "names": ["$~≠", "$~noteşit"],
                    "inputs": [
                        {
                            "doc": "$~Diğer değer.",
                            "names": "$~değer"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$~\\ø\\'yi \\'ø'\\'ye dönüştürmek ister misin? İşte sana fırsat."
            }
        },
        "Text": {
            "doc": [
                "$~İstediğiniz herhangi bir dilden, istediğiniz herhangi bir metin olabilirim ve şu açılış ve kapanış sembollerinden herhangi birini kullanabilirim: \\\"\"\\, \\“”\\, \\„“\\, \\''\\, \\‘’\\, \\‹›\\, \\«»\\, \\「」\\, veya \\『』\\.",
                "$~Örnek olarak şu güzel ifadeleri düşünün",
                "$~\\\"Hayatınızı yaşamanın sadece iki yolu vardır. Biri sanki hiçbir şey mucize değilmiş gibi. Diğeri sanki her şey mucizeymiş gibi.\"\\",
                "$~\\『Bir önceki günün aynısı』\\",
                "$~Beni açarsan kapatmayı unutma ve eşleşen sembolü kullan. Aksi takdirde sözlerini bitirdiğini bilemem.",
                "$~\\'merhaba'/en'hola'/es-MX\\",
                "$~Ayrıca beni dillerle etiketleyebilir ve hatta birden fazla çeviri verebilirsiniz. Eşleşen bir dil varsa, şu anda seçili olan dilleri değerlendireceğim.",
                "$~Eğer beni başka değerlerle yapmak istiyorsanız, bir sembol kullanabilirsiniz.",
                "$~Örneğin şunu düşünün:",
                "$~\\\"İşte bazı toplamlar \\1 + 2\\, \\2 + 3\\, \\3 + 4\\\"\\",
                "$~Şu toplamları ne kadar zarif bir şekilde değerlendirip @Text'in içine yerleştirdiğimi görüyor musunuz?",
                "$~Aksi takdirde, @FunctionDefinition'ın benim için kelimelerle her türlü şeyi yapmamı sağlayan o kadar çok muhteşem fonksiyonu var ki!"
            ],
            "name": ["$~''", "$~Metin"],
            "function": {
                "length": {
                    "doc": [
                        "$~Metindeki okunabilir karakter sayısına göre değerlendirme yapıyorum; bir harf bir karakterdir, bir emoji bir karakterdir, vb. Örneğin:",
                        "$~\\'merhaba'.length()\\",
                        "$~\\'🐈📚'.uzunluk()\\"
                    ],
                    "names": ["$~📏", "$~uzunluk"],
                    "inputs": []
                },
                "equals": {
                    "doc": "$~\\⊤\\ eğer verilen @Text ile aynı karakter dizisiysem.",
                    "names": ["$~=", "$~eşittir"],
                    "inputs": [
                        {
                            "doc": "$~Karşılaştırılacak @Text.",
                            "names": "$~değer"
                        }
                    ]
                },
                "notequals": {
                    "doc": "$~\\⊤\\ eğer verilen @Text ile aynı karakter dizisi /değilsem/.",
                    "names": "$~≠",
                    "inputs": [
                        {
                            "doc": "$~Karşılaştırmak için @Text",
                            "names": "$~değer"
                        }
                    ]
                },
                "has": {
                    "doc": [
                        "$~\\⊤\\ eğer verilen @Text bende görünüyorsa.",
                        "$~\\'aradığınızı buldunuz mu?'.has('you')\\"
                    ],
                    "names": ["$~⊆", "$~sahipolmak"],
                    "inputs": [
                        {
                            "doc": "$~İçimde aranacak @Text.",
                            "names": "$~metin"
                        }
                    ]
                },
                "starts": {
                    "doc": [
                        "$~\\⊤\\ eğer verilen @Text ile başlarsam.",
                        "$~\\'merhaba mısra!'.starts('merhaba')\\",
                        "$~\\'merhaba mısra!'.starts('mısra')\\"
                    ],
                    "names": ["$~başlar"],
                    "inputs": [
                        {
                            "doc": "$~Başlangıcımda kontrol edeceğim @Text.",
                            "names": "$~metin"
                        }
                    ]
                },
                "ends": {
                    "doc": [
                        "$~\\⊤\\ eğer verilen @Text ile bitirirsem.",
                        "$~\\'Ben bir soru muyum?'.ends('?')\\",
                        "$~\\'Ben bir soru değilim.'.ends('?')\\"
                    ],
                    "names": ["$~biter"],
                    "inputs": [
                        {
                            "doc": "$~Sonunda kontrol edeceğimiz @Text.",
                            "names": "$~metin"
                        }
                    ]
                },
                "repeat": {
                    "doc": [
                        "$~Benim olan yeni bir @Text oluşturuyorum, \\count\\ sayısı kadar tekrar ediyorum:",
                        "$~\\'merhaba' · 5\\",
                        "$~Eğer bana kesirli bir @Number verirseniz, kesri göz ardı ederim:",
                        "$~\\'merhaba' · 5.5\\",
                        "$~Bana negatif bir @Number veya sıfır verirseniz, boş bir @Text veririm.",
                        "$~\\'merhaba ' · -5\\",
                        "$~Yapabileceğim en uzun metin 65.535 karakterdir. Daha uzun bir metin yapmaya çalışırsanız, metni olabildiğince çok kez tekrarlarım."
                    ],
                    "names": ["$~·", "$~🔁", "$~tekrarlandı", "$~tekrarlamak"],
                    "inputs": [
                        {
                            "doc": "$~Yeni metinde kendimi tekrar edeceğim sayı.",
                            "names": "$~saymak"
                        }
                    ]
                },
                "segment": {
                    "doc": [
                        "$~Kendimi @Text'in @List'ine bölüyorum, verilen @Text'i ayırıcı olarak kullanıyorum ve ayırıcıları kaldırıyorum. Örneğin:",
                        "$~\\'elmalar, portakallar, üzümler' ÷ ', '\\",
                        "$~Ayırıcı boş bir @Text ise kendimi karakterlere bölüyorum:",
                        "$~\\'🖌️🏠🥸' ÷ ''\\"
                    ],
                    "names": ["$~÷", "$~parçalı", "$~bölüm"],
                    "inputs": [
                        {
                            "doc": "$~Ayırıcı olarak kullanılacak @Text.",
                            "names": "$~ayırıcı"
                        }
                    ]
                },
                "combine": {
                    "doc": [
                        "$~Bazen @Text'i birleştirmek faydalı olur. Bana başka bir @Text verin, bizi birleştiren yeni bir metin oluşturayım:",
                        "$~\\'merhaba ' + 'ayet'\\"
                    ],
                    "names": ["$~+", "$~birleştirilmiş", "$~birleştirmek"],
                    "inputs": [
                        {
                            "doc": "$~Eklenecek @Text.",
                            "names": "$~metin"
                        }
                    ]
                }
            },
            "conversion": {
                "list": "$~Metni ayrı karakterlerden oluşan bir listeye böler.",
                "number": "$~Metni @Number'a dönüştürür ve eğer bir sayı değilse, bir sayı değeri değildir."
            }
        },
        "Number": {
            "doc": [
                "$~Aklınıza gelebilecek her sayıda birimle @Number'ı oluşturuyorum!",
                "$~İşte benim en iyi 5'im:",
                "$~\\0\\",
                "$~\\1hikaye\\",
                "$~\\πturta\\",
                "$~\\∞kaya\\",
                "$~\\1000000sarılmalar\\",
                "$~Bu aslında sonsuz sayıda sayı demektir.",
                "$~Ve sonsuz sayıda birim!",
                "$~Ve sonsuz sayıda sayı/birim çifti…",
                "$~Tam sayı, reel sayı, negatif, pozitif, kesirli, ondalık sayı, hatta sayı bile olmayabilirim.",
                "$~Ve beni Arapça \\123\\, Roman \\ⅩⅩⅩⅠⅩ\\, Japonca \\二十\\ ve daha fazlası dahil olmak üzere birçok farklı sayı sistemiyle yazabilirsiniz:",
                "$~\\1 + Ⅰ + 一\\",
                "$~Ayrıca beni 2'den 16'ya kadar olan taban sayılarını şu şekilde yazarak da yazabilirsiniz:",
                "$~\\2;11111111\\",
                "$~\\10;255\\",
                "$~\\16;FF\\",
                "$~Sayı olmayan bir şeyi yazdığınızda mümkün olan NaN adı verilen özel bir sayı vardır:",
                "$~\\2;22\\",
                "$~2 tabanında '2' rakamı yoktur, bu nedenle geçerli bir sayı değildir. Sayı olmayan metni sayıya dönüştürmeye çalışırsanız NaN da görünecektir",
                "$~\\'merhaba'→#\\"
            ],
            "name": ["$~#", "$~Sayı"],
            "function": {
                "add": {
                    "doc": [
                        "$~Kendime aynı @Unit'e sahip bir @Number ekliyorum ve aynı @Unit'e sahip yeni bir @Number oluşturuyorum.",
                        "$~Örneğin:",
                        "$~\\1 + 1\\",
                        "$~\\3kedi + 5kedi\\",
                        "$~Eğer birimler uyuşmazsa gösteriyi durduruyorum.",
                        "$~\\3kedi + 5köpek\\"
                    ],
                    "names": ["$~+", "$~eklemek"],
                    "inputs": [
                        {
                            "doc": "$~Eklenecek @Number.",
                            "names": "$~sayı"
                        }
                    ]
                },
                "subtract": {
                    "doc": [
                        "$~Bana verdiğin @Number'ı kendimden çıkararak aynı @Unit'in yeni bir @Number'ını oluşturuyorum.",
                        "$~Örneğin:",
                        "$~\\1 - 1\\",
                        "$~\\3kedi - 5kedi\\",
                        "$~Eğer birimler uyuşmazsa gösteriyi durduruyorum.",
                        "$~\\3kedi - 5köpek\\"
                    ],
                    "names": ["$~-", "$~çıkarmak"],
                    "inputs": [
                        {
                            "doc": "$~Benden çıkarılacak @Number.",
                            "names": "$~sayı"
                        }
                    ]
                },
                "multiply": {
                    "doc": [
                        "$~Kendimi verilen @Number ile çarpıyorum, @Unit'imin ve verilen sayının @Unit'inin bir çarpımını oluşturuyorum:",
                        "$~\\5 · 5\\",
                        "$~\\5m · 5m\\",
                        "$~\\5m · 1/sn\\"
                    ],
                    "names": ["$~·", "$~çarpmak"],
                    "inputs": [
                        {
                            "doc": "$~Çarpılacak sayı.",
                            "names": "$~sayı"
                        }
                    ]
                },
                "divide": {
                    "doc": [
                        "$~Kendimi verilen @Number'a bölüyorum, @Unit'imin ve verilen sayının @Unit'inin bir bölümünü oluşturuyorum:",
                        "$~\\5 ÷ 5\\",
                        "$~\\5m ÷ 5m\\",
                        "$~\\5d ÷ 5sn\\"
                    ],
                    "names": ["$~÷", "$~bölmek"],
                    "inputs": [
                        {
                            "doc": "$~Beni bölecek @Number.",
                            "names": "$~sayı"
                        }
                    ]
                },
                "remainder": {
                    "doc": [
                        "$~Kendimi verilen @Number'a bölüyorum, ancak kalanı veriyorum:",
                        "$~\\%10 2\\",
                        "$~\\10m % 2\\",
                        "$~\\10m/sn % 3\\"
                    ],
                    "names": ["$~%", "$~kalan"],
                    "inputs": [
                        {
                            "doc": "$~Beni bölecek @Number.",
                            "names": "$~sayı"
                        }
                    ]
                },
                "positive": {
                    "doc": [
                        "$~Negatifse pozitif, negatifse pozitif yapan yeni bir @Number oluşturuyorum.",
                        "$~\\-200.pozitif()\\"
                    ],
                    "names": ["$~olumlu"],
                    "inputs": []
                },
                "round": {
                    "doc": [
                        "$~Beni en yakın tam sayıya yuvarlayan yeni bir @Number oluşturuyorum.",
                        "$~\\9.4.yuvarla()\\",
                        "$~\\9.5.yuvarlak()\\",
                        "$~\\9.6.yuvarlak()\\"
                    ],
                    "names": ["$~yuvarlak"],
                    "inputs": []
                },
                "roundDown": {
                    "doc": [
                        "$~Benden küçük en küçük tam sayıya yuvarlayan yeni bir @Number oluşturuyorum.",
                        "$~\\10.5.roundDown()\\",
                        "$~\\10.1.roundDown()\\",
                        "$~\\10.01.roundDown()\\"
                    ],
                    "names": ["$~Aşağıyuvarla"],
                    "inputs": []
                },
                "roundUp": {
                    "doc": [
                        "$~Benden büyük olan en küçük tam sayıya yuvarlanan yeni bir @Number oluşturuyorum.",
                        "$~\\10.5.yuvarlama()\\",
                        "$~\\10.9.yuvarlama()\\",
                        "$~\\10.99.yuvarlama()\\"
                    ],
                    "names": ["$~hesabıyuvarlamak"],
                    "inputs": []
                },
                "power": {
                    "doc": [
                        "$~Kendimi verilen @Number'nın kuvvetine yükseltiyorum. Kesirli üsler sorun değil!",
                        "$~\\2 ^ 8\\",
                        "$~\\10 ^ -2\\",
                        "$~\\5 ^ -.5\\"
                    ],
                    "names": ["$~^", "$~güç"],
                    "inputs": [
                        {
                            "doc": "$~Beni yükseltecek üs.",
                            "names": "$~sayı"
                        }
                    ]
                },
                "root": {
                    "doc": [
                        "$~Verilen kökü kullanarak kendimin kökünü oluşturuyorum.",
                        "$~\\4 √ 2\\",
                        "$~\\1000 √ 3\\"
                    ],
                    "names": ["$~√", "$~kök"],
                    "inputs": [
                        {
                            "doc": "$~Hesaplanacak kök.",
                            "names": "$~sayı"
                        }
                    ]
                },
                "lessThan": {
                    "doc": [
                        "$~\\⊤\\ eğer verilen @Number'dan küçüksem:",
                        "$~\\1 < 2\\",
                        "$~\\2 < 1\\"
                    ],
                    "names": ["$~<", "$~dahaaz"],
                    "inputs": [
                        {
                            "doc": "$~Beni karşılaştıracağınız @Number.",
                            "names": "$~sayı"
                        }
                    ]
                },
                "lessOrEqual": {
                    "doc": [
                        "$~\\⊤\\ eğer I, verilen @Number'dan küçük veya ona eşitse:",
                        "$~\\1 ≤ 2\\",
                        "$~\\2 ≤ 1\\",
                        "$~\\2 ≤ 2\\"
                    ],
                    "names": ["$~≤", "$~dahaazeşit"],
                    "inputs": [
                        {
                            "doc": "$~Beni karşılaştıracağınız @Number.",
                            "names": "$~sayı"
                        }
                    ]
                },
                "greaterThan": {
                    "doc": [
                        "$~\\⊤\\ eğer I, verilen @Number'dan büyükse:",
                        "$~\\1 > 2\\",
                        "$~\\2 > 1\\"
                    ],
                    "names": ["$~>", "$~dahabüyük"],
                    "inputs": [
                        {
                            "doc": "$~Beni karşılaştıracağınız @Number.",
                            "names": "$~sayı"
                        }
                    ]
                },
                "greaterOrEqual": {
                    "doc": [
                        "$~\\⊤\\ eğer I, verilen @Number'dan büyük veya ona eşitse:",
                        "$~\\1 ≥ 2\\",
                        "$~\\2 ≥ 1\\",
                        "$~\\2 ≥ 2\\"
                    ],
                    "names": ["$~≥", "$~dahabüyükeşit"],
                    "inputs": [
                        {
                            "doc": "$~Beni karşılaştıracağınız @Number.",
                            "names": "$~sayı"
                        }
                    ]
                },
                "equal": {
                    "doc": [
                        "$~\\⊤\\ eğer verilen @Number'a eşitsem:",
                        "$~\\1 = 2\\",
                        "$~\\2 = 2\\"
                    ],
                    "names": ["$~=", "$~eşit"],
                    "inputs": [
                        {
                            "doc": "$~Beni karşılaştıracağınız @Number.",
                            "names": "$~sayı"
                        }
                    ]
                },
                "notequal": {
                    "doc": [
                        "$~\\⊤\\ eğer verilen @Number'a eşitsem:",
                        "$~\\1 ≠ 2\\",
                        "$~\\2 ≠ 2\\"
                    ],
                    "names": ["$~≠", "$~noteşit"],
                    "inputs": [
                        {
                            "doc": "$~Beni karşılaştıracağınız @Number.",
                            "names": "$~sayı"
                        }
                    ]
                },
                "cos": {
                    "doc": ["$~Benim kosinüsümü hesaplayın.", "$~\\π.cos()\\"],
                    "names": ["$~çünkü", "$~kosinüs"],
                    "inputs": []
                },
                "sin": {
                    "doc": ["$~Sinüsümü hesaplayın.", "$~\\π.cos()\\"],
                    "names": ["$~günah", "$~sinüs"],
                    "inputs": []
                },
                "min": {
                    "doc": [
                        "$~Ben ve diğerlerinin en küçük sayısını bulun.",
                        "$~\\1.dak(2 3 -1)\\"
                    ],
                    "names": "$~dakika",
                    "inputs": [
                        {
                            "doc": "$~Bana istediğin kadar sayı ver!",
                            "names": "$~sayılar"
                        }
                    ]
                },
                "max": {
                    "doc": [
                        "$~Ben ve diğerlerinin en büyük sayısını bulun.",
                        "$~\\1.maksimum(2 3 4)\\"
                    ],
                    "names": "$~maksimum",
                    "inputs": [
                        {
                            "doc": "$~Bana istediğin kadar sayı ver!",
                            "names": "$~sayılar"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$~Rakamlarımın Arapça @Text gösterimi.",
                "list": [
                    "$~Bir sayıyı \\1\\'den verilen herhangi bir sayıya kadar olan bir sayı listesine dönüştürüyorum. Örneğin:",
                    "$~\\10→[]\\"
                ],
                "s2m": "$~Saniyelerden dakikalara",
                "s2h": "$~Saniyeler saatlere",
                "s2day": "$~Saniyeler günlere",
                "s2wk": "$~Saniyelerden haftalara",
                "s2year": "$~Saniyelerden yıllara",
                "s2ms": "$~Saniyelerden milisaniyelere",
                "ms2s": "$~Milisaniyelerden saniyelere",
                "min2s": "$~Dakikalar saniyelere",
                "h2s": "$~Saatler saniyelere",
                "day2s": "$~Günlerden saniyelere",
                "wk2s": "$~Haftalar saniyelere",
                "yr2s": "$~Yıllar saniyelere",
                "m2pm": "$~Metreden pikometreye",
                "m2nm": "$~Metreden nanometreye",
                "m2micro": "$~Metrelerden mikrometrelere",
                "m2mm": "$~Metre milimetreye",
                "m2cm": "$~Metreden santimetreye",
                "m2dm": "$~Metreden desimetreye",
                "m2km": "$~Metreden kilometreye",
                "m2Mm": "$~Metrelerden megametrelere",
                "m2Gm": "$~Metrelerden gigametrelere",
                "m2Tm": "$~Metrelerden Terametrelere",
                "pm2m": "$~Pikometrelerden metrelere",
                "nm2m": "$~Nanometreden metreye",
                "micro2m": "$~Mikrometrelerden metrelere",
                "mm2m": "$~Milimetreden metreye",
                "cm2m": "$~Santimetreden metreye",
                "dm2m": "$~Desimetreden metreye",
                "km2m": "$~Kilometreler metrelere",
                "Mm2m": "$~Megametrelerden metrelere",
                "Gm2m": "$~Gigametrelerden metrelere",
                "Tm2m": "$~Terametrelerden metrelere",
                "km2mi": "$~Kilometreden mile",
                "mi2km": "$~Milden kilometreye",
                "cm2in": "$~Santimetreden inçlere",
                "in2cm": "$~İnçten santimetreye",
                "m2ft": "$~Metreden ayağa",
                "ft2m": "$~Ayaktan metreye",
                "g2mg": "$~Gramdan miligrama",
                "mg2g": "$~Miligramdan grama",
                "g2kg": "$~Gramdan kilograma",
                "kg2g": "$~Kilogramdan grama",
                "g2oz": "$~Gramdan onsa",
                "oz2g": "$~Ons'tan grama",
                "oz2lb": "$~Ons'tan pound'a",
                "lb2oz": "$~Pound'dan onsa"
            }
        },
        "List": {
            "doc": [
                "$~Ben bir değerler dizisiyim, her türden!",
                "$~Bana herhangi bir şey koyabilirsiniz: @Boolean, @Number, @Text, @None, hatta başka @List, @Set, @Map veya herhangi bir ifade. İşte basit bir tanesi:",
                "$~\\['elma' 'muz' 'mango']\\",
                "$~Beni özel kılan şey, her şeyi düzenli tutmam ve 1'den başlayarak içimdeki eşya sayısına kadar her şeyi numaralandırmamdır.",
                "$~Öğelerim 1'den başlayarak numaralandırılmıştır. @ListAccess ile depoladığım değerleri, numaralarını kullanarak alabilirsiniz:",
                "$~Örneğin, bu listedeki ikinci değer \\['banana']\\",
                "$~\\['elma' 'muz' 'mango'][2]\\",
                "$~İçimde her şey olabilir. Şu listeye bakın, @Text, @Number ve @Time ile!",
                "$~\\['elma' 10 + 10 Zaman()]\\",
                "$~Bana birçok şeyin bir listesini verdiğinizde, ortak bir türleri varsa bunları genelleştiririm. Ancak bazen tam olarak bu belirli şeyleri kastediyor olabilirsiniz. Eğer öyleyse, benden sonra bir ! koyun ve yalnızca bu değerlerin bir listesini temsil ettiğimden emin olurum.",
                "$~\\['elma' 'muz' 'mango']!\\",
                "$~İşte bu kadar. Ama @FunctionDefinition'ımla heyecan verici şeyler çağırabiliyorum!"
            ],
            "name": ["$~[]", "$~Liste"],
            "kind": "$~Tür",
            "out": "$~Sonuç",
            "outofbounds": "$~sınır dışı",
            "function": {
                "add": {
                    "doc": [
                        "$~Sonuna belirtilen öğeyi koyarak yeni bir @List oluşturuyorum.",
                        "$~\\['elma' 'muz' 'mango'].with('karpuz')\\"
                    ],
                    "names": ["$~ile", "$~eklemek"],
                    "inputs": [
                        {
                            "doc": "$~Ben sizin katmak istediğiniz değerim.",
                            "names": "$~öğe"
                        }
                    ]
                },
                "append": {
                    "doc": [
                        "$~Değerlerimle yeni bir @List oluşturuyorum, ardından verilen @List'in tüm değerlerini benden sonra oluşturuyorum.",
                        "$~\\['elma' 'muz' 'mango'].withList(['karpuz' 'karabuğday'])\\",
                        "$~@Spread'i kullanmak biraz daha kolay, şöyle:",
                        "$~\\['elma' 'muz' 'mango' :['karpuz' 'karabuğday']]\\"
                    ],
                    "names": ["$~Listeile", "$~eklemek"],
                    "inputs": [
                        {
                            "doc": "$~Eklenecek değerlerin listesi.",
                            "names": "$~liste"
                        }
                    ]
                },
                "replace": {
                    "doc": [
                        "$~Verilen indeksteki değeri verilen değerle değiştiren yeni bir liste oluşturuyorum.",
                        "$~\\['elma' 'muz' 'mango'].replace(1 'kivi')\\"
                    ],
                    "names": ["$~yerdeğiştirmek"],
                    "inputs": [
                        {
                            "doc": "$~Değiştirilecek değerin dizini",
                            "names": "$~dizin"
                        },
                        {
                            "doc": "$~Değiştirme değeri",
                            "names": "$~değer"
                        }
                    ]
                },
                "length": {
                    "doc": "$~İçimdeki @Number Sayısı.",
                    "names": ["$~📏", "$~uzunluk"],
                    "inputs": []
                },
                "random": {
                    "doc": [
                        "$~Öğelerimden rastgele seçilmiş biri veya boşsam @None.",
                        "$~\\['elma' 'muz' 'mango'].rastgele()\\"
                    ],
                    "names": "$~rastgele",
                    "inputs": []
                },
                "shuffled": {
                    "doc": [
                        "$~Son listedeki öğeleri rastgele sıralayarak yeni bir liste yapın.",
                        "$~\\['elma' 'muz' 'mango'].karıştırılmış()\\"
                    ],
                    "names": "$~karıştırılmış",
                    "inputs": []
                },
                "first": {
                    "doc": [
                        "$~İçimdeki ilk madde, ya da boşsam @None.",
                        "$~\\['elma' 'muz' 'mango'].first()\\"
                    ],
                    "names": "$~Birinci",
                    "inputs": []
                },
                "last": {
                    "doc": [
                        "$~İçimdeki son madde, ya da boşsam @None.",
                        "$~\\['elma' 'muz' 'mango'].first()\\"
                    ],
                    "names": "$~son",
                    "inputs": []
                },
                "has": {
                    "doc": [
                        "$~\\⊤\\ eğer içimde verilen öğeye eşit bir öğe varsa.",
                        "$~\\['elma' 'muz' 'mango'].has('muz')\\"
                    ],
                    "names": "$~sahipolmak",
                    "inputs": [
                        {
                            "doc": "$~Aranacak değer.",
                            "names": "$~öğe"
                        }
                    ]
                },
                "join": {
                    "doc": [
                        "$~Listemdeki öğeleri @Text ayırıcısı ile ayırarak @Text'te birleştiriyorum.",
                        "$~\\['elma' 'muz' 'mango'].join(', ')\\"
                    ],
                    "names": "$~katılmak",
                    "inputs": [
                        {
                            "doc": "$~Öğeleri ayırmak için kullanılacak metin, isteğe bağlı olarak boş bırakılabilir.",
                            "names": "$~ayırıcı"
                        }
                    ]
                },
                "subsequence": {
                    "doc": [
                        "$~Bu listenin içinde, sizin verdiğiniz indeksten başlayıp son maddeye kadar veya eğer bir madde veriyorsanız, belirli bir maddeye kadar bir liste alıyorum.",
                        "$~\\['elma' 'muz' 'mango'].subsequence(2)\\",
                        "$~\\['elma' 'muz' 'mango'].subsequence(1 2)\\",
                        "$~Ve bakın! Eğer sayıları sırasız olarak verirseniz, size tersini veririm",
                        "$~\\['elma' 'muz' 'mango'].subsequence(3 1)\\",
                        "$~Eğer bana endeks için 1'den küçük bir değer verirseniz, 1'i kastettiğinizi varsayacağım.",
                        "$~\\['elma' 'muz' 'mango'].subsequence(-1003243 2)\\",
                        "$~Ve eğer bana en büyük endeksten daha büyük bir şey verirseniz, sonu kastettiğinizi varsayacağım.",
                        "$~\\['elma' 'muz' 'mango'].subsequence(3 2304032432)\\"
                    ],
                    "names": "$~altdizi",
                    "inputs": [
                        {
                            "doc": "$~İstediğiniz alt dizinin ilk öğesinin indeksi.",
                            "names": "$~başlangıç"
                        },
                        {
                            "doc": "$~İstediğiniz alt dizinin son öğesinin isteğe bağlı dizini. Bir tane vermezseniz, listeniz listedeki son öğeyle sonlanacaktır.",
                            "names": "$~son"
                        }
                    ]
                },
                "sansFirst": {
                    "doc": [
                        "$~İlk maddemi yazmadan bir liste oluşturuyorum.",
                        "$~\\['elma' 'muz' 'mango'].sansFirst()\\"
                    ],
                    "names": ["$~İlkolmadan", "$~sansİlk"],
                    "inputs": []
                },
                "sansLast": {
                    "doc": [
                        "$~Son maddemi yazmadan bir liste oluşturuyorum.",
                        "$~\\['elma' 'muz' 'mango'].sansLast()\\"
                    ],
                    "names": ["$~Sonolmadan", "$~sansSon"],
                    "inputs": []
                },
                "sans": {
                    "doc": [
                        "$~Ben, ancak verilen değerin ilk oluşumları olmadan.",
                        "$~\\['elma' 'muz' 'mango' 'elma'].sans('elma')\\"
                    ],
                    "names": ["$~olmadan", "$~sans"],
                    "inputs": [
                        {
                            "doc": "$~İlk örneğinin kaldırılacağı değer.",
                            "names": "$~değer"
                        }
                    ]
                },
                "sansAll": {
                    "doc": [
                        "$~Ben, ancak verilen değerin tüm oluşumları olmadan.",
                        "$~\\['elma' 'muz' 'mango' 'elma'].sans('elma')\\"
                    ],
                    "names": ["$~hepsiolmadan", "$~sansAll"],
                    "inputs": [
                        {
                            "doc": "$~Listeden tüm örneklerin kaldırılacağı değer.",
                            "names": "$~değer"
                        }
                    ]
                },
                "reverse": {
                    "doc": [
                        "$~Ben, ama tam tersi!",
                        "$~\\['elma' 'muz' 'mango'].tersine()\\"
                    ],
                    "names": ["$~tersineçevrilmiş", "$~tersi"],
                    "inputs": []
                },
                "equals": {
                    "doc": [
                        "$~\\⊤\\ eğer ürünlerim ve siparişim verilen @List ile birebir aynıysa.",
                        "$~\\['elma' 'muz' 'mango'] = ['elma' 'mango' 'muz']\\"
                    ],
                    "names": ["$~=", "$~eşittir"],
                    "inputs": [
                        {
                            "doc": "$~Beni karşılaştıracağınız @List.",
                            "names": "$~liste"
                        }
                    ]
                },
                "notequals": {
                    "doc": [
                        "$~\\⊤\\ eğer ürünlerim ve siparişim verilen @List ile aynı değilse.",
                        "$~\\['elma' 'muz' 'mango'] ≠ ['elma' 'mango' 'muz']\\"
                    ],
                    "names": ["$~≠", "$~noteşit"],
                    "inputs": [
                        {
                            "doc": "$~Beni karşılaştıracağınız @List.",
                            "names": "$~liste"
                        }
                    ]
                },
                "translate": {
                    "doc": [
                        "$~Bana girdi olarak bir değer ve isteğe bağlı bir indeks alan ve bir değer üreten bir @FunctionDefinition verin, ben de bunu her bir öğem üzerinde değerlendirip değerlerimi yeni değerlere çevireyim.",
                        "$~Örneğin, @Number'dan oluşan bir liste olduğunuzu ve bunların hepsini iki katına çıkarmak istediğinizi düşünün:",
                        "$~\\[2 4 6 8].translate(ƒ(num•#) sayı · 2)\\"
                    ],
                    "names": "$~tercümeetmek",
                    "inputs": [
                        {
                            "doc": "$~Her bir öğeyi çevirecek olan @FunctionDefinition.",
                            "names": "$~tercüman"
                        }
                    ],
                    "translator": [
                        {
                            "doc": "$~Çevrilen öğe.",
                            "names": "$~öğe"
                        },
                        {
                            "doc": "$~Çevirisi yapılan maddenin dizini.",
                            "names": "$~dizin"
                        },
                        {
                            "doc": "$~Çevrilen liste.",
                            "names": "$~liste"
                        }
                    ]
                },
                "filter": {
                    "doc": [
                        "$~Bana girdi olarak bir değer ve isteğe bağlı bir indeks alan ve bir @Boolean üreten bir @FunctionDefinition verin, ben de yalnızca \\⊤\\ sonucunu veren öğeleri içeren yeni bir liste oluşturacağım.",
                        "$~Örneğin, @Number'dan oluşan bir liste olduğunuzu ve yalnızca pozitif olanları istediğinizi düşünün:",
                        "$~\\[2 -4 8 -16].filter(ƒ(num•#) num ≥ 0)\\"
                    ],
                    "names": "$~filtre",
                    "inputs": [
                        {
                            "doc": "$~Her bir öğeyi kontrol eden ve tutulması gerekiyorsa \\⊤\\ üreten bir @FunctionDefinition.",
                            "names": "$~denetleyici"
                        }
                    ],
                    "checker": [
                        {
                            "doc": "$~Kontrol edilen madde.",
                            "names": "$~öğe"
                        },
                        {
                            "doc": "$~Kontrol edilen öğenin dizini.",
                            "names": "$~dizin"
                        },
                        {
                            "doc": "$~Liste filtreleniyor.",
                            "names": "$~liste"
                        }
                    ]
                },
                "all": {
                    "doc": [
                        "$~Bana girdi olarak bir değer alan ve eğer bir koşulla eşleşirse @Boolean üreten bir @FunctionDefinition verin. Tüm öğeler koşulla eşleşirse \\⊤\\ oluşturacağım.",
                        "$~Örneğin, @Number'dan oluşan bir liste olduğunuzu ve her şeyin pozitif olup olmadığını bilmek istediğinizi düşünün:",
                        "$~\\[2 -4 8 -16].hepsi(ƒ(sayı•#) sayı ≥ 0)\\"
                    ],
                    "names": "$~Tümü",
                    "inputs": [
                        {
                            "doc": "$~Bir öğe koşulunuzu karşılıyorsa \\⊤\\ üreten @FunctionDefinition.",
                            "names": "$~denetleyici"
                        }
                    ],
                    "checker": [
                        {
                            "doc": "$~Kontrol edilen madde.",
                            "names": "$~öğe"
                        },
                        {
                            "doc": "$~Kontrol edilen öğenin dizini.",
                            "names": "$~dizin"
                        },
                        {
                            "doc": "$~Liste kontrol ediliyor.",
                            "names": "$~liste"
                        }
                    ]
                },
                "until": {
                    "doc": [
                        "$~Bana girdi olarak bir değer alan ve eğer bir koşulla eşleşirse @Boolean üreten bir @FunctionDefinition verin. Koşul karşılanmayana kadar tüm öğeleri içeren yeni bir @List oluşturacağım.",
                        "$~Örneğin, @Text hayvanlarından oluşan bir liste olduğunuzu ve \\'rat'\\ bulunana kadar her şeyi istediğinizi düşünün:",
                        "$~\\['kedi' 'köpek' 'sıçan' 'fare' 'midilli'].until(ƒ(hayvan•'') hayvan = 'sıçan')\\"
                    ],
                    "names": "$~değin",
                    "inputs": [
                        {
                            "doc": "$~Öğeleri eklemeyi bırakmam gerekirse \\⊤\\ üreten @FunctionDefinition.",
                            "names": "$~denetleyici"
                        }
                    ],
                    "checker": [
                        {
                            "doc": "$~Kontrol edilen madde.",
                            "names": "$~öğe"
                        },
                        {
                            "doc": "$~Kontrol edilen öğenin dizini.",
                            "names": "$~dizin"
                        },
                        {
                            "doc": "$~Liste ardışık hale getiriliyor.",
                            "names": "$~liste"
                        }
                    ]
                },
                "find": {
                    "doc": [
                        "$~Bana girdi olarak bir değer alan ve bu değer belirli kriterlerle eşleşirse @Boolean üreten bir @FunctionDefinition verin, eşleşen öğeyi değerlendireceğim.",
                        "$~Örneğin, \\'e'\\ ünlüsüne sahip ilk hayvanı bulmak istediğinizi varsayalım:",
                        "$~\\['kedi' 'köpek' 'sıçan' 'fare' 'midilli'].find(ƒ(hayvan•'') hayvan.has('e'))\\"
                    ],
                    "names": "$~bulmak",
                    "inputs": [
                        {
                            "doc": "$~Arama kriterlerinizle eşleşirse \\⊤\\ üreten @FunctionDefinition.",
                            "names": "$~denetleyici"
                        }
                    ],
                    "checker": [
                        {
                            "doc": "$~Kontrol edilen madde.",
                            "names": "$~öğe"
                        },
                        {
                            "doc": "$~Kontrol edilen öğenin dizini.",
                            "names": "$~dizin"
                        },
                        {
                            "doc": "$~Aranan liste.",
                            "names": "$~liste"
                        }
                    ]
                },
                "combine": {
                    "doc": [
                        "$~Bana en son kombinasyonu ve bir sonraki değeri alan ve bir sonraki kombinasyonu oluşturan bir @FunctionDefinition verin, ben de öğelerimin ilkinden sonuncusuna doğru hareket edeceğim, ardışık kombinasyonlar oluşturacağım ve @FunctionDefinition'ınızın değerlendirdiği son kombinasyonu değerlendireceğim.",
                        "$~Bu, bendeki tüm öğeleri tek bir değerde birleştirmek için gerçekten yararlıdır. Örneğin, bir sayı listesi eklemek istediğinizi düşünün:",
                        "$~\\[3 9 2 8 1 4].combine(0 ƒ(toplam•# sayı•#) toplam + sayı)\\"
                    ],
                    "names": ["$~birleştirilmiş", "$~birleştirmek"],
                    "inputs": [
                        {
                            "doc": "$~Başlangıç kombinasyonu.",
                            "names": "$~ilk"
                        },
                        {
                            "doc": "$~Son kombinasyonu ve bir sonraki değeri alıp bir sonraki kombinasyonu üreten @FunctionDefinition.",
                            "names": "$~birleştirici"
                        }
                    ],
                    "combiner": [
                        {
                            "doc": "$~Mevcut kombinasyon",
                            "names": "$~kombinasyon"
                        },
                        {
                            "doc": "$~Birleştirilecek bir sonraki madde.",
                            "names": "$~Sonraki"
                        },
                        {
                            "doc": "$~Sonraki öğenin dizini",
                            "names": "$~dizin"
                        },
                        {
                            "doc": "$~Liste birleştiriliyor.",
                            "names": "$~liste"
                        }
                    ]
                },
                "sorted": {
                    "doc": [
                        "$~Bir liste alabilir ve değerleri sıralanmış yeni bir liste oluşturabilirim. Şöyle:",
                        "$~\\[1 5 8 0 2].sıralanmış()\\",
                        "$~@Text değerleri için de bunu yapabilirim",
                        "$~\\['portakal' 'kivi' 'muz' 'elma'].sorted()\\",
                        "$~Ve eğer @Number veya @Text olmayan bir değerler listeniz varsa, bana her bir öğeyi @Number'a dönüştüren bir @FunctionDefinition verebilirsiniz, böylece sıralayabilirim. Örneğin, burada farklı uzunluklarda listelerden oluşan bir listemiz var; bana her bir listeyi kendi uzunluğuna dönüştüren bir fonksiyon verirseniz, uzunluklarına göre sıralayabilirim.",
                        "$~\\[[1] [2 3] [4 8 12] [8]].sıralanmış(ƒ(liste) liste.uzunluk())\\"
                    ],
                    "names": "$~sıralanmış",
                    "inputs": [
                        {
                            "doc": "$~Bir liste değerini sıralamak için kullanılacak isteğe bağlı @FunctionDefinition. Değeri, listeyi sıralamak için kullanılabilecek bir @Number'a dönüştürmelidir.",
                            "names": "$~sıralayıcı"
                        }
                    ],
                    "sequencer": [
                        {
                            "doc": "$~@Number'a dönüştürülecek değer.",
                            "names": "$~değer"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$~Listenin @Text gösterimine.",
                "set": "$~@Set'e, yinelenenleri kaldırmak için yararlıdır."
            }
        },
        "Set": {
            "doc": [
                "$~Ben bir değerler kümesiyim! Bu, hiçbir değer içermemek de dahil olmak üzere herhangi bir sayıda değer içerebileceğim anlamına gelir. Beni şu şekilde yapabilirsiniz:",
                "$~\\{1 2 3}\\",
                "$~Hiçbir tekrarı olmayan bir koleksiyon tutmak istiyorsanız gerçekten iyiyim.",
                "$~Bu, eğer bana halihazırda sahip olduğum değerleri verirseniz, ekstraları görmezden geleceğim anlamına geliyor.",
                "$~Örneğin bu kümenin çok sayıda kopyası var:",
                "$~\\{1 1 2 2 3 3}\\",
                "$~Ben bunu sadece \\{1 2 3}\\ olarak değerlendiriyorum.",
                "$~Eğer bende bir değer olup olmadığını görmek istiyorsanız @SetOrMapAccess yardımcı olabilir:",
                "$~\\{'kavanoz' 'şişe' 'bardak'}{'fincan'}\\",
                "$~Genellikle, bana ortak bir türde bir sürü değer verirseniz, bunların o türde bir liste olduğunu varsayarım. Bu kümenin \\{''}\\ olması gibi, çünkü hepsi @Text.",
                "$~\\{'merhaba' 'merhaba' 'merhaba'}\\",
                "$~Ama ben sadece /sadece/ bu değerlerden oluşan bir kümeyim demek isteyebilirsiniz, böylece izin verilmeyen bir değer kullanmaya çalıştığınızda size söyleyebilirim. Eğer öyleyse, sadece me'nin sonuna bir ! ekleyin.",
                "$~\\{'hey' 'merhaba' 'merhaba'}!{'yo'}\\",
                "$~Benimle yapmak istediğin başka bir şey var mı? Sahip olduğum tüm harika @FunctionDefinition'a bir göz at!"
            ],
            "name": ["$~{}", "$~Ayarlamak"],
            "kind": "$~Tür",
            "out": "$~Sonuç",
            "function": {
                "size": {
                    "doc": "$~İçimde kaç tane değer olduğunu sana söyleyeyim.",
                    "names": "$~boyut",
                    "inputs": []
                },
                "equals": {
                    "doc": [
                        "$~Verilen @Set ve ben aynı değerlere sahipsek \\⊤\\ olurum:",
                        "$~\\{1 2 3} = {2 3 4}\\"
                    ],
                    "names": ["$~=", "$~eşittir"],
                    "inputs": [
                        {
                            "doc": "$~@Set'i karşılaştırın.",
                            "names": "$~ayarlamak"
                        }
                    ]
                },
                "notequals": {
                    "doc": [
                        "$~Verilen @Set ve I tam olarak aynı değerlere sahip değilse \\⊤\\ olurum:",
                        "$~\\{1 2 3} ≠ {2 3 4}\\"
                    ],
                    "names": ["$~≠", "$~noteşit"],
                    "inputs": [
                        {
                            "doc": "$~@Set'i karşılaştırın.",
                            "names": "$~ayarlamak"
                        }
                    ]
                },
                "add": {
                    "doc": [
                        "$~Bana ekleyeceğim bir öğe verin, öğelerim ve verilen öğeyle yeni bir @Set oluşturacağım.",
                        "$~\\{1 2 3} + 4\\"
                    ],
                    "names": ["$~ile", "$~eklemek", "$~+"],
                    "inputs": [
                        {
                            "doc": "$~Eklenecek öğe",
                            "names": "$~öğe"
                        }
                    ]
                },
                "remove": {
                    "doc": [
                        "$~Kaldırılacak bir öğe verin, öğe olmadan yeni bir @Set oluşturacağım.",
                        "$~\\{1 2 3} - 2\\",
                        "$~Eğer elimde yoksa, kendi kendime değerlendiririm."
                    ],
                    "names": ["$~kaldırmak", "$~-"],
                    "inputs": [
                        {
                            "doc": "$~Kaldırılacak öğe.",
                            "names": "$~öğe"
                        }
                    ]
                },
                "union": {
                    "doc": [
                        "$~Bana @Set'i verin, ben de benim eşyalarımı ve setin eşyalarını içeren yeni bir @Set oluşturayım.",
                        "$~\\{1 2 3} ∪ {3 4 5}\\"
                    ],
                    "names": ["$~birlik", "$~∪"],
                    "inputs": [
                        {
                            "doc": "$~@Set benimle birleşecek.",
                            "names": "$~ayarlamak"
                        }
                    ]
                },
                "intersection": {
                    "doc": [
                        "$~Bana @Set'i verin, sadece ortak noktalarımız olan öğelerden oluşan yeni bir @Set oluşturayım.",
                        "$~\\{1 2 3} ∩ {3 4 5}\\"
                    ],
                    "names": ["$~kavşak", "$~∩"],
                    "inputs": [
                        {
                            "doc": "$~Benimle karşılaştırılacak set.",
                            "names": "$~ayarlamak"
                        }
                    ]
                },
                "difference": {
                    "doc": [
                        "$~Bana @Set'i verin, sadece ortak öğelerimizin bulunduğu yeni bir @Set oluşturayım.",
                        "$~\\{1 2 3}.fark({3 4 5})\\"
                    ],
                    "names": "$~fark",
                    "inputs": [
                        {
                            "doc": "$~Benden çıkarılması gereken eşyaların bulunduğu set.",
                            "names": "$~ayarlamak"
                        }
                    ]
                },
                "filter": {
                    "doc": [
                        "$~Bana bir öğeyi alıp tutulması gerekiyorsa \\⊤\\ üreten bir @FunctionDefinition verin, ben de yalnızca kriterlerinizi karşılayan öğeleri içeren bir @Set oluşturayım.",
                        "$~Mesela bendeki tek sayıları bulalım:",
                        "$~\\{1 2 3 4 5 6 7 8 9}.filter(ƒ(num•#) (num % 2) = 1)\\"
                    ],
                    "names": "$~filtre",
                    "inputs": [
                        {
                            "doc": "$~Bir öğenin tutulup tutulmayacağını kontrol eden @FunctionDefinition.",
                            "names": "$~denetleyici"
                        }
                    ],
                    "checker": [
                        {
                            "doc": "$~Kontrol edilen madde.",
                            "names": "$~değer"
                        },
                        {
                            "doc": "$~Filtrelenen küme",
                            "names": "$~ayarlamak"
                        }
                    ]
                },
                "translate": {
                    "doc": [
                        "$~Bana bir öğeyi alıp ona dayalı yeni bir öğe üreten @FunctionDefinition verin, sonra bendeki tüm öğeleri yeni bir @Set'e çevireceğim (tekrarlananları kaldırarak).",
                        "$~Örneğin, tüm @Number'larımı @Text'e dönüştürelim:",
                        "$~\\{1 2 3 4 5 6 7 8 9}.translate(ƒ(num•#) num→'')\\"
                    ],
                    "names": "$~tercümeetmek",
                    "inputs": [
                        {
                            "doc": "$~@FunctionDefinition, öğelerimden birini istediğiniz yeni öğeye dönüştüren fonksiyondur.",
                            "names": "$~ayarlamak"
                        }
                    ],
                    "translator": [
                        {
                            "doc": "$~Çevrilen öğe.",
                            "names": "$~değer"
                        },
                        {
                            "doc": "$~Çevrilen set",
                            "names": "$~ayarlamak"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$~@Set'in @Text gösterimi",
                "list": "$~Kümedeki öğelerin @List gösterimi."
            }
        },
        "Map": {
            "doc": [
                "$~Değerleri bir araya getiriyorum, *anahtarları* *değerlere* eşliyorum. Örneğin:",
                "$~\\{'amy': 6 puan 'tony': 3 puan 'shiela': 8 puan}\\",
                "$~Anahtarlarım herhangi bir değer olabilir ve değerlerim herhangi bir değer olabilir.",
                "$~Bazıları benim bir dizin veya sözlük gibi olduğumu düşünüyor; siz bana bir şey veriyorsunuz, ben de size bunun neye göre haritalandığını veriyorum.",
                "$~Bir şeyin neye eşlendiğini kontrol etmek isterseniz, @SetOrMapAccess'e bir anahtar verebilirsiniz ve onlar size şu değeri verecektir:",
                "$~\\{'amy': 6puan 'tony':3puan 'shiela': 8puan}{'amy'}\\",
                "$~Eğer eşleşen bir anahtar yoksa sana @None vereceğim.",
                "$~\\{'amy': 6 puan 'tony': 3 puan 'shiela': 8 puan}{'jen'}\\",
                "$~Aşağıdaki gibi boş bir harita da yapabilirsiniz:",
                "$~\\{:}\\",
                "$~Genellikle, bana verdiğiniz anahtar ve değerlerin her türünü görüp hepsini temsil edecek bir tür bulurum. Bu, sayılardan sayılara bir harita gibidir:",
                "$~\\{1:1 2:2 3:3}\\",
                "$~Ama diyelim ki sadece bu değerlerin olduğundan emin olmak istediniz; sadece me'nin sonuna ! ekleyin, genelleme yapmayacağım. Bu, amaçlamadığınız bir değeri elde etmeye çalışıp çalışmadığınızı anlamanıza yardımcı olacaktır.",
                "$~\\{1:1 2:2 3:3}!{4}\\",
                "$~Eşleşmelerimle ne kadar harika şeyler başarabileceğimi biliyorum."
            ],
            "name": ["$~{:}", "$~Harita"],
            "key": "$~Anahtar",
            "value": "$~Değer",
            "result": "$~Sonuç",
            "function": {
                "size": {
                    "doc": "$~İçimde kaç tane değer olduğunu sana söyleyeyim.",
                    "names": "$~boyut",
                    "inputs": []
                },
                "equals": {
                    "doc": [
                        "$~\\{⊤}\\ eğer eşleştirmelerim verilen @Map'inkilerle aynıysa.",
                        "$~\\{1:1 2:2} = {1:1 2:3}\\"
                    ],
                    "names": ["$~=", "$~eşittir"],
                    "inputs": [
                        {
                            "doc": "$~Beni karşılaştıracağınız @Map.",
                            "names": "$~değer"
                        }
                    ]
                },
                "notequals": {
                    "doc": [
                        "$~\\{⊤}\\ eğer eşleştirmelerim verilen @Map aynı değilse.",
                        "$~\\{1:1 2:2} ≠ {1:1 2:3}\\"
                    ],
                    "names": ["$~≠", "$~noteşit"],
                    "inputs": [
                        {
                            "doc": "$~Beni karşılaştıracağınız @Map.",
                            "names": "$~değer"
                        }
                    ]
                },
                "set": {
                    "doc": [
                        "$~Aynı eşleştirmelerin hepsiyle yeni bir @Map oluşturacağım, ancak bana verdiğiniz yeni eşleştirmeyle. Anahtar zaten bendeyse, onu yeni değere eşleştireceğim.",
                        "$~\\{'amy': 6puan 'tony':3puan}.pair('jen' 0puan)\\"
                    ],
                    "names": "$~çift",
                    "inputs": [
                        {
                            "doc": "$~Bir değerle eşleştirilecek anahtar.",
                            "names": "$~anahtar"
                        },
                        {
                            "doc": "$~Anahtarla eşleştirilecek değer",
                            "names": "$~değer"
                        }
                    ]
                },
                "unset": {
                    "doc": [
                        "$~Bana verdiğiniz anahtar olmadan yeni bir @Map oluşturacağım, eşleşmesini kaldıracağım.",
                        "$~\\{'amy': 6puan 'tony':3puan}.unpair('amy')\\"
                    ],
                    "names": "$~eşleştirmeyikaldırmak",
                    "inputs": [
                        {
                            "doc": "$~Unutmanın anahtarı.",
                            "names": "$~anahtar"
                        }
                    ]
                },
                "remove": {
                    "doc": [
                        "$~Değeri olan herhangi bir anahtar içermeyen yeni bir @Map oluşturacağım.",
                        "$~\\{'amy': 0puan 'jen': 0puan 'tony':3puan}.remove(0puan)\\"
                    ],
                    "names": "$~kaldırmak",
                    "inputs": [
                        {
                            "doc": "$~Benden kaldırılacak değer ve eşleştirildiği tüm anahtarlar.",
                            "names": "$~değer"
                        }
                    ]
                },
                "filter": {
                    "doc": [
                        "$~Bana bir anahtar ve değer alan ve bir eşleştirmenin tutulması gerekiyorsa \\⊤\\ olarak değerlendiren bir @FunctionDefinition verin. Kriterlerinizi karşılayan yeni bir @Map oluşturacağım.",
                        "$~Örneğin, burada Amy olan veya sıfırdan fazla puana sahip olan tüm eşleşmeleri tutmak istiyoruz.",
                        "$~\\{'amy': 0puan 'jen': 0puan 'tony':3puan}.filter(ƒ(anahtar•'' değer•#puan) (anahtar = 'amy') | (değer > 0puan))\\"
                    ],
                    "names": "$~filtre",
                    "inputs": [
                        {
                            "doc": "$~Bir eşleştirmenin tutulup tutulmayacağına karar veren @FunctionDefinition.",
                            "names": "$~denetleyici"
                        }
                    ],
                    "checker": [
                        {
                            "doc": "$~Anahtar kontrol ediliyor.",
                            "names": "$~anahtar"
                        },
                        {
                            "doc": "$~Kontrol edilen değer.",
                            "names": "$~değer"
                        },
                        {
                            "doc": "$~Harita filtreleniyor.",
                            "names": "$~harita"
                        }
                    ]
                },
                "translate": {
                    "doc": [
                        "$~Bana bir anahtar ve değer alan ve değeri yeni bir değere değerlendiren bir @FunctionDefinition verin. Aynı anahtarlara sahip ancak güncellenmiş değerlere sahip yeni bir @Map oluşturacağım.",
                        "$~Mesela herkese çok iyi davrandıkları için bir puan verelim.",
                        "$~\\{'amy': 5 puan 'jen': 3 puan 'tony': 0 puan}.translate(ƒ(anahtar•'' değer•#puan) değer + 1 puan)\\"
                    ],
                    "names": "$~tercümeetmek",
                    "inputs": [
                        {
                            "doc": "$~Her değeri çeviren @FunctionDefinition.",
                            "names": "$~tercüman"
                        }
                    ],
                    "translator": [
                        {
                            "doc": "$~Çevrilecek değerin anahtarı.",
                            "names": "$~anahtar"
                        },
                        {
                            "doc": "$~Çevrilen değer.",
                            "names": "$~değer"
                        },
                        {
                            "doc": "$~Çevirisi yapılan harita.",
                            "names": "$~harita"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$~Eşlemenin @Text gösterimi.",
                "set": "$~@Map'in anahtarları",
                "list": "$~@Map'teki değerlerin listesi"
            }
        },
        "Table": {
            "doc": [
                "$~Ben bir tablo satırları kümesiyim! Aynı yapıya sahip büyük değer koleksiyonlarını takip etmenize yardımcı olabilirim.",
                "$~Örneğin, bir grup kayayı takip etmek istediğinizi düşünün:",
                "$~\\⎡isim•'' renk•''⎦\n⎡'obsidyen' 'siyah'⎦\n⎡'ponza' 'gri'⎦\n⎡'sitrin' 'sarı'⎦\\",
                "$~@Bind buna isim vermenize yardımcı olabilir! Ve sonra yeni bir satır @Insert ile revize edilmiş bir tablo oluşturmak gibi şeyler yapabilirsiniz:",
                "$~\\kayalar: ⎡isim•'' renk•''⎦\n⎡'obsidyen' 'siyah'⎦\n⎡'ponza' 'gri'⎦\n⎡'sitrin' 'sarı'⎦\nkayalar ⎡+ 'kuvars' 'beyaz'⎦\\",
                "$~Veya eşleşen satırları bulmak istiyorsanız, bir koşulla eşleşen satırları @Select ile seçebilirsiniz:",
                "$~\\rocks: ⎡name•'' color•''⎦\n⎡'obsidyen' 'siyah'⎦\n⎡'ponza' 'gri'⎦\n⎡'sitrin' 'sarı'⎦\nrocks ⎡?⎦ color = 'gri'\\",
                "$~Ya da bir koşulla eşleşen satırlar için farklı değerler içeren revize edilmiş bir tablo oluşturmak isteyebilirsiniz:",
                "$~\\rocks: ⎡name•'' color•''⎦\n⎡'obsidyen' 'siyah'⎦\n⎡'ponza' 'gri'⎦\n⎡'sitrin' 'sarı'⎦\nrocks ⎡: color: 'black' ⎦ name = 'ponza'\\",
                "$~Ya da bir koşula uyan bir satırı silmek isteyebilirsiniz:",
                "$~\\rocks: ⎡isim•'' renk•''⎦\n⎡'obsidyen' 'siyah'⎦\n⎡'ponza' 'gri'⎦\n⎡'sitrin' 'sarı'⎦\nrocks ⎡- isim.has('i')\\",
                "$~Ve eğer benden belirli değerler almak isterseniz, herhangi bir tabloyu bir listeye dönüştürebilir ve @PropertyReference ile tek tek satırlara erişebilirsiniz.",
                "$~\\kayalar: ⎡isim•'' renk•''⎦\n⎡'obsidiyen' 'siyah'⎦\n⎡'ponza' 'gri'⎦\n⎡'sitrin' 'sarı'⎦\n(kayalar → [])[1].isim\\"
            ],
            "name": ["$~⎡⎦", "$~Masa"],
            "row": "$~Sıra",
            "function": {
                "equals": {
                    "doc": "$~Başka bir @Table ile aynı hücrelere sahip olup olmadığımı kontrol ediyorum.",
                    "names": ["$~=", "$~eşittir"],
                    "inputs": [
                        {
                            "doc": "$~Kontrol edilecek diğer tablo.",
                            "names": "$~değer"
                        }
                    ]
                },
                "notequal": {
                    "doc": "$~Hücrelerimden herhangi birinin başka bir @Table'dan farklı veya farklı sırada olup olmadığını kontrol ediyorum.",
                    "names": ["$~≠", "$~eşitdeğil"],
                    "inputs": [
                        {
                            "doc": "$~Kontrol edilecek diğer tablo.",
                            "names": "$~değer"
                        }
                    ]
                }
            },
            "conversion": {
                "list": "$~@Table'ı her satırı @Structure olan ve sütun adları da özellik olan bir satır listesine dönüştürüyorum.",
                "text": "$~@Table'ı metne dönüştürüyorum."
            }
        },
        "Structure": {
            "doc": "$~@StructureDefinition'a bakın.",
            "name": ["$~Yapı"],
            "function": {
                "equals": {
                    "doc": "$~Benim property'lerimin başka bir yapının property'leri ile aynı isim ve değerlere sahip olup olmadığını kontrol ederim.",
                    "names": ["$~=", "$~eşittir"],
                    "inputs": [
                        {
                            "doc": "$~Kontrol edilecek diğer yapı.",
                            "names": "$~değer"
                        }
                    ]
                },
                "notequal": {
                    "doc": "$~Benim özelliklerimin başka bir yapının isminden ve değerlerinden herhangi bir şekilde farklı olup olmadığını kontrol ederim.",
                    "names": ["$~≠", "$~eşitdeğil"],
                    "inputs": [
                        {
                            "doc": "$~Kontrol edilecek diğer yapı.",
                            "names": "$~değer"
                        }
                    ]
                }
            },
            "conversion": {
                "text": "$~Kendimi @Text'e dönüştürüyorum."
            }
        }
    },
    "input": {
        "Random": {
            "doc": [
                "$~17!",
                "$~/@FunctionDefinition burada, bunu açıklayacağım./",
                "$~Yani @Random, rastgele sayılar üreten ilginç bir fonksiyondur. İlginçtir çünkü her değerlendirdiğinizde farklı bir şey yaratır.",
                "$~Bu, öngörülemezlikle gelen harika bir kaos yaratıyor.",
                "$~Varsayılan olarak, \\0\\ ile \\1\\ arasında @Number değerleri verir:",
                "$~\\Rastgele()\\",
                "$~Ama ona bir değer verebilirsiniz ve \\0\\ ile değer arasında değerler üretecektir:",
                "$~\\Rastgele(10)\\",
                "$~Ve eğer ona iki değer verirseniz, bu iki değer arasında ve bu iki değeri de içeren değerler üretecektir:",
                "$~\\Rastgele(-10 10)\\",
                "$~Eğer aralıklarınızın birimleri varsa, bunlar korunacaktır (eğer uyuşmuyorlarsa, minimumun birimi kullanılacaktır):",
                "$~\\Rastgele(-10m 10m)\\",
                "$~Ve eğer ondalık noktadan sonra anlamlı basamak sayıları içeren belirli sayılar verirseniz, bu hassasiyet korunacaktır.",
                "$~\\Rastgele(1.00 10.00)\\"
            ],
            "names": ["$~🎲", "$~Rastgele"],
            "inputs": [
                {
                    "names": "$~dakika",
                    "doc": "$~Oluşturulacak minimum değer veya 0'dan büyükse maksimum değer. @None sağlanırsa minimum değer \\0\\ olur."
                },
                {
                    "names": "$~maksimum",
                    "doc": "$~Oluşturulacak maksimum değer veya sağlanan minimumdan küçükse, minimum. @None sağlanırsa, maksimum \\1\\ olur."
                }
            ]
        },
        "Choice": {
            "doc": [
                "$~/tık tık tık!/",
                "$~/@FunctionDefinition burada, bunu açıklayacağım./",
                "$~@Choice'u izleyicileriniz tarafından seçilen bir @Phrase/name akışı gibi düşünün. Birisi bir @Phrase'e tıklarsa, dokunursa veya klavyeden /Enter/ tuşuna basarak bir isim seçerse -- @Choice isimle eşleşen yeni bir değere sahip olacaktır.",
                "$~Bu yüzden bunu kullanmanın en iyi yolu, @Phrase adlı seçilebilir ifadelerle bir performans oluşturmak ve ardından bu isim seçildiğinde ne yapılacağına karar vermek için @Reaction kullanmaktır.",
                "$~En basit örneği şöyledir:",
                "$~\\Group(\nStack() \n[\nCümle('bir' seçilebilir:⊤ ad:'1') \nCümle('iki' seçilebilir:⊤ ad:'2') \nCümle(Seçim())\n]\n)\\",
                "$~Bunu düzenleyiciye kopyalayın ve ardından iki @Phrase'den birini seçin. Üçüncü @Phrase'in seçilen ismi gösterdiğini göreceksiniz."
            ],
            "names": ["$~🔘", "$~Seçenek"]
        },
        "Button": {
            "doc": [
                "$~/tık tık tık/",
                "$~/@FunctionDefinition burada, bunu açıklayacağım./",
                "$~@Button, bir fareyi veya izleme dörtgenini dinlemenin harika bir yoludur. Elbette, bir fare veya izleme dörtgeni, bir kitleyi dinlemek için ideal bir seçim değildir, çünkü herkes bir tane kullanamaz. Daha erişilebilir seçenek @Choice'dur.",
                "$~Ama eğer /gerçekten/ bir fare düğmesini dinlemeniz gerekiyorsa, bunu yapmanın yolu budur. Birincil düğmenin yukarı \\⊥\\ veya aşağı \\⊤\\ olduğunu temsil eden bir @Boolean akışı sağlayacaktır.",
                "$~İşte basit bir örnek:",
                "$~\\Cümle(Düğme() → '')\\",
                "$~Bu sadece akışın metin olarak değeri olan bir @Phrase oluşturur. Bunu düzenleyiciye kopyalayıp tıklarsanız, \\⊥\\ ve \\⊤\\ arasında ileri geri geçiş yaptığını görürsünüz."
            ],
            "names": ["$~🖱️", "$~Düğme"],
            "down": {
                "names": "$~aşağı",
                "doc": "$~@None ise, akış hem yukarı hem de aşağı değerleri sağlayacaktır. @Boolean ise, yalnızca verilen @Boolean değerini sağlayacaktır."
            }
        },
        "Pointer": {
            "doc": [
                "$~/neeeeeeeeeeeee/",
                "$~/@FunctionDefinition burada, bunu açıklayacağım./",
                "$~Fareler, izleme yüzeyleri ve dokunmatik ekranlar hakkında bir şey biliyor musunuz? Bazen bir izleyicinin nereye işaret ettiğini bilmek istersiniz. @Pointer bunu sağlar.",
                "$~Elbette bu erişilebilir bir seçenek değil: herkes göremeyebilir veya kolayca işaret edemeyebilir, bu yüzden bu yayını kullanarak birinin katılımını engellemediğinizden gerçekten emin olun.",
                "$~Hiç kimsenin dışlanmadığından eminseniz, @Pointer kullanmak sadece bir akış oluşturmak kadar basittir:",
                "$~\\İşaretçi()\\",
                "$~Sağladığı @Place, işaretçinin @Stage üzerinde işaret ettiği yere karşılık gelecektir."
            ],
            "names": ["$~👆🏻", "$~İşaretçi"]
        },
        "Key": {
            "doc": [
                "$~/tıklamalı/",
                "$~/@FunctionDefinition burada, bunu açıklayacağım./",
                "$~Klavyelerde bir sürü tuş var değil mi? @Key size birinin hangisine bastığını ve bıraktığını söyleyecektir.",
                "$~Bunu deneyin",
                "$~\\Anahtar()\\",
                "$~Bir tuşa bastığınızda, bunun @Stage'de nasıl göründüğünü görüyor musunuz? Her tuşa basıldığında, akışa basılan tuşu tanımlayan yeni bir @Text eklenir.",
                "$~Bir karakteri temsil eden bir anahtar için değer @Text olarak karakter olacaktır.",
                "$~/Escape/ tuşu gibi özel anahtarlar için, anahtarı tanımlayan @Text olacaktır. Bu, <önceden tanımlanmış bir ad@https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values> kullanılarak yapılır. Maalesef bu değer yalnızca İngilizce olarak mevcuttur.",
                "$~Yalnızca belirli bir anahtar hakkında bilgi edinmek istiyorsanız, bunu sağlayabilirsiniz:",
                "$~\\Anahtar('a')\\",
                "$~Ve eğer sadece @Key'in ne zaman basıldığını değil de ne zaman bırakıldığını bilmek istiyorsanız, @Boolean sağlayabilirsiniz:",
                "$~\\Anahtar('a' ⊥)\\"
            ],
            "names": ["$~⌨️", "$~Anahtar"],
            "key": {
                "names": "$~anahtar",
                "doc": "$~@None ise, tüm anahtarlar sağlanır. Belirli bir @Text ise, yalnızca o anahtar sağlanır."
            },
            "down": {
                "names": "$~aşağı",
                "doc": "$~EĞER @None, o zaman tuş aşağı girdileri üretir. Eğer \\⊤\\ ise, o zaman sadece aşağı girdileri sağlanır ve eğer \\⊥\\ ise, o zaman sadece serbest bırakma girdileri sağlanır."
            }
        },
        "Time": {
            "doc": [
                "$~/tik tik tik/",
                "$~@FunctionDefinition burada, @Time konuşmadığı için açıklayacağım.",
                "$~Zaman belli bir frekansta akan bir akıştır.",
                "$~Her seferinde @Program yeni zaman değeriyle yeniden değerlendirme yapar.",
                "$~Örneğin:",
                "$~\\Zaman()\\",
                "$~Eğer @Time/frequency'e zaman verirseniz, o oranda tik atacaktır. Örneğin:",
                "$~\\Zaman(1000ms)\\",
                "$~Ancak, @Program'ın bir sonraki tik'e yanıt verebilmesi için değerlendirme yapması gerektiğinden, bunun ne kadar küçük olabileceği konusunda sınırlamalar vardır.",
                "$~En küçüğü muhtemelen \\20ms\\ civarındadır."
            ],
            "names": ["$~🕕", "$~Zaman"],
            "frequency": {
                "names": ["$~sıklık"],
                "doc": "$~Bu, zamanın akması gereken frekanstır. Varsayılanı \\33ms\\'dir, bu da saniyede yaklaşık 30 kezdir."
            },
            "relative": {
                "names": ["$~akraba"],
                "doc": "$~Eğer \\⊤\\ ise, zaman 0'dan başlar, program ilk değerlendirildiğinde. Aksi takdirde, bugünün başlangıcından bu yana geçen milisaniye sayısından başlar, UTC (Eşgüdümlü Evrensel Zaman), böylece günün saatini takip edebilirsiniz."
            }
        },
        "Volume": {
            "doc": [
                "$~/vııııııııııııııı/",
                "$~@FunctionDefinition burada, mikrofonu ben alıyorum.",
                "$~Bu akış, seçtiğiniz frekansta örneklenen 0 ile 1 arasındaki bir dizi sestir. Varsayılan olarak, frekans \\30hz\\ veya saniyede 30 kezdir, ancak bunu daha az sıklıkta değiştirebilirsiniz.",
                "$~\\Hacim()\\",
                "$~Seyircilerin ne kadar gürültülü olduğunu duymak için harika!"
            ],
            "names": ["$~🎤", "$~Hacim"],
            "frequency": {
                "names": ["$~sıklık"],
                "doc": "$~Örneklemeler arasındaki zaman."
            }
        },
        "Pitch": {
            "doc": [
                "$~/hımmmmm/",
                "$~@FunctionDefinition burada, hadi pitch'ten konuşalım!",
                "$~Bu akış, seçtiğiniz frekansta örneklenen sesin perdesini belirten hertz cinsinden bir dizi frekanstır. İnsan sesinin 20Hz ile 5000Hz arasında olduğunu bulduk, bu yüzden bu aralıktaki sayıları planlayın.",
                "$~\\Saha()\\",
                "$~Bu, birinin konuşma veya şarkı söyleme tonunu dinlemek için harikadır."
            ],
            "names": ["$~🎵", "$~Saha"],
            "frequency": {
                "names": ["$~sıklık"],
                "doc": "$~Örneklemeler arasındaki zaman."
            }
        },
        "Camera": {
            "doc": [
                "$~/vııııııııııııııı/",
                "$~@FunctionDefinition burada, @Camera'yı açıklayabilirim!",
                "$~Yani @Camera dünyanızdan @Color'ın bir @List'ini sağlar. Bu liste esasen bir görüntüyü temsil eder, ancak bununla ne yapacağınıza karar vermek size kalmıştır.",
                "$~Resmi bir sürü @Phrase ile temsil etmeyi deneyebilirsiniz, bu oldukça hoş görünebilir! Bunu kopyalamayı deneyin...",
                "$~\\colors: Kamera(32px 24px 33ms)\n\nSahne(\ncolors.combine(\n[] \nƒ(ifadeler•[İfade] satır•[Renk] y•#) \nphrases.append(\nrow.translate(\nƒ(renk•Renk x•#)\nPhrase('o' yer: Yer((x - 1) · 0,5m y · -0,5m) renk: renk süresi: 0s\n)\n)\n)\n)\n)\\",
                "$~Ancak bir ışığın açık mı kapalı mı olduğunu veya belirli bir rengin yaygın olup olmadığını belirlemek için renkleri de analiz edebilir ve izleyicilerin gösterdikleri renklerle performansı etkilemelerine olanak tanıyabilirsiniz."
            ],
            "names": ["$~🎥", "$~Kamera"],
            "width": {
                "names": ["$~Genişlik"],
                "doc": "$~Bir satırda örneklenecek @Color sayısı."
            },
            "height": {
                "names": ["$~yükseklik"],
                "doc": "$~Bir sütunda örneklenecek @Color sayısı."
            },
            "frequency": {
                "names": ["$~sıklık"],
                "doc": "$~@Color örnekleri arasındaki süre."
            }
        },
        "Scene": {
            "doc": [
                "$~/Bup bup bup/",
                "$~/Merhaba, @FunctionDefinition burada! @Scene'i bulduğunuzu görüyorum.",
                "$~@Scene'in özellikle harika olduğunu düşünüyorum. Temel fikir, ona bir @Phrase veya @Group listesi vermeniz ve ardından bunları sırayla göstermesi ve sonuncusunda durması.",
                "$~Zamanlamayı kontrol etmek için, her çıktıda @Phrase/duration'ı ayarlayabilir ve bir sonrakine geçmeden önce bunu o kadar uzun süre gösterebilir ve ayarlamış olabileceğiniz @Phrase/entering veya @Phrase/exiting geçişlerini kullanabilirsiniz. Bunları bir @Sequence'e ayarlarsanız, süresini kullanacaktır.",
                "$~Bütün bunlar, şu üç cümleyi sırayla gösteren küçük @Scene gibi şeyler yapmanıza olanak tanır:",
                "$~\\Scene([\nPhrase('Merhaba' süresi: 1s)\nPhrase('Nasılsın?' süresi: 2s dönüş: 5° giriş: Pose(dönme: 0°))\nPhrase('İyiyim')\n])\\",
                "$~İlk çıktının bir saniye, sonrakinin iki saniye boyunca, ancak beş derecelik bir dönüşle canlandırılarak gösterildiğini ve ardından sonuncusunun gösterildiğini görüyor musunuz?",
                "$~@Scene ile çok ayrıntılı çıktı ve animasyon dizileri oluşturabilir, hatta bunların bir kısmını herhangi bir @Phrase veya @Group'ta olduğu gibi dinamik veya etkileşimli hale getirebilirsiniz.",
                "$~İç içe geçmiş animasyonlu bir çıktınız varsa (içinde animasyonlu @Phrase bulunan bir @Group), @Scene @Group'taki tüm animasyonlu içeriğin bitmesini bekleyecektir.",
                "$~Ah, ve son bir küçük sır! Hatta listeye @Boolean bile koyabilirsiniz ve eğer \\⊥\\ ise, @Scene duraklayacak ve bunun gerçek olmasını bekleyecektir.",
                "$~Örneğin, @Phrase dizisi oluşturmak ve yalnızca @Button değiştiğinde ilerlemek istiyorsanız, şunu yapabilirsiniz:",
                "$~\\click: ∆ Button()\nScene([\nPhrase('Merhaba')\nclick\nPhrase('Nasılsın?' süre: 0,25s dönüş: 5° giriş: Pose(dönme: 0°))\nclick\nPhrase('İyiyim')\n])\\",
                "$~Her @Phrase'den sonra nasıl durakladığını ve ilerlemeden önce @Button'ın değişmesini beklediğini görüyor musunuz?"
            ],
            "names": ["$~🎬", "$~Sahne"],
            "outputs": {
                "names": "$~çıktılar",
                "doc": "$~Sırayla gösterilecek çıktıların listesi."
            }
        },
        "Motion": {
            "doc": [
                "$~/boing boing boing/",
                "$~/Merhaba! @FunctionDefinition burada. @Motion'ı açıklayayım mı?",
                "$~Temel olarak, @Motion bir @Phrase akışıdır. Ona bir başlangıç @Phrase'i verirsiniz ve sonra onu yerçekimine dayalı yeni bir yer ve dönüşle geliştirir.",
                "$~Bu, zıplayan emojiler yaratmak gibi gerçekten basit şeyler yapmanıza olanak tanır:",
                "$~\\Motion(Cümle('o') başlangıç yeri: Yer(0m 10m))\\",
                "$~O'nun nasıl sıçradığını görüyor musunuz? İlk değerlendirmede, ona @Stage'de yüksek bir yer veriyoruz, ancak daha sonra, @None alıyor, bu da @Motion'ın onu yer çekiminin yerleştireceği herhangi bir konuma değiştirmesine izin veriyor.",
                "$~Aşağıda bunu yapılandırmanın diğer birçok yolunu inceleyebilirsiniz."
            ],
            "names": ["$~⚽️", "$~Hareket"],
            "place": {
                "doc": "$~Başlangıç yeri.",
                "names": "$~yer"
            },
            "velocity": {
                "doc": "$~Başlangıç hızı",
                "names": "$~hız"
            },
            "nextplace": {
                "doc": "$~Bir sonraki yer, fiziğin üstesinden gelmek.",
                "names": "$~sonrakiyer"
            },
            "nextvelocity": {
                "doc": "$~Bir sonraki yer, aşırı hız.",
                "names": "$~sonrakihız"
            }
        },
        "Chat": {
            "doc": [
                "$~/Merhaba! @FunctionDefinition burada. Sohbet etmek mi istiyorsun?",
                "$~Sohbet akışının temel fikri, izleyicilerin bir mesaj yazması ve ardından programın buna yanıt vermesidir.",
                "$~Örneğin, bu basit program mesajın 'merhaba' olup olmadığını kontrol eder ve eğer öyleyse, program 'hi' olarak değerlendirir. Aksi takdirde, 'huh' olarak değerlendirir?",
                "$~\\Chat().has('merhaba') ? 'merhaba!' 'ha?'\\",
                "$~İşte bu kadar! Bununla her türlü performansı yapabilirsiniz, örneğin sohbet botları, metin maceraları veya diğer performans türleri için metin tabanlı kontrol şemaları."
            ],
            "names": ["$~🗣️", "$~Sohbet"]
        },
        "Placement": {
            "doc": [
                "$~/Hey, @FunctionDefinition burada. Hadi bizi nasıl harekete geçireceğimizi konuşalım!/",
                "$~Yani bizi @Stage'e yerleştirmenin birçok yolu var. Bize açıkça bir @Place verebilirsiniz. @Motion kullanabilir ve yerçekiminin işini yapmasına izin verebilirsiniz. Ayrıca bizi bir @Group'a koyabilir ve onların bizi belirli bir şekilde düzenlemesine izin verebilirsiniz.",
                "$~Ama bazen /izleyiciye/ @Stage'de nerede olduğumuzu kontrol etmek istersiniz. @Placement bunun için var.",
                "$~İşte nasıl çalıştığı: Sadece bir @Placement oluşturup onu bizim @Place'imize veriyorsunuz:",
                "$~\\Phrase('merhaba' yer: Yerleşim())\\",
                "$~Daha sonra izleyici sahnede herhangi bir ok tuşunu kullandığında veya sahneye tıkladığında veya dokunduğunda @Placement istenilen yöne hareket eden yeni bir @Place oluşturacaktır.",
                "$~Bunu programınıza kopyalayıp, işaretçiyi veya klavyeyi ok işaretiyle hareket ettirmeyi deneyin.",
                "$~@Placement'ı özelleştirebilir, belirli boyutlarda hareketi etkinleştirebilir veya devre dışı bırakabilir, bir @Place'in ne kadar hareket edeceğini ve akışın hangi başlangıç @Place'iyle başlayacağını değiştirebilirsiniz."
            ],
            "names": ["$~✥", "$~Atama"],
            "inputs": [
                {
                    "doc": "$~Başlamak için ilk yer.",
                    "names": "$~başlangıç"
                },
                {
                    "doc": "$~Seyirci yer değiştirme talebinde bulunduğunda mekanın kaç metre hareket etmesi gerekiyor?",
                    "names": "$~mesafe"
                },
                {
                    "doc": "$~Doğruysa, yatay eksende hareket etmeye izin verir. Varsayılan olarak açıktır.",
                    "names": "$~yatay"
                },
                {
                    "doc": "$~Doğruysa, dikey eksende harekete izin verir. Varsayılan olarak açıktır.",
                    "names": "$~dikey"
                },
                {
                    "doc": "$~Doğru ise + ve - tuşlarıyla z ekseninde hareket ettirilmesine izin verir.",
                    "names": "$~derinlik"
                }
            ]
        },
        "Webpage": {
            "doc": [
                "$~/Hey, @FunctionDefinition burada. Hadi internetten web sayfalarının nasıl alınacağı hakkında konuşalım!/",
                "$~İnternetinizi ilk duyduğumuzda, onu büyüleyici bulduk. Birbirleriyle belgeleri paylaşan, birbirine bağlı bilgisayarlarla dolu bir dünya mı? Bu harika!",
                "$~Bu yüzden ona bağlanan bir akış oluşturduk. Bize bir URL verin, biz de tüm metni ona aktaralım. Şöyle:",
                "$~\\Web sayfası('https://wordplay.dev')\\",
                "$~Ve görünüşe göre <CSS@https://developer.mozilla.org/en-US/docs/Learn/CSS/First_steps/What_is_CSS> adında bir şey var, bu da bir web sayfasındaki şeyleri sorgulamanızı sağlıyor. Bize bir CSS seçim sorgusu verin ve yalnızca bu sorguyla eşleşen metni alalım. Birinci seviye başlıkları alan bu örnek gibi.",
                "$~\\Web sayfası('https://wordplay.dev' 'h1')\\",
                "$~Bunda birçok şey ters gidebilir. İnternet bağlantınız kesilirse veya URL hiçbir şeye çözümlenmezse veya URL herkese açık değilse veya URL bir HTML sayfası değilse... Bunların hepsi istisnaya yol açabilir. Çalışan bir sayfa bulursanız, tamamlanma yüzdesini belirten bir @Number ve ardından sayfadaki kelimelerin bir @List'ini alırsınız."
            ],
            "names": ["$~🔗", "$~Websayfası"],
            "url": {
                "doc": "$~Alınacak HTML web sayfası URL'si.",
                "names": "$~url"
            },
            "query": {
                "doc": "$~HTML üzerinde değerlendirilecek CSS sorgusu",
                "names": "$~sorgu"
            },
            "frequency": {
                "doc": "$~Sayfanın tekrar getirilmesi için geçmesi gereken dakika sayısı.",
                "names": "$~sıklık"
            },
            "error": {
                "invalid": "$~bu geçerli bir URL değil",
                "unvailable": "$~bu URL'ye erişilemiyor",
                "notHTML": "$~cevap HTML değildi",
                "noConnection": "$~Wordplay ile hiçbir bağlantısı yok",
                "limit": "$~bu alana çok fazla istek var"
            }
        },
        "Collision": {
            "names": "$~Çarpışma",
            "doc": [
                "$~/Merhaba! @FunctionDefinition burada. Bu harika girdiye bakın./",
                "$~@Output'un birbirine çarptığını bulmanıza yardımcı olabilir! Bu, @Output'un yapabileceği normal sekmenin dışında, birbirimize çarptığımızda bir şeyler yapmanın harika bir yoludur.",
                "$~Bana sadece @Output adını verin, başka bir isimle karşılaştığında yeni bir @Rebound değeri oluşturacağım. @Rebound, çarpışan isimler ve çarpışma yönleri hakkında bilgi içerir.",
                "$~Ve eğer bana iki isim verirseniz, sadece iki isim birbiriyle karşılaştığında yeni bir değer oluştururum.",
                "$~Yeni bir değer oluşturduktan hemen sonra, çarpışma gerçekleştiğinde yapıldığı için bir \\ø\\ oluşturacağım. Bu, artık çarpışma olmadığını gösterir."
            ],
            "subject": {
                "names": "$~ders",
                "doc": "$~Çakışmaları aramam gereken @Output'un adı."
            },
            "object": {
                "names": "$~diğer",
                "doc": "$~Çakışmaları aramam gereken diğer @Output'un adı."
            }
        },
        "Rebound": {
            "names": "$~Geritepme",
            "doc": "$~@Collision'dan geliyorum ve kiminle çarpışıldığını ve çarpışmanın hangi yönde gerçekleştiğini temsil ediyorum. Normal fizik dışında, bir çarpışmaya özel bir şekilde tepki verip vermemeye karar vermek için beni kullanın.",
            "direction": {
                "names": "$~yön",
                "doc": "$~Çarpışmanın yönü ve büyüklüğü, çarpışmanın konusuna göre"
            },
            "subject": {
                "names": "$~ders",
                "doc": "$~Konunun isabet ettiği çıktının adı."
            },
            "object": {
                "names": "$~nesne",
                "doc": "$~Konuya isabet eden çıktının adı"
            }
        },
        "Direction": {
            "names": "$~Yön",
            "doc": "$~Ben x ve y eksenleri boyunca bir yönüm ve büyüklüğüm.",
            "x": {
                "names": "$~X",
                "doc": "$~X ekseni boyunca yönün yönü ve büyüklüğü."
            },
            "y": {
                "names": "$~ve",
                "doc": "$~Y ekseni boyunca yönün yönü ve büyüklüğü."
            }
        }
    },
    "output": {
        "Output": {
            "names": "$~Çıktı",
            "doc": [
                "$~Gerçekte yapabileceğiniz bir @StructureDefinition değilim. Ama çok önemli bir @StructureDefinition'ım çünkü dansımızın en önemli unsurlarına ilham veriyorum: @Phrase, @Group ve @Stage.",
                "$~Daha fazlasını öğrenmek için onlarla tanışın."
            ]
        },
        "Group": {
            "doc": [
                "$~Merhaba, nasılsın? Başkaları etrafımda olduğunda her zaman iyiyim, bu yüzden seninle olmak harika!",
                "$~@Phrase ve @Group'u @Stage'de gruplandırıyorum ve bir @Arrangement'a koyuyorum, böylece yerleştirildikleri yerde bir düzen oluyor.",
                "$~Çalışması için bana bir @Arrangement ve ardından düzenlemek için bir @Output @List'i vermeniz gerekiyor.",
                "$~Örneğin, burada @Stack düzenlemesi ve dikey olarak yığmak için birkaç @Phrase ile birlikteyim:",
                "$~\\Group(Yığın() [İfade('ilk') İfade('ikinci')])\\",
                "$~Tam olarak işleri nasıl ayarlayacağım bana vereceğiniz @Arrangement'a bağlı."
            ],
            "names": ["$~🔳", "$~Grup"],
            "layout": {
                "doc": "$~@Output'u yerlerine koymak için kullanılacak düzenleme.",
                "names": "$~düzen"
            },
            "content": {
                "doc": "$~Düzenlenecek @Output listesi.",
                "names": "$~içerik"
            },
            "matter": {
                "doc": "$~Madde içeren başka bir şeye çarparsam nasıl tepki vermeliyim?",
                "names": "$~konu"
            },
            "size": {
                "doc": "$~İçimdeki harika içeriklerin kendilerine ait bir boyutları yoksa, ne kadar uzun olmaları gerekir!",
                "names": "$~boyut"
            },
            "face": {
                "doc": "$~İçimdeki yazı tipinin adının, kendi kullanacakları bir yüzleri olmadığı sürece, olması gerekir.",
                "names": "$~yüz"
            },
            "place": {
                "doc": "$~Sahnede olmam gereken yer. İçimdeki içerik oraya göre düzenlenecek.",
                "names": "$~yer"
            },
            "name": {
                "doc": ["$~@Phrase/name ile aynı!"],
                "names": "$~isim"
            },
            "description": {
                "doc": [
                    "$~Görsel çıktıyı göremeyen izleyiciler için kullanılacak bir açıklama."
                ],
                "names": "$~Tanım"
            },
            "selectable": {
                "doc": "$~@Phrase/selectable ile aynı!",
                "names": "$~seçilebilir"
            },
            "color": {
                "doc": "$~İçimdeki içeriklerin @Color olması gerekir, tabi kendi renkleri yoksa.",
                "names": "$~renk"
            },
            "background": {
                "doc": "$~Arkama yansıtılacak @Color.",
                "names": "$~arkaplan"
            },
            "opacity": {
                "doc": "$~İçimdeki her şeyin, farklı bir @Pose tarafından geçersiz kılınmadığı sürece, \\0\\ ile \\1\\ arasında ne kadar şeffaf olması gerektiği.",
                "names": "$~opaklık"
            },
            "offset": {
                "doc": "$~Normal @Place'imden ne kadar uzakta olması gerektiğini belirten bir @Place, farklı bir @Pose tarafından geçersiz kılınmadığı sürece. Yerinde kıpırdanmak için faydalıdır.",
                "names": "$~telafietmek"
            },
            "rotation": {
                "doc": "$~Merkezimin etrafında ne kadar eğimli olmam gerektiği @Pose'umda farklı.",
                "names": ["$~📐", "$~rotasyon"]
            },
            "scale": {
                "doc": "$~Orijinal boyutuma göre ne kadar büyük olmam gerekiyor?",
                "names": "$~ölçek"
            },
            "flipx": {
                "doc": "$~@Phrase/flipx ile aynı!",
                "names": "$~tersçevir"
            },
            "flipy": {
                "doc": "$~@Phrase/flipy ile aynı",
                "names": "$~tersyüz"
            },
            "entering": {
                "doc": "$~@Phrase/entering! ile aynı",
                "names": "$~giriş"
            },
            "resting": {
                "doc": "$~@Phrase/resting ile aynı!",
                "names": "$~dinlenme"
            },
            "moving": {
                "doc": "$~@Phrase/moving! ile aynı",
                "names": "$~hareketeden"
            },
            "exiting": {
                "doc": "$~@Phrase/exiting! ile aynı",
                "names": "$~çıkış"
            },
            "duration": {
                "doc": "$~@Phrase/duration ile aynı!",
                "names": ["$~⏳", "$~süre"]
            },
            "style": {
                "doc": "$~@Phrase/style ile aynı!",
                "names": "$~stil"
            },
            "defaultDescription": "$~$1[$1|] $2 $3"
        },
        "Phrase": {
            "doc": [
                "$~Merhaba, merhaba! Beni hatırlıyor musunuz? Kim /beni/ unutabilir ki? Doğru duydunuz, ben @Stage'deki en güzel @Text'i temsil etmeye hazır olan muhteşem @Phrase'im.",
                "$~Beni böyle yapın, @Stage'de görüneyim:",
                "$~\\Phrase('muhteşem!')\\",
                "$~Elbette biraz @Text'e ihtiyacım var, ama onun dışında @Output'un yapabildiği her şeyi yapabilirim; boyutumu, yazı tipimi, dönüşümü değiştirebilir ve @Pose ve @Sequence ile inanılmaz danslarımı yapabilirim.",
                "$~Ayrıca beni @Stage'den seçebilir ve yan taraftaki paletten düzenleyebilirsiniz."
            ],
            "names": ["$~💬", "$~İfadeetmek"],
            "text": {
                "doc": "$~@Stage'de gösterilecek karakterler.",
                "names": "$~metin"
            },
            "size": {
                "doc": "$~Boyum kaç metre olmalı?",
                "names": "$~boyut"
            },
            "face": {
                "doc": "$~Üzerine koymam gereken yazı tipinin adı.",
                "names": "$~yüz"
            },
            "place": {
                "doc": "$~Sahnede olmam gereken yer.",
                "names": "$~yer"
            },
            "wrap": {
                "doc": "$~Sembolleri sarmam gereken kenar veya sarmamam gerekiyorsa \\ø\\.",
                "names": ["$~↵", "$~dürüm"]
            },
            "alignment": {
                "doc": "$~@Phrase/wrap sınır kümesi varsa, sembolleri kenarın başlangıcına, ortasına veya sonuna hizalamalı mıyım?",
                "names": "$~hizalama"
            },
            "direction": {
                "doc": "$~Sembollerin yatay mı yoksa dikey mi yazılacağı ve dikey ve @Phrase/wrap ayarlıysa metnin sola mı yoksa sağa mı kaydırılacağı.",
                "names": "$~yön"
            },
            "matter": {
                "doc": "$~Bir şeye çarptığımda kullanabileceğim özellikler!",
                "names": "$~konu"
            },
            "aura": {
                "doc": "$~Arkamda gösterilecek isteğe bağlı @Aura. Beni parlat!",
                "names": "$~aura"
            },
            "name": {
                "doc": [
                    "$~Bana bir isim ver! Bu birçok şeye yardımcı olur.",
                    "$~Öncelikle eğer bir adım varsa, bunu ekran okuyucu açıklamalarında kendimi tanımlamak için kullanacağım.",
                    "$~İkincisi, animasyon yaparken sahnede aynı içeriği temsil etmesi gereken birden fazla farklı ifadeniz olabilir; bunlara aynı adı verirseniz tek bir ifade gibi animasyon yaparlar.",
                    "$~Son olarak @Choice ile yardımcı oluyorum: Bana verdiğiniz isimler o akışta görünüyor.",
                    "$~Yardımcı olacaksa, bana her biri farklı bir dilde olmak üzere birçok farklı isim verebilirsiniz. Her zaman ilk seçilen yerel ayardaki ismi kullanırım."
                ],
                "names": "$~isim"
            },
            "description": {
                "doc": [
                    "$~Görsel çıktıyı göremeyen izleyiciler için kullanılacak özel bir açıklama."
                ],
                "names": "$~Tanım"
            },
            "selectable": {
                "doc": "$~\\⊤\\ ise işaretçi veya klavye aracılığıyla seçilebileceğimi belirtir.",
                "names": "$~seçilebilir"
            },
            "color": {
                "doc": "$~@Color I varsayılan olarak olmalıdır, aksi takdirde farklı bir @Pose ile geçersiz kılınır.",
                "names": "$~renk"
            },
            "background": {
                "doc": "$~Arkama yansıtılacak @Color.",
                "names": "$~arkaplan"
            },
            "opacity": {
                "doc": "$~Varsayılan olarak ne kadar şeffaf olmam gerektiği, farklı bir @Pose tarafından geçersiz kılınmadığı sürece, \\0\\ ile \\1\\ arasında. İçeri ve dışarı doğru solma için yararlı.",
                "names": "$~opaklık"
            },
            "offset": {
                "doc": "$~@Place'imden ne kadar uzakta olması gerektiğini belirten bir @Place, farklı bir @Pose tarafından geçersiz kılınmadığı sürece. Yerinde kıpırdanmak için faydalıdır.",
                "names": "$~telafietmek"
            },
            "rotation": {
                "doc": "$~Derece cinsinden miktar, farklı bir @Pose tarafından geçersiz kılınmadığı sürece merkezinin etrafında döndürülmelidir.",
                "names": "$~rotasyon"
            },
            "scale": {
                "doc": "$~Farklı bir @Pose tarafından geçersiz kılınmadığı sürece, orijinal boyutuna göre ne kadar büyütülmesi gerektiği.",
                "names": "$~ölçek"
            },
            "flipx": {
                "doc": "$~Farklı bir @Pose tarafından geçersiz kılınmadığı sürece x ekseninde yansıtılmam gerekip gerekmediği.",
                "names": "$~tersçevir"
            },
            "flipy": {
                "doc": "$~Farklı bir @Pose tarafından geçersiz kılınmadığı sürece y ekseninde yansıtılmam gerekip gerekmediği.",
                "names": "$~tersyüz"
            },
            "entering": {
                "doc": "$~Sahneye çıktığımda yapmam gereken @Pose veya @Sequence.",
                "names": "$~giriş"
            },
            "resting": {
                "doc": "$~Sahneye girdikten sonra, çıkmadan önce ve @Place'im değişmezken yapmam gereken @Pose veya @Sequence. Bana bir tane vermezseniz, varsayılanlarımı kullanırım.",
                "names": "$~dinlenme"
            },
            "moving": {
                "doc": "$~Sahnede yer değiştirirken varsayılan ayarlarım yerine yapmam gereken @Pose veya @Sequence.",
                "names": "$~hareketeden"
            },
            "exiting": {
                "doc": "$~Sahneden çıkmadan önce yapılması gereken @Pose veya @Sequence.",
                "names": "$~çıkış"
            },
            "duration": {
                "doc": "$~Sahnede farklı bir yere geçildiğinde uygulanacak süre.",
                "names": ["$~⏳", "$~süre"]
            },
            "style": {
                "doc": "$~Sahnede farklı bir yere geçerken kullanılacak animasyon stili.",
                "names": "$~stil"
            },
            "defaultDescription": "$~$3[$3 metre |]ifade $1 $2[adlandırılmış $2|] $4[$4|] $5"
        },
        "Arrangement": {
            "doc": "$~Verse'deki @Row, @Stack, @Grid ve @Free gibi birçok diğer düzenleme türüne ilham kaynağıyım. @Group ile yakın bir şekilde çalışıyorum",
            "names": ["$~⠿", "$~Ayarlama"]
        },
        "Row": {
            "doc": "$~Ben @Row'um, @Output'un yatay bir @Row, arada isteğe bağlı dolgu var. İkizim @Stack ile tanıştınız mı?",
            "names": ["$~➡", "$~Sıra"],
            "description": "$~$1 ifadeleri ve grupları satırı",
            "alignment": {
                "doc": "$~Her sütunun başında, ortasında veya sonunda metin hizalanacak mı?",
                "names": "$~hizalama"
            },
            "padding": {
                "doc": "$~Çıktıların arasına yerleştirilecek dolgu miktarı.",
                "names": "$~dolgu"
            }
        },
        "Stack": {
            "doc": "$~Ben @Stack'im, @Output'un dikey @Stack, arada isteğe bağlı dolgu ile. İkizim @Row ile tanıştınız mı?",
            "names": ["$~⬇", "$~Yığın"],
            "description": "$~1$'lık ifadeler ve grupların yığını",
            "alignment": {
                "doc": "$~Metnin her satırın başına, ortasına veya sonuna hizalanıp hizalanmayacağı.",
                "names": "$~hizalama"
            },
            "padding": {
                "doc": "$~Çıktıların arasına yerleştirilecek dolgu miktarı.",
                "names": "$~dolgu"
            }
        },
        "Grid": {
            "doc": "$~@Output'un grid'iyim. Bana satır ve sütun sayısını verin, isteğe bağlı dolgu ve hücre boyutlarıyla düzenli bir düzenleme yapayım.",
            "names": ["$~▦", "$~Izgara"],
            "description": "$~$1 satır $2 sütun ızgarası",
            "rows": {
                "doc": "$~Gridde kaç satır olacak.",
                "names": "$~satırlar"
            },
            "columns": {
                "doc": "$~Gridde kaç sütun oluşturulacak.",
                "names": "$~sütunlar"
            },
            "padding": {
                "doc": "$~Hücreler arasına ne kadar dolgu koyulmalı.",
                "names": "$~dolgu"
            },
            "cellWidth": {
                "doc": "$~Hücrelerin genişliği ne kadar olmalı.",
                "names": "$~hücregenişliği"
            },
            "cellHeight": {
                "doc": "$~Hücrelerin yüksekliği ne kadar olmalı?",
                "names": "$~hücredolgusu"
            }
        },
        "Free": {
            "doc": [
                "$~Ben de, ne olursa olsun. İstediğin yere otur. Sadece bir yere otur! Bana verdiğin tüm @Output'ların bir @Place'i olduğundan emin ol, aksi takdirde nereye gideceklerini bilemezler.",
                "$~Ah, ve her @Output'a verdiğiniz @Place'in @Group'un @Place'ine göre olduğunu unutmayın! Yani eğer şeylerin neden beklediğiniz yerde görünmediğini merak ediyorsanız, @Group'a da bir yer vermeyi deneyin."
            ],
            "names": ["$~Özgür"],
            "description": "$~serbest biçimli $1 çıktıları"
        },
        "Shape": {
            "doc": "$~Ben tüm şekillere ilham kaynağıyım. @Stage'e hangi şeklin olması gerektiğini söylemekte faydalıyım.",
            "names": ["$~⬟", "$~Şekil"],
            "form": {
                "doc": "$~Ben gösterişli bir şeklim. Her şekil, düzenlemesini tanımlamak için farklı bilgiler gerektirir.",
                "names": "$~biçim"
            },
            "name": {
                "doc": "$~Animasyonlar ve @Collision için kullanabileceğiniz isim benim. Örneğin, eğer a zemini temsil ediyorsa, bana 'ground' demek isteyebilirsiniz.",
                "names": "$~isim"
            },
            "description": {
                "doc": [
                    "$~Görsel çıktıyı göremeyen izleyiciler için kullanılacak bir açıklama."
                ],
                "names": "$~Tanım"
            },
            "selectable": {
                "doc": "$~@Choice'un bir parçası olarak seçilebilir miyim?",
                "names": "$~seçilebilir"
            },
            "color": {
                "doc": "$~Sınırlarımın rengi.",
                "names": "$~renk"
            },
            "background": {
                "doc": "$~Arkaplanımın rengi.",
                "names": "$~arkaplan"
            },
            "opacity": {
                "doc": "$~Ne kadar şeffaf olmalıyım.",
                "names": "$~opaklık"
            },
            "offset": {
                "doc": "$~Yerimden ne kadar uzakta görünsem de, yerimde kalıyorum.",
                "names": "$~telafietmek"
            },
            "rotation": {
                "doc": "$~Ne kadar döndürülmem gerektiği. Bu @Collision'ı etkiler.",
                "names": "$~rotasyon"
            },
            "scale": {
                "doc": "$~Gerçek boyutumu değiştirmeden ne kadar büyütülmem gerektiğini.",
                "names": "$~ölçek"
            },
            "flipx": {
                "doc": "$~Beni x ekseninde yansıtmak ister misiniz?",
                "names": "$~tersçevir"
            },
            "flipy": {
                "doc": "$~Beni y ekseninde yansıtmak ister misiniz?",
                "names": "$~tersyüz"
            },
            "entering": {
                "doc": "$~@Stage'e girerken yapmam gereken @Pose veya @Sequence.",
                "names": "$~giriş"
            },
            "resting": {
                "doc": "$~Giriş yaptıktan sonra ve hareket etmiyorken yapmam gereken @Pose veya @Sequence.",
                "names": "$~dinlenme"
            },
            "moving": {
                "doc": "$~Yer değiştirirken yapmam gereken @Pose veya @Sequence.",
                "names": "$~hareketeden"
            },
            "exiting": {
                "doc": "$~@Stage'den çıkarken yapmam gereken @Pose veya @Sequence.",
                "names": "$~çıkış"
            },
            "duration": {
                "doc": "$~Tek bir @Pose animasyonum varsa ne kadar sürmeli?",
                "names": "$~süre"
            },
            "style": {
                "doc": "$~Kullanmam gereken animasyon stili.",
                "names": "$~stil"
            }
        },
        "Form": {
            "doc": "$~Ben @Rectangle veya @Circle gibi soyut bir formum.",
            "names": ["$~Biçim"]
        },
        "Rectangle": {
            "doc": "$~Ben bir dikdörtgenim. @Stage'in istediğiniz boyutta bir sınırının olmasını sağlamak için kullanışlıdır.",
            "names": ["$~Dikdörtgen"],
            "left": {
                "doc": "$~X ekseninde sahnenin sol kenarı",
                "names": "$~sol"
            },
            "top": {
                "doc": "$~Y eksenindeki sahnenin üst kenarı",
                "names": "$~tepe"
            },
            "right": {
                "doc": "$~X ekseninde sahnenin sağ kenarı",
                "names": "$~Sağ"
            },
            "bottom": {
                "doc": "$~Y eksenindeki sahnenin alt kenarı",
                "names": "$~alt"
            },
            "z": {
                "doc": "$~Dikdörtgenin derinlik konumu.",
                "names": "$~z"
            }
        },
        "Circle": {
            "doc": "$~Ben @Stage'de şekiller oluşturmaya yarayan bir daireyim.",
            "names": ["$~Daire"],
            "radius": {
                "doc": "$~Çemberin yarıçapı",
                "names": "$~yarıçap"
            },
            "x": {
                "doc": "$~Çemberin yatay merkezi.",
                "names": "$~X"
            },
            "y": {
                "doc": "$~Çemberin dikey merkezi.",
                "names": "$~ve"
            },
            "z": {
                "doc": "$~Çemberin derinlik konumu.",
                "names": "$~z"
            }
        },
        "Polygon": {
            "doc": "$~@Stage'de şekiller oluşturmak için kullanışlı, eşit uzunlukta kenarlara ve açılara sahip 'düzenli' bir çokgenim.",
            "names": ["$~Çokgen"],
            "radius": {
                "doc": "$~Çokgenin yarıçapı",
                "names": "$~yarıçap"
            },
            "sides": {
                "doc": "$~Çokgenin kenar sayısı",
                "names": "$~taraflar"
            },
            "x": {
                "doc": "$~Çokgenin yatay merkezi.",
                "names": "$~X"
            },
            "y": {
                "doc": "$~Çokgenin dikey merkezi.",
                "names": "$~ve"
            },
            "z": {
                "doc": "$~Poligonun derinlik konumu.",
                "names": "$~z"
            }
        },
        "Pose": {
            "doc": [
                "$~Birisi en şaşırtıcı duruş şeklini sergilediğinde, bir duraklama olduğunda ve herkes baktığında ne olduğunu biliyor musunuz? İşte bu benim. @Output'un içinde olması için bir poz yakalarım ve hareketlerinin yapı taşı olurum.",
                "$~Bir poza çok şey girer. Ne tür pozlar yapabileceğinizi görmek için birçok girdime göz atın!"
            ],
            "names": ["$~🤪", "$~Poz"],
            "style": {
                "doc": "$~Bu poza geçerken kullanılacak animasyon stili.",
                "names": "$~stil"
            },
            "color": {
                "doc": "$~@Output'un @Color'ı varsayılanı yerine bu pozda olmalıdır.",
                "names": "$~renk"
            },
            "opacity": {
                "doc": "$~@Output'un varsayılanı yerine ne kadar şeffaf olması gerektiği, \\0\\ ile \\1\\ arasında. İçeri ve dışarı doğru geçişlerde faydalıdır.",
                "names": "$~opaklık"
            },
            "offset": {
                "doc": "$~Bir @Place'ın varsayılanı yerine, onun yerinden ne kadar uzakta olması gerektiğini belirten bir @Output. Yerinde kıpırdamak için faydalıdır.",
                "names": "$~telafietmek"
            },
            "rotation": {
                "doc": "$~@Output'un varsayılanı yerine nasıl döndürülmesi gerektiği.",
                "names": "$~rotasyon"
            },
            "scale": {
                "doc": "$~@Output'un varsayılan boyutu yerine orijinal boyutuna göre ne kadar büyütülmesi gerektiği.",
                "names": "$~ölçek"
            },
            "flipx": {
                "doc": "$~@Output'un varsayılanı yerine x ekseninde yansıtılıp yansıtılmayacağı.",
                "names": "$~tersçevir"
            },
            "flipy": {
                "doc": "$~@Output'un varsayılanı yerine y ekseninde yansıtılıp yansıtılmayacağı.",
                "names": "$~tersyüz"
            },
            "description": "$~$1[şeffaf $1|] $2[2 derece döndürülmüş|] $3[ölçeklenmiş $3|] $4[yatay olarak çevrilmiş|] $5[dikey olarak çevrilmiş|] $6[gölge bulanık $6 piksel]"
        },
        "Color": {
            "doc": [
                "$~Ben üç temel boyuttan oluşan, gözle görülür bir rengim.",
                "$~İşte renk çarkında orta parlaklık ve yüksek kroma değerlerinde görülen bazı yaygın renkler:",
                "$~\\Renk(50% 100 0°)\\",
                "$~\\Renk(50% 100 30°)\\",
                "$~\\Renk(50% 100 60°)\\",
                "$~\\Renk(50% 100 90°)\\",
                "$~\\Renk(50% 100 120°)\\",
                "$~\\Renk(50% 100 150°)\\",
                "$~\\Renk(50% 100 180°)\\",
                "$~\\Renk(50% 100 210°)\\",
                "$~\\Renk(50% 100 240°)\\",
                "$~\\Renk(50% 100 270°)\\",
                "$~\\Renk(50% 100 300°)\\",
                "$~\\Renk(50% 100 330°)\\"
            ],
            "names": ["$~🌈", "$~Renk"],
            "lightness": {
                "doc": "$~\\0\\ ile \\1\\ arasında ne kadar açık olmalıyım, \\0\\'da siyahtan, \\0.5\\'te griye, \\1\\'de beyaza.",
                "names": ["$~hafiflik", "$~ben"]
            },
            "chroma": {
                "doc": "$~Ne kadar renge sahip olmalıyım, \\0\\ ile \\∞\\ arasında. Renk olmaması gri anlamına gelir, daha yüksek sayılar daha fazla renk anlamına gelir.",
                "names": ["$~renk", "$~C"]
            },
            "hue": {
                "doc": "$~Bir renk çarkında megenta \\0\\, kırmızı \\30\\, yeşil \\120\\, mavi \\270\\'e kadar hangi renk olmalıyım?",
                "names": ["$~renktonu", "$~H"]
            }
        },
        "Sequence": {
            "doc": [
                "$~Aman Tanrım. Aman Tanrım. Yönetmen, bugün harika görünüyorsun! Benimle dans etmek ister misin? Çok kolay.",
                "$~Bana sadece bir @Map vermeniz gerekiyor, burada her tuş dansta hangi yüzdede olduğumuzu gösteriyor ve bu tuşların her değeri bir @Pose olacak.",
                "$~Bununla animasyon yapmanın /çok/ farklı yolu var! Örneğin, işte basit bir tanesi:",
                "$~\\Phrase('merhaba' dinlenme:Sıra({0%: Poz(dönme: 360°) 100%: Poz(dönme: 0°)})\\",
                "$~Bu, /başlangıçta (0%), 360 eğimde başla ve 0 eğimde bitir/ diyor. Bu bizi sonsuza dek daireler çizerek döndürecek, çünkü ben @Phrase'in dinlenme pozu olarak ayarlandım!",
                "$~Diğer girdilerle oynayarak kendi yaratıcı danslarınızı deneyin."
            ],
            "names": ["$~💃", "$~Sekans"],
            "poses": {
                "doc": "$~0% ile 100% arasındaki yüzdeliklerin @Map'i, her biri bir @Pose ile eşleştirilmiştir. Tüm yüzdeleri sağlamanız gerekmez; bana verdiğiniz yüzdeler arasında bir @Output'u sorunsuzca taşıyacağım.",
                "names": "$~pozlar"
            },
            "duration": {
                "doc": "$~Bu dansı ne kadar süre yapmalıyım? Tekrar edeceksem, süreye herhangi bir zaman eklemeyeceğim, sadece daha hızlı dans edeceğim.",
                "names": ["$~⏳", "$~süre"]
            },
            "style": {
                "doc": "$~Dans için hangi stili kullanmalıyım?",
                "names": "$~stil"
            },
            "count": {
                "doc": "$~Dizinin bitmeden önce kaç kez tekrarlanması gerektiği. Sahneye girdiğimde, sahnede hareket ettiğimde veya sahneden çıktığımda bu gerçekten çok yardımcı oluyor, ancak bir dinlenme dizisi için, sonsuza kadar dinlenebildiğim için görmezden geliniyor.",
                "names": "$~saymak"
            }
        },
        "Place": {
            "doc": "$~@Stage'de bir konumum. Tüm girdilerim isteğe bağlıdır, çünkü varsayılan olarak merkezdeyim.",
            "names": ["$~📍", "$~Yer"],
            "x": {
                "doc": "$~X ekseninde bir konum.",
                "names": "$~X"
            },
            "y": {
                "doc": "$~Y ekseninde bir konum",
                "names": "$~ve"
            },
            "z": {
                "doc": "$~Z ekseninde bir konum",
                "names": "$~z"
            },
            "rotation": {
                "doc": "$~Bu pozisyonda dönüş",
                "names": ["$~📐", "$~rotasyon"]
            }
        },
        "Velocity": {
            "doc": "$~@Stage'de bir konumum. Tüm girdilerim isteğe bağlıdır, çünkü varsayılan olarak merkezdeyim.",
            "names": ["$~💨", "$~Hız"],
            "x": {
                "doc": "$~X ekseninde her saniye kaç metre hareket etmemiz gerekiyor.",
                "names": "$~X"
            },
            "y": {
                "doc": "$~Y ekseninde her saniye kaç metre hareket etmemiz gerekiyor.",
                "names": "$~ve"
            },
            "angle": {
                "doc": "$~Her saniye kaç derece döndürülmeli",
                "names": ["$~açı", "$~°"]
            }
        },
        "Matter": {
            "doc": "$~Sahnede diğer çıktılarla nasıl etkileşime girdiğimi etkileyen çıktının fiziksel özellikleriyim.",
            "names": ["$~⚛️", "$~Konu"],
            "mass": {
                "doc": "$~Bir ağırlık, kilogram cinsinden",
                "names": "$~yığın"
            },
            "bounciness": {
                "doc": "$~Çarpışmaya devam etmek için ne kadar enerjim var, 0 hiç demek değil, 1 ise hepsi demek.",
                "names": "$~zıplama"
            },
            "friction": {
                "doc": "$~Ne kadar kaydırmaya devam edeceğiz; 0 hiç demek değil, 1 ise sonsuza kadar demek.",
                "names": "$~sürtünme"
            },
            "roundedness": {
                "doc": "$~Çıktının köşeleri ne kadar yuvarlanacak; 0 hiç yuvarlanmayacak, 1 ise boyutunun %100'ü anlamına geliyor, yani boyutlar dairesel oluyor.",
                "names": "$~yuvarlaklık"
            },
            "text": {
                "doc": "$~Başka çıktılarla çakışabilir mi?",
                "names": "$~metin"
            },
            "shapes": {
                "doc": "$~Başka şekillerle çarpışabilir mi?",
                "names": "$~zemin"
            }
        },
        "Aura": {
            "doc": [
                "$~Ben bir AURA'yım. @Phrase GLOW'u yapıyorum! Şöyle:",
                "$~\\Phrase(\n'PARLIYORUM!' \naura: Aura(Renk(50% 100 118°) 0.1m 0m 0.1m\n)\\"
            ],
            "names": ["$~🔮", "$~Aura"],
            "color": {
                "doc": "$~@Aura'nın @Color olması gerekir.",
                "names": "$~renk"
            },
            "blur": {
                "doc": "$~@Aura'nın ne kadar bulanık olması gerektiği. \\0m\\ hiç bulanık olmaması anlamına geliyor.",
                "names": "$~bulanıklık"
            },
            "offsetX": {
                "doc": "$~Ne kadar sola veya sağa bakmam gerektiğini. \\0m\\ hemen altında.",
                "names": "$~ofsetX"
            },
            "offsetY": {
                "doc": "$~Ne kadar yukarıda veya aşağıda görünmem gerektiğini.\\0m\\ tam altında.",
                "names": "$~ofsetY"
            }
        },
        "Stage": {
            "doc": [
                "$~MERHABA. SAHNE BURADA. BANA NE GÖSTERECEĞİMİ SÖYLE, BEN DE GÖSTEREYİM.",
                "$~\\Sahne([İfade('şeylerfffff')])\\",
                "$~İSTERSENİZ BANA BİR ARKA PLAN @Color VERİN, SAHNEYİ BUNA GÖRE AYDINLATAYIM.",
                "$~\\Sahne([İfade('stufffffff')] arka plan: Renk(75% 50 100°)\\",
                "$~BANA BİR ÇERÇEVE KENARLIĞI DA VEREBİLİRSİNİZ, KIRPABİLİRİM.",
                "$~\\Sahne([Cümle('stufffffff')] arka plan: Renk(75% 50 100°) çerçeve: Dikdörtgen(-1m -1m 1m 1m))\\"
            ],
            "names": ["$~🎭", "$~Sahne"],
            "content": {
                "doc": "$~Sahnede gösterilecek @Output listesi.",
                "names": "$~içerik"
            },
            "frame": {
                "doc": "$~Sahnenin etrafına yerleştirilecek ve sahnenin dışında kalan her şeyi gizleyecek çerçeve şekli ve boyutu.",
                "names": "$~çerçeve"
            },
            "size": {
                "doc": "$~@Group/size BEĞEN",
                "names": "$~boyut"
            },
            "face": {
                "doc": "$~@Group/face BEĞEN",
                "names": "$~yüz"
            },
            "place": {
                "doc": "$~EĞER BİR KAMERA OLSAM, BAKTIĞIM YER BUDUR",
                "names": "$~yer"
            },
            "name": {
                "doc": ["$~@Phrase/name ile AYNI!"],
                "names": "$~isim"
            },
            "description": {
                "doc": [
                    "$~Görsel çıktıyı göremeyen izleyiciler için kullanılacak bir açıklama."
                ],
                "names": "$~Tanım"
            },
            "selectable": {
                "doc": "$~@Phrase/selectable ile aynı!",
                "names": "$~seçilebilir"
            },
            "color": {
                "doc": "$~@Group/color ile AYNI",
                "names": "$~renk"
            },
            "background": {
                "doc": "$~@Group/background ile AYNI",
                "names": "$~arkaplan"
            },
            "opacity": {
                "doc": "$~@Group/opacity İLE AYNI",
                "names": "$~opaklık"
            },
            "offset": {
                "doc": "$~@Group/offset ile aynı",
                "names": "$~telafietmek"
            },
            "rotation": {
                "doc": "$~@Group/rotation ile AYNI",
                "names": ["$~📐", "$~rotasyon"]
            },
            "scale": {
                "doc": "$~@Group/scale AYNI",
                "names": "$~ölçek"
            },
            "flipx": {
                "doc": "$~@Group/flipx ile aynı",
                "names": "$~tersçevir"
            },
            "flipy": {
                "doc": "$~@Group/flipy ile aynı",
                "names": "$~tersyüz"
            },
            "entering": {
                "doc": "$~@Group/entering ile aynı",
                "names": "$~giriş"
            },
            "resting": {
                "doc": "$~@Group/resting ile AYNI!",
                "names": "$~dinlenme"
            },
            "moving": {
                "doc": "$~@Group/moving ile aynı!",
                "names": "$~hareketeden"
            },
            "exiting": {
                "doc": "$~@Group/exiting ile aynı!",
                "names": "$~çıkış"
            },
            "duration": {
                "doc": "$~@Phrase/duration ile AYNI!",
                "names": ["$~⏳", "$~süre"]
            },
            "style": {
                "doc": "$~@Phrase/style ile AYNI!",
                "names": "$~stil"
            },
            "gravity": {
                "doc": "$~@Motion'daki yeri olan çıktıya uygulanacak yerçekimi.",
                "names": "$~yerçekimi"
            },
            "defaultDescription": "$~$1'in $2[$2 |] aşaması $3[çerçeve $3|] $4 çıktısını verir"
        },
        "Easing": {
            "straight": "$~dümdüz",
            "cautious": "$~dikkatli",
            "pokey": "$~sivri",
            "zippy": "$~hareketli"
        },
        "sequence": {
            "sway": {
                "doc": "$~@Output'un merkezi etrafında ileri geri sallanan bir @Sequence oluşturuyorum.",
                "names": ["$~sallanmak"],
                "angle": {
                    "doc": "$~Sallanmada ne kadar eğilmek gerekir.",
                    "names": ["$~açı"]
                }
            },
            "bounce": {
                "doc": "$~Verilen yüksekliği @Output'a yansıtan bir @Sequence oluşturuyorum.",
                "names": ["$~sıçrama"],
                "height": {
                    "doc": "$~Ne kadar yükseğe zıplamak gerekir.",
                    "names": ["$~yükseklik"]
                }
            },
            "spin": {
                "doc": "$~@Output'u merkezi etrafında döndüren bir @Sequence oluşturuyorum.",
                "names": ["$~döndürmek"]
            },
            "fadein": {
                "doc": "$~@Output'u görünmezden görünüre doğru azaltan bir @Sequence oluşturuyorum.",
                "names": ["$~kaybolmak"]
            },
            "fadeout": {
                "doc": "$~@Output'u görünürden görünmeze dönüştüren bir @Sequence oluşturuyorum. Beni heyecan verici bir @Sequence'te deneyin!",
                "names": ["$~kaybolma"]
            },
            "popup": {
                "doc": "$~@Output'un normal boyutuna küçülmesinden daha hızlı ölçeklenmesini sağlayan bir @Sequence oluşturuyorum.",
                "names": ["$~anidenbelirmek"]
            },
            "shake": {
                "doc": "$~@Output'un korkmuş gibi görünmesini sağlayan bir @Sequence oluşturuyorum.",
                "names": ["$~sallamak"]
            }
        },
        "Source": {
            "names": "$~Kaynak",
            "doc": [
                "$~Projelerin birden fazla @Source dosyasına sahip olabileceğini biliyor musunuz? Projenizin mantığına göre bir @Source oluşturmanıza izin veriyorum. Bu, projenizin farklı değerlendirmeleri arasında bazı verileri kaydetmek istiyorsanız gerçekten yararlıdır.",
                "$~Örneğin, her fare düğmesine bastığınızda birer birer sayan basit bir sayaç yapmak istediğinizi düşünün. Bunu, bir şeyi kaç kez yaptığınızı hatırlamak için kullanabilirsiniz.",
                "$~\\↓ say\n[\nPhrase(`\\count\\ times!`)\nSource('count' say … ∆ Button() … say + 1 )\n]\\",
                "$~Kopyalamayı deneyin, /count/ adında yeni bir @Source oluşturun ve içine 0 yazın, böylece sayımı 0'dan başlatın. Bu küçük proje /count/ kaynağındaki değeri alacak ve fare düğmesine her basıldığında /count/ @Source'u geçerli /count/ değeri artı /1/ olacak şekilde düzenleyecektir."
            ],
            "name": {
                "names": "$~isim",
                "doc": "$~Oluşturulacak veya güncellenecek kaynak dosyanın adı."
            },
            "value": {
                "names": "$~değer",
                "doc": "$~Kaynak dosyanın oluşturulması veya güncellenmesi gereken veri değeri."
            },
            "DynamicEditLimitException": {
                "description": "$~dinamik kaynak düzenleme sınırı",
                "explanation": "$~Bu proje @Source dosyalarına çok fazla ve çok hızlı veri kaydetti. @Source'u yalnızca bir girdiye yanıt olarak ve çok hızlı bir şekilde güncellemediğinden emin olun."
            },
            "ReadOnlyEditException": {
                "description": "$~salt okunur kaynak düzenleme",
                "explanation": "$~Bu proje verileri hatırlıyor, ancak düzenleme hakkınız yok. Denemek istiyorsanız kopyalayın."
            },
            "EmptySourceNameException": {
                "description": "$~boş kaynak adı",
                "explanation": "$~Verilen @Source'un adı boştu, bu yüzden kaydedemedik."
            },
            "ProjectSizeLimitException": {
                "description": "$~proje boyut sınırı",
                "explanation": "$~Bu projede çok fazla metin var, bu yüzden kaydedemiyoruz."
            }
        }
    },
    "ui": {
        "font": {
            "app": "$~Noto Sans",
            "code": "$~Noto Sans Mono"
        },
        "phrases": {
            "welcome": "$~Merhaba"
        },
        "widget": {
            "confirm": {
                "cancel": "$~iptal etmek"
            },
            "dialog": {
                "close": "$~kapalı"
            },
            "loading": {
                "message": "$~Yazı tipleri ve metin yükleniyor, beklediğiniz için teşekkürler!"
            },
            "home": "$~ana sayfaya git",
            "table": {
                "cell": {
                    "description": "$~bu hücreyi düzenle",
                    "placeholder": "$~değer"
                },
                "addcolumn": "$~bu sütundan önce bir sütun ekle",
                "removecolumn": "$~bu sütunu kaldır"
            }
        },
        "tile": {
            "toggle": {
                "fullscreen": {
                    "on": "$~tam ekrandan çık",
                    "off": "$~tam ekrana genişlet"
                },
                "show": {
                    "on": "$~saklamak",
                    "off": "$~göstermek"
                }
            },
            "label": {
                "output": "$~sahne",
                "palette": "$~palet",
                "docs": "$~rehber",
                "source": "$~kaynak",
                "collaborate": "$~işbirliği yapmak"
            },
            "button": {
                "collapse": "$~pencereyi daralt"
            }
        },
        "project": {
            "error": {
                "unknown": "$~Bu proje mevcut değil veya projeye erişiminiz yok.",
                "translate": "$~Projenizi çevirirken bir sorun oluştu.",
                "tile": "$~Oops, bir hata oluştu",
                "reset": "$~Sıfırlamayı deneyin..."
            },
            "button": {
                "share": {
                    "tip": "$~proje paylaşım seçeneklerini göster",
                    "label": "$~paylaşmak"
                },
                "removeCollaborator": "$~işbirlikçiyi kaldır",
                "copy": "$~projeyi metin olarak panoya kopyala",
                "addSource": "$~yeni bir $source oluştur",
                "duplicate": "$~bu projeyi kopyala",
                "revert": "$~orijinal koda geri dön",
                "focusOutput": "$~sahnede klavyeye odaklan",
                "focusSource": "$~bir sonraki kaynağa odaklan",
                "focusDocs": "$~belgelere odaklanın",
                "focusPalette": "$~palete odaklan",
                "focusCycle": "$~bir sonraki karoya odaklan",
                "unsaved": "$~göster kaydetme hatası",
                "translate": {
                    "tip": "$~Bu projenin dillerini düzenleyin ve diğer dillere çevirin.",
                    "label": "$~tercüme etmek"
                },
                "primary": "$~bu projenin birincil yerel ayarı olarak ayarlayın",
                "history": {
                    "on": "$~son proje kodunu göster",
                    "redo": "$~mevcut proje kodunu göster"
                }
            },
            "field": {
                "name": {
                    "description": "$~proje adını düzenle",
                    "placeholder": "$~isim"
                }
            },
            "help": "$~klavye kısayollarını göster",
            "collapsed": "$~Tüm pencereleriniz çöktü! Bunları aşağıdaki araç çubuğunda bulabilirsiniz",
            "save": {
                "projectsNotSavedLocally": "$~Tarayıcınızda projeleri kaydederken bir sorun oluştu.",
                "projectsCannotNotSaveLocally": "$~Tarayıcınız proje kaydetmeyi desteklemiyor.",
                "projectContainedPII": "$~Gizliliğinizi korumak için, potansiyel olarak kişisel olarak tanımlanabilir bilgiler içeren bir proje çevrimiçi olarak kaydedilmedi. Bilgilerin tanımlayıcı olup olmadığını görmek için projeyi kontrol edin.",
                "projectsNotLoadingOnline": "$~Çevrimiçi projeler yüklenemiyor.",
                "projectNotSavedOnline": "$~Projeler çevrimiçi olarak kaydedilemiyor.",
                "settingsUnsaved": "$~Ayarlar çevrimiçi olarak kaydedilemiyor."
            },
            "dialog": {
                "unsaved": "$~Kaydedilmemiş çalışma...",
                "translate": {
                    "header": "$~Çevir",
                    "explanation": [
                        "$~Bunlar projenizin kullandığı dillerdir.",
                        "$~Projenizi diğer dillere çevirmeyi denemek için, birincil kaynak dili seçin ve ardından yeni bir dil seçin.",
                        "$~/Tüm diller desteklenmiyor ve çeviriler kusurlu olabilir, bu yüzden sonuçları inceleyin!/"
                    ]
                }
            },
            "subheader": {
                "source": "$~Kaynak",
                "destination": "$~Varış noktası"
            }
        },
        "checkpoints": {
            "label": {
                "now": "$~Şimdi",
                "history": "$~eski haline getirmek",
                "restore": "$~Bu, bu projenin önceki versiyonudur.",
                "ago": "$~$1 $2 önce"
            },
            "button": {
                "clear": "$~geçmişi sil",
                "select": "$~bu sürümü görüntüle",
                "checkpoint": "$~projenin bu sürümünü kaydet",
                "back": "$~önceki sürüme geri dön",
                "forward": "$~bir sonraki versiyona geri dön",
                "restore": "$~bu sürümü geri yükle",
                "now": "$~geçerli sürüme geri dön"
            }
        },
        "gallery": {
            "untitled": "$~Başlıksız",
            "undescribed": "$~Açıklama yok",
            "subheader": {
                "classes": {
                    "header": "$~Sınıflar",
                    "explanation": "$~Bu galeriyle ilişkili sınıflar."
                },
                "curators": {
                    "header": "$~Küratörler",
                    "explanation": "$~Bu galeriyi yöneten yaratıcılar."
                },
                "creators": {
                    "header": "$~Yaratıcılar",
                    "explanation": "$~Bu galeriye katkıda bulunan yaratıcılar."
                },
                "delete": {
                    "header": "$~Silmek",
                    "explanation": "$~Bu galeriyi silmek projelerini silmeyecektir. Galeri sonsuza dek silinecektir."
                }
            },
            "confirm": {
                "delete": {
                    "description": "$~galeriyi sil",
                    "prompt": "$~silmek"
                },
                "remove": {
                    "description": "$~projeyi galeriden kaldır",
                    "prompt": "$~kaldırmak"
                }
            },
            "error": {
                "unknown": "$~Bu galeri mevcut değil veya herkese açık değil."
            },
            "field": {
                "name": {
                    "description": "$~Galeri adı",
                    "placeholder": "$~isim"
                },
                "description": {
                    "description": "$~Galeri açıklaması",
                    "placeholder": "$~Galerinizi tanımlayın. Teması, hedefleri veya topluluğu nedir?"
                }
            }
        },
        "source": {
            "label": "$~program editörü",
            "empty": [
                "$~Hadi başlayalım! Sen…",
                "$~• 📕'yi açın ve bizi bu programa sürükleyin.",
                "$~• 1$ yazın ve menüden bizi seçin.",
                "$~• Bize ⌨️ yazın.",
                "$~• İlham almak için <galleries@://galleries> adresine göz atın.",
                "$~Eğer sıkıştıysanız, <daha fazlasını öğrenin@://learn>."
            ],
            "overwritten": "$~Proje başka yerde revize edildi",
            "confirm": {
                "delete": {
                    "description": "$~bu $source'u sil",
                    "prompt": "$~silmek"
                }
            },
            "toggle": {
                "blocks": {
                    "on": "$~metin olarak düzenle",
                    "off": "$~bloklar halinde düzenle"
                },
                "glyphs": {
                    "on": "$~eşleşen glifleri daralt",
                    "off": "$~eşleşen glifleri genişlet"
                }
            },
            "button": {
                "selectOutput": "$~bu çıktıyı sahnede göster",
                "expandSequence": "$~bu daraltılmış kodu genişlet"
            },
            "field": {
                "name": {
                    "description": "$~kaynak adını düzenle",
                    "placeholder": "$~isim"
                }
            },
            "menu": {
                "label": "$~otomatik tamamlama menüsü",
                "show": "$~otomatik tamamlama menüsünü göster",
                "back": "$~alt menüden çık"
            },
            "cursor": {
                "priorLine": "$~imleci önceki satıra taşı",
                "nextLine": "$~imleci sonraki satıra taşı",
                "priorInline": "$~imleci önceki konuma taşı",
                "nextInline": "$~imleci sonraki konuma taşı",
                "lineStart": "$~imleci satırın başına taşı",
                "lineEnd": "$~imleci satır sonuna taşı",
                "sourceStart": "$~imleci kaynağın başına taşı",
                "sourceEnd": "$~imleci kaynağın sonuna taşı",
                "priorNode": "$~komşuyu seçmeden önce",
                "nextNode": "$~komşuyu seç",
                "parent": "$~konteyner seç",
                "selectAll": "$~program seç",
                "incrementLiteral": "$~sayıyı, metni veya Boole değerini artırın",
                "decrementLiteral": "$~sayıyı, metni veya Boolean'ı azalt",
                "insertSymbol": "$~$1 ekle",
                "insertTab": "$~sekme ekle",
                "insertTrue": "$~doğruyu ekle",
                "insertFalse": "$~yanlış ekle",
                "insertNone": "$~hiçbiri simgesi ekleme",
                "insertNotEqual": "$~eşit olmayanı ekle",
                "insertProduct": "$~ürün sembolünü ekle",
                "insertQuotient": "$~bölüm sembolü ekle",
                "insertDegree": "$~derece sembolü ekle",
                "insertFunction": "$~ekleme fonksiyonu",
                "insertLessOrEqual": "$~küçük veya eşit olanı ekle",
                "insertGreaterOrEqual": "$~büyük veya eşit olanı ekle",
                "insertType": "$~tip sembolü ekle",
                "insertDocs": "$~açıklama sembolü ekle",
                "insertStream": "$~akış sembolü ekle",
                "insertChange": "$~değişiklik simgesini ekle",
                "insertConvert": "$~dönüştürme sembolünü ekle",
                "insertPrevious": "$~önceki sembolü ekle",
                "insertTable": "$~tablo açma sembolü ekle",
                "insertTableClose": "$~tabloyu kapat simgesini ekle",
                "insertBorrow": "$~ödünç al ekle",
                "insertShare": "$~paylaşım ekle",
                "insertLine": "$~satır sonu ekle",
                "backspace": "$~seçimi veya önceki sembolü sil",
                "delete": "$~seçimi veya sonraki sembolü sil",
                "cut": "$~Seçimi kes",
                "copy": "$~seçimi kopyala",
                "paste": "$~klavyenin içeriğini yapıştır",
                "parenthesize": "$~parantez seçimi",
                "enumerate": "$~seçimi saymak",
                "type": "$~karakter yazın",
                "undo": "$~önceki düzenlemeyi geri al",
                "redo": "$~yapılmamış düzenlemeyi yeniden yap",
                "search": "$~eklenecek özel karakterleri arayın",
                "tidy": "$~düzenli aralık",
                "elide": "$~geçişi değiştir"
            },
            "options": {
                "locale": {
                    "tip": "$?",
                    "all": "$?"
                }
            }
        },
        "annotations": {
            "label": "$~çatışmalar ve yardım",
            "cursor": "$~Bu *$1*$2[ ve bunlar $2|] tipindedir. $3[ Bunlar bir *$3*.|]'ün içindedir.",
            "cursorParent": "$~Bunlar $2|] tipinde bir *$1*$2['nin içindedir.",
            "learn": "$~/Daha fazla bilgi edin/",
            "evaluating": "$~Aman ne güzel, değerlendirelim!",
            "space": "$~Burası uzay! Hiçbir şeyin bu kadar çok şey söyleyebileceğini kim bilebilirdi?",
            "button": {
                "resolution": "$~Bu çatışmayı çöz"
            }
        },
        "output": {
            "label": "$~program çıktısı",
            "toggle": {
                "grid": {
                    "on": "$~ızgara çizgilerini gizle",
                    "off": "$~ızgara çizgilerini göster"
                },
                "fit": {
                    "on": "$~yakınlaştırmayı manuel olarak kontrol et",
                    "off": "$~içeriğe uygun yakınlaştırma"
                },
                "paint": {
                    "off": "$~çıktıyı yerleştir",
                    "on": "$~boya çıktısı"
                }
            },
            "field": {
                "key": {
                    "description": "$~tuş vuruşlarını dinlemek",
                    "placeholder": "$~mesaj"
                }
            },
            "button": {
                "submit": "$~bu sohbet mesajını gönder"
            },
            "options": {
                "locale": "$~çıktı için dili seçin"
            }
        },
        "timeline": {
            "label": "$~zaman çizelgesi",
            "slider": "$~zaman kaydırıcısı",
            "button": {
                "play": "$~Programı sonuna kadar değerlendirin, girdilere gerçek zamanlı olarak yanıt verin",
                "pause": "$~programı duraklatarak ileri ve geri adım atmayı etkinleştirir",
                "backStep": "$~bir adım geri",
                "backNode": "$~imlecin önceki değerlendirmesine adım",
                "backInput": "$~bir giriş geri",
                "out": "$~bu fonksiyondan çık",
                "forwardStep": "$~bir adım öne çık",
                "forwardNode": "$~imlecin bir sonraki değerlendirmesine doğru adım",
                "forwardInput": "$~bir sonraki akış girişine doğru adım at",
                "present": "$~sonuna kadar",
                "start": "$~Başlangıca",
                "reset": "$~yeniden başlatma performansı"
            }
        },
        "docs": {
            "label": "$~belge tarayıcısı",
            "link": "$~$1 kavramını dokümantasyonda göster",
            "learn": "$~daha fazla bilgi edin …",
            "nodoc": "$~Ben kimim? Ben neyim? Amacım nedir?",
            "button": {
                "home": "$~eve dönüş",
                "back": "$~öncekine dön"
            },
            "field": {
                "search": "$~Sözcüklerle kavramları arayın"
            },
            "header": {
                "inputs": "$~Girişler",
                "interfaces": "$~Arayüzler",
                "properties": "$~Özellikler",
                "functions": "$~Fonksiyonlar",
                "conversions": "$~Dönüşümler"
            }
        },
        "dialog": {
            "share": {
                "header": "$~Paylaşım",
                "explanation": "$~Bu projeyi galerilerle veya dünyayla paylaşın.",
                "subheader": {
                    "gallery": {
                        "header": "$~Galeri",
                        "explanation": "$~Bu projeyi diğer yaratıcıların yanında bir galeriye ekleyin veya <projects@://projects> sayfanızda bir galeri oluşturun. Bir projeyi herkese açık bir galeriye eklerseniz, projeniz herkese açık hale gelir."
                    },
                    "public": {
                        "header": "$~Kamu/Özel",
                        "explanation": "$~Kamu projeleri ve galerileri dünyadaki herkes tarafından görülebilir. Amacımız bu içeriğin onay ve neşe getirmesidir ve kamusal olarak paylaşmak bunu yapmanın bir yoludur. Ancak bu aynı zamanda bazı kurallara uymak anlamına da gelir. Projenizin şunları yapmayacağına söz veriyorsunuz:"
                    },
                    "pii": {
                        "header": "$~Kişisel Bilgiler",
                        "explanation": "$~Kişisel olarak tanımlanabilir bilgileri (PII) herkese açık olarak paylaşmak yaratıcıları riske atabilir, bu nedenle olası PII'leri tespit ediyoruz ve yaratıcıları hassas verileri kaldırmaları veya hassas olmayan olarak işaretlemeleri konusunda uyarıyoruz.\n\nAşağıda, hassas olmayan olarak işaretlediğiniz bu projedeki olası PII'lerin bir listesi bulunmaktadır. Tekrar hassas olarak işaretlemek için yanındaki düğmeye tıklayabilirsiniz, ancak bunu yapmak projenizin artık çevrimiçi olarak kaydedilmeyeceği anlamına gelir."
                    }
                },
                "field": {
                    "emailOrUsername": {
                        "placeholder": "$~e-posta veya kullanıcı adı",
                        "description": "$~düzenleme erişimi vermek istediğiniz kişinin e-postası veya kullanıcı adı"
                    }
                },
                "mode": {
                    "public": {
                        "label": "$~görünürlük",
                        "modes": ["$~özel", "$~halk"]
                    }
                },
                "error": {
                    "unknown": "$~Bu e-postaya sahip bir yaratıcıyı tanımıyoruz.",
                    "anonymous": "$~Paylaşmak için giriş yapmalısınız."
                },
                "button": {
                    "submit": "$~Projeyi bu e-posta adresiyle paylaşın",
                    "sensitive": {
                        "tip": "$~Bu metni tekrar hassas olarak işaretle",
                        "label": "$~hassas"
                    }
                },
                "options": {
                    "gallery": "$~galeri seçici"
                }
            },
            "settings": {
                "header": "$~Ayarlar",
                "explanation": "$~Düzeni, cihazı ve tema ayarlarını değiştirin.",
                "button": {
                    "show": "$~ayarlar iletişim kutusunu göster"
                },
                "mode": {
                    "layout": {
                        "label": "$~düzen",
                        "modes": ["$~otomatik", "$~yatay", "$~dikey", "$~özgür"]
                    },
                    "animate": {
                        "label": "$~animasyonlar",
                        "modes": [
                            "$~animasyonlar kapalı",
                            "$~normal hız",
                            "$~yarım hız",
                            "$~üçüncü hız",
                            "$~çeyrek hız"
                        ]
                    },
                    "dark": {
                        "label": "$~tema",
                        "modes": [
                            "$~açık renkler",
                            "$~koyu renkler",
                            "$~cihaz ayarını kullan"
                        ]
                    },
                    "space": {
                        "label": "$~uzay göstergesi",
                        "modes": [
                            "$~boşluk ve sekme göstergelerini açıkça göster",
                            "$~boşluk ve sekme göstergelerini gösterme"
                        ]
                    },
                    "lines": {
                        "label": "$~satır numaraları",
                        "modes": [
                            "$~metin modunda satır numaralarını göster",
                            "$~metin modunda satır numaralarını gösterme"
                        ]
                    },
                    "writing": {
                        "label": "$~yazı düzeni",
                        "modes": [
                            "$~yatay, soldan sağa",
                            "$~dikey, sağdan sola",
                            "$~dikey, soldan sağa"
                        ]
                    }
                },
                "options": {
                    "face": "$~yazı tipi",
                    "mic": "$~seçili mikrofon",
                    "camera": "$~seçili kamera"
                }
            },
            "locale": {
                "header": "$~Dil",
                "explanation": "$~Arayüz, eğitim ve dokümantasyon için dilleri seçin.",
                "subheader": {
                    "selected": "$~Seçilmiş",
                    "supported": "$~Mevcut",
                    "help": "$~…'i çevirmemize yardım edin."
                },
                "button": {
                    "show": "$~yerel ayarı değiştir",
                    "replace": "$~bu yerel ayarı kullan",
                    "add": "$~bu yerel ayarı ve mevcut olanları kullan",
                    "remove": "$~bu yerel ayarı kaldır"
                }
            },
            "help": {
                "header": "$~Kısayollar",
                "explanation": "$~Daha verimli düzenleme için bu klavye komutlarını kullanın.",
                "subheader": {
                    "moveCursor": "$~Taşınmak",
                    "editCode": "$~Düzenlemek",
                    "insertCode": "$~Sokmak",
                    "debug": "$~Hata ayıklama"
                }
            }
        },
        "collaborate": {
            "label": "$~işbirliği yapmak",
            "role": {
                "owner": "$~mal sahibi",
                "collaborators": "$~işbirlikçiler",
                "curators": "$~küratörler"
            },
            "field": {
                "message": {
                    "description": "$~Gönderilecek sohbet mesajı",
                    "placeholder": "$~Bir mesaj yazın"
                }
            },
            "button": {
                "submit": {
                    "label": "$~Göndermek",
                    "tip": "$~İşbirlikçilerinize bir mesaj gönderin"
                },
                "start": {
                    "label": "$~Bir sohbet başlatın",
                    "tip": "$~Kendinizle veya başkalarıyla bir tartışma başlatın."
                },
                "delete": "$~bu mesajı sil"
            },
            "error": {
                "unowned": "$~Bu proje çevrimiçi olarak saklanmadığından, bir sohbet veya işbirlikçileri olamaz.",
                "offline": "$~Bu sohbet yüklenemedi.",
                "empty": "$~Mesaj yok.",
                "deleted": "$~Bu mesaj silindi."
            },
            "prompt": {
                "solo": "$~Kendinizle sohbet edin veya düzenleme ve sohbet etme yeteneğine sahip bir işbirlikçi ekleyin.",
                "owner": "$~İşbirlikçiler bu projeyi düzenleyebilir ve hakkında sohbet edebilirler.",
                "collaborator": "$~Siz bir işbirlikçisiniz. Bu projeyi düzenleyebilir ve bunun hakkında sohbet edebilirsiniz.",
                "curator": "$~Bu projenin galerisinin küratörüsünüz. Bu projeyi düzenleyebilir ve hakkında sohbet edebilirsiniz."
            }
        },
        "palette": {
            "label": "$~palet",
            "labels": {
                "mixed": "$~karışık",
                "computed": "$~hesaplanmış",
                "default": "$~varsayılan",
                "inherited": "$~miras kalan",
                "notSequence": "$~bir dizi değil",
                "notContent": "$~içerik listesi değil",
                "format": "$~biçim",
                "weight": "$~ağırlık",
                "light": "$~ışık",
                "normal": "$~normal",
                "bold": "$~gözü pek",
                "extra": "$~ekstra",
                "italic": "$~italik",
                "underline": "$~altını çizmek"
            },
            "button": {
                "revert": "$~varsayılana geri dön",
                "set": "$~bu özelliği düzenle",
                "addPhrase": "$~bundan sonra bir cümle ekle",
                "addGroup": "$~bundan sonra bir grup ekle",
                "addShape": "$~bundan sonra bir şekil ekle",
                "addMotion": "$~Hareket akışına yer ayarla",
                "addPlacement": "$~Yerleştirme akışına yer ayarla",
                "remove": "$~bu içeriği kaldır",
                "up": "$~bu içeriği yukarı taşı",
                "down": "$~bu içeriği aşağı taşı",
                "edit": "$~bu içeriği düzenle",
                "sequence": "$~Sıraya dönüştür",
                "createPhrase": "$~mevcut değeri metin olarak gösteren bir Cümle oluşturun",
                "createGroup": "$~mevcut herhangi bir İfadeyi saran bir Grup oluşturun",
                "createStage": "$~herhangi bir mevcut Grup veya İfadeyi saran bir Sahne oluşturun"
            },
            "prompt": {
                "offerPhrase": "$~Ne güzel bir değer yaratmışsınız! @Stage'de göstereyim mi?",
                "offerGroup": "$~Ne harika bir @Phrase yapmışsın. Bunları bir @Phrase'ta bir araya getirip düzenlemek ister misin?",
                "offerStage": "$~ÇOK İYİ @Program. AYDINLATMAYI, RENKLERİ, ÇERÇEVELERİ KONTROL ETMEK İÇİN BENİ EKLEYİN.",
                "pauseToEdit": "$~Sahneyi ⏸️ seçerseniz düzenlemek için 💬, 🔳 veya 🎭 seçebilirsiniz!",
                "editing": "$~Beni düzenle!"
            },
            "field": {
                "coordinate": "$~Koordinatı düzenle",
                "text": "$~metni düzenle"
            },
            "sequence": {
                "button": {
                    "add": "$~poz ekle",
                    "remove": "$~pozu kaldır",
                    "up": "$~pozu yukarı kaldır",
                    "down": "$~pozu aşağı doğru hareket ettir"
                },
                "field": {
                    "percent": "$~düzenleme yüzdesi"
                }
            }
        },
        "save": {
            "saving": "$~tasarruf",
            "saved": "$~çevrimiçi kaydedildi",
            "local": "$~tarayıcıda kaydedildi",
            "unsaved": "$~kaydedilmemiş"
        },
        "page": {
            "unknown": {
                "header": "$~İyy!",
                "message": "$~Burası neresi? Eve gidebilir miyiz?"
            },
            "landing": {
                "value": "$~Bizimle birlikte kelimeler, semboller, emojiler ve kodlarla etkileşimli hikayeler yaratın!",
                "description": [
                    "$~Wordplay, şunları yapmanıza olanak sağlayan bir programlama dilidir:",
                    "$~• Kelimeleri ve emojileri eğlenceli bir şekilde canlandırın 🤪",
                    "$~• Zamanı 🕦, sesi 🎤, web sitelerini 🔗 ve fiziği 🌎 kullanın",
                    "$~• 🤝'i arkadaşlarınızla, gruplarla veya herhangi biriyle paylaşın",
                    "$~• Herhangi bir dünya dilinde kod yazın 🌐",
                    "$~• Fareler 🖱️, dokunmatik 👆 ve klavyeler ⌨️ ile düzenleme yapın",
                    "$~• İleriye doğru hata ayıklama ⏩ ve geriye doğru ⏪",
                    "$~• Ekranlar 🖥️ ve ekran okuyucular 🔊 ile görüntüleyin",
                    "$~<University of Washington@https://ischool.uw.edu/>'dan sonsuza kadar ücretsiz."
                ],
                "beta": [
                    "$~Wordplay *beta* aşamasındadır, bu nedenle amaçlandığı gibi çalışmayabilir veya tamamlanmamış olabilir. Hataları bildirin ve fikirlerinizi <GitHub@https://github.com/wordplaydev/wordplay/issues> adresinde paylaşın, <1.0 planlarımıza@https://github.com/wordplaydev/wordplay/milestones/1.0> ve <contribute@https://github.com/wordplaydev/wordplay/wiki/contribute> bakın."
                ],
                "link": {
                    "learn": "$~Dramatik karakterlerden oluşan bir kadroyla dili öğrenin",
                    "teach": "$~Öğrencilerin sınıflarını ve projelerini yönetin",
                    "guide": "$~Dil referansını arayın ve göz atın",
                    "projects": "$~Performansları yaratın ve paylaşın",
                    "galleries": "$~Başkalarının performanslarını deneyimleyin",
                    "rights": "$~Sorumluluklar, bizim ve sizin",
                    "about": "$~Bu yer neden var?",
                    "community": {
                        "label": "$~Toplum",
                        "subtitle": "$~Discord'da bizimle sohbet edin."
                    },
                    "contribute": {
                        "label": "$~Katkı yapmak",
                        "subtitle": "$~Wordplay yapmamıza yardım edin."
                    }
                }
            },
            "learn": {
                "header": "$~Öğrenmek",
                "error": "$~Bu dil için bir eğitim bulamadık.",
                "button": {
                    "next": "$~diyalogdaki bir sonraki duraklama",
                    "previous": "$~iletişim kutusundaki önceki duraklama"
                },
                "options": {
                    "lesson": "$~güncel ders"
                }
            },
            "teach": {
                "header": "$~Öğretmek",
                "prompt": {
                    "none": "$~Hoş geldiniz öğretmenim! Öğrenci hesaplarını ve proje galerilerini kurmak ve yönetmek için bir sınıf oluşturun.",
                    "some": "$~Hoş geldiniz öğretmenim! Derslerinizi yönetin veya yeni bir ders oluşturun."
                },
                "error": {
                    "offline": "$~Öğretmen durumunuzu kontrol edemedik. Giriş yaptınız mı?",
                    "login": "$~Dersleri yönetmek için giriş yapmanız gerekmektedir.",
                    "teacher": "$~Sınıfları oluşturmak ve yönetmek için öğretmen ayrıcalıklarına ihtiyacınız var. Bu formu doldurun ve birbirimizi tanıyalım!"
                },
                "link": {
                    "request": "$~Öğretmen ayrıcalıkları talep edin",
                    "new": "$~Bir sınıf oluştur"
                }
            },
            "newclass": {
                "header": "$~Yeni sınıf",
                "subheader": {
                    "class": "$~Senin sınıfın",
                    "students": "$~Öğrencileriniz",
                    "credentials": "$~Kullanıcı adları ve şifreler",
                    "submit": "$~Göndermek"
                },
                "prompt": {
                    "start": "$~Sınıfınızdaki tüm öğrenciler için genel hesaplar içeren bir sınıf oluşturun ve tüm öğrencilerinizin projeler ekleyebileceği galeriler oluşturmanıza olanak tanır. Öğrencilerin mevcut hesapları varsa, bunları daha sonra ekleyebilirsiniz.",
                    "review": "$~Oluşturduğumuz kullanıcı adlarını ve şifreleri inceleyin. Devam etmeden önce bunları *düzenlemek* ister misiniz? İsterseniz, yukarıdaki öğrenci bilgilerini düzenleyemezsiniz.",
                    "ready": "$~Yukarıdaki kimlik bilgilerini oluşturmaya hazır olduğunuzda bize bildirin. Bunu yaptıktan sonra bunları düzenleyebilirsiniz.",
                    "pending": "$~Kullanıcı adı ve şifreler oluşturuluyor...",
                    "submit": "$~Göndermeye hazır mısınız? Başarılı olur olmaz, bu bilgilerin indirilmesini alacaksınız. Parolalar *kurtarılamaz*, bu yüzden onları güvenli bir yerde saklayın.",
                    "submitting": "$~Yukarıdaki kullanıcı adı ve şifrelerle yeni hesap talep ediyorum...",
                    "download": "$~Sınıfınız hazır! İndirme klasörünüzde öğrenci verilerinizin bir indirmesini görmelisiniz. *Şifreler kurtarılamaz*, bu nedenle bu dosyayı güvenli bir yerde saklayın!"
                },
                "field": {
                    "name": {
                        "description": "$~sınıf adı",
                        "placeholder": "$~kısa bir isim"
                    },
                    "description": {
                        "description": "$~Tanım",
                        "placeholder": "$~Sizin ve öğrencileriniz için sınıfınızın bir tanımı."
                    },
                    "existing": {
                        "label": "$~Hesap sahibi öğrenciler",
                        "prompt": "$~Öğrencilerinizden bazılarının Wordplay hesapları var mı? Onları buraya ekleyin."
                    },
                    "metadata": {
                        "description": "$~öğrenci bilgileri",
                        "placeholder": "$~örneğin, öğrenci kimliği, soyadı, verilen ad",
                        "prompt": "$~Öğrenciler için yeni hesaplar mı oluşturmak istiyorsunuz? Öğrenciler hakkında *herhangi bir bilgi* sağlayın, satır başına bir tane, virgülle ayrılmış. Bu, aile adları, verilen adlar, öğrenci numaraları veya diğer ayırt edici ayrıntılar olabilir. Bunu, aşağıda düzenleyebileceğiniz kullanıcı adları oluşturmak için kullanacağız ve kullanıcı adlarını öğrencilerle ilişkilendirmenize yardımcı olacağız."
                    },
                    "words": {
                        "description": "$~şifrelerde kullanılacak kelimeler",
                        "placeholder": "$~örneğin kedi nokta fare...",
                        "prompt": "$~En az *25 kelime* sağlayın ve 2-3 kelimelik akılda kalıcı şifreler rastgele oluşturun. Öğrencilerinizin bildiği kelimeleri seçin veya onlardan kelime bulmalarını isteyin. Ne kadar rastgele olursa o kadar güvenli!"
                    },
                    "generate": {
                        "label": "$~üretmek",
                        "tip": "$~Yukarıdaki bilgilere göre kullanıcı adı ve şifre oluşturun."
                    },
                    "edit": {
                        "label": "$~düzenlemek",
                        "tip": "$~oluşturulan öğrenci bilgilerini düzenle"
                    },
                    "submit": {
                        "label": "$~sınıf oluştur",
                        "tip": "$~Bu bilgilerle yeni bir sınıf oluşturun."
                    }
                },
                "error": {
                    "duplicates": "$~Öğrenci bilgilerinde mükerrer kayıtlar bulunmaktadır.",
                    "columns": "$~Her öğrencinin aynı sayıda sütuna sahip olduğundan emin olun.",
                    "generate": "$~Benzersiz kullanıcı adları oluşturulamıyor.",
                    "taken": "$~Yukarıdaki kullanıcı adlarından bir veya daha fazlası alınmış",
                    "limit": "$~Aynı anda 35'ten fazla öğrenciden oluşan bir sınıf oluşturamazsınız.",
                    "words": "$~En az 25 kelime yazın.",
                    "account": "$~Hesapların bir kısmı oluşturulamadı.",
                    "generic": "$~Sınıfı oluşturamadık. Geliştiricilerin neyin yanlış gittiğini anlamalarına yardımcı olacak bazı bilgiler şunlardır."
                }
            },
            "class": {
                "header": "$~Sınıf",
                "subheader": {
                    "teachers": "$~Öğretmenler",
                    "students": "$~Öğrenciler",
                    "galleries": "$~Galeriler"
                },
                "prompt": {
                    "gallery": "$~Sınıfınız için bir ödev veya proje düzenlemek üzere bir galeri oluşturun. Projedeki tüm öğretmenler galeri küratörleri ve tüm öğrenciler galeri yaratıcıları olacak.",
                    "delete": "$~Bu dersi silmek, dersle ilgili bilgilerin yanı sıra, projelerin, galerilerin veya öğrenci hesaplarının kalıcı olarak silinmesine neden olur."
                },
                "field": {
                    "name": {
                        "description": "$~sınıfın adı",
                        "placeholder": "$~isim"
                    },
                    "description": {
                        "description": "$~sınıfın tanımı",
                        "placeholder": "$~Tanım"
                    },
                    "newteacher": {
                        "placeholder": "$~e-posta veya kullanıcı adı",
                        "description": "$~Bu sınıfa öğretmen erişimi vermek istediğiniz yaratıcının e-postası veya kullanıcı adı"
                    },
                    "addteacher": "$~Bu sınıfa bir öğretmen ekle",
                    "delete": {
                        "tip": "$~Bu sınıfı sonsuza dek sil.",
                        "label": "$~Bu sınıfı sil"
                    }
                },
                "error": {
                    "notfound": "$~Bu dersi bulamadık veya görüntüleme yetkiniz yok."
                }
            },
            "guide": {
                "header": "$~Rehber",
                "description": "$~Bu, Wordplay programlama dilinin her bölümü için bir referanstır. Daha fazla bilgi edinmek için bir kavram arayın veya listeye göz atın."
            },
            "projects": {
                "header": "$~Projeler",
                "projectprompt": "$~Bir şey söylemeye hazır mısınız? Bir proje oluşturun veya üzerinde çalışın. Takılırsanız, <learning@://learn>'e devam edin.",
                "archiveheader": "$~Arşivlendi",
                "archiveprompt": "$~Bunlar arşivlediğiniz projelerdir. Yalnızca sahipleri bunları kalıcı olarak silebilir veya arşivden çıkarabilir. Arşivlenen projeler, son düzenlendikten 30 gün sonra kalıcı olarak silinecektir.",
                "galleriesheader": "$~Galeriler",
                "galleryprompt": "$~Projelerinizin koleksiyonunu başkalarıyla paylaşmak için galeriler oluşturun ve düzenleyin.",
                "add": {
                    "header": "$~Yeni Proje",
                    "explanation": "$~Yeni bir proje oluşturmak için bir şablon seçin."
                },
                "button": {
                    "newproject": "$~yeni proje",
                    "editproject": "$~bu projeyi düzenle",
                    "viewcode": "$~bu projenin kodunu görüntüle",
                    "newgallery": "$~yeni galeri",
                    "unarchive": "$~bu projeyi arşivden çıkar"
                },
                "confirm": {
                    "archive": {
                        "description": "$~bu performansı arşivle",
                        "prompt": "$~arşiv"
                    },
                    "delete": {
                        "description": "$~bu performansı kalıcı olarak sil",
                        "prompt": "$~sonsuza dek sil"
                    }
                },
                "error": {
                    "noaccess": "$~İnternete ulaşamadık.",
                    "nogalleryedits": "$~Galeri oluşturmak ve değiştirmek için giriş yapmanız gerekmektedir.",
                    "newgallery": "$~Yeni bir galeri oluşturamadık.",
                    "nodeletes": "$~Arşivlenmiş projeleri silmek için giriş yapmanız gerekmektedir.",
                    "delete": "$~Oops, projeyi silemedik!"
                }
            },
            "galleries": {
                "header": "$~Galeriler",
                "prompt": "$~Bunlar başkalarının yaptığı performanslardır. Bunları deneyimleyin, inceleyin veya kendi ifadenize uyarlayın.",
                "examples": "$~Örnekler"
            },
            "about": {
                "header": "$~Hakkında",
                "content": [
                    "$~Hiç kodlamanın sadece İngilizce konuşabilen, bilgisayarlarla büyüyen, engelli olmayan Batılılara özgü olduğunu düşündünüz mü?",
                    "$~Evet, biz de.",
                    "$~Bu bir kaza değil. Bilgisayarcılığın başlangıcından beri, programlama dilleri çoğunlukla aynı grup insan tarafından tasarlanıp inşa edildi -- çoğunlukla ABD ve Avrupa'daki akademi ve endüstride beyaz, cis, İngilizce konuşan erkekler ve birkaç inanılmaz kadın matematikçi. Çalışmalarını sömürge sonrası, kazananın her şeyi aldığı bir zamanda yaptılar ve programlama dilleri bu gücü güvence altına almak için önemli bir araçtı.",
                    "$~Bu tarih, öncelikli olarak hız, mantık, kâr ve hakimiyetle ilgili bir hesaplama vizyonunun ortaya çıkmasına yol açtı.",
                    "$~Bu bir adaletsizliktir. Çünkü bilişim, iyisiyle kötüsüyle, artık günlük hayatı görünür ve görünmez yollarla destekliyor ve onunla yaratmaya erişimi olan insanlar, yaratıcılarına en çok benzeyenler. İnsanlığın geri kalanı bu güce bağlı kalmaya devam ediyor çünkü farklı bir şey hayal etmek, dil engelleri, erişilebilirlik engelleri, ekonomik engeller ve kamu eğitimindeki eşitsizlikler tarafından engellenen okuryazarlık gerektiriyor.",
                    "$~*Wordplay* bunu değiştirmeye yardımcı olmayı hedefliyor. Küresel olmak üzere tasarlanmış, dünyanın tüm dillerini destekleyen, aynı zamanda dünyanın dilleriyle ilgili olan bir programlama platformu. Herkesin, sahip olduğu yeteneklerle, herkesin deneyimleyebileceği etkileşimli içerikleri paylaşabileceği bir platform. Etkileşimli kelimeler, emojiler ve tipografi aracılığıyla kendilerini eğlenceli ve sanatsal bir şekilde ifade etmek isteyen gençler ve genç yetişkinler için. Kendileri için güç elde etme amacıyla değil, güzel farklılıklarımızın inanılmaz gücünü ve gerekliliğini tanıyan bir hesaplama dünyası yaratmak için.",
                    "$~Biz, bu vizyonu hayata geçirmeye çalışan tasarımcılar, eğitimciler ve geliştiricilerden oluşan bir topluluğuz. Biz renkli insanlarız, transız, kuiriz, engelliyiz, göçmeniz, mülteciyiz. Merkezimiz, ABD'nin Washington eyaletine bağlı Seattle şehrindeki <University of Washington@https://washington.edu> <Information School@https://ischool.uw.edu/> adresindedir. Burası, herkesi kucaklamayı ve günümüzde de devam eden engellilere yönelik ve ırkçı sömürgecilik tahribatını ortadan kaldırmayı hedefliyor. Bu programlama dilini ve platformunu yapmak, bu misyonun küçük bir parçası ve /herkesin/ ait olduğu bir bilişim geleceğine dair bir bakış sunuyor.",
                    "$~Yardımınızı çok isteriz. <How to Contribute@https://github.com/wordplaydev/wordplay/wiki/contribute>, <donate@://donate> öğrenin veya <progress@https://github.com/amyjko/wordplay/milestones>'ımızı takip edin. Sorularınız varsa topluluk organizatörümüze <Amy@https://amyjko.phd> yazın."
                ]
            },
            "login": {
                "header": "$~Giriş yapmak",
                "subtitle": "$~Kaydedin, işbirliği yapın ve paylaşın",
                "anonymous": "$~giriş yapmak",
                "prompt": {
                    "login": "$~Projelerinizi kaydetmek, işbirliği yapmak ve paylaşmak için giriş yapın:",
                    "join": "$~Veya başlamak için <bir hesap oluşturun@://join>.",
                    "forgot": "$~*Şifrenizi mi unuttunuz?* İletişim bilgilerinizi toplamadığımız için hesabınızı maalesef kurtaramıyoruz.",
                    "enter": "$~Giriş bağlantınız farklı bir tarayıcıdan veya cihazdan gelmiş gibi görünüyor. Siz olduğunuzdan emin olmak için e-postanızı tekrar girebilir misiniz?",
                    "play": "$~Giriş yaptınız, projelerinizi artık çevrimiçi olarak kaydedebiliriz! Bir şey oluşturmak ister misiniz?",
                    "tooyoung": "$~E-posta ile giriş yapabilmek için 13 yaşında veya daha büyük olmanız gerekmektedir.",
                    "passwordrule": "$~Şifreleriniz en az 10 karakter uzunluğunda olmalı; eğer şifre yöneticisi kullanmıyorsanız hatırlayabileceğiniz üç uzun kelime seçin.",
                    "passwordreminder": "$~Henüz bir hesabınız yok gibi görünüyor. Şifrenizi tekrar girin ve kurtarılamaz olduğundan güvenli ve doğru bir şekilde sakladığınızdan emin olun.",
                    "changeEmail": "$~E-postanızı değiştirmek mi istiyorsunuz? Yeni bir tane gönderin, eskisine bir onay gönderelim.",
                    "changePassword": "$~Şifrenizi değiştirmek mi istiyorsunuz? Yeni bir şifre gönderip tekrarlayın.",
                    "email": "$~Yalnızca e-posta hesabınız mı var? E-postanızı göndererek giriş yapın ve bununla ilişkili bir hesap varsa, size oturum açma bağlantısı içeren bir e-posta göndereceğiz. Gizliliği korumak için yalnızca e-posta hesapları desteklenmemektedir.",
                    "sent": "$~Bu e-posta bir hesapla ilişkiliyse, giriş bağlantısı içeren bir e-posta alacaktır. Görünmesi birkaç dakika sürebilir. Bu e-postayla ilişkili bir hesap yoksa, hiçbir şey almayacaksınız.",
                    "logout": "$~Paylaşılan bir cihaz mı kullanıyorsunuz ve projelerinizi gizli tutmak mı istiyorsunuz? Çıkış yapın ve projelerinizi bu cihazdan *sileriz*, ancak çevrimiçi olarak kaydedilecekler.",
                    "success": "$~Hesap oluşturuldu!",
                    "confirm": "$~Yeni adresinizi doğrulamak için eski e-posta adresinizi kontrol edin.",
                    "delete": "$~Burada yaptığınız her şeyi unutmamızı mı istiyorsunuz? Bu geri alınamaz.",
                    "reallyDelete": "$~Emin misiniz? Hesabınız ve ayarlarınız hemen silinecek ve projeleriniz silinmek üzere planlanacak. Projelerinizdeki işbirlikçiler bunlara erişimi hemen kaybedecek. Bunu istediğinizi onaylamak için e-postanızı veya kullanıcı adınızı yazın.",
                    "name": "$~Kendinizibaşkalarınatemsiledecekbiremojiseçin."
                },
                "error": {
                    "expired": "$~Bu bağlantının süresi doldu.",
                    "invalid": "$~Bu bağlantı geçerli değil.",
                    "email": "$~Bu e-posta geçerli değil.",
                    "failure": "$~Giriş yapılamıyor :(",
                    "offline": "$~Buluta ulaşamadık ☁️.",
                    "unchanged": "$~E-posta adresinizi değiştiremedik, ancak nedenini bilmiyoruz.",
                    "delete": "$~Hesabınızı silemedik, ancak nedenini bilmiyoruz.",
                    "wrongPassword": "$~Geçerli bir kullanıcı adı ve şifre değil. Ya şifreniz yanlış ya da başka biri bu kullanıcı adına sahip.",
                    "tooMany": "$~Çok fazla kez giriş yapmayı denediniz ve başarısız oldunuz. Tekrar denemek için beklemeniz gerekecek."
                },
                "feedback": {
                    "changing": "$~Yeni e-posta gönderiliyor...",
                    "deleting": "$~Tamam, projelerinizi ve ayarlarınızı siliyorum...",
                    "updatedPassword": "$~Şifreniz güncellendi.",
                    "match": "$~Bunun hesabınızın kullanıcı adı ile aynı olması gerekir."
                },
                "field": {
                    "email": {
                        "description": "$~giriş e-postasını düzenle",
                        "placeholder": "$~e-posta"
                    },
                    "username": {
                        "description": "$~giriş kullanıcı adı, kişisel olarak tanımlanabilir bilgileri kullanmayın",
                        "placeholder": "$~kullanıcı adı"
                    },
                    "password": {
                        "description": "$~giriş şifresi, en az 10 karakter",
                        "placeholder": "$~şifre"
                    },
                    "currentPassword": {
                        "description": "$~mevcut giriş şifreniz",
                        "placeholder": "$~Mevcut Şifre"
                    },
                    "newPassword": {
                        "description": "$~yeni şifreniz",
                        "placeholder": "$~Yeni Şifre"
                    }
                },
                "button": {
                    "logout": {
                        "tip": "$~hesabınızdan çıkış yapın",
                        "label": "$~Çıkış yap"
                    },
                    "login": "$~bu e-postayla giriş yapın, bir giriş bağlantısı gönderin",
                    "updateEmail": "$~e-postanızı değiştirin",
                    "delete": {
                        "tip": "$~hesabını sil",
                        "label": "$~verilerimi sil…"
                    },
                    "reallyDelete": {
                        "tip": "$~hesabını sonsuza dek sil",
                        "label": "$~Sil onu!!!"
                    },
                    "updatePassword": "$~yeni şifre gönder"
                },
                "toggle": {
                    "reveal": {
                        "on": "$~Şifreyi göster",
                        "off": "$~Şifreyi gizle"
                    }
                }
            },
            "join": {
                "header": "$~Katılmak",
                "prompt": {
                    "create": "$~Projelerinizi kaydetmek, başkalarıyla işbirliği yapmak ve çalışmalarınızı paylaşmak için bir hesap oluşturun.",
                    "username": "$~Kullanıcı adları en az /5 karakter/ olmalı, e-posta olmamalı ve adınızı veya diğer tanımlayıcı bilgileri içermemelidir.",
                    "password": "$~Şifreler en az /10 karakter/ olmalıdır. İki kez yazın ve şifre yöneticisi gibi güvenli bir yere yazın. Hesabınızı kaybederseniz *kurtarmanın bir yolu yoktur* çünkü iletişim bilgilerini toplamıyoruz."
                }
            },
            "rights": {
                "header": "$~Haklar",
                "content": [
                    "$~MERHABA!",
                    "$~Haklarınız ve bizim haklarımız hakkında bazı beklentiler belirleyelim (ayrıca <COPPA@https://www.ecfr.gov/current/title-16/chapter-I/subchapter-C/part-312> ve <GDPR@https://gdpr.eu/compliance-checklist-us-companies/> gibi politikalar ışığında).",
                    "$~Bilmeniz gereken ilk şey, ticari bir kuruluş olmadığımızdır. Kâr amacı gütmeyen bir üniversitede bulunan topluluk temelli bir araştırma projesiyiz. Amacımız, size neşe getiren ve daha eşitlikçi ve adil bir bilişim dünyası hakkında keşifler yapmamıza yardımcı olan bir platform yaratmaktır. Bu platformda para kazanmakla ilgilenmiyoruz; topladığımız her para (genellikle kamu fonlarıyla) platformu sürdürmek için kullanılır, üzerinde çalışan (veya katkıda bulunan) herhangi birini zenginleştirmek için değil.",
                    "$~Kar amacı gütmediğimiz için bu, bu platformun güvenilirliği, kullanılabilirliği veya uzun ömürlülüğü hakkında herhangi bir söz veremeyeceğimiz anlamına da geliyor. Bununla birlikte, <Amy@https://amyjko.phd> onu uzun vadede sürdürmeye kararlı ve kadrolu bir profesör olarak oldukça istikrarlı bir işi var.",
                    "$~Bu da *verilere* getiriyor. İşte bulutta topladığımız ve depoladığımız şeyler:",
                    "$~• *Projeleriniz*. Katkıda bulunduğunuz projeleri ve bunlarda yaptığınız değişiklikleri, telefon numaraları, e-posta adresleri, kullanıcı adları, vergi tanımlayıcıları veya adresler gibi kişisel olarak tanımlanabilir bilgilere sahip görünmediği sürece saklarız.",
                    "$~• *Ayarlarınız*. Bunlar seçtiğiniz dilleri, animasyon tercihlerinizi ve öğretici ilerlemenizi içerir. Diğer her şey yalnızca cihazınızda saklanır.",
                    "$~• Toplu *etkinlik*. Oturum açmaları ve ziyaret ettiğiniz sayfaları izliyoruz, ancak sizi tanımlayabilecek, site genelinde veya diğer sitelerde takip edebilecek bir şekilde değil. Çerezleri depolamadan veya IP adresi bilgilerini Google'a göndermeden, yalnızca sayfa görüntülemeleri hakkında asgari düzeyde tanımlanamayan bilgi toplayan Google Analytics'i 'izin reddedildi' modunda kullanıyoruz. Bu toplu bilgileri, platformun ne kadar kullanıldığını bildirerek fon toplamaya yardımcı olmak için kullanıyoruz.",
                    "$~Başka hiçbir şeyi saklamıyoruz. <source@https://github.com/amyjko/wordplay/tree/main/src> herkese açıktır, bu nedenle herkes bunu doğrulayabilir ve istenmeyen izlemeleri bildirebilir.",
                    "$~Verilerinizin sahibi biz değil, *Sizsiniz*. Bu şu anlama gelir:",
                    "$~• Projelerinize kimlerin erişebileceğini siz kontrol edersiniz. Varsayılan olarak özeldirler, ancak bunları kişilerle, gruplarla paylaşabilir veya tamamen herkese açık hale getirebilirsiniz.",
                    "$~• Dilediğiniz zaman herhangi bir projeyi veya kendi hesabınızı tamamen silebilirsiniz.",
                    "$~• Dilediğiniz zaman herhangi bir projenizin veya tüm hesabınızın dışa aktarımını alabilirsiniz.",
                    "$~Verilerinizi nasıl kullanacağımızı ve kullanmayacağımızı şu şekilde açıklıyoruz:",
                    "$~• Yasa tarafından açıkça zorunlu kılınmadığı sürece verilerinizi kimseyle paylaşmayacağız. Verilerinizin iznimiz olmadan alınması her zaman mümkündür (bir 'veri ihlali'). Bunun gerçekleştiğini tespit edersek, bizimle paylaştığınız e-postayı kullanarak bunun gerçekleştiğini size bildireceğiz.",
                    "$~• 1) Hesabınızda değişiklik yapmanızı gerektiren bir değişiklik yapmadığınız, 2) bize ulaşmamız için açıkça izin vermediğiniz veya 3) yukarıdaki veri ihlali durumunda e-posta adresiniz aracılığıyla sizinle iletişime geçmeyeceğiz.",
                    "$~• Herkesin ne yaptığını ve bunu nasıl yaptığını anlamak için platformdaki projeleri analiz edebiliriz. Bu toplu, anonimleştirilmiş içgörüleri akademik yayınlarda paylaşabiliriz. Bunu yalnızca ABD federal yasasının emrettiği şekilde kurumsal bir inceleme kurulunun gözetimi altında yapacağız.",
                    "$~Son olarak, konuşma hakkında bir not. Bu platformda istediğinizi *özel* olarak söyleyebilirsiniz. Projeler varsayılan olarak özeldir ve bunları belirli e-posta adresleriyle paylaşırsanız, yine de özel olarak kabul edilirler. Özel projelerde hiçbir şeyi denetlemeyeceğiz.",
                    "$~Ancak bir projeyi *kamuya açık* hale getirmek veya onu kamuya açık bir galeriye dahil etmek bir ayrıcalıktır. Bu, sevgi, onay, saygı ve onur için yapılmış bir platformdur. Bu nedenle, *kamuya açık* içeriklerinizden hiçbirinin şunları yapmamasını bekliyoruz:"
                ],
                "consequences": [
                    "$~Bu kuralları ihlal eden bir proje veya galeri bulursak, içerik oluşturucuları görüntülemeden önce uyarırız veya görüntülenmesini engelleriz. Bu kuralları tekrar tekrar ihlal ederseniz, herkese açık olarak yayınlama ayrıcalığınızı kaybedersiniz."
                ]
            },
            "donate": {
                "header": "$~Bağış yapmak",
                "prompt": "$~Bant genişliği için ödeme yapmamıza ve öğrenci ve öğretmen katkı sağlayıcılarına tazminat ödememize yardımcı olun.",
                "content": [
                    "$~Wordplay, <University of Washington@https://washington.edu> tarafından desteklenen ücretsiz, topluluk tabanlı bir projedir. Erişilebilir, dil kapsayıcı, eğitimsel programlama dilleri misyonumuza inanan kişilerin bağışlarına güveniyoruz.",
                    "$~Güncel maliyetlerimiz şöyle:",
                    "$~• Projeyi geliştirmek ve sürdürmek için özellikle engelli veya ana dili İngilizce olmayan Washington Üniversitesi lisans öğrencilerine tazminat ödüyoruz. Bu, maliyetlerimizin yaklaşık %90'ını oluşturuyor.",
                    "$~• Çok dilli, erişilebilir müfredat geliştirmek için işbirliği yaptığımız öğretmenlere burs veriyoruz.",
                    "$~• Google'a <Firebase@https://firebase.google.com/> bant genişliği ve depolama alanı ile <Workspace@https://workspace.google.com/> hizmetleri için ödeme yapıyoruz.",
                    "$~• Alan adı için <Squarespace@https://www.squarespace.com/> adresine yıllık ödeme yapıyoruz.",
                    "$~Akademik yıl boyunca (36 hafta) haftada 10 saat, saatte 20 USD//saat ve yaz döneminde 2 lisans öğrencisi (12 hafta) ve bulut hizmetleri varsayarak, mevcut maliyetlerimiz yılda yaklaşık 60.000 USD//saattir.",
                    "$~Eğer 2.400 kişi yılda 25 ABD doları bağışta bulunsaydı, bu mevcut maliyetlerimizi karşılardı; aşan miktar ise daha fazla öğrenciye ve öğretmene tazminat olarak giderilirdi.",
                    "$~Bu 2.400 kişiden biri olabilir misiniz? Eğer öyleyse, işte Washington Üniversitesi bağış bağlantısı:"
                ]
            }
        },
        "edit": {
            "node": "$~$1$2[, $2|] yazın",
            "before": "$~$1[$1|son]'dan önce",
            "inside": "$~1$'da, 2$[$2|başlangıç] ile 3$[$3|bitiş] arasında",
            "between": "$~1 ile 2 dolar arasında",
            "line": "$~$1[$1|başlangıç] ve $2[$2|bitiş] arasındaki boş satır",
            "conflicts": "$~$1 çatışmaları",
            "assign": "$~/$2[Katılmaya istekli|Ayrılmayı düşünüyor]…/",
            "append": "$~/Eklemek için can atıyorum…/",
            "remove": "$~/Ayrılmayı düşünüyor…/",
            "replace": "$~/İçeri girmek istiyor…/",
            "wrap": "$~parantez içine almak",
            "unwrap": "$~açmak",
            "bind": "$~bu ifadeyi adlandırın"
        },
        "template": {
            "unwritten": "$~Belirsiz",
            "unparsable": "$~Ayrıştırılamayan şablon: $1"
        }
    },
    "moderation": {
        "warning": {
            "header": "$~Uyarı",
            "explanation": "$~Bir moderatör bu içeriğin şu şekilde olabileceğine karar verdi:"
        },
        "blocked": {
            "header": "$~Engellendi",
            "explanation": "$~Bir moderatör bu içeriğin şu şekilde olabileceğine karar verdi:"
        },
        "unmoderated": {
            "header": "$~Not",
            "explanation": "$~Bu içerik henüz denetlenmedi. Şunları içerebilir:"
        },
        "moderate": {
            "header": "$~Ilıman",
            "explanation": "$~Bu projeyi inceleyin ve içeriğinin aşağıdakilerden herhangi birini yapıp yapmadığına karar verin. Yaparsa, içerik uyarılır veya engellenir. Emin değilseniz atlayabilirsiniz."
        },
        "flags": {
            "violence": "$~Herhangi birine karşı şiddeti, zararı veya kendine zarar vermeyi teşvik etmeyin, desteklemeyin veya kutlamayın.",
            "dehumanization": "$~Bireyleri veya grupları ırk, etnik köken, ulusal köken, kast, cinsel yönelim, cinsiyet, din, yaş, yetenek veya görünüm temelinde insanlıktan çıkarmak.",
            "disclosure": "$~Diğer kişilerin adları, iletişim bilgileri veya fiziksel adresleri gibi özel bilgilerini ifşa etmeyin",
            "misinformation": "$~Yanlış, yanıltıcı, aldatıcı veya manipülatif bilgiler içerir"
        },
        "progress": "$~*$1* denetlendi, *$2* kaldı",
        "button": {
            "submit": {
                "tip": "$~Bu moderasyon ayarlarını kaydedin",
                "label": "$~kaydetmek"
            },
            "skip": {
                "tip": "$~Bu projeyi atla",
                "label": "$~atlamak"
            }
        }
    },
    "gallery": {
        "games": {
            "name": "$~Oyunlar",
            "description": "$~Kelimeler ve sembollerle etkileşimli oyunlar."
        },
        "visualizations": {
            "name": "$~Görselleştirmeler",
            "description": "$~Metin aracılığıyla ve metnin görselleştirilmesi."
        },
        "motion": {
            "name": "$~Hareket",
            "description": "$~Hareket ve çarpışma örnekleri."
        },
        "av": {
            "name": "$~Ses/Görüntü",
            "description": "$~Ses, perde ve videoyu giriş olarak kullanma."
        },
        "tools": {
            "name": "$~Aletler",
            "description": "$~Basit yardımcı programlar ve uygulamalar."
        }
    }
}
