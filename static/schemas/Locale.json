{
  "$ref": "#/definitions/Locale",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "ButtonText": {
      "additionalProperties": false,
      "properties": {
        "label": {
          "description": "The buttons label",
          "type": "string"
        },
        "tip": {
          "description": "THe buttons tooltip and ARIA-label, spoken by screen readers",
          "type": "string"
        }
      },
      "required": [
        "label",
        "tip"
      ],
      "type": "object"
    },
    "ConfirmText": {
      "additionalProperties": false,
      "properties": {
        "description": {
          "description": "The tooltip and ARIA-label for the button",
          "type": "string"
        },
        "prompt": {
          "description": "The confirmation prompt to show after clicked the first time.",
          "type": "string"
        }
      },
      "required": [
        "description",
        "prompt"
      ],
      "type": "object"
    },
    "ConflictText": {
      "additionalProperties": false,
      "properties": {
        "primary": {
          "$ref": "#/definitions/Template",
          "description": "The text that describes this conflict on the node which generated it."
        },
        "secondary": {
          "$ref": "#/definitions/Template",
          "description": "The text that describes this conflict on a related note, but not the one that generated it."
        }
      },
      "required": [
        "primary",
        "secondary"
      ],
      "type": "object"
    },
    "DescriptiveNodeText": {
      "additionalProperties": false,
      "properties": {
        "description": {
          "$ref": "#/definitions/Template",
          "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
        },
        "doc": {
          "$ref": "#/definitions/DocText",
          "description": "Documentation text that appears in the documentation view"
        },
        "emotion": {
          "description": "The emotion that should be conveyed in animations of the node type",
          "enum": [
            "$?",
            "angry",
            "arrogant",
            "bored",
            "cheerful",
            "curious",
            "confused",
            "eager",
            "excited",
            "grumpy",
            "happy",
            "insecure",
            "kind",
            "neutral",
            "sad",
            "scared",
            "serious",
            "shy",
            "surprised",
            "precise"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name that should be used to refer to the node type",
          "type": "string"
        }
      },
      "required": [
        "description",
        "doc",
        "emotion",
        "name"
      ],
      "type": "object"
    },
    "DialogText": {
      "additionalProperties": false,
      "properties": {
        "explanation": {
          "$ref": "#/definitions/Template",
          "description": "The explanation text just below the header."
        },
        "header": {
          "description": "The header to be shown at the top of the dialog",
          "type": "string"
        }
      },
      "required": [
        "header",
        "explanation"
      ],
      "type": "object"
    },
    "DocText": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      ],
      "description": "Wordplay markup, a single paragraph or a list of paragraphs."
    },
    "ExceptionText": {
      "additionalProperties": false,
      "properties": {
        "description": {
          "$ref": "#/definitions/Template",
          "description": "A description of the kind of exception this is; appears as screen reader text and a header when exception value is displayed on stage."
        },
        "explanation": {
          "$ref": "#/definitions/Template",
          "description": "The text of the explanation, in the voice of the node that generated it. Appears when value is shown on stage."
        }
      },
      "required": [
        "description",
        "explanation"
      ],
      "type": "object"
    },
    "FieldText": {
      "additionalProperties": false,
      "properties": {
        "description": {
          "description": "The tooltip and ARIA-label for the text field",
          "type": "string"
        },
        "placeholder": {
          "description": "The placeholder text fo the text field.",
          "type": "string"
        }
      },
      "required": [
        "description",
        "placeholder"
      ],
      "type": "object"
    },
    "FunctionText<[]>": {
      "additionalProperties": false,
      "properties": {
        "doc": {
          "$ref": "#/definitions/DocText",
          "description": "Documentation for this definition, to appear in the documentation browser."
        },
        "inputs": {
          "description": "Bind definitions for the inputs this function takes",
          "maxItems": 0,
          "minItems": 0,
          "type": "array"
        },
        "names": {
          "$ref": "#/definitions/NameText",
          "description": "One or more names for this definition. Be careful not to introduce duplicates."
        }
      },
      "required": [
        "doc",
        "inputs",
        "names"
      ],
      "type": "object"
    },
    "FunctionText<[def-alias-1127088073-3223-3469-1127088073-0-7433,def-alias-1127088073-3223-3469-1127088073-0-7433]>": {
      "additionalProperties": false,
      "properties": {
        "doc": {
          "$ref": "#/definitions/DocText",
          "description": "Documentation for this definition, to appear in the documentation browser."
        },
        "inputs": {
          "description": "Bind definitions for the inputs this function takes",
          "items": {
            "$ref": "#/definitions/NameAndDoc"
          },
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "names": {
          "$ref": "#/definitions/NameText",
          "description": "One or more names for this definition. Be careful not to introduce duplicates."
        }
      },
      "required": [
        "doc",
        "inputs",
        "names"
      ],
      "type": "object"
    },
    "FunctionText<[def-alias-1127088073-3223-3469-1127088073-0-7433]>": {
      "additionalProperties": false,
      "properties": {
        "doc": {
          "$ref": "#/definitions/DocText",
          "description": "Documentation for this definition, to appear in the documentation browser."
        },
        "inputs": {
          "description": "Bind definitions for the inputs this function takes",
          "items": {
            "$ref": "#/definitions/NameAndDoc"
          },
          "maxItems": 1,
          "minItems": 1,
          "type": "array"
        },
        "names": {
          "$ref": "#/definitions/NameText",
          "description": "One or more names for this definition. Be careful not to introduce duplicates."
        }
      },
      "required": [
        "doc",
        "inputs",
        "names"
      ],
      "type": "object"
    },
    "InternalConflictText": {
      "$ref": "#/definitions/Template",
      "description": "The text that describes this confilct type."
    },
    "Locale": {
      "additionalProperties": false,
      "description": "Represents a complete translation for Wordplay, including every user interface label, every description, etc. All of these fields must be included in order for a translation to be complete.",
      "properties": {
        "$schema": {
          "description": "A path to the generated JSON schema that mirrors this type, for validation and auto-complete",
          "type": "string"
        },
        "basis": {
          "additionalProperties": false,
          "description": "Documentation for basic types.",
          "properties": {
            "Boolean": {
              "additionalProperties": false,
              "description": "Any ⊤ or ⊥ value",
              "properties": {
                "conversion": {
                  "additionalProperties": false,
                  "description": "Conversions in the type",
                  "properties": {
                    "text": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    }
                  },
                  "required": [
                    "text"
                  ],
                  "type": "object"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation to explain what the type is for and how it's used."
                },
                "function": {
                  "additionalProperties": false,
                  "description": "Functions in the type",
                  "properties": {
                    "and": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "equals": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "not": {
                      "$ref": "#/definitions/FunctionText%3C%5B%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "notequal": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "or": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    }
                  },
                  "required": [
                    "and",
                    "or",
                    "not",
                    "equals",
                    "notequal"
                  ],
                  "type": "object"
                },
                "name": {
                  "$ref": "#/definitions/NameText",
                  "description": "The name to use to describe the type of value."
                }
              },
              "required": [
                "conversion",
                "doc",
                "function",
                "name"
              ],
              "type": "object"
            },
            "List": {
              "additionalProperties": false,
              "description": "A list value, e.g., `[1 2 3]`",
              "properties": {
                "conversion": {
                  "additionalProperties": false,
                  "description": "Conversions in the type",
                  "properties": {
                    "set": {
                      "$ref": "#/definitions/DocText"
                    },
                    "text": {
                      "$ref": "#/definitions/DocText"
                    }
                  },
                  "required": [
                    "text",
                    "set"
                  ],
                  "type": "object"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation to explain what the type is for and how it's used."
                },
                "function": {
                  "additionalProperties": false,
                  "description": "Functions in the type",
                  "properties": {
                    "add": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "all": {
                      "additionalProperties": false,
                      "description": "See `en-US.json` for documentation",
                      "properties": {
                        "checker": {
                          "items": {
                            "$ref": "#/definitions/NameAndDoc"
                          },
                          "maxItems": 3,
                          "minItems": 3,
                          "type": "array"
                        },
                        "doc": {
                          "$ref": "#/definitions/DocText",
                          "description": "Documentation for this definition, to appear in the documentation browser."
                        },
                        "inputs": {
                          "description": "Bind definitions for the inputs this function takes",
                          "items": {
                            "$ref": "#/definitions/NameAndDoc"
                          },
                          "maxItems": 1,
                          "minItems": 1,
                          "type": "array"
                        },
                        "names": {
                          "$ref": "#/definitions/NameText",
                          "description": "One or more names for this definition. Be careful not to introduce duplicates."
                        }
                      },
                      "required": [
                        "checker",
                        "doc",
                        "inputs",
                        "names"
                      ],
                      "type": "object"
                    },
                    "append": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "combine": {
                      "additionalProperties": false,
                      "description": "See `en-US.json` for documentation",
                      "properties": {
                        "combiner": {
                          "items": {
                            "$ref": "#/definitions/NameAndDoc"
                          },
                          "maxItems": 4,
                          "minItems": 4,
                          "type": "array"
                        },
                        "doc": {
                          "$ref": "#/definitions/DocText",
                          "description": "Documentation for this definition, to appear in the documentation browser."
                        },
                        "inputs": {
                          "description": "Bind definitions for the inputs this function takes",
                          "items": {
                            "$ref": "#/definitions/NameAndDoc"
                          },
                          "maxItems": 2,
                          "minItems": 2,
                          "type": "array"
                        },
                        "names": {
                          "$ref": "#/definitions/NameText",
                          "description": "One or more names for this definition. Be careful not to introduce duplicates."
                        }
                      },
                      "required": [
                        "combiner",
                        "doc",
                        "inputs",
                        "names"
                      ],
                      "type": "object"
                    },
                    "equals": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "filter": {
                      "additionalProperties": false,
                      "description": "See `en-US.json` for documentation",
                      "properties": {
                        "checker": {
                          "items": {
                            "$ref": "#/definitions/NameAndDoc"
                          },
                          "maxItems": 3,
                          "minItems": 3,
                          "type": "array"
                        },
                        "doc": {
                          "$ref": "#/definitions/DocText",
                          "description": "Documentation for this definition, to appear in the documentation browser."
                        },
                        "inputs": {
                          "description": "Bind definitions for the inputs this function takes",
                          "items": {
                            "$ref": "#/definitions/NameAndDoc"
                          },
                          "maxItems": 1,
                          "minItems": 1,
                          "type": "array"
                        },
                        "names": {
                          "$ref": "#/definitions/NameText",
                          "description": "One or more names for this definition. Be careful not to introduce duplicates."
                        }
                      },
                      "required": [
                        "checker",
                        "doc",
                        "inputs",
                        "names"
                      ],
                      "type": "object"
                    },
                    "find": {
                      "additionalProperties": false,
                      "description": "See `en-US.json` for documentation",
                      "properties": {
                        "checker": {
                          "items": {
                            "$ref": "#/definitions/NameAndDoc"
                          },
                          "maxItems": 3,
                          "minItems": 3,
                          "type": "array"
                        },
                        "doc": {
                          "$ref": "#/definitions/DocText",
                          "description": "Documentation for this definition, to appear in the documentation browser."
                        },
                        "inputs": {
                          "description": "Bind definitions for the inputs this function takes",
                          "items": {
                            "$ref": "#/definitions/NameAndDoc"
                          },
                          "maxItems": 1,
                          "minItems": 1,
                          "type": "array"
                        },
                        "names": {
                          "$ref": "#/definitions/NameText",
                          "description": "One or more names for this definition. Be careful not to introduce duplicates."
                        }
                      },
                      "required": [
                        "checker",
                        "doc",
                        "inputs",
                        "names"
                      ],
                      "type": "object"
                    },
                    "first": {
                      "$ref": "#/definitions/FunctionText%3C%5B%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "has": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "join": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "last": {
                      "$ref": "#/definitions/FunctionText%3C%5B%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "length": {
                      "$ref": "#/definitions/FunctionText%3C%5B%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "notequals": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "random": {
                      "$ref": "#/definitions/FunctionText%3C%5B%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "replace": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%2Cdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "reverse": {
                      "$ref": "#/definitions/FunctionText%3C%5B%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "sans": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "sansAll": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "sansFirst": {
                      "$ref": "#/definitions/FunctionText%3C%5B%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "sansLast": {
                      "$ref": "#/definitions/FunctionText%3C%5B%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "sorted": {
                      "additionalProperties": false,
                      "description": "See `en-US.json` for documentation",
                      "properties": {
                        "doc": {
                          "$ref": "#/definitions/DocText",
                          "description": "Documentation for this definition, to appear in the documentation browser."
                        },
                        "inputs": {
                          "description": "Bind definitions for the inputs this function takes",
                          "items": {
                            "$ref": "#/definitions/NameAndDoc"
                          },
                          "maxItems": 1,
                          "minItems": 1,
                          "type": "array"
                        },
                        "names": {
                          "$ref": "#/definitions/NameText",
                          "description": "One or more names for this definition. Be careful not to introduce duplicates."
                        },
                        "sequencer": {
                          "items": {
                            "$ref": "#/definitions/NameAndDoc"
                          },
                          "maxItems": 1,
                          "minItems": 1,
                          "type": "array"
                        }
                      },
                      "required": [
                        "doc",
                        "inputs",
                        "names",
                        "sequencer"
                      ],
                      "type": "object"
                    },
                    "subsequence": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%2Cdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "translate": {
                      "additionalProperties": false,
                      "description": "See `en-US.json` for documentation",
                      "properties": {
                        "doc": {
                          "$ref": "#/definitions/DocText",
                          "description": "Documentation for this definition, to appear in the documentation browser."
                        },
                        "inputs": {
                          "description": "Bind definitions for the inputs this function takes",
                          "items": {
                            "$ref": "#/definitions/NameAndDoc"
                          },
                          "maxItems": 1,
                          "minItems": 1,
                          "type": "array"
                        },
                        "names": {
                          "$ref": "#/definitions/NameText",
                          "description": "One or more names for this definition. Be careful not to introduce duplicates."
                        },
                        "translator": {
                          "items": {
                            "$ref": "#/definitions/NameAndDoc"
                          },
                          "maxItems": 3,
                          "minItems": 3,
                          "type": "array"
                        }
                      },
                      "required": [
                        "doc",
                        "inputs",
                        "names",
                        "translator"
                      ],
                      "type": "object"
                    },
                    "until": {
                      "additionalProperties": false,
                      "description": "See `en-US.json` for documentation",
                      "properties": {
                        "checker": {
                          "items": {
                            "$ref": "#/definitions/NameAndDoc"
                          },
                          "maxItems": 3,
                          "minItems": 3,
                          "type": "array"
                        },
                        "doc": {
                          "$ref": "#/definitions/DocText",
                          "description": "Documentation for this definition, to appear in the documentation browser."
                        },
                        "inputs": {
                          "description": "Bind definitions for the inputs this function takes",
                          "items": {
                            "$ref": "#/definitions/NameAndDoc"
                          },
                          "maxItems": 1,
                          "minItems": 1,
                          "type": "array"
                        },
                        "names": {
                          "$ref": "#/definitions/NameText",
                          "description": "One or more names for this definition. Be careful not to introduce duplicates."
                        }
                      },
                      "required": [
                        "checker",
                        "doc",
                        "inputs",
                        "names"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "add",
                    "append",
                    "replace",
                    "length",
                    "random",
                    "first",
                    "last",
                    "has",
                    "join",
                    "subsequence",
                    "sansFirst",
                    "sansLast",
                    "sans",
                    "sansAll",
                    "reverse",
                    "equals",
                    "notequals",
                    "translate",
                    "filter",
                    "all",
                    "until",
                    "find",
                    "combine",
                    "sorted"
                  ],
                  "type": "object"
                },
                "kind": {
                  "$ref": "#/definitions/NameText",
                  "description": "The type variable name for the kind of values in the list"
                },
                "name": {
                  "$ref": "#/definitions/NameText",
                  "description": "The name to use to describe the type of value."
                },
                "out": {
                  "$ref": "#/definitions/NameText",
                  "description": "The type variable name to use for functions that produce lists of different types"
                },
                "outofbounds": {
                  "$ref": "#/definitions/NameText",
                  "description": "The name of the exception when an index is out of bounds of a list's values"
                }
              },
              "required": [
                "conversion",
                "doc",
                "function",
                "kind",
                "name",
                "out",
                "outofbounds"
              ],
              "type": "object"
            },
            "Map": {
              "additionalProperties": false,
              "properties": {
                "conversion": {
                  "additionalProperties": false,
                  "description": "Conversions in the type",
                  "properties": {
                    "list": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "set": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "text": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    }
                  },
                  "required": [
                    "text",
                    "set",
                    "list"
                  ],
                  "type": "object"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation to explain what the type is for and how it's used."
                },
                "function": {
                  "additionalProperties": false,
                  "description": "Functions in the type",
                  "properties": {
                    "equals": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "filter": {
                      "additionalProperties": false,
                      "description": "See `en-US.json` for documentation",
                      "properties": {
                        "checker": {
                          "items": {
                            "$ref": "#/definitions/NameAndDoc"
                          },
                          "maxItems": 3,
                          "minItems": 3,
                          "type": "array"
                        },
                        "doc": {
                          "$ref": "#/definitions/DocText",
                          "description": "Documentation for this definition, to appear in the documentation browser."
                        },
                        "inputs": {
                          "description": "Bind definitions for the inputs this function takes",
                          "items": {
                            "$ref": "#/definitions/NameAndDoc"
                          },
                          "maxItems": 1,
                          "minItems": 1,
                          "type": "array"
                        },
                        "names": {
                          "$ref": "#/definitions/NameText",
                          "description": "One or more names for this definition. Be careful not to introduce duplicates."
                        }
                      },
                      "required": [
                        "checker",
                        "doc",
                        "inputs",
                        "names"
                      ],
                      "type": "object"
                    },
                    "notequals": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "remove": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "set": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%2Cdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "size": {
                      "$ref": "#/definitions/FunctionText%3C%5B%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "translate": {
                      "additionalProperties": false,
                      "description": "See `en-US.json` for documentation",
                      "properties": {
                        "doc": {
                          "$ref": "#/definitions/DocText",
                          "description": "Documentation for this definition, to appear in the documentation browser."
                        },
                        "inputs": {
                          "description": "Bind definitions for the inputs this function takes",
                          "items": {
                            "$ref": "#/definitions/NameAndDoc"
                          },
                          "maxItems": 1,
                          "minItems": 1,
                          "type": "array"
                        },
                        "names": {
                          "$ref": "#/definitions/NameText",
                          "description": "One or more names for this definition. Be careful not to introduce duplicates."
                        },
                        "translator": {
                          "items": {
                            "$ref": "#/definitions/NameAndDoc"
                          },
                          "maxItems": 3,
                          "minItems": 3,
                          "type": "array"
                        }
                      },
                      "required": [
                        "doc",
                        "inputs",
                        "names",
                        "translator"
                      ],
                      "type": "object"
                    },
                    "unset": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    }
                  },
                  "required": [
                    "size",
                    "equals",
                    "notequals",
                    "set",
                    "unset",
                    "remove",
                    "filter",
                    "translate"
                  ],
                  "type": "object"
                },
                "key": {
                  "$ref": "#/definitions/NameText",
                  "description": "The type variable name for the map's type of keys"
                },
                "name": {
                  "$ref": "#/definitions/NameText",
                  "description": "The name to use to describe the type of value."
                },
                "result": {
                  "$ref": "#/definitions/NameText",
                  "description": "The type variable name for higher order functions that produce maps of different types"
                },
                "value": {
                  "$ref": "#/definitions/NameText",
                  "description": "The type variable name for the map's type of values"
                }
              },
              "required": [
                "conversion",
                "doc",
                "function",
                "key",
                "name",
                "result",
                "value"
              ],
              "type": "object"
            },
            "None": {
              "additionalProperties": false,
              "description": "A none value, `ø`",
              "properties": {
                "conversion": {
                  "additionalProperties": false,
                  "description": "Conversions in the type",
                  "properties": {
                    "text": {
                      "$ref": "#/definitions/DocText",
                      "description": "None to Text"
                    }
                  },
                  "required": [
                    "text"
                  ],
                  "type": "object"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation to explain what the type is for and how it's used."
                },
                "function": {
                  "additionalProperties": false,
                  "description": "Functions in the type",
                  "properties": {
                    "equals": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "notequals": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    }
                  },
                  "required": [
                    "equals",
                    "notequals"
                  ],
                  "type": "object"
                },
                "name": {
                  "$ref": "#/definitions/NameText",
                  "description": "The name to use to describe the type of value."
                }
              },
              "required": [
                "conversion",
                "doc",
                "function",
                "name"
              ],
              "type": "object"
            },
            "Number": {
              "additionalProperties": false,
              "description": "A number value, e.g., `5` or `-23.3`",
              "properties": {
                "conversion": {
                  "additionalProperties": false,
                  "description": "Conversions in the type",
                  "properties": {
                    "Gm2m": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "Mm2m": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "Tm2m": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "cm2in": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "cm2m": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "day2s": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "dm2m": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "ft2m": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "g2kg": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "g2mg": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "g2oz": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "h2s": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "in2cm": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "kg2g": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "km2m": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "km2mi": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "lb2oz": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "list": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "m2Gm": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "m2Mm": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "m2Tm": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "m2cm": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "m2dm": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "m2ft": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "m2km": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "m2micro": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "m2mm": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "m2nm": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "m2pm": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "mg2g": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "mi2km": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "micro2m": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "min2s": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "mm2m": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "ms2s": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "nm2m": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "oz2g": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "oz2lb": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "pm2m": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "s2day": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "s2h": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "s2m": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "s2ms": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "s2wk": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "s2year": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "text": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "wk2s": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "yr2s": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    }
                  },
                  "required": [
                    "text",
                    "list",
                    "s2m",
                    "s2h",
                    "s2day",
                    "s2wk",
                    "s2year",
                    "s2ms",
                    "ms2s",
                    "min2s",
                    "h2s",
                    "day2s",
                    "wk2s",
                    "yr2s",
                    "m2pm",
                    "m2nm",
                    "m2micro",
                    "m2mm",
                    "m2cm",
                    "m2dm",
                    "m2km",
                    "m2Mm",
                    "m2Gm",
                    "m2Tm",
                    "pm2m",
                    "nm2m",
                    "micro2m",
                    "mm2m",
                    "cm2m",
                    "dm2m",
                    "km2m",
                    "Mm2m",
                    "Gm2m",
                    "Tm2m",
                    "km2mi",
                    "mi2km",
                    "cm2in",
                    "in2cm",
                    "m2ft",
                    "ft2m",
                    "g2mg",
                    "mg2g",
                    "g2kg",
                    "kg2g",
                    "g2oz",
                    "oz2g",
                    "oz2lb",
                    "lb2oz"
                  ],
                  "type": "object"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation to explain what the type is for and how it's used."
                },
                "function": {
                  "additionalProperties": false,
                  "description": "Functions in the type",
                  "properties": {
                    "add": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "cos": {
                      "$ref": "#/definitions/FunctionText%3C%5B%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "divide": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "equal": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "greaterOrEqual": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "greaterThan": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "lessOrEqual": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "lessThan": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "multiply": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "notequal": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "positive": {
                      "$ref": "#/definitions/FunctionText%3C%5B%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "power": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "remainder": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "root": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "round": {
                      "$ref": "#/definitions/FunctionText%3C%5B%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "roundDown": {
                      "$ref": "#/definitions/FunctionText%3C%5B%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "roundUp": {
                      "$ref": "#/definitions/FunctionText%3C%5B%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "sin": {
                      "$ref": "#/definitions/FunctionText%3C%5B%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "subtract": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    }
                  },
                  "required": [
                    "add",
                    "subtract",
                    "multiply",
                    "divide",
                    "remainder",
                    "positive",
                    "round",
                    "roundDown",
                    "roundUp",
                    "power",
                    "root",
                    "lessThan",
                    "greaterThan",
                    "lessOrEqual",
                    "greaterOrEqual",
                    "equal",
                    "notequal",
                    "cos",
                    "sin"
                  ],
                  "type": "object"
                },
                "name": {
                  "$ref": "#/definitions/NameText",
                  "description": "The name to use to describe the type of value."
                }
              },
              "required": [
                "conversion",
                "doc",
                "function",
                "name"
              ],
              "type": "object"
            },
            "Set": {
              "additionalProperties": false,
              "description": "A set value, `{1 2 3}`",
              "properties": {
                "conversion": {
                  "additionalProperties": false,
                  "description": "Conversions in the type",
                  "properties": {
                    "list": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "text": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    }
                  },
                  "required": [
                    "text",
                    "list"
                  ],
                  "type": "object"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation to explain what the type is for and how it's used."
                },
                "function": {
                  "additionalProperties": false,
                  "description": "Functions in the type",
                  "properties": {
                    "add": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "difference": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "equals": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "filter": {
                      "additionalProperties": false,
                      "description": "See `en-US.json` for documentation",
                      "properties": {
                        "checker": {
                          "items": {
                            "$ref": "#/definitions/NameAndDoc"
                          },
                          "maxItems": 2,
                          "minItems": 2,
                          "type": "array"
                        },
                        "doc": {
                          "$ref": "#/definitions/DocText",
                          "description": "Documentation for this definition, to appear in the documentation browser."
                        },
                        "inputs": {
                          "description": "Bind definitions for the inputs this function takes",
                          "items": {
                            "$ref": "#/definitions/NameAndDoc"
                          },
                          "maxItems": 1,
                          "minItems": 1,
                          "type": "array"
                        },
                        "names": {
                          "$ref": "#/definitions/NameText",
                          "description": "One or more names for this definition. Be careful not to introduce duplicates."
                        }
                      },
                      "required": [
                        "checker",
                        "doc",
                        "inputs",
                        "names"
                      ],
                      "type": "object"
                    },
                    "intersection": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "notequals": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "remove": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "size": {
                      "$ref": "#/definitions/FunctionText%3C%5B%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "translate": {
                      "additionalProperties": false,
                      "description": "See `en-US.json` for documentation",
                      "properties": {
                        "doc": {
                          "$ref": "#/definitions/DocText",
                          "description": "Documentation for this definition, to appear in the documentation browser."
                        },
                        "inputs": {
                          "description": "Bind definitions for the inputs this function takes",
                          "items": {
                            "$ref": "#/definitions/NameAndDoc"
                          },
                          "maxItems": 1,
                          "minItems": 1,
                          "type": "array"
                        },
                        "names": {
                          "$ref": "#/definitions/NameText",
                          "description": "One or more names for this definition. Be careful not to introduce duplicates."
                        },
                        "translator": {
                          "items": {
                            "$ref": "#/definitions/NameAndDoc"
                          },
                          "maxItems": 2,
                          "minItems": 2,
                          "type": "array"
                        }
                      },
                      "required": [
                        "doc",
                        "inputs",
                        "names",
                        "translator"
                      ],
                      "type": "object"
                    },
                    "union": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    }
                  },
                  "required": [
                    "size",
                    "equals",
                    "notequals",
                    "add",
                    "remove",
                    "union",
                    "intersection",
                    "difference",
                    "filter",
                    "translate"
                  ],
                  "type": "object"
                },
                "kind": {
                  "$ref": "#/definitions/NameText",
                  "description": "The type variable name for the kind of value in the set"
                },
                "name": {
                  "$ref": "#/definitions/NameText",
                  "description": "The name to use to describe the type of value."
                },
                "out": {
                  "$ref": "#/definitions/NameText",
                  "description": "The type variable name for sets that produce sets of different value types"
                }
              },
              "required": [
                "conversion",
                "doc",
                "function",
                "kind",
                "name",
                "out"
              ],
              "type": "object"
            },
            "Structure": {
              "additionalProperties": false,
              "description": "A custom type defined by the user, e.g., `•Kitty(name•'')`",
              "properties": {
                "conversion": {
                  "additionalProperties": false,
                  "description": "Conversions in the type",
                  "properties": {
                    "text": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    }
                  },
                  "required": [
                    "text"
                  ],
                  "type": "object"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation to explain what the type is for and how it's used."
                },
                "function": {
                  "additionalProperties": false,
                  "description": "Functions in the type",
                  "properties": {
                    "equals": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "notequal": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    }
                  },
                  "required": [
                    "equals",
                    "notequal"
                  ],
                  "type": "object"
                },
                "name": {
                  "$ref": "#/definitions/NameText",
                  "description": "The name to use to describe the type of value."
                }
              },
              "required": [
                "conversion",
                "doc",
                "function",
                "name"
              ],
              "type": "object"
            },
            "Table": {
              "additionalProperties": false,
              "description": "A table value type, e.g., `⎡a•# b•#⎦⎡1 2⎦`",
              "properties": {
                "conversion": {
                  "additionalProperties": false,
                  "description": "Conversions in the type",
                  "properties": {
                    "list": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "text": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    }
                  },
                  "required": [
                    "list",
                    "text"
                  ],
                  "type": "object"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation to explain what the type is for and how it's used."
                },
                "function": {
                  "additionalProperties": false,
                  "description": "Functions in the type",
                  "properties": {
                    "equals": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "notequal": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    }
                  },
                  "required": [
                    "equals",
                    "notequal"
                  ],
                  "type": "object"
                },
                "name": {
                  "$ref": "#/definitions/NameText",
                  "description": "The name to use to describe the type of value."
                },
                "row": {
                  "$ref": "#/definitions/NameText",
                  "description": "The type variable name for the type of row in a table"
                }
              },
              "required": [
                "conversion",
                "doc",
                "function",
                "name",
                "row"
              ],
              "type": "object"
            },
            "Text": {
              "additionalProperties": false,
              "description": "A text value, e.g., `'hello'`",
              "properties": {
                "conversion": {
                  "additionalProperties": false,
                  "description": "Conversions in the type",
                  "properties": {
                    "list": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    },
                    "number": {
                      "$ref": "#/definitions/DocText",
                      "description": "See `en-US.json` for documentation"
                    }
                  },
                  "required": [
                    "list",
                    "number"
                  ],
                  "type": "object"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation to explain what the type is for and how it's used."
                },
                "function": {
                  "additionalProperties": false,
                  "description": "Functions in the type",
                  "properties": {
                    "combine": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "ends": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "equals": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "has": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "length": {
                      "$ref": "#/definitions/FunctionText%3C%5B%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "notequals": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "repeat": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "segment": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    },
                    "starts": {
                      "$ref": "#/definitions/FunctionText%3C%5Bdef-alias-1127088073-3223-3469-1127088073-0-7433%5D%3E",
                      "description": "See `en-US.json` for documentation"
                    }
                  },
                  "required": [
                    "length",
                    "equals",
                    "notequals",
                    "has",
                    "starts",
                    "ends",
                    "repeat",
                    "segment",
                    "combine"
                  ],
                  "type": "object"
                },
                "name": {
                  "$ref": "#/definitions/NameText",
                  "description": "The name to use to describe the type of value."
                }
              },
              "required": [
                "conversion",
                "doc",
                "function",
                "name"
              ],
              "type": "object"
            }
          },
          "required": [
            "Boolean",
            "None",
            "Text",
            "Number",
            "List",
            "Set",
            "Map",
            "Table",
            "Structure"
          ],
          "type": "object"
        },
        "input": {
          "additionalProperties": false,
          "description": "Documentation for input types.",
          "properties": {
            "Button": {
              "additionalProperties": false,
              "description": "A stream of button presses and up/down states",
              "properties": {
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "down": {
                  "$ref": "#/definitions/NameAndDoc"
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                }
              },
              "required": [
                "doc",
                "down",
                "names"
              ],
              "type": "object"
            },
            "Camera": {
              "additionalProperties": false,
              "description": "A stream of color matrices from a camera sensor",
              "properties": {
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "frequency": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The frequdncy with which color matrices should be sensed"
                },
                "height": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "An optional height of the color matrices"
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                },
                "width": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "An optional width of the color matrices"
                }
              },
              "required": [
                "doc",
                "frequency",
                "height",
                "names",
                "width"
              ],
              "type": "object"
            },
            "Chat": {
              "$ref": "#/definitions/NameAndDoc",
              "description": "A stream of text messages from the audience"
            },
            "Choice": {
              "$ref": "#/definitions/NameAndDoc",
              "description": "A stream of names selected with the pointer or keyboard"
            },
            "Key": {
              "additionalProperties": false,
              "description": "A stream of keys pressed, configurable to only show up or down states",
              "properties": {
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "down": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The optional up or down state to notify about"
                },
                "key": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The optional key to listen for"
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                }
              },
              "required": [
                "doc",
                "down",
                "key",
                "names"
              ],
              "type": "object"
            },
            "Motion": {
              "additionalProperties": false,
              "description": "A stream of phrases in places and rotations simulating physics",
              "properties": {
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                },
                "startplace": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Where the phrase should start"
                },
                "startvangle": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Starting angular velocity"
                },
                "startvx": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Starting x velocity"
                },
                "startvy": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Starting y velocity"
                },
                "startvz": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Starting z velocity"
                },
                "type": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The phrase template to use"
                },
                "vangle": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "A constant angular velocity to hold"
                },
                "vx": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "A constant x velocity to hold"
                },
                "vy": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "A constant y velocity to hold"
                },
                "vz": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "A constant z velocity to hold"
                }
              },
              "required": [
                "doc",
                "names",
                "startplace",
                "startvangle",
                "startvx",
                "startvy",
                "startvz",
                "type",
                "vangle",
                "vx",
                "vy",
                "vz"
              ],
              "type": "object"
            },
            "Pitch": {
              "additionalProperties": false,
              "description": "A stream of pitch values",
              "properties": {
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "frequency": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The frequency with which pitch should be sampled"
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                }
              },
              "required": [
                "doc",
                "frequency",
                "names"
              ],
              "type": "object"
            },
            "Placement": {
              "additionalProperties": false,
              "description": "A stream of Place for easily moving Phrases by keyboard",
              "properties": {
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "inputs": {
                  "description": "[ A starting place, how much to move when moved, whether to move on x-axis, whether to move on y-axes, whether to move on z-axis]",
                  "items": {
                    "$ref": "#/definitions/NameAndDoc"
                  },
                  "maxItems": 5,
                  "minItems": 5,
                  "type": "array"
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                }
              },
              "required": [
                "doc",
                "inputs",
                "names"
              ],
              "type": "object"
            },
            "Pointer": {
              "$ref": "#/definitions/NameAndDoc",
              "description": "A stream of pointer positions"
            },
            "Random": {
              "additionalProperties": false,
              "description": "The Random function, which generates random numbers",
              "properties": {
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "inputs": {
                  "description": "Min and max value inputs",
                  "items": {
                    "$ref": "#/definitions/NameAndDoc"
                  },
                  "maxItems": 2,
                  "minItems": 2,
                  "type": "array"
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                }
              },
              "required": [
                "doc",
                "inputs",
                "names"
              ],
              "type": "object"
            },
            "Time": {
              "additionalProperties": false,
              "description": "A stream of times since evaluation began",
              "properties": {
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "frequency": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The frequency with which time should tick"
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                }
              },
              "required": [
                "doc",
                "frequency",
                "names"
              ],
              "type": "object"
            },
            "Volume": {
              "additionalProperties": false,
              "description": "A stream of amplitude values",
              "properties": {
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "frequency": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The frequency with which amplitude should be sampled"
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                }
              },
              "required": [
                "doc",
                "frequency",
                "names"
              ],
              "type": "object"
            },
            "Webpage": {
              "additionalProperties": false,
              "description": "A stream of list of text from an HTML document indicated by a URL",
              "properties": {
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "error": {
                  "additionalProperties": false,
                  "description": "Errors that can happen during page retrieval, generating exception values",
                  "properties": {
                    "invalid": {
                      "description": "When the URL is not valid",
                      "type": "string"
                    },
                    "limit": {
                      "description": "Too many requests to the same domain",
                      "type": "string"
                    },
                    "noConnection": {
                      "description": "There was no connection to the internet",
                      "type": "string"
                    },
                    "notHTML": {
                      "description": "The response was not HTML",
                      "type": "string"
                    },
                    "unvailable": {
                      "description": "The URL could not be accessed",
                      "type": "string"
                    }
                  },
                  "required": [
                    "invalid",
                    "unvailable",
                    "notHTML",
                    "noConnection",
                    "limit"
                  ],
                  "type": "object"
                },
                "frequency": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The frequency with which to request the page"
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                },
                "query": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The CSS query for selecting content on the page"
                },
                "url": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The URL to retrieve"
                }
              },
              "required": [
                "doc",
                "error",
                "frequency",
                "names",
                "query",
                "url"
              ],
              "type": "object"
            }
          },
          "required": [
            "Random",
            "Choice",
            "Button",
            "Pointer",
            "Key",
            "Time",
            "Volume",
            "Pitch",
            "Camera",
            "Motion",
            "Placement",
            "Chat",
            "Webpage"
          ],
          "type": "object"
        },
        "language": {
          "description": "An ISO 639-1 language code",
          "enum": [
            "😀",
            "af",
            "am",
            "ar",
            "as",
            "az",
            "ba",
            "be",
            "bg",
            "bn",
            "bo",
            "br",
            "bs",
            "ca",
            "co",
            "cs",
            "cy",
            "da",
            "de",
            "el",
            "en",
            "es",
            "et",
            "eu",
            "fa",
            "fi",
            "fil",
            "fo",
            "fr",
            "fy",
            "ga",
            "gd",
            "gl",
            "ha",
            "he",
            "hi",
            "hr",
            "hu",
            "hy",
            "id",
            "ig",
            "ii",
            "is",
            "it",
            "iu",
            "ja",
            "ka",
            "kk",
            "km",
            "kn",
            "ko",
            "kok",
            "ky",
            "lb",
            "lo",
            "lt",
            "lv",
            "mi",
            "mk",
            "ml",
            "mn",
            "mr",
            "ms",
            "mt",
            "my",
            "ne",
            "nl",
            "no",
            "oc",
            "pa",
            "pl",
            "ps",
            "pt",
            "qu",
            "rm",
            "ro",
            "ru",
            "rw",
            "sa",
            "si",
            "sk",
            "sl",
            "sq",
            "sr",
            "sv",
            "sw",
            "syc",
            "ta",
            "te",
            "tg",
            "th",
            "tl",
            "tn",
            "tr",
            "tt",
            "ug",
            "uk",
            "ur",
            "uz",
            "vi",
            "wo",
            "xh",
            "yo",
            "zh",
            "zu"
          ],
          "type": "string"
        },
        "newProject": {
          "description": "The default Program for a new project",
          "type": "string"
        },
        "node": {
          "additionalProperties": false,
          "description": "Names, descriptions, and documentation for all node types, as well as descriptions of start and end of expression evaluations for debugging.",
          "properties": {
            "AnyType": {
              "$ref": "#/definitions/NodeText",
              "description": "Any type. Not actually written in code, but can be generated internally."
            },
            "BinaryEvaluate": {
              "additionalProperties": false,
              "description": "An infix formatted binary operation, e.g., `1 + 1` or `2 ÷ 3` Description inputs: $1 = the operator Start inputs: $1 = left expression Finish inputs: $1 = resulting value",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "OrderOfOperations": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "Warning about order of evaluation of binary evaluations always being reading order, not math order of operations"
                    }
                  },
                  "required": [
                    "OrderOfOperations"
                  ],
                  "type": "object"
                },
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "right": {
                  "$ref": "#/definitions/Template",
                  "description": "How to describe the right operand in a placeholder expression"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "conflict",
                "description",
                "doc",
                "emotion",
                "finish",
                "name",
                "right",
                "start"
              ],
              "type": "object"
            },
            "Bind": {
              "additionalProperties": false,
              "description": "Naming a value, e.g., `mybinding: 5m` Description inputs: $1 = the name that is bound Start inputs: $1 = the bind name being evaluated Finish inputs: $1 = the value producd, $2: the names bound",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "DuplicateName": {
                      "$ref": "#/definitions/ConflictText",
                      "description": "When a bind has duplicate names. Description inputs: $1: The name that shadowed this one"
                    },
                    "DuplicateShare": {
                      "$ref": "#/definitions/ConflictText",
                      "description": "When a shared bind has a duplicate name that's shared. Description inputs: $1: The duplicate"
                    },
                    "IncompatibleType": {
                      "$ref": "#/definitions/ConflictText",
                      "description": "When a bind and it's value type are incompatible. Description inputs: $1: Expected type, $2: Given type"
                    },
                    "MisplacedShare": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When a bind is marked as share, but not at the top level."
                    },
                    "MissingShareLanguages": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When a bind is shared, but not language tagged."
                    },
                    "RequiredAfterOptional": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When a bind is required, but appears after an optional bind in a definition"
                    },
                    "UnexpectedEtc": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When a bind is marked as a variable length list, but not at the end."
                    },
                    "UnusedBind": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When a bind is declared but never used."
                    }
                  },
                  "required": [
                    "DuplicateName",
                    "DuplicateShare",
                    "IncompatibleType",
                    "MisplacedShare",
                    "MissingShareLanguages",
                    "RequiredAfterOptional",
                    "UnexpectedEtc",
                    "UnusedBind"
                  ],
                  "type": "object"
                },
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "conflict",
                "description",
                "doc",
                "emotion",
                "finish",
                "name",
                "start"
              ],
              "type": "object"
            },
            "Block": {
              "additionalProperties": false,
              "description": "A block of expressions, evaluating to the final expression's value, e.g., `(a: 1  1 + a)` Description inputs: $1: # of statements Start inputs: none Finish inputs: $1 = Resulting value",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "ExpectedEndingExpression": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When there's no ending expression"
                    },
                    "IgnoredExpression": {
                      "$ref": "#/definitions/ConflictText",
                      "description": "When a statement is ignored because it's not last and not a bind"
                    }
                  },
                  "required": [
                    "ExpectedEndingExpression",
                    "IgnoredExpression"
                  ],
                  "type": "object"
                },
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                },
                "statement": {
                  "$ref": "#/definitions/Template",
                  "description": "The placeholder label for a statement in the block"
                }
              },
              "required": [
                "conflict",
                "description",
                "doc",
                "emotion",
                "finish",
                "name",
                "start",
                "statement"
              ],
              "type": "object"
            },
            "BooleanLiteral": {
              "additionalProperties": false,
              "description": "A single boolean literal, e.g., `⊤` or `⊥` Description inputs: $1: true if true, false otherwise",
              "properties": {
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "description",
                "doc",
                "emotion",
                "name",
                "start"
              ],
              "type": "object"
            },
            "BooleanType": {
              "$ref": "#/definitions/NodeText",
              "description": "A boolean type, e.g., `?`"
            },
            "Borrow": {
              "additionalProperties": false,
              "description": "A borrow staement, indicating some code to import into a source Start inputs: $1 = source name, $2: name borrowed",
              "properties": {
                "bind": {
                  "$ref": "#/definitions/Template",
                  "description": "Placeholder label for the bind name being borrowed"
                },
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "BorrowCycle": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When a borrowed value depends on the source file doing the borrowing. Description inputs: $1 = borrow that had a cycle"
                    },
                    "UnknownBorrow": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When the borrowed name could not be found"
                    }
                  },
                  "required": [
                    "UnknownBorrow",
                    "BorrowCycle"
                  ],
                  "type": "object"
                },
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "exception": {
                  "additionalProperties": false,
                  "description": "The set of exception values that this node can evaluate to.",
                  "properties": {
                    "CycleException": {
                      "$ref": "#/definitions/ExceptionText",
                      "description": "When a borrow depends on itself. Description inputs: $1: Borrow that it depends on"
                    }
                  },
                  "required": [
                    "CycleException"
                  ],
                  "type": "object"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "source": {
                  "$ref": "#/definitions/Template",
                  "description": "Placeholder label for the source name"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                },
                "version": {
                  "$ref": "#/definitions/Template",
                  "description": "Placeholder label for the version being borrowed"
                }
              },
              "required": [
                "bind",
                "conflict",
                "description",
                "doc",
                "emotion",
                "exception",
                "name",
                "source",
                "start",
                "version"
              ],
              "type": "object"
            },
            "Branch": {
              "$ref": "#/definitions/NodeText",
              "description": "A branch in `Markup` that renders different text depending on an input, e.g., ` ``$1[I am $1|I am nothing]`` `"
            },
            "Changed": {
              "additionalProperties": false,
              "description": "A change predicate expression, true if the stream changed, causing this reevaluation, e.g., `∆ Key()` Start inputs: $1 = stream that changed",
              "properties": {
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "doc",
                "emotion",
                "name",
                "start"
              ],
              "type": "object"
            },
            "ConceptLink": {
              "$ref": "#/definitions/DescriptiveNodeText",
              "description": "A link to a Wordplay concept in `Markup`, e.g., ` ``Check out"
            },
            "Conditional": {
              "additionalProperties": false,
              "description": "A conditional expression, e.g., `truth ? 'yes' 'no'` Start inputs: $1 = description of condition to check Finish inputs: $1 = resulting value",
              "properties": {
                "afterthen": {
                  "$ref": "#/definitions/Template",
                  "description": "When the else case is chosen. Description inputs: $1: true if jumping to the \"else\" expression"
                },
                "condition": {
                  "$ref": "#/definitions/Template",
                  "description": "A placeholder label for the condition"
                },
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "ExpectedBooleanCondition": {
                      "$ref": "#/definitions/ConflictText",
                      "description": "When the condition is not boolean typed, e.g., `1 ? 'yes' 'no'` Description inputs: $1 = The non-boolean expression"
                    }
                  },
                  "required": [
                    "ExpectedBooleanCondition"
                  ],
                  "type": "object"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "else": {
                  "$ref": "#/definitions/Template",
                  "description": "After the then case is done. Description inputs: jump after the \"then\" expression"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "no": {
                  "$ref": "#/definitions/Template",
                  "description": "A placeholder label for else condition"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                },
                "yes": {
                  "$ref": "#/definitions/Template",
                  "description": "A placeholder label for then expression"
                }
              },
              "required": [
                "afterthen",
                "condition",
                "conflict",
                "doc",
                "else",
                "emotion",
                "finish",
                "name",
                "no",
                "start",
                "yes"
              ],
              "type": "object"
            },
            "ConversionDefinition": {
              "additionalProperties": false,
              "description": "A definition of a conversion, e.g. `→ # #m 5`",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "MisplacedConversion": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When a conversion is defined somewhere it's not allowed."
                    }
                  },
                  "required": [
                    "MisplacedConversion"
                  ],
                  "type": "object"
                },
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "conflict",
                "description",
                "doc",
                "emotion",
                "name",
                "start"
              ],
              "type": "object"
            },
            "ConversionType": {
              "$ref": "#/definitions/NodeText",
              "description": "A conversion type, e.g., `? → ''`"
            },
            "Convert": {
              "additionalProperties": false,
              "description": "A conversion expression, e.g., `1 → ''` Start inputs: $1 = expression to convert Finish inputs: $1 = resulting value",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "UnknownConversion": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When conversion could not be found. Description inputs: $1 = from type, $2: to type"
                    }
                  },
                  "required": [
                    "UnknownConversion"
                  ],
                  "type": "object"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "exception": {
                  "additionalProperties": false,
                  "description": "The set of exception values that this node can evaluate to.",
                  "properties": {
                    "ConversionException": {
                      "$ref": "#/definitions/ExceptionText",
                      "description": "When a conversion could not be found during evaluation. Description inputs: $1 = from type, $2: to type$1: From type"
                    }
                  },
                  "required": [
                    "ConversionException"
                  ],
                  "type": "object"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "conflict",
                "doc",
                "emotion",
                "exception",
                "finish",
                "name",
                "start"
              ],
              "type": "object"
            },
            "CycleType": {
              "$ref": "#/definitions/DescriptiveNodeText",
              "description": "A type that depends on itself and is therefore unknown, e.g., `a: a + 1`."
            },
            "Delete": {
              "additionalProperties": false,
              "description": "A row delete expression, e.g., `table ⎡- 1 < 2` Start inputs: $1 = table expression Finish inputs: $1 = resulting value",
              "properties": {
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "doc",
                "emotion",
                "finish",
                "name",
                "start"
              ],
              "type": "object"
            },
            "Dimension": {
              "$ref": "#/definitions/DescriptiveNodeText",
              "description": "A part of a number's unit, such as the `m` in `1m`, or the `s` in `1m/s^2`"
            },
            "Doc": {
              "$ref": "#/definitions/NodeText",
              "description": "A single language tagged documentation text, ` ``I am documentation``/en`"
            },
            "Docs": {
              "additionalProperties": false,
              "description": "Multiple language tagged documentation texts, ` ``Hi docs``/en``Hola docs``/es`",
              "properties": {
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "doc",
                "emotion",
                "name",
                "start"
              ],
              "type": "object"
            },
            "DocumentedExpression": {
              "additionalProperties": false,
              "description": "A expression with a doc, e.g., ` ``my doc``1 + 1 ``",
              "properties": {
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "doc",
                "emotion",
                "name",
                "start"
              ],
              "type": "object"
            },
            "Evaluate": {
              "additionalProperties": false,
              "description": "An evaluation of a function with inputs, e.g., `myfun(1 2 3)` Description inputs: $1 = name of function being evaluated Start inputs: none Finish inputs: $1 = resulting value",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "IncompatibleInput": {
                      "$ref": "#/definitions/ConflictText",
                      "description": "When an input given to this evaluate doesn't match the input of the function being evaluated Description inputs: $1 = expected type, $2 = given type"
                    },
                    "InputListMustBeLast": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When a list of inputs is given but isn't last."
                    },
                    "MisplacedInput": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When an input is given, but in the wrong order."
                    },
                    "MissingInput": {
                      "$ref": "#/definitions/ConflictText",
                      "description": "When an input is expected, but not given. Description inputs: $1 = missing input, $2: evaluate that is missing input"
                    },
                    "NotInstantiable": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When the structure definition given is an interface, and can't be created"
                    },
                    "UnexpectedInput": {
                      "$ref": "#/definitions/ConflictText",
                      "description": "When an input value is given but not expected Description inputs: $1 = evaluate with unexected input, $2: unexpected input"
                    },
                    "UnexpectedTypeInput": {
                      "$ref": "#/definitions/ConflictText",
                      "description": "When a type input given is not expected. Description inputs: $1 = definition given, $2: type given"
                    },
                    "UnknownInput": {
                      "$ref": "#/definitions/ConflictText",
                      "description": "When an named input value is given but not a known input name"
                    }
                  },
                  "required": [
                    "IncompatibleInput",
                    "UnexpectedTypeInput",
                    "MisplacedInput",
                    "MissingInput",
                    "NotInstantiable",
                    "UnexpectedInput",
                    "UnknownInput",
                    "InputListMustBeLast"
                  ],
                  "type": "object"
                },
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "evaluate": {
                  "$ref": "#/definitions/Template",
                  "description": "What to say after inputs are done evaluating, right before starting evaluation the function"
                },
                "exception": {
                  "additionalProperties": false,
                  "description": "The set of exception values that this node can evaluate to.",
                  "properties": {
                    "FunctionException": {
                      "$ref": "#/definitions/ExceptionText",
                      "description": "When the function being evaluated is not a function. Description inputs: $1 = Expression that didn't produce a function, $2: scope not found in, or undefined"
                    }
                  },
                  "required": [
                    "FunctionException"
                  ],
                  "type": "object"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "function": {
                  "$ref": "#/definitions/Template",
                  "description": "Placeholder label for the function"
                },
                "input": {
                  "$ref": "#/definitions/Template",
                  "description": "Placeholder labelf or an unspecified input"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "conflict",
                "description",
                "doc",
                "emotion",
                "evaluate",
                "exception",
                "finish",
                "function",
                "input",
                "name",
                "start"
              ],
              "type": "object"
            },
            "Example": {
              "$ref": "#/definitions/NodeText",
              "description": "Code inside `Markup`, e.g., ` ``This is how you add: \\1 + 1\\`` `"
            },
            "ExceptionType": {
              "$ref": "#/definitions/NodeText",
              "description": "An exception type, e.g., `!`"
            },
            "ExpressionPlaceholder": {
              "additionalProperties": false,
              "description": "An expression placeholder, e.g., `1 + _` Description inputs: $1: type or undefined",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "Placeholder": {
                      "$ref": "#/definitions/InternalConflictText"
                    }
                  },
                  "required": [
                    "Placeholder"
                  ],
                  "type": "object"
                },
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "exception": {
                  "additionalProperties": false,
                  "description": "The set of exception values that this node can evaluate to.",
                  "properties": {
                    "UnimplementedException": {
                      "$ref": "#/definitions/ExceptionText",
                      "description": "No inputs"
                    }
                  },
                  "required": [
                    "UnimplementedException"
                  ],
                  "type": "object"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "placeholder": {
                  "$ref": "#/definitions/Template"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "conflict",
                "description",
                "doc",
                "emotion",
                "exception",
                "name",
                "placeholder",
                "start"
              ],
              "type": "object"
            },
            "FormattedLiteral": {
              "additionalProperties": false,
              "description": "A formatted text literal, e.g., ` `hello *wordplay*` ` Description inputs: $1 = the text",
              "properties": {
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "description",
                "doc",
                "emotion",
                "name",
                "start"
              ],
              "type": "object"
            },
            "FormattedTranslation": {
              "$ref": "#/definitions/DescriptiveNodeText",
              "description": "One alternate translation of a formatted text literal, e.g., ` `*hello*`/en`*hola*`/es` ` Description inputs: $1 = the text"
            },
            "FormattedType": {
              "$ref": "#/definitions/NodeText",
              "description": "A formatted type, e.g., ` `` `"
            },
            "FunctionDefinition": {
              "additionalProperties": false,
              "description": "A function, e.g., `ƒ add(a•# b•#) a + b` Description inputs: $1: function name in locale",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "NoExpression": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When a function has no expression"
                    }
                  },
                  "required": [
                    "NoExpression"
                  ],
                  "type": "object"
                },
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "conflict",
                "description",
                "doc",
                "emotion",
                "name",
                "start"
              ],
              "type": "object"
            },
            "FunctionType": {
              "$ref": "#/definitions/DescriptiveNodeText",
              "description": "A function type, e.g., `ƒ(magic•#)•#`"
            },
            "Initial": {
              "$ref": "#/definitions/NodeText",
              "description": "Whether the evaluation happening is the first one, e.g., `◆` in `◆ ? 'first' 'later'`"
            },
            "Insert": {
              "additionalProperties": false,
              "description": "Inserting a table row, e.g., `table ⎡+ 1⎦` Start inputs: $1 = table expression Finish inputs: $1: resulting value",
              "properties": {
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "doc",
                "emotion",
                "finish",
                "name",
                "start"
              ],
              "type": "object"
            },
            "InternalExpression": {
              "additionalProperties": false,
              "description": "An internal expression, used to implement core APIs.",
              "properties": {
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "doc",
                "emotion",
                "name",
                "start"
              ],
              "type": "object"
            },
            "Is": {
              "additionalProperties": false,
              "description": "A predict to check if a value's type matches, e.g., `1•#` Description inputs: $1 = The type being checked for Start inputs: $1 = expression Finish inputs: $1 = resulting value, $2 = type of value",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "ImpossibleType": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When the type given isn't possible"
                    }
                  },
                  "required": [
                    "ImpossibleType"
                  ],
                  "type": "object"
                },
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "exception": {
                  "additionalProperties": false,
                  "description": "The set of exception values that this node can evaluate to.",
                  "properties": {
                    "TypeException": {
                      "$ref": "#/definitions/ExceptionText",
                      "description": "When a type expected is not the type that was received. Description input: $1 = expected type, $2 = received type"
                    }
                  },
                  "required": [
                    "TypeException"
                  ],
                  "type": "object"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "conflict",
                "description",
                "doc",
                "emotion",
                "exception",
                "finish",
                "name",
                "start"
              ],
              "type": "object"
            },
            "IsLocale": {
              "additionalProperties": false,
              "description": "Check if the current locale is a particular langauge, e.g., `🌏/en`",
              "properties": {
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "description",
                "doc",
                "emotion",
                "name",
                "start"
              ],
              "type": "object"
            },
            "Iteration": {
              "additionalProperties": false,
              "description": "An internal node used by higher order functions to iterate over a list of values. Finish inputs: $1 = resulting value",
              "properties": {
                "check": {
                  "$ref": "#/definitions/Template",
                  "description": "What to say when the next value is being checked to decide whether to continue"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "initialize": {
                  "$ref": "#/definitions/Template",
                  "description": "What to say when the iteration initialization begins"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "next": {
                  "$ref": "#/definitions/Template",
                  "description": "What to say when the next value is being gotten"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "check",
                "doc",
                "emotion",
                "finish",
                "initialize",
                "name",
                "next",
                "start"
              ],
              "type": "object"
            },
            "KeyValue": {
              "$ref": "#/definitions/NodeText",
              "description": "A key value pair in a map, such as `a: 1` in `{ a: 1 b: 2}`"
            },
            "Language": {
              "additionalProperties": false,
              "description": "A language tag appearing in a doc or name, such as `/en` in `name/en: 1` or ` ``My doc``/en`",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "MissingLanguage": {
                      "$ref": "#/definitions/InternalConflictText"
                    },
                    "UnknownLanguage": {
                      "$ref": "#/definitions/InternalConflictText"
                    }
                  },
                  "required": [
                    "UnknownLanguage",
                    "MissingLanguage"
                  ],
                  "type": "object"
                },
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                }
              },
              "required": [
                "conflict",
                "description",
                "doc",
                "emotion",
                "name"
              ],
              "type": "object"
            },
            "ListAccess": {
              "additionalProperties": false,
              "description": "Getting the value of a list at a particular index, e.g., `list[5]` Start inputs: $1 = list value Finish inputs: $1: resulting value",
              "properties": {
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "doc",
                "emotion",
                "finish",
                "name",
                "start"
              ],
              "type": "object"
            },
            "ListLiteral": {
              "additionalProperties": false,
              "description": "A list, e.g., `[1 2 3]` Description inputs: $1 = item count Finish inputs: $1 = resulting value",
              "properties": {
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "item": {
                  "$ref": "#/definitions/Template",
                  "description": "Placeholder label for an item in a list"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "description",
                "doc",
                "emotion",
                "finish",
                "item",
                "name",
                "start"
              ],
              "type": "object"
            },
            "ListType": {
              "$ref": "#/definitions/DescriptiveNodeText",
              "description": "A list type, e.g., `[#]` Description inputs: $1 = item type or undefined"
            },
            "MapLiteral": {
              "additionalProperties": false,
              "description": "A map literal, e.g., `{1:1 2:2 3:3}` Finish inputs: $1 = resulting value",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "NotAKeyValue": {
                      "$ref": "#/definitions/ConflictText",
                      "description": "When something other than a key value pair is given. Description inputs: $1 = expression that's not a map"
                    }
                  },
                  "required": [
                    "NotAKeyValue"
                  ],
                  "type": "object"
                },
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "conflict",
                "description",
                "doc",
                "emotion",
                "finish",
                "name",
                "start"
              ],
              "type": "object"
            },
            "MapType": {
              "$ref": "#/definitions/DescriptiveNodeText",
              "description": "A map type, e.g., `{#:#}` Description inputs: $1 = Key type or undefined, $2 = value type or undefined"
            },
            "Markup": {
              "$ref": "#/definitions/DescriptiveNodeText",
              "description": "Markup text used in documentation or phrase text, e.g., ` ``Hello, I am *bold*`` ` Description inputs: $1 = paragraph count"
            },
            "Mention": {
              "$ref": "#/definitions/DescriptiveNodeText",
              "description": "A placeholder for some template input or terminology name in a localization string, e.g., the `$1` in  ` ``My value is $1`` or `$bind` in ` ``I am a $bind`` ` Description inputs: $1 = the name or number mentioned"
            },
            "Name": {
              "$ref": "#/definitions/DescriptiveNodeText",
              "description": "A name, e.g., `hi`. Description inputs: $1 = name or undefined"
            },
            "NameType": {
              "additionalProperties": false,
              "description": "A named type, e.g., `Kitty` Description inputs: $1 = the type name",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "UnknownTypeName": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "A type representing an unknown name Description inputs: $1 = Invalid type"
                    }
                  },
                  "required": [
                    "UnknownTypeName"
                  ],
                  "type": "object"
                },
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                }
              },
              "required": [
                "conflict",
                "description",
                "doc",
                "emotion",
                "name"
              ],
              "type": "object"
            },
            "Names": {
              "$ref": "#/definitions/NodeText",
              "description": "A list of names, e.g., `hi,hello,hey`"
            },
            "NeverType": {
              "$ref": "#/definitions/NodeText",
              "description": "A type that is not possible"
            },
            "NoExpressionType": {
              "$ref": "#/definitions/NodeText",
              "description": "An unknown type because no expression was given in a block, e.g., ()"
            },
            "NonFunctionType": {
              "$ref": "#/definitions/DescriptiveNodeText",
              "description": "Non-function type, e.g., `1(2 3)` Description inputs: $1 = the type of the given function"
            },
            "NoneLiteral": {
              "additionalProperties": false,
              "description": "A none literal, e.g., `ø`",
              "properties": {
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "doc",
                "emotion",
                "name",
                "start"
              ],
              "type": "object"
            },
            "NoneType": {
              "$ref": "#/definitions/NodeText",
              "description": "A type representing nothing, e.g., `ø`"
            },
            "NotAType": {
              "$ref": "#/definitions/DescriptiveNodeText",
              "description": "Something that does not have a specific expected type, e.g., `list['hi']` Description inputs: $1 = type expected"
            },
            "NotEnclosedType": {
              "$ref": "#/definitions/NodeText",
              "description": "An unknown type because `.` is not defined in scope, e.g., `a: 1 + .`"
            },
            "NotImplementedType": {
              "$ref": "#/definitions/NodeText",
              "description": "An unknown type because of a placeholder expression, e.g., `a: 1 + _`"
            },
            "NumberLiteral": {
              "additionalProperties": false,
              "description": "A number literal, e.g., `1`",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "NotANumber": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When something is not a valid number format"
                    }
                  },
                  "required": [
                    "NotANumber"
                  ],
                  "type": "object"
                },
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "conflict",
                "description",
                "doc",
                "emotion",
                "name",
                "start"
              ],
              "type": "object"
            },
            "NumberType": {
              "$ref": "#/definitions/DescriptiveNodeText",
              "description": "A number type, e.g., `#m` Description inputs: $1 = the unit or undefined"
            },
            "Paragraph": {
              "$ref": "#/definitions/NodeText",
              "description": "A paragraph of text in `Markup`, e.g.,  `Paragraph 1` in ` ``Paragraph 1\\n\\nParagraph 2`` ` Description inputs: $1 = number, $2 = unit"
            },
            "Previous": {
              "additionalProperties": false,
              "description": "A previous value of a stream, `← 1 Key()` or `←← 10 Key()` Start inputs: $1 = the stream expression being checked Finish inputs: $1 = resulting value",
              "properties": {
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "doc",
                "emotion",
                "finish",
                "name",
                "start"
              ],
              "type": "object"
            },
            "Program": {
              "additionalProperties": false,
              "description": "A program, e.g., `1 + 1`, `hello()`, etc. Start inputs: $1 = the stream that caused the evaluation, or nothing Finish inputs: $1 = resulting value",
              "properties": {
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "done": {
                  "$ref": "#/definitions/Template",
                  "description": "What to say when the program is done evaluating"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "exception": {
                  "additionalProperties": false,
                  "description": "The set of exception values that this node can evaluate to.",
                  "properties": {
                    "BlankException": {
                      "$ref": "#/definitions/ExceptionText",
                      "description": "When a program is blank"
                    },
                    "EvaluationLimitException": {
                      "$ref": "#/definitions/ExceptionText",
                      "description": "When the number of function evaluations have exceeded a limit Description inputs: $1 = The function that was evaluated too many times"
                    },
                    "StepLimitException": {
                      "$ref": "#/definitions/ExceptionText",
                      "description": "When the number of steps have exceeded a limit"
                    },
                    "ValueException": {
                      "$ref": "#/definitions/ExceptionText",
                      "description": "When a value was expected, but not provided"
                    }
                  },
                  "required": [
                    "BlankException",
                    "EvaluationLimitException",
                    "StepLimitException",
                    "ValueException"
                  ],
                  "type": "object"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "halt": {
                  "$ref": "#/definitions/Template",
                  "description": "What to say when the program is halting because of a fatal error"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                },
                "unevaluated": {
                  "$ref": "#/definitions/Template",
                  "description": "What to say when the program has yet to evaluate"
                }
              },
              "required": [
                "doc",
                "done",
                "emotion",
                "exception",
                "finish",
                "halt",
                "name",
                "start",
                "unevaluated"
              ],
              "type": "object"
            },
            "PropertyBind": {
              "additionalProperties": false,
              "description": "Revising a structure with a new value, e.g., `mammal.name: 5` Description input: $1 = the name being refined Finish inputs: $1: revised property, $2: revised value",
              "properties": {
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "description",
                "doc",
                "emotion",
                "finish",
                "name",
                "start"
              ],
              "type": "object"
            },
            "PropertyReference": {
              "additionalProperties": false,
              "description": "Getting a structure property, e.g., `mammal.name` Finish inputs: $1: property name, $2: value",
              "properties": {
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "property": {
                  "$ref": "#/definitions/Template"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "description",
                "doc",
                "emotion",
                "finish",
                "name",
                "property",
                "start"
              ],
              "type": "object"
            },
            "Reaction": {
              "additionalProperties": false,
              "description": "Generating a stream of values from other streams, e.g., `a: 1 … ∆ Time() … a + 1` Finish inputs: $1 = resulting value",
              "properties": {
                "condition": {
                  "$ref": "#/definitions/Template",
                  "description": "Placeholder label for the condition to check"
                },
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "ExpectedStream": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When the condition doesn't refer to a strema"
                    }
                  },
                  "required": [
                    "ExpectedStream"
                  ],
                  "type": "object"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "initial": {
                  "$ref": "#/definitions/Template",
                  "description": "Placeholder label for the initial value"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "next": {
                  "$ref": "#/definitions/Template",
                  "description": "Placeholder label for the next value"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "condition",
                "conflict",
                "doc",
                "emotion",
                "finish",
                "initial",
                "name",
                "next",
                "start"
              ],
              "type": "object"
            },
            "Reference": {
              "additionalProperties": false,
              "description": "A bind name, e.g., `a` in `1 + a` Description inputs: $1 = the name Start inputs: $1 = the name being resolved",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "ReferenceCycle": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When a name refers to itself outside a reaction"
                    },
                    "UnexpectedTypeVariable": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When a reference refers to a type variable"
                    },
                    "UnknownName": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When the name does not correspond to a bind in scope Description inputs: $1 = Scope"
                    }
                  },
                  "required": [
                    "UnknownName",
                    "ReferenceCycle",
                    "UnexpectedTypeVariable"
                  ],
                  "type": "object"
                },
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "exception": {
                  "additionalProperties": false,
                  "description": "The set of exception values that this node can evaluate to.",
                  "properties": {
                    "NameException": {
                      "$ref": "#/definitions/ExceptionText",
                      "description": "When a name couldn't be found in bindings in scope Description inputs: $1 = Scope in which name was not found"
                    }
                  },
                  "required": [
                    "NameException"
                  ],
                  "type": "object"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "conflict",
                "description",
                "doc",
                "emotion",
                "exception",
                "name",
                "start"
              ],
              "type": "object"
            },
            "Row": {
              "additionalProperties": false,
              "description": "A row in a table, e.g., `⎡1 2⎦`",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "ExtraCell": {
                      "$ref": "#/definitions/ConflictText",
                      "description": "When an extra cell was provided. $1: Cell"
                    },
                    "InvalidRow": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When a row does not form to it's table's type definition"
                    },
                    "MissingCell": {
                      "$ref": "#/definitions/ConflictText",
                      "description": "When cell is missing from a row. $1: Column $2: Row"
                    },
                    "UnexpectedColumnBind": {
                      "$ref": "#/definitions/ConflictText",
                      "description": "When a bind was not expected in a row but it was provided."
                    },
                    "UnknownColumn": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When a unknown column is specified by name."
                    }
                  },
                  "required": [
                    "InvalidRow",
                    "MissingCell",
                    "ExtraCell",
                    "UnknownColumn",
                    "UnexpectedColumnBind"
                  ],
                  "type": "object"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                }
              },
              "required": [
                "conflict",
                "doc",
                "emotion",
                "name"
              ],
              "type": "object"
            },
            "Select": {
              "additionalProperties": false,
              "description": "A table select, e.g., `table ⎡? one⎦ 1 < 2` Finish inputs: $1 = the table, $2: the result",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "ExpectedSelectName": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When a cell in the row isn't a name Description inputs: $1: The select expression"
                    }
                  },
                  "required": [
                    "ExpectedSelectName"
                  ],
                  "type": "object"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "conflict",
                "doc",
                "emotion",
                "finish",
                "name",
                "start"
              ],
              "type": "object"
            },
            "SetLiteral": {
              "additionalProperties": false,
              "description": "A set, e.g., `{ 1 2 3 }` Finish inputs: $1 = the new set!",
              "properties": {
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "description",
                "doc",
                "emotion",
                "finish",
                "name",
                "start"
              ],
              "type": "object"
            },
            "SetOrMapAccess": {
              "additionalProperties": false,
              "description": "A set or map access, e.g., `set{1}` Finish inputs: $1 = the set/map value",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "IncompatibleKey": {
                      "$ref": "#/definitions/ConflictText",
                      "description": "A type of the key given doesn't match the type of the key in the set Description inputs: $1: expected type, $2: given type"
                    }
                  },
                  "required": [
                    "IncompatibleKey"
                  ],
                  "type": "object"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "conflict",
                "doc",
                "emotion",
                "finish",
                "name",
                "start"
              ],
              "type": "object"
            },
            "SetType": {
              "$ref": "#/definitions/DescriptiveNodeText",
              "description": "A set type, e.g., `{#}` Description inputs: $1 = type or undefined"
            },
            "Source": {
              "$ref": "#/definitions/NodeText",
              "description": "A source file that contains a name and program."
            },
            "StreamDefinition": {
              "additionalProperties": false,
              "description": "A stream definition. Not typically written, since all streams are defined internally, but basically like a structure definition, e.g., `… Key()`",
              "properties": {
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "doc",
                "emotion",
                "name",
                "start"
              ],
              "type": "object"
            },
            "StreamDefinitionType": {
              "$ref": "#/definitions/NodeText",
              "description": "A type of stream, internally generated"
            },
            "StreamType": {
              "$ref": "#/definitions/NodeText",
              "description": "A type of stream, e.g., `… #`"
            },
            "StructureDefinition": {
              "additionalProperties": false,
              "description": "A structure type, e.g., `•Kitty(name•'')` Description inputs: $1 = name of the structure",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "DisallowedInputs": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When inputs are declared on a structure with unimplemented functions"
                    },
                    "IncompleteImplementation": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When a structure implements some functions, but not all"
                    },
                    "NotAnInterface": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When a structure implements something that isn't an interface"
                    },
                    "UnimplementedInterface": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When a structure implements an interface, but not all of its functions Description inputs: $1 = Interface, $2 = Function"
                    }
                  },
                  "required": [
                    "DisallowedInputs",
                    "IncompleteImplementation",
                    "NotAnInterface",
                    "UnimplementedInterface"
                  ],
                  "type": "object"
                },
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "conflict",
                "description",
                "doc",
                "emotion",
                "name",
                "start"
              ],
              "type": "object"
            },
            "StructureType": {
              "$ref": "#/definitions/DescriptiveNodeText",
              "description": "A structure type, internally generated to represent a structure definition. Description inputs: $1 = name of structure"
            },
            "TableLiteral": {
              "additionalProperties": false,
              "description": "A table literal, e.g., `⎡a•# b•#⎦⎡1 2⎦` Description inputs: $1 = the number of rows Finish inputs: $1 = resulting table",
              "properties": {
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "description",
                "doc",
                "emotion",
                "finish",
                "name",
                "start"
              ],
              "type": "object"
            },
            "TableType": {
              "additionalProperties": false,
              "description": "A table type, e.g., `⎡a•# b•\"\" c•Cat⎦`",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "ExpectedColumnType": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When a column's type is missing Description inputs: $1 = The missing column"
                    }
                  },
                  "required": [
                    "ExpectedColumnType"
                  ],
                  "type": "object"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                }
              },
              "required": [
                "conflict",
                "doc",
                "emotion",
                "name"
              ],
              "type": "object"
            },
            "TextLiteral": {
              "additionalProperties": false,
              "description": "A text literal, e.g., `'hi'` Description inputs: $1 = the text of the text literal",
              "properties": {
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "description",
                "doc",
                "emotion",
                "name",
                "start"
              ],
              "type": "object"
            },
            "TextType": {
              "$ref": "#/definitions/DescriptiveNodeText",
              "description": "A text type, e.g., `''` Description inputs: $1 = concrete type or undefined"
            },
            "This": {
              "additionalProperties": false,
              "description": "A reference to the containing value of a structure, conversion, or reaction, e.g., the `.` in `1 … ∆ Key() ? . + 1 Finish inputs: $1 = resulting value",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "MisplacedThis": {
                      "$ref": "#/definitions/InternalConflictText"
                    }
                  },
                  "required": [
                    "MisplacedThis"
                  ],
                  "type": "object"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "conflict",
                "doc",
                "emotion",
                "name",
                "start"
              ],
              "type": "object"
            },
            "Token": {
              "$ref": "#/definitions/DescriptiveNodeText",
              "description": "Any token in a Wordplay program. Description inputs: $1 = token label, $2 = token text"
            },
            "Translation": {
              "$ref": "#/definitions/DescriptiveNodeText",
              "description": "One alternate translation of a text literal, e.g., the `'hola/es`' of `'hi'/en'hola'/es` Description inputs: $1 = the text"
            },
            "TypeInputs": {
              "$ref": "#/definitions/NodeText",
              "description": "A list of type inputs to something that takes type variables, e.g., `⸨# #⸩` in `myfun⸨# #⸩(b c)`"
            },
            "TypePlaceholder": {
              "$ref": "#/definitions/NodeText",
              "description": "A type placeholder, `_`"
            },
            "TypeVariable": {
              "additionalProperties": false,
              "description": "A type variable in function or structure definition, `T` in `ƒ⸨T⸩(a: T)`",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "DuplicateTypeVariable": {
                      "$ref": "#/definitions/ConflictText",
                      "description": "When a type variable name is the same as another. $1: The duplicate name"
                    }
                  },
                  "required": [
                    "DuplicateTypeVariable"
                  ],
                  "type": "object"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                }
              },
              "required": [
                "conflict",
                "doc",
                "emotion",
                "name"
              ],
              "type": "object"
            },
            "TypeVariables": {
              "$ref": "#/definitions/NodeText",
              "description": "A list of type variables in a function or structure definition, e.g. `⸨T⸩` in `ƒ⸨T⸩(a: T b: T)`"
            },
            "UnaryEvaluate": {
              "additionalProperties": false,
              "description": "A unary operation, e.g., `-1` Description inputs: $1 = the operator Finish inputs: $1 = resulting value",
              "properties": {
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A precise description of the node's contents, more specific than a name. If not provided, name is used."
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "description",
                "doc",
                "emotion",
                "finish",
                "name",
                "start"
              ],
              "type": "object"
            },
            "UnionType": {
              "$ref": "#/definitions/DescriptiveNodeText",
              "description": "Two possible types, e.g., `# | ''` Description inputs: $1 = first type, $2 = second type"
            },
            "Unit": {
              "$ref": "#/definitions/DescriptiveNodeText",
              "description": "A unit of a number, e.g., `m` in `1m` Description inputs: $1 = unit description"
            },
            "UnknownNameType": {
              "$ref": "#/definitions/DescriptiveNodeText",
              "description": "A type representing an unknown named type, e.g., `b` in `a: b + 1` Description inputs: $1 = name that's not known or undefined"
            },
            "UnknownType": {
              "additionalProperties": false,
              "description": "A type that is not known. All unknown types are rendered as a sequence of reasons, e.g., 'unknown type because X because Y because Z...\"\". The unknown type description is used for the beginning of this message, and then the connector below is used to string them together.",
              "properties": {
                "connector": {
                  "description": "The connector between reasons, e.g., \"because \"",
                  "type": "string"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                }
              },
              "required": [
                "connector",
                "doc",
                "emotion",
                "name"
              ],
              "type": "object"
            },
            "UnknownVariableType": {
              "$ref": "#/definitions/NodeText",
              "description": "A variable type that is not defined, e.g., `C` in `ƒ help⸨A⸩(b•C)`"
            },
            "UnparsableExpression": {
              "additionalProperties": false,
              "description": "An unparsable expression, e.g., `]a[`",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "UnclosedDelimiter": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When a delimiter is unclosed. Description inputs: $1: unclosed token, $2: opening delimiter"
                    },
                    "UnparsableConflict": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When an unparsable expression or type is used. Description inputs: $1: true if expression, false if type"
                    }
                  },
                  "required": [
                    "UnparsableConflict",
                    "UnclosedDelimiter"
                  ],
                  "type": "object"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "exception": {
                  "additionalProperties": false,
                  "description": "The set of exception values that this node can evaluate to.",
                  "properties": {
                    "UnparsableException": {
                      "$ref": "#/definitions/ExceptionText",
                      "description": "When an unparsable thing is evaluated"
                    }
                  },
                  "required": [
                    "UnparsableException"
                  ],
                  "type": "object"
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "conflict",
                "doc",
                "emotion",
                "exception",
                "name",
                "start"
              ],
              "type": "object"
            },
            "UnparsableType": {
              "$ref": "#/definitions/NodeText",
              "description": "A type that can't be parsed."
            },
            "Update": {
              "additionalProperties": false,
              "description": "A table update expression, e.g. `table ⎡: one: 1 ⎦ one < 1` Start inputs: $1 = the table Finish inputs: $1 = resulting value",
              "properties": {
                "conflict": {
                  "additionalProperties": false,
                  "description": "Conflicts that this node can generate",
                  "properties": {
                    "ExpectedColumnBind": {
                      "$ref": "#/definitions/InternalConflictText",
                      "description": "When a column name was expected but not given"
                    },
                    "IncompatibleCellType": {
                      "$ref": "#/definitions/ConflictText",
                      "description": "When a value was given that didn't match the expected type of the column Description inputs: $1: expected type, $2: given type"
                    }
                  },
                  "required": [
                    "ExpectedColumnBind",
                    "IncompatibleCellType"
                  ],
                  "type": "object"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation text that appears in the documentation view"
                },
                "emotion": {
                  "description": "The emotion that should be conveyed in animations of the node type",
                  "enum": [
                    "$?",
                    "angry",
                    "arrogant",
                    "bored",
                    "cheerful",
                    "curious",
                    "confused",
                    "eager",
                    "excited",
                    "grumpy",
                    "happy",
                    "insecure",
                    "kind",
                    "neutral",
                    "sad",
                    "scared",
                    "serious",
                    "shy",
                    "surprised",
                    "precise"
                  ],
                  "type": "string"
                },
                "finish": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type finishes evaluating and has a value."
                },
                "name": {
                  "description": "The name that should be used to refer to the node type",
                  "type": "string"
                },
                "start": {
                  "$ref": "#/definitions/Template",
                  "description": "The text shown when this expression type first begins evaluating."
                }
              },
              "required": [
                "conflict",
                "doc",
                "emotion",
                "finish",
                "name",
                "start"
              ],
              "type": "object"
            },
            "VariableType": {
              "$ref": "#/definitions/NodeText",
              "description": "A type representing an unknown type variable"
            },
            "WebLink": {
              "$ref": "#/definitions/DescriptiveNodeText",
              "description": "A link in `Markup`, e.g., ` ``<wordplay@https://wordplay.div>`` ` Description inputs: $1 = the url"
            },
            "Words": {
              "$ref": "#/definitions/NodeText",
              "description": "A sequence of glyphs in `Markup` that aren't other markup content, e.g., ` ``These are just words.`` `"
            }
          },
          "required": [
            "Dimension",
            "Doc",
            "Docs",
            "KeyValue",
            "Language",
            "Name",
            "Names",
            "Row",
            "Token",
            "TypeInputs",
            "TypeVariable",
            "TypeVariables",
            "Markup",
            "Paragraph",
            "WebLink",
            "ConceptLink",
            "Words",
            "Example",
            "Mention",
            "Branch",
            "BinaryEvaluate",
            "Bind",
            "Block",
            "BooleanLiteral",
            "Borrow",
            "Changed",
            "Conditional",
            "ConversionDefinition",
            "Convert",
            "Delete",
            "DocumentedExpression",
            "Evaluate",
            "ExpressionPlaceholder",
            "FunctionDefinition",
            "Iteration",
            "Insert",
            "Initial",
            "Is",
            "IsLocale",
            "ListAccess",
            "ListLiteral",
            "MapLiteral",
            "NumberLiteral",
            "InternalExpression",
            "NoneLiteral",
            "Previous",
            "Program",
            "PropertyBind",
            "PropertyReference",
            "Reaction",
            "Reference",
            "Select",
            "SetLiteral",
            "SetOrMapAccess",
            "Source",
            "StreamDefinition",
            "StructureDefinition",
            "TableLiteral",
            "TextLiteral",
            "Translation",
            "FormattedLiteral",
            "FormattedTranslation",
            "This",
            "UnaryEvaluate",
            "UnparsableExpression",
            "Update",
            "AnyType",
            "BooleanType",
            "ConversionType",
            "FormattedType",
            "ExceptionType",
            "FunctionType",
            "ListType",
            "MapType",
            "NumberType",
            "NameType",
            "NeverType",
            "NoneType",
            "SetType",
            "StreamDefinitionType",
            "StreamType",
            "StructureType",
            "TableType",
            "TextType",
            "TypePlaceholder",
            "UnionType",
            "UnparsableType",
            "Unit",
            "VariableType",
            "UnknownType",
            "UnknownNameType",
            "CycleType",
            "UnknownVariableType",
            "NoExpressionType",
            "NotEnclosedType",
            "NotImplementedType",
            "NotAType",
            "NonFunctionType"
          ],
          "type": "object"
        },
        "output": {
          "additionalProperties": false,
          "description": "Documentation for output types.",
          "properties": {
            "Arrangement": {
              "$ref": "#/definitions/NameAndDoc",
              "description": "The base interface for arrangement types"
            },
            "Color": {
              "additionalProperties": false,
              "description": "A color in LCH spaces",
              "properties": {
                "chroma": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "0-150 with 0 as grey and 150 as full color"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "hue": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "0-360, a color wheel"
                },
                "lightness": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "0-100%, with 0 as black and 100 as white"
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                }
              },
              "required": [
                "chroma",
                "doc",
                "hue",
                "lightness",
                "names"
              ],
              "type": "object"
            },
            "Easing": {
              "additionalProperties": false,
              "description": "Localized descriptions of transition styles",
              "properties": {
                "cautious": {
                  "$ref": "#/definitions/NameText",
                  "description": "CSS ease-in-out"
                },
                "pokey": {
                  "$ref": "#/definitions/NameText",
                  "description": "CSS ease-in"
                },
                "straight": {
                  "$ref": "#/definitions/NameText",
                  "description": "CSS linear"
                },
                "zippy": {
                  "$ref": "#/definitions/NameText",
                  "description": "CSS ease-out"
                }
              },
              "required": [
                "straight",
                "pokey",
                "cautious",
                "zippy"
              ],
              "type": "object"
            },
            "Free": {
              "additionalProperties": false,
              "description": "An arrangement where locations are specified by content",
              "properties": {
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A description of the free layout for screen readers. $1: output count"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                }
              },
              "required": [
                "description",
                "doc",
                "names"
              ],
              "type": "object"
            },
            "Grid": {
              "additionalProperties": false,
              "description": "A grid arrangement, like a table",
              "properties": {
                "cellHeight": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "How tall the cells are"
                },
                "cellWidth": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "How wide the cells are"
                },
                "columns": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "How many columns in the grid"
                },
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A description of the grid of content $1: rows $2: columns"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                },
                "padding": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "How much padding between cells"
                },
                "rows": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "How many rows in the grid"
                }
              },
              "required": [
                "cellHeight",
                "cellWidth",
                "columns",
                "description",
                "doc",
                "names",
                "padding",
                "rows"
              ],
              "type": "object"
            },
            "Group": {
              "additionalProperties": false,
              "description": "A group of output with a layout",
              "properties": {
                "background": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The background color behind a phrase, group, or stage"
                },
                "color": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The color of glyphs in a phrase, group, or stage"
                },
                "content": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The list of content in the group"
                },
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "$1 = Layout description, $2 = pose description"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "duration": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The curation of transition"
                },
                "entering": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Pose or sequence for when a phrase, group, or stage enters stage"
                },
                "exiting": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Pose or sequence for when a phrase, group, or stage is leaving stage"
                },
                "face": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The font face used in a phrase, group, or stage"
                },
                "flipx": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Whether a phrase, group, or stage is flipped horizontally"
                },
                "flipy": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Whether a phrase, group, or stage is flipped vertically"
                },
                "layout": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The layout to use to place the content in the group on stage"
                },
                "matter": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The matter to use for the group if it's involved in collisions"
                },
                "moving": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Pose or sequence for when a phrase, group, or stage is moving"
                },
                "name": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The name of a phrase, group, or stage, used in Choice, Collision, and animations"
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                },
                "offset": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The offset of phrase, group, or stage from its place"
                },
                "opacity": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The opacity of a phrase, group, or stage"
                },
                "place": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The place on stage of a phrase, group, or stage"
                },
                "resting": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Pose or sequence for when a phrase, group, or stage is not moving"
                },
                "rotation": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The rotation of a phrase, group, or stage"
                },
                "scale": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The scale of phrase, group, or stage"
                },
                "selectable": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Whether a phrase, group, or stage is selectable by Choice"
                },
                "size": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "How tall glyphs in a phrase, group, or stage should be"
                },
                "style": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The transition style of transitions"
                }
              },
              "required": [
                "background",
                "color",
                "content",
                "description",
                "doc",
                "duration",
                "entering",
                "exiting",
                "face",
                "flipx",
                "flipy",
                "layout",
                "matter",
                "moving",
                "name",
                "names",
                "offset",
                "opacity",
                "place",
                "resting",
                "rotation",
                "scale",
                "selectable",
                "size",
                "style"
              ],
              "type": "object"
            },
            "Matter": {
              "additionalProperties": false,
              "description": "Physical properties of matter",
              "properties": {
                "bounciness": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "from 0-1, how bouncy something should be, where 0 means not bouncy at all, and 1 means retaining all of it's energy on collision"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "friction": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "from 0-1, where 0 means no sliding, and 1 means sliding indefinitely"
                },
                "mass": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "in kilograms, how much something weighs for the purposes of collisions"
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                }
              },
              "required": [
                "bounciness",
                "doc",
                "friction",
                "mass",
                "names"
              ],
              "type": "object"
            },
            "Phrase": {
              "additionalProperties": false,
              "description": "A sequence of glyphs",
              "properties": {
                "alignment": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The alignment to use when wrapped"
                },
                "background": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The background color behind a phrase, group, or stage"
                },
                "color": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The color of glyphs in a phrase, group, or stage"
                },
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A description of the phrase for screen readers. 1$: non-optional text, $2: optional name, $3: optional size, $4: optional font, $5: then non-optional pose"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "duration": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The curation of transition"
                },
                "entering": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Pose or sequence for when a phrase, group, or stage enters stage"
                },
                "exiting": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Pose or sequence for when a phrase, group, or stage is leaving stage"
                },
                "face": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The font face used in a phrase, group, or stage"
                },
                "flipx": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Whether a phrase, group, or stage is flipped horizontally"
                },
                "flipy": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Whether a phrase, group, or stage is flipped vertically"
                },
                "matter": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The matter properties for the phrase"
                },
                "moving": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Pose or sequence for when a phrase, group, or stage is moving"
                },
                "name": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The name of a phrase, group, or stage, used in Choice, Collision, and animations"
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                },
                "offset": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The offset of phrase, group, or stage from its place"
                },
                "opacity": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The opacity of a phrase, group, or stage"
                },
                "place": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The place on stage of a phrase, group, or stage"
                },
                "resting": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Pose or sequence for when a phrase, group, or stage is not moving"
                },
                "rotation": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The rotation of a phrase, group, or stage"
                },
                "scale": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The scale of phrase, group, or stage"
                },
                "selectable": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Whether a phrase, group, or stage is selectable by Choice"
                },
                "size": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "How tall glyphs in a phrase, group, or stage should be"
                },
                "style": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The transition style of transitions"
                },
                "text": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The glyphs to render"
                },
                "wrap": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The boundary at which to wrap glyphs to another line"
                }
              },
              "required": [
                "alignment",
                "background",
                "color",
                "description",
                "doc",
                "duration",
                "entering",
                "exiting",
                "face",
                "flipx",
                "flipy",
                "matter",
                "moving",
                "name",
                "names",
                "offset",
                "opacity",
                "place",
                "resting",
                "rotation",
                "scale",
                "selectable",
                "size",
                "style",
                "text",
                "wrap"
              ],
              "type": "object"
            },
            "Place": {
              "additionalProperties": false,
              "description": "A place on stage",
              "properties": {
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                },
                "x": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "x-coordinate"
                },
                "y": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "y-coordinate"
                },
                "z": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "z-coordinate"
                }
              },
              "required": [
                "doc",
                "names",
                "x",
                "y",
                "z"
              ],
              "type": "object"
            },
            "Pose": {
              "additionalProperties": false,
              "description": "A pose, for use in overriding an output's defaults for entering, resting, moving, or existing states",
              "properties": {
                "color": {
                  "$ref": "#/definitions/NameAndDoc"
                },
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "all optional inputs: opacity, rotation, scale, flipx, flipy"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "duration": {
                  "$ref": "#/definitions/NameAndDoc"
                },
                "flipx": {
                  "$ref": "#/definitions/NameAndDoc"
                },
                "flipy": {
                  "$ref": "#/definitions/NameAndDoc"
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                },
                "offset": {
                  "$ref": "#/definitions/NameAndDoc"
                },
                "opacity": {
                  "$ref": "#/definitions/NameAndDoc"
                },
                "rotation": {
                  "$ref": "#/definitions/NameAndDoc"
                },
                "scale": {
                  "$ref": "#/definitions/NameAndDoc"
                },
                "style": {
                  "$ref": "#/definitions/NameAndDoc"
                }
              },
              "required": [
                "color",
                "description",
                "doc",
                "duration",
                "flipx",
                "flipy",
                "names",
                "offset",
                "opacity",
                "rotation",
                "scale",
                "style"
              ],
              "type": "object"
            },
            "Rectangle": {
              "additionalProperties": false,
              "description": "A rectangle shape, for Stage.frame",
              "properties": {
                "bottom": {
                  "$ref": "#/definitions/NameAndDoc"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "left": {
                  "$ref": "#/definitions/NameAndDoc"
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                },
                "right": {
                  "$ref": "#/definitions/NameAndDoc"
                },
                "top": {
                  "$ref": "#/definitions/NameAndDoc"
                }
              },
              "required": [
                "bottom",
                "doc",
                "left",
                "names",
                "right",
                "top"
              ],
              "type": "object"
            },
            "Row": {
              "additionalProperties": false,
              "description": "A horizontal row arrangement",
              "properties": {
                "alignment": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Whether to align content vertically at the start, center, or end of the vertical axis"
                },
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A description of the row for screen readers. $1: total count $2: phrase count $3: group count"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                },
                "padding": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "How much padding to place between content"
                }
              },
              "required": [
                "alignment",
                "description",
                "doc",
                "names",
                "padding"
              ],
              "type": "object"
            },
            "Sequence": {
              "additionalProperties": false,
              "description": "A sequence of poses, keyed by percentage complete, for use in overriding an output's defaults for entering, resting, moving, or existing states",
              "properties": {
                "count": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "How many times to repeat the sequence"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "duration": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "How long the sequence is"
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                },
                "poses": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "A map from percents complete to poses"
                },
                "style": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The style to use to complete the sequence"
                }
              },
              "required": [
                "count",
                "doc",
                "duration",
                "names",
                "poses",
                "style"
              ],
              "type": "object"
            },
            "Shape": {
              "$ref": "#/definitions/NameAndDoc",
              "description": "The base interface for shape types"
            },
            "Stack": {
              "additionalProperties": false,
              "description": "A vertical stack arragement",
              "properties": {
                "alignment": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Whether to align content at the start, center, or end of the horizontal axis"
                },
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A description of the stack for screen readers. $1: total count $2: phrase count $3: group count"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                },
                "padding": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "How much padding to place between content"
                }
              },
              "required": [
                "alignment",
                "description",
                "doc",
                "names",
                "padding"
              ],
              "type": "object"
            },
            "Stage": {
              "additionalProperties": false,
              "description": "The whole stage view and settings to control its appearance",
              "properties": {
                "background": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The background color behind a phrase, group, or stage"
                },
                "color": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The color of glyphs in a phrase, group, or stage"
                },
                "content": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "A list of content to show on stage"
                },
                "description": {
                  "$ref": "#/definitions/Template",
                  "description": "A description of the stage for screen readers. $1: total outputs, $2: total phrases, $3: total groups, $4: pose"
                },
                "doc": {
                  "$ref": "#/definitions/DocText",
                  "description": "Documentation for this definition, to appear in the documentation browser."
                },
                "duration": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The curation of transition"
                },
                "entering": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Pose or sequence for when a phrase, group, or stage enters stage"
                },
                "exiting": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Pose or sequence for when a phrase, group, or stage is leaving stage"
                },
                "face": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The font face used in a phrase, group, or stage"
                },
                "flipx": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Whether a phrase, group, or stage is flipped horizontally"
                },
                "flipy": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Whether a phrase, group, or stage is flipped vertically"
                },
                "frame": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The shape of the frame to clip stage content"
                },
                "gravity": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Gravity, influencing change in y velocity"
                },
                "moving": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Pose or sequence for when a phrase, group, or stage is moving"
                },
                "name": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The name of a phrase, group, or stage, used in Choice, Collision, and animations"
                },
                "names": {
                  "$ref": "#/definitions/NameText",
                  "description": "One or more names for this definition. Be careful not to introduce duplicates."
                },
                "offset": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The offset of phrase, group, or stage from its place"
                },
                "opacity": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The opacity of a phrase, group, or stage"
                },
                "place": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The place on stage of a phrase, group, or stage"
                },
                "resting": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Pose or sequence for when a phrase, group, or stage is not moving"
                },
                "rotation": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The rotation of a phrase, group, or stage"
                },
                "scale": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The scale of phrase, group, or stage"
                },
                "selectable": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Whether a phrase, group, or stage is selectable by Choice"
                },
                "size": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "How tall glyphs in a phrase, group, or stage should be"
                },
                "style": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "The transition style of transitions"
                }
              },
              "required": [
                "background",
                "color",
                "content",
                "description",
                "doc",
                "duration",
                "entering",
                "exiting",
                "face",
                "flipx",
                "flipy",
                "frame",
                "gravity",
                "moving",
                "name",
                "names",
                "offset",
                "opacity",
                "place",
                "resting",
                "rotation",
                "scale",
                "selectable",
                "size",
                "style"
              ],
              "type": "object"
            },
            "Type": {
              "$ref": "#/definitions/NameAndDoc",
              "description": "The base interface for Phrase, Group, and Stage"
            },
            "sequence": {
              "additionalProperties": false,
              "description": "Convenience functions for generating maps for Sequences",
              "properties": {
                "bounce": {
                  "additionalProperties": false,
                  "description": "Bounces up and down on the vertical axis",
                  "properties": {
                    "doc": {
                      "$ref": "#/definitions/DocText",
                      "description": "Documentation for this definition, to appear in the documentation browser."
                    },
                    "height": {
                      "$ref": "#/definitions/NameAndDoc",
                      "description": "How high to bounce"
                    },
                    "names": {
                      "$ref": "#/definitions/NameText",
                      "description": "One or more names for this definition. Be careful not to introduce duplicates."
                    }
                  },
                  "required": [
                    "doc",
                    "height",
                    "names"
                  ],
                  "type": "object"
                },
                "fadein": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Fades in from purely transparent to purely opaque"
                },
                "popup": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Scales from 0 to larger than its size, then back to scale of 1"
                },
                "shake": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Offsets randomly in multiple directions"
                },
                "spin": {
                  "$ref": "#/definitions/NameAndDoc",
                  "description": "Spins on its center 0 to 360 dgrees"
                },
                "sway": {
                  "additionalProperties": false,
                  "description": "Rotates on center axis left and right",
                  "properties": {
                    "angle": {
                      "$ref": "#/definitions/NameAndDoc",
                      "description": "How much to rotate"
                    },
                    "doc": {
                      "$ref": "#/definitions/DocText",
                      "description": "Documentation for this definition, to appear in the documentation browser."
                    },
                    "names": {
                      "$ref": "#/definitions/NameText",
                      "description": "One or more names for this definition. Be careful not to introduce duplicates."
                    }
                  },
                  "required": [
                    "angle",
                    "doc",
                    "names"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "sway",
                "bounce",
                "spin",
                "fadein",
                "popup",
                "shake"
              ],
              "type": "object"
            }
          },
          "required": [
            "Type",
            "Group",
            "Phrase",
            "Stage",
            "Shape",
            "Rectangle",
            "Pose",
            "Sequence",
            "Color",
            "Place",
            "Matter",
            "Arrangement",
            "Row",
            "Stack",
            "Grid",
            "Free",
            "Easing",
            "sequence"
          ],
          "type": "object"
        },
        "region": {
          "$ref": "#/definitions/RegionCode",
          "description": "An ISO 3166-2 region code: https://en.wikipedia.org/wiki/ISO_3166-2"
        },
        "rules": {
          "additionalProperties": false,
          "description": "Content moderation rules that creators promise to follow. See en-US.json for ground truth language.",
          "properties": {
            "dehumanization": {
              "$ref": "#/definitions/Template",
              "description": "The rule that bans any content that treats any individual or group of people as less than human"
            },
            "violence": {
              "$ref": "#/definitions/Template",
              "description": "The rule that bans any content that incites, encourages, or celebrates violence or harm"
            }
          },
          "required": [
            "violence",
            "dehumanization"
          ],
          "type": "object"
        },
        "term": {
          "additionalProperties": false,
          "description": "Common vocabulary that can be used in documentation and descriptions.",
          "properties": {
            "act": {
              "description": "The word for the top level organizational scheme of the tutorial, as in a dramatic play",
              "type": "string"
            },
            "bind": {
              "description": "The phrase to use to describe when values are bound to names, e.g., 'num: 5'",
              "type": "string"
            },
            "boolean": {
              "description": "What to call a boolean value",
              "type": "string"
            },
            "changed": {
              "description": "How to describe output that has changed",
              "type": "string"
            },
            "convert": {
              "description": "The verb for converting data from one type to another",
              "type": "string"
            },
            "decide": {
              "description": "The phrase to use to describe conditional logic",
              "type": "string"
            },
            "document": {
              "description": "What to call documentation in code",
              "type": "string"
            },
            "entered": {
              "description": "How to describe output that has entered for the first time",
              "type": "string"
            },
            "evaluate": {
              "description": "The phrase to use to describe",
              "type": "string"
            },
            "exception": {
              "description": "What to call an exception value",
              "type": "string"
            },
            "function": {
              "description": "What to call a function value",
              "type": "string"
            },
            "group": {
              "type": "string"
            },
            "index": {
              "description": "What to call an index into a list value",
              "type": "string"
            },
            "input": {
              "description": "What to call data that goes into a program",
              "type": "string"
            },
            "key": {
              "description": "What to call a key in a map",
              "type": "string"
            },
            "list": {
              "description": "What to call a list value",
              "type": "string"
            },
            "map": {
              "description": "What to call a map value",
              "type": "string"
            },
            "moved": {
              "description": "How to describe output that has moved",
              "type": "string"
            },
            "name": {
              "description": "How to refer to names",
              "type": "string"
            },
            "none": {
              "description": "What to call a none value",
              "type": "string"
            },
            "number": {
              "description": "What to call a number value",
              "type": "string"
            },
            "output": {
              "description": "What to call data that comes out of a program",
              "type": "string"
            },
            "phrase": {
              "description": "The word for phrase output in a Wordplay program",
              "type": "string"
            },
            "project": {
              "description": "What to call a Wordplay project",
              "type": "string"
            },
            "query": {
              "description": "What to call a query a table value",
              "type": "string"
            },
            "row": {
              "description": "What to call a row value",
              "type": "string"
            },
            "scene": {
              "description": "The word for the a comoponent of an act in a dramatic play",
              "type": "string"
            },
            "set": {
              "description": "What to call a set value",
              "type": "string"
            },
            "source": {
              "description": "What to call a Wordplay project source file",
              "type": "string"
            },
            "stage": {
              "type": "string"
            },
            "start": {
              "description": "What to call the main source in a project.",
              "type": "string"
            },
            "stream": {
              "description": "What to call a stream value",
              "type": "string"
            },
            "structure": {
              "description": "What to call a structure value",
              "type": "string"
            },
            "table": {
              "description": "What to call a table value",
              "type": "string"
            },
            "text": {
              "description": "What to call a text value",
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "value": {
              "description": "What to call a data value",
              "type": "string"
            }
          },
          "required": [
            "bind",
            "evaluate",
            "decide",
            "document",
            "project",
            "source",
            "input",
            "output",
            "convert",
            "act",
            "scene",
            "phrase",
            "group",
            "stage",
            "type",
            "start",
            "entered",
            "changed",
            "moved",
            "name",
            "value",
            "boolean",
            "table",
            "list",
            "map",
            "text",
            "number",
            "function",
            "none",
            "exception",
            "row",
            "set",
            "structure",
            "stream",
            "index",
            "query",
            "key"
          ],
          "type": "object"
        },
        "token": {
          "additionalProperties": false,
          "description": "Descriptions of all token categories. See Sym.ts for the symbol or symbol category that each represents.",
          "properties": {
            "Access": {
              "type": "string"
            },
            "Base": {
              "type": "string"
            },
            "Bind": {
              "type": "string"
            },
            "Bold": {
              "type": "string"
            },
            "Boolean": {
              "type": "string"
            },
            "BooleanType": {
              "type": "string"
            },
            "Borrow": {
              "type": "string"
            },
            "Branch": {
              "type": "string"
            },
            "Change": {
              "type": "string"
            },
            "Code": {
              "type": "string"
            },
            "Concept": {
              "type": "string"
            },
            "Conditional": {
              "type": "string"
            },
            "Convert": {
              "type": "string"
            },
            "Decimal": {
              "type": "string"
            },
            "Delete": {
              "type": "string"
            },
            "Doc": {
              "type": "string"
            },
            "End": {
              "type": "string"
            },
            "Etc": {
              "type": "string"
            },
            "EvalClose": {
              "type": "string"
            },
            "EvalOpen": {
              "type": "string"
            },
            "Extra": {
              "type": "string"
            },
            "Formatted": {
              "type": "string"
            },
            "FormattedType": {
              "type": "string"
            },
            "Function": {
              "type": "string"
            },
            "Infinity": {
              "type": "string"
            },
            "Initial": {
              "type": "string"
            },
            "Insert": {
              "type": "string"
            },
            "Italic": {
              "type": "string"
            },
            "JapaneseNumeral": {
              "type": "string"
            },
            "Language": {
              "type": "string"
            },
            "Light": {
              "type": "string"
            },
            "Link": {
              "type": "string"
            },
            "ListClose": {
              "type": "string"
            },
            "ListOpen": {
              "type": "string"
            },
            "Locale": {
              "type": "string"
            },
            "Mention": {
              "type": "string"
            },
            "Name": {
              "type": "string"
            },
            "None": {
              "type": "string"
            },
            "Number": {
              "type": "string"
            },
            "NumberType": {
              "type": "string"
            },
            "Operator": {
              "type": "string"
            },
            "Pi": {
              "type": "string"
            },
            "Placeholder": {
              "type": "string"
            },
            "Previous": {
              "type": "string"
            },
            "Region": {
              "type": "string"
            },
            "RomanNumeral": {
              "type": "string"
            },
            "Select": {
              "type": "string"
            },
            "Separator": {
              "type": "string"
            },
            "SetClose": {
              "type": "string"
            },
            "SetOpen": {
              "type": "string"
            },
            "Share": {
              "type": "string"
            },
            "Stream": {
              "type": "string"
            },
            "TableClose": {
              "type": "string"
            },
            "TableOpen": {
              "type": "string"
            },
            "TagClose": {
              "type": "string"
            },
            "TagOpen": {
              "type": "string"
            },
            "Text": {
              "type": "string"
            },
            "This": {
              "type": "string"
            },
            "Type": {
              "type": "string"
            },
            "TypeClose": {
              "type": "string"
            },
            "TypeOpen": {
              "type": "string"
            },
            "TypeOperator": {
              "type": "string"
            },
            "URL": {
              "type": "string"
            },
            "Underline": {
              "type": "string"
            },
            "Union": {
              "type": "string"
            },
            "Unknown": {
              "type": "string"
            },
            "Update": {
              "type": "string"
            },
            "Words": {
              "type": "string"
            }
          },
          "required": [
            "EvalOpen",
            "EvalClose",
            "SetOpen",
            "SetClose",
            "ListOpen",
            "ListClose",
            "TagOpen",
            "TagClose",
            "Bind",
            "Access",
            "Function",
            "Borrow",
            "Share",
            "Convert",
            "Doc",
            "Formatted",
            "FormattedType",
            "Words",
            "Link",
            "Italic",
            "Underline",
            "Light",
            "Bold",
            "Extra",
            "Concept",
            "URL",
            "Mention",
            "Branch",
            "None",
            "Type",
            "TypeOperator",
            "TypeOpen",
            "TypeClose",
            "Separator",
            "Language",
            "Region",
            "BooleanType",
            "NumberType",
            "JapaneseNumeral",
            "RomanNumeral",
            "Pi",
            "Infinity",
            "TableOpen",
            "TableClose",
            "Select",
            "Insert",
            "Update",
            "Delete",
            "Union",
            "Stream",
            "Change",
            "Initial",
            "Previous",
            "Placeholder",
            "Etc",
            "This",
            "Locale",
            "Operator",
            "Conditional",
            "Text",
            "Code",
            "Number",
            "Decimal",
            "Base",
            "Boolean",
            "Name",
            "Unknown",
            "End"
          ],
          "type": "object"
        },
        "ui": {
          "additionalProperties": false,
          "description": "User interface strings",
          "properties": {
            "conflicts": {
              "additionalProperties": false,
              "description": "The conflicts area at the bottom of the editor.",
              "properties": {
                "label": {
                  "description": "The ARIA label for the conflicts section in the editor.",
                  "type": "string"
                }
              },
              "required": [
                "label"
              ],
              "type": "object"
            },
            "dialog": {
              "additionalProperties": false,
              "properties": {
                "help": {
                  "additionalProperties": false,
                  "description": "The keyboard shortcut reference dialog",
                  "properties": {
                    "explanation": {
                      "$ref": "#/definitions/Template",
                      "description": "The explanation text just below the header."
                    },
                    "header": {
                      "description": "The header to be shown at the top of the dialog",
                      "type": "string"
                    },
                    "subheader": {
                      "additionalProperties": false,
                      "properties": {
                        "debug": {
                          "type": "string"
                        },
                        "editCode": {
                          "type": "string"
                        },
                        "insertCode": {
                          "type": "string"
                        },
                        "moveCursor": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "moveCursor",
                        "editCode",
                        "insertCode",
                        "debug"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "explanation",
                    "header",
                    "subheader"
                  ],
                  "type": "object"
                },
                "locale": {
                  "additionalProperties": false,
                  "description": "The locale chooser dialog",
                  "properties": {
                    "button": {
                      "additionalProperties": false,
                      "description": "Buttons in the locale chooser dialog",
                      "properties": {
                        "add": {
                          "description": "Add a locale",
                          "type": "string"
                        },
                        "remove": {
                          "description": "Remove a locale",
                          "type": "string"
                        },
                        "show": {
                          "description": "Show the locale chooser dialog",
                          "type": "string"
                        }
                      },
                      "required": [
                        "show",
                        "add",
                        "remove"
                      ],
                      "type": "object"
                    },
                    "explanation": {
                      "$ref": "#/definitions/Template",
                      "description": "The explanation text just below the header."
                    },
                    "header": {
                      "description": "The header to be shown at the top of the dialog",
                      "type": "string"
                    },
                    "subheader": {
                      "additionalProperties": false,
                      "description": "Subheaders in the local chooser dialog.",
                      "properties": {
                        "help": {
                          "description": "How to request help with localization",
                          "type": "string"
                        },
                        "selected": {
                          "description": "How to label the locales that have been selected",
                          "type": "string"
                        },
                        "supported": {
                          "description": "How to label the supported locales that have not been selected",
                          "type": "string"
                        }
                      },
                      "required": [
                        "selected",
                        "supported",
                        "help"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "button",
                    "explanation",
                    "header",
                    "subheader"
                  ],
                  "type": "object"
                },
                "settings": {
                  "additionalProperties": false,
                  "description": "The settings dialog",
                  "properties": {
                    "button": {
                      "additionalProperties": false,
                      "properties": {
                        "show": {
                          "description": "Show the settings dialog",
                          "type": "string"
                        }
                      },
                      "required": [
                        "show"
                      ],
                      "type": "object"
                    },
                    "explanation": {
                      "$ref": "#/definitions/Template",
                      "description": "The explanation text just below the header."
                    },
                    "header": {
                      "description": "The header to be shown at the top of the dialog",
                      "type": "string"
                    },
                    "mode": {
                      "additionalProperties": false,
                      "properties": {
                        "animate": {
                          "$ref": "#/definitions/ModeText%3C%5Bstring%2Cstring%2Cstring%2Cstring%2Cstring%5D%3E",
                          "description": "The animation on/off/slowdown mode"
                        },
                        "dark": {
                          "$ref": "#/definitions/ModeText%3C%5Bstring%2Cstring%2Cstring%5D%3E",
                          "description": "The dark on/off/automatic mode"
                        },
                        "layout": {
                          "$ref": "#/definitions/ModeText%3C%5Bstring%2Cstring%2Cstring%2Cstring%5D%3E",
                          "description": "The project tile layout mode"
                        },
                        "writing": {
                          "$ref": "#/definitions/ModeText%3C%5Bstring%2Cstring%2Cstring%5D%3E",
                          "description": "The writing layout direction"
                        }
                      },
                      "required": [
                        "layout",
                        "animate",
                        "dark",
                        "writing"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "button",
                    "explanation",
                    "header",
                    "mode"
                  ],
                  "type": "object"
                },
                "share": {
                  "additionalProperties": false,
                  "description": "The sharing dialog",
                  "properties": {
                    "button": {
                      "additionalProperties": false,
                      "description": "Buttons in the share dialog",
                      "properties": {
                        "submit": {
                          "description": "Description for the email submission button.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "submit"
                      ],
                      "type": "object"
                    },
                    "error": {
                      "additionalProperties": false,
                      "description": "Errors in the share dialog",
                      "properties": {
                        "unknown": {
                          "description": "When someone tries to add an email collaborator that doesn't have a Wordplay account",
                          "type": "string"
                        }
                      },
                      "required": [
                        "unknown"
                      ],
                      "type": "object"
                    },
                    "explanation": {
                      "$ref": "#/definitions/Template",
                      "description": "The explanation text just below the header."
                    },
                    "field": {
                      "additionalProperties": false,
                      "description": "Text fields in the share dialog",
                      "properties": {
                        "email": {
                          "$ref": "#/definitions/FieldText",
                          "description": "The email address of the collaborator being added"
                        }
                      },
                      "required": [
                        "email"
                      ],
                      "type": "object"
                    },
                    "header": {
                      "description": "The header to be shown at the top of the dialog",
                      "type": "string"
                    },
                    "mode": {
                      "additionalProperties": false,
                      "description": "Modes in the share dialog",
                      "properties": {
                        "public": {
                          "$ref": "#/definitions/ModeText%3C%5Bstring%2Cstring%5D%3E",
                          "description": "The private and public mode descriptions"
                        }
                      },
                      "required": [
                        "public"
                      ],
                      "type": "object"
                    },
                    "subheader": {
                      "additionalProperties": false,
                      "description": "The subheaders of the dialog",
                      "properties": {
                        "collaborators": {
                          "$ref": "#/definitions/DialogText",
                          "description": "The collaborators subheader and explanation"
                        },
                        "public": {
                          "$ref": "#/definitions/DialogText",
                          "description": "The public/private toggle subheader and explanation"
                        }
                      },
                      "required": [
                        "collaborators",
                        "public"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "button",
                    "error",
                    "explanation",
                    "field",
                    "header",
                    "mode",
                    "subheader"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "share",
                "settings",
                "locale",
                "help"
              ],
              "type": "object"
            },
            "docs": {
              "additionalProperties": false,
              "description": "The documentation browser",
              "properties": {
                "button": {
                  "additionalProperties": false,
                  "properties": {
                    "back": {
                      "description": "The back button in the docs tile",
                      "type": "string"
                    },
                    "home": {
                      "description": "The home button in the docs tile",
                      "type": "string"
                    }
                  },
                  "required": [
                    "home",
                    "back"
                  ],
                  "type": "object"
                },
                "field": {
                  "additionalProperties": false,
                  "properties": {
                    "search": {
                      "description": "The search text field",
                      "type": "string"
                    }
                  },
                  "required": [
                    "search"
                  ],
                  "type": "object"
                },
                "header": {
                  "additionalProperties": false,
                  "properties": {
                    "conversions": {
                      "description": "Documentation header in structure before conversions",
                      "type": "string"
                    },
                    "functions": {
                      "description": "Documentation header in structure before functions",
                      "type": "string"
                    },
                    "inputs": {
                      "description": "Documentation header in structure and functions before inputs",
                      "type": "string"
                    },
                    "interfaces": {
                      "description": "Documentation header in structure view before interfaces",
                      "type": "string"
                    },
                    "properties": {
                      "description": "Documentation header in structure before properties",
                      "type": "string"
                    }
                  },
                  "required": [
                    "inputs",
                    "interfaces",
                    "properties",
                    "functions",
                    "conversions"
                  ],
                  "type": "object"
                },
                "label": {
                  "description": "The ARIA label for the palette section.",
                  "type": "string"
                },
                "learn": {
                  "description": "A link to the tutorial for a concept",
                  "type": "string"
                },
                "link": {
                  "$ref": "#/definitions/Template",
                  "description": "A link to a concept in documentation"
                },
                "nodoc": {
                  "description": "Shown if documentation is missing for a concept",
                  "type": "string"
                }
              },
              "required": [
                "label",
                "link",
                "learn",
                "nodoc",
                "button",
                "field",
                "header"
              ],
              "type": "object"
            },
            "edit": {
              "additionalProperties": false,
              "description": "Descriptions of cursor positions and code transformations",
              "properties": {
                "append": {
                  "$ref": "#/definitions/Template",
                  "description": "$1: node description"
                },
                "assign": {
                  "$ref": "#/definitions/Template",
                  "description": "$1: node description"
                },
                "before": {
                  "$ref": "#/definitions/Template",
                  "description": "A way to say \"before [token], at the beginning of the program\""
                },
                "between": {
                  "$ref": "#/definitions/Template",
                  "description": "A way to say \"between [token1] and [token2]\""
                },
                "bind": {
                  "description": "Shown in menus to offer to name an expression with a bind",
                  "type": "string"
                },
                "conflicts": {
                  "$ref": "#/definitions/Template",
                  "description": "A description of how many conflicts are at this position"
                },
                "inside": {
                  "$ref": "#/definitions/Template",
                  "description": "A way to say \"inside [description]\""
                },
                "line": {
                  "$ref": "#/definitions/Template",
                  "description": "A way to say \"empty line between [node1] and [node2]\""
                },
                "node": {
                  "$ref": "#/definitions/Template",
                  "description": "A way to say \"on node of type [type]\""
                },
                "remove": {
                  "$ref": "#/definitions/Template",
                  "description": "$1: node description"
                },
                "replace": {
                  "$ref": "#/definitions/Template",
                  "description": "$1: node description or undefined"
                },
                "unwrap": {
                  "description": "Shown in menus to offer to unwrap an expression in parentheses",
                  "type": "string"
                },
                "wrap": {
                  "description": "Shown in menus to offer to wrap an expression in parentheses",
                  "type": "string"
                }
              },
              "required": [
                "node",
                "before",
                "inside",
                "between",
                "line",
                "conflicts",
                "assign",
                "append",
                "remove",
                "replace",
                "wrap",
                "unwrap",
                "bind"
              ],
              "type": "object"
            },
            "font": {
              "additionalProperties": false,
              "properties": {
                "app": {
                  "$ref": "#/definitions/SupportedFace",
                  "description": "The application font to use throughout the application. Should support the language used in this locale so that glyphs render correctly. Add the face to Fonts.ts if the one you choose is not yet supported."
                },
                "code": {
                  "$ref": "#/definitions/SupportedFace",
                  "description": "The monospace font to use for code in the editor and code examples. Should support the language used in this locale so that glyphs render correctly. Add the face to Fonts.ts if the one you choose is not yet supported."
                }
              },
              "required": [
                "app",
                "code"
              ],
              "type": "object"
            },
            "output": {
              "additionalProperties": false,
              "properties": {
                "button": {
                  "additionalProperties": false,
                  "properties": {
                    "submit": {
                      "description": "The chat submit button",
                      "type": "string"
                    }
                  },
                  "required": [
                    "submit"
                  ],
                  "type": "object"
                },
                "field": {
                  "additionalProperties": false,
                  "properties": {
                    "key": {
                      "$ref": "#/definitions/FieldText",
                      "description": "The text field that accepts key, placement, and chat input when a key stream is active"
                    }
                  },
                  "required": [
                    "key"
                  ],
                  "type": "object"
                },
                "label": {
                  "description": "The ARIA label for the output section",
                  "type": "string"
                },
                "toggle": {
                  "additionalProperties": false,
                  "properties": {
                    "fit": {
                      "$ref": "#/definitions/ToggleText",
                      "description": "Toggle whether output is fit to window"
                    },
                    "grid": {
                      "$ref": "#/definitions/ToggleText",
                      "description": "Toggle whether grid is shown"
                    },
                    "paint": {
                      "$ref": "#/definitions/ToggleText",
                      "description": "Toggle whether painting or placing"
                    }
                  },
                  "required": [
                    "grid",
                    "fit",
                    "paint"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "label",
                "toggle",
                "field",
                "button"
              ],
              "type": "object"
            },
            "page": {
              "additionalProperties": false,
              "properties": {
                "about": {
                  "additionalProperties": false,
                  "properties": {
                    "content": {
                      "description": "Text for the about page",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "header": {
                      "description": "Header for the about page",
                      "type": "string"
                    }
                  },
                  "required": [
                    "header",
                    "content"
                  ],
                  "type": "object"
                },
                "galleries": {
                  "additionalProperties": false,
                  "properties": {
                    "examples": {
                      "description": "The subheader for the examples",
                      "type": "string"
                    },
                    "header": {
                      "description": "How to describe galleries of projects",
                      "type": "string"
                    },
                    "prompt": {
                      "description": "Explanation for the galleries page",
                      "type": "string"
                    }
                  },
                  "required": [
                    "header",
                    "prompt",
                    "examples"
                  ],
                  "type": "object"
                },
                "landing": {
                  "additionalProperties": false,
                  "properties": {
                    "call": {
                      "description": "What function says as a call to action",
                      "items": {
                        "$ref": "#/definitions/Template"
                      },
                      "type": "array"
                    },
                    "link": {
                      "additionalProperties": false,
                      "description": "The subtitles below links",
                      "properties": {
                        "about": {
                          "description": "What content is on the about page",
                          "type": "string"
                        },
                        "galleries": {
                          "description": "What content is on the galleries page",
                          "type": "string"
                        },
                        "learn": {
                          "description": "What content is on the learn page",
                          "type": "string"
                        },
                        "projects": {
                          "description": "What content is on the projects page",
                          "type": "string"
                        },
                        "rights": {
                          "description": "What content is on the rights page",
                          "type": "string"
                        }
                      },
                      "required": [
                        "about",
                        "learn",
                        "projects",
                        "galleries",
                        "rights"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "call",
                    "link"
                  ],
                  "type": "object"
                },
                "learn": {
                  "additionalProperties": false,
                  "properties": {
                    "button": {
                      "additionalProperties": false,
                      "properties": {
                        "next": {
                          "description": "Advance to the next pause in the dialog",
                          "type": "string"
                        },
                        "previous": {
                          "description": "Navigate back to the previous pause in the dialog",
                          "type": "string"
                        }
                      },
                      "required": [
                        "next",
                        "previous"
                      ],
                      "type": "object"
                    },
                    "error": {
                      "description": "When the tutorial could not be found",
                      "type": "string"
                    },
                    "header": {
                      "description": "The header for the tutorial page",
                      "type": "string"
                    }
                  },
                  "required": [
                    "header",
                    "error",
                    "button"
                  ],
                  "type": "object"
                },
                "login": {
                  "additionalProperties": false,
                  "description": "The login and account page",
                  "properties": {
                    "anonymous": {
                      "description": "Shown in the footer a creator is not logged in.",
                      "type": "string"
                    },
                    "button": {
                      "additionalProperties": false,
                      "properties": {
                        "delete": {
                          "$ref": "#/definitions/ButtonText",
                          "description": "Delete account button"
                        },
                        "login": {
                          "description": "Login button description",
                          "type": "string"
                        },
                        "logout": {
                          "$ref": "#/definitions/ButtonText",
                          "description": "Log out of the account"
                        },
                        "reallyDelete": {
                          "$ref": "#/definitions/ButtonText",
                          "description": "Confirm deletion"
                        },
                        "update": {
                          "description": "Update email button description",
                          "type": "string"
                        }
                      },
                      "required": [
                        "logout",
                        "login",
                        "update",
                        "delete",
                        "reallyDelete"
                      ],
                      "type": "object"
                    },
                    "error": {
                      "additionalProperties": false,
                      "properties": {
                        "delete": {
                          "description": "When account deletion failed",
                          "type": "string"
                        },
                        "email": {
                          "description": "Shown when the email address isn't valid",
                          "type": "string"
                        },
                        "expired": {
                          "description": "Shown when the login link expired",
                          "type": "string"
                        },
                        "failure": {
                          "description": "Unknown failure to login",
                          "type": "string"
                        },
                        "invalid": {
                          "description": "Shown when the login link isn't valid",
                          "type": "string"
                        },
                        "offline": {
                          "description": "When there's no connection to Firebase",
                          "type": "string"
                        },
                        "unchanged": {
                          "description": "When the email addres couldn't be changed for unknown reasons.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "expired",
                        "invalid",
                        "email",
                        "failure",
                        "offline",
                        "unchanged",
                        "delete"
                      ],
                      "type": "object"
                    },
                    "feedback": {
                      "additionalProperties": false,
                      "properties": {
                        "changing": {
                          "description": "Change email pending",
                          "type": "string"
                        },
                        "deleting": {
                          "description": "Account deleting pending",
                          "type": "string"
                        }
                      },
                      "required": [
                        "changing",
                        "deleting"
                      ],
                      "type": "object"
                    },
                    "field": {
                      "additionalProperties": false,
                      "properties": {
                        "email": {
                          "$ref": "#/definitions/FieldText",
                          "description": "The login email"
                        }
                      },
                      "required": [
                        "email"
                      ],
                      "type": "object"
                    },
                    "header": {
                      "description": "Header for the login page when not logged in",
                      "type": "string"
                    },
                    "prompt": {
                      "additionalProperties": false,
                      "properties": {
                        "change": {
                          "description": "Tells the creator that they can change their email address.",
                          "type": "string"
                        },
                        "confirm": {
                          "description": "Prompts creator to check their original email to confirm the email change",
                          "type": "string"
                        },
                        "delete": {
                          "description": "Offers to delete account",
                          "type": "string"
                        },
                        "enter": {
                          "description": "Asks the creator to enter their email if they opened the email link in a different browser.",
                          "type": "string"
                        },
                        "login": {
                          "description": "Prompts creator to login to save their work",
                          "type": "string"
                        },
                        "logout": {
                          "description": "Offers to log out the creator.",
                          "type": "string"
                        },
                        "play": {
                          "description": "Encouragement to go create after logging in.",
                          "type": "string"
                        },
                        "reallyDelete": {
                          "description": "Offers to really delete account forever",
                          "type": "string"
                        },
                        "sent": {
                          "description": "Prompt to check email for a login link.",
                          "type": "string"
                        },
                        "success": {
                          "description": "Shown briefly before page redirects to projects",
                          "type": "string"
                        }
                      },
                      "required": [
                        "login",
                        "sent",
                        "change",
                        "enter",
                        "play",
                        "logout",
                        "success",
                        "confirm",
                        "delete",
                        "reallyDelete"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "header",
                    "prompt",
                    "anonymous",
                    "field",
                    "feedback",
                    "error",
                    "button"
                  ],
                  "type": "object"
                },
                "projects": {
                  "additionalProperties": false,
                  "description": "The project creation and browsing page",
                  "properties": {
                    "button": {
                      "additionalProperties": false,
                      "properties": {
                        "create": {
                          "description": "Create a new project",
                          "type": "string"
                        },
                        "edit": {
                          "description": "Edit a project",
                          "type": "string"
                        }
                      },
                      "required": [
                        "create",
                        "edit"
                      ],
                      "type": "object"
                    },
                    "confirm": {
                      "additionalProperties": false,
                      "properties": {
                        "archive": {
                          "$ref": "#/definitions/ConfirmText",
                          "description": "The project archive button"
                        }
                      },
                      "required": [
                        "archive"
                      ],
                      "type": "object"
                    },
                    "header": {
                      "description": "Header for the projects page",
                      "type": "string"
                    },
                    "prompt": {
                      "description": "Explanation for the project page",
                      "type": "string"
                    }
                  },
                  "required": [
                    "header",
                    "prompt",
                    "button",
                    "confirm"
                  ],
                  "type": "object"
                },
                "rights": {
                  "additionalProperties": false,
                  "description": "The rights/terms of service page",
                  "properties": {
                    "consequences": {
                      "description": "The consequences of violating a promise.",
                      "items": {
                        "$ref": "#/definitions/Template"
                      },
                      "type": "array"
                    },
                    "content": {
                      "description": "Paragraphs for the rights page",
                      "items": {
                        "$ref": "#/definitions/Template"
                      },
                      "type": "array"
                    },
                    "header": {
                      "description": "Header for the rights page",
                      "type": "string"
                    }
                  },
                  "required": [
                    "header",
                    "content",
                    "consequences"
                  ],
                  "type": "object"
                },
                "unknown": {
                  "additionalProperties": false,
                  "description": "The unknown route page",
                  "properties": {
                    "header": {
                      "description": "The header for the unknown route",
                      "type": "string"
                    },
                    "message": {
                      "description": "The message for the unknown route",
                      "type": "string"
                    }
                  },
                  "required": [
                    "header",
                    "message"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "unknown",
                "landing",
                "learn",
                "projects",
                "galleries",
                "about",
                "login",
                "rights"
              ],
              "type": "object"
            },
            "palette": {
              "additionalProperties": false,
              "description": "The palette editor",
              "properties": {
                "button": {
                  "additionalProperties": false,
                  "properties": {
                    "addGroup": {
                      "description": "Add a group to the output",
                      "type": "string"
                    },
                    "addPhrase": {
                      "description": "Add a phrase to the output",
                      "type": "string"
                    },
                    "createGroup": {
                      "description": "The button that creates a group when there is none",
                      "type": "string"
                    },
                    "createPhrase": {
                      "description": "The button that creates a phrase when there is none",
                      "type": "string"
                    },
                    "createStage": {
                      "description": "The button that creates a stage when there is none",
                      "type": "string"
                    },
                    "down": {
                      "description": "Move child down in list",
                      "type": "string"
                    },
                    "edit": {
                      "description": "Edit the child",
                      "type": "string"
                    },
                    "remove": {
                      "description": "Remove child from this output",
                      "type": "string"
                    },
                    "revert": {
                      "description": "Resets a property to it's default value",
                      "type": "string"
                    },
                    "sequence": {
                      "description": "Convert a pose to a sequence",
                      "type": "string"
                    },
                    "set": {
                      "description": "Sets the property to a value, allowing modification",
                      "type": "string"
                    },
                    "up": {
                      "description": "Move child up in list",
                      "type": "string"
                    }
                  },
                  "required": [
                    "revert",
                    "set",
                    "addGroup",
                    "addPhrase",
                    "remove",
                    "up",
                    "down",
                    "edit",
                    "sequence",
                    "createPhrase",
                    "createGroup",
                    "createStage"
                  ],
                  "type": "object"
                },
                "field": {
                  "additionalProperties": false,
                  "properties": {
                    "coordinate": {
                      "description": "The tooltip and ARIA-label fro the text input for a Place coordinate",
                      "type": "string"
                    },
                    "text": {
                      "description": "The tooltip and ARIA-label for the text input to Phrase",
                      "type": "string"
                    }
                  },
                  "required": [
                    "text",
                    "coordinate"
                  ],
                  "type": "object"
                },
                "label": {
                  "description": "The ARIA label for the palette section",
                  "type": "string"
                },
                "labels": {
                  "additionalProperties": false,
                  "properties": {
                    "computed": {
                      "description": "Shown in the output palette when the output(s) selected have expressions that are not editable using the editor.",
                      "type": "string"
                    },
                    "default": {
                      "description": "Shown in the output palette when the output(s) selected have no value set, but have a default",
                      "type": "string"
                    },
                    "inherited": {
                      "description": "Shown in the output palette when a value is unset but is inherited",
                      "type": "string"
                    },
                    "mixed": {
                      "description": "Shown in the output palette when multiple outputs are selected but they have unequal values.",
                      "type": "string"
                    },
                    "notContent": {
                      "description": "Shown in the output palette when a list of content is isn't valid",
                      "type": "string"
                    },
                    "notSequence": {
                      "description": "Shown in the output palette when a sequence isn't valid",
                      "type": "string"
                    }
                  },
                  "required": [
                    "mixed",
                    "computed",
                    "default",
                    "inherited",
                    "notSequence",
                    "notContent"
                  ],
                  "type": "object"
                },
                "prompt": {
                  "additionalProperties": false,
                  "properties": {
                    "editing": {
                      "$ref": "#/definitions/Template",
                      "description": "The text prompting the creator to edit the selected output"
                    },
                    "offerGroup": {
                      "$ref": "#/definitions/Template",
                      "description": "The text offering to create a group in the palette without a stage"
                    },
                    "offerPhrase": {
                      "$ref": "#/definitions/Template",
                      "description": "The text offering to create a phrase in the palette without a stage"
                    },
                    "offerStage": {
                      "$ref": "#/definitions/Template",
                      "description": "The text offering to create a stage in the palette without a stage"
                    },
                    "pauseToEdit": {
                      "$ref": "#/definitions/Template",
                      "description": "The text offering to pause the project to allow palette editing"
                    }
                  },
                  "required": [
                    "offerPhrase",
                    "offerGroup",
                    "offerStage",
                    "pauseToEdit",
                    "editing"
                  ],
                  "type": "object"
                },
                "sequence": {
                  "additionalProperties": false,
                  "description": "Widgets for editing sequences",
                  "properties": {
                    "button": {
                      "additionalProperties": false,
                      "description": "Buttons for editing sequences",
                      "properties": {
                        "add": {
                          "description": "Add pose",
                          "type": "string"
                        },
                        "down": {
                          "description": "Move pose down",
                          "type": "string"
                        },
                        "remove": {
                          "description": "Remove pose",
                          "type": "string"
                        },
                        "up": {
                          "description": "Move pose up",
                          "type": "string"
                        }
                      },
                      "required": [
                        "add",
                        "remove",
                        "up",
                        "down"
                      ],
                      "type": "object"
                    },
                    "field": {
                      "additionalProperties": false,
                      "description": "Text fields for editing sequences",
                      "properties": {
                        "percent": {
                          "description": "Edit percent for pose",
                          "type": "string"
                        }
                      },
                      "required": [
                        "percent"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "button",
                    "field"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "label",
                "labels",
                "button",
                "prompt",
                "field",
                "sequence"
              ],
              "type": "object"
            },
            "phrases": {
              "additionalProperties": false,
              "properties": {
                "welcome": {
                  "description": "Placeholder text used in code examples.",
                  "type": "string"
                }
              },
              "required": [
                "welcome"
              ],
              "type": "object"
            },
            "project": {
              "additionalProperties": false,
              "description": "Project settings and controls",
              "properties": {
                "button": {
                  "additionalProperties": false,
                  "properties": {
                    "addSource": {
                      "description": "Add a source file",
                      "type": "string"
                    },
                    "copy": {
                      "description": "Copy the project as text to the clipboard",
                      "type": "string"
                    },
                    "duplicate": {
                      "description": "Duplicate the project",
                      "type": "string"
                    },
                    "focusCycle": {
                      "description": "Keyboard shortcut to cycle between tiles",
                      "type": "string"
                    },
                    "focusDocs": {
                      "description": "Keyboard shortcut to focus documentation tile",
                      "type": "string"
                    },
                    "focusOutput": {
                      "description": "Keyboard shortcut to focus output tile",
                      "type": "string"
                    },
                    "focusPalette": {
                      "description": "Keyboard shortcut to focus palette tiles",
                      "type": "string"
                    },
                    "focusSource": {
                      "description": "Keyboard shortcut to focus source tiles",
                      "type": "string"
                    },
                    "removeCollaborator": {
                      "description": "Remove a collaborator that has been shared with",
                      "type": "string"
                    },
                    "revert": {
                      "description": "Revert project to original code",
                      "type": "string"
                    },
                    "showCollaborators": {
                      "description": "Shows the sharing dialog",
                      "type": "string"
                    }
                  },
                  "required": [
                    "showCollaborators",
                    "removeCollaborator",
                    "copy",
                    "addSource",
                    "duplicate",
                    "revert",
                    "focusOutput",
                    "focusSource",
                    "focusDocs",
                    "focusPalette",
                    "focusCycle"
                  ],
                  "type": "object"
                },
                "error": {
                  "additionalProperties": false,
                  "description": "The error shown when a project ID is unknown.",
                  "properties": {
                    "unknown": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "unknown"
                  ],
                  "type": "object"
                },
                "field": {
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "$ref": "#/definitions/FieldText",
                      "description": "The project name text field"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                },
                "help": {
                  "description": "The keyboard shortcut to show the shortcut menu",
                  "type": "string"
                }
              },
              "required": [
                "error",
                "button",
                "field",
                "help"
              ],
              "type": "object"
            },
            "save": {
              "additionalProperties": false,
              "properties": {
                "local": {
                  "description": "Shown when saving on device was successful",
                  "type": "string"
                },
                "saved": {
                  "description": "Shown when online saving was successful",
                  "type": "string"
                },
                "saving": {
                  "description": "Shown when saving has started",
                  "type": "string"
                },
                "unsaved": {
                  "description": "Shown when there was a problem saving",
                  "type": "string"
                }
              },
              "required": [
                "saving",
                "saved",
                "local",
                "unsaved"
              ],
              "type": "object"
            },
            "source": {
              "additionalProperties": false,
              "description": "Source file controls",
              "properties": {
                "button": {
                  "additionalProperties": false,
                  "properties": {
                    "expandSequence": {
                      "description": "The button shown when a list of code is ellided; clicking it shows the hidden code.",
                      "type": "string"
                    },
                    "selectOutput": {
                      "description": "Output preview button for selecting output for display in output tile",
                      "type": "string"
                    }
                  },
                  "required": [
                    "selectOutput",
                    "expandSequence"
                  ],
                  "type": "object"
                },
                "confirm": {
                  "additionalProperties": false,
                  "properties": {
                    "delete": {
                      "additionalProperties": false,
                      "description": "The confirm button that deletes a source file",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "prompt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "description",
                        "prompt"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "delete"
                  ],
                  "type": "object"
                },
                "cursor": {
                  "additionalProperties": false,
                  "properties": {
                    "backspace": {
                      "description": "Delete previous symbol",
                      "type": "string"
                    },
                    "copy": {
                      "description": "Copy selection to clipboard as text",
                      "type": "string"
                    },
                    "cut": {
                      "description": "Cut selection to clipboard as text",
                      "type": "string"
                    },
                    "decrementLiteral": {
                      "description": "Decrement the literal at the cursor",
                      "type": "string"
                    },
                    "enumerate": {
                      "description": "Listify selection",
                      "type": "string"
                    },
                    "incrementLiteral": {
                      "description": "Increment the literal at the cursor",
                      "type": "string"
                    },
                    "insertConvert": {
                      "description": "Insert → symbol",
                      "type": "string"
                    },
                    "insertDegree": {
                      "description": "Insert ° symbol",
                      "type": "string"
                    },
                    "insertFalse": {
                      "description": "Insert false symbol",
                      "type": "string"
                    },
                    "insertFunction": {
                      "description": "Insert ƒ symbol",
                      "type": "string"
                    },
                    "insertGreaterOrEqual": {
                      "description": "Insert ≥ symbol",
                      "type": "string"
                    },
                    "insertLessOrEqual": {
                      "description": "Insert ≤ symbol",
                      "type": "string"
                    },
                    "insertLine": {
                      "description": "Insert new line",
                      "type": "string"
                    },
                    "insertNone": {
                      "description": "Insert none symbol",
                      "type": "string"
                    },
                    "insertNotEqual": {
                      "description": "Insert ≠ symbol",
                      "type": "string"
                    },
                    "insertPrevious": {
                      "description": "Insert ← symbol",
                      "type": "string"
                    },
                    "insertProduct": {
                      "description": "Insert · symbol",
                      "type": "string"
                    },
                    "insertQuotient": {
                      "description": "Insert ÷ symbol",
                      "type": "string"
                    },
                    "insertStream": {
                      "description": "Insert … symbol",
                      "type": "string"
                    },
                    "insertSymbol": {
                      "description": "Insert selected symbol",
                      "type": "string"
                    },
                    "insertTable": {
                      "description": "Insert table symbol",
                      "type": "string"
                    },
                    "insertTrue": {
                      "description": "Insert true symbol",
                      "type": "string"
                    },
                    "insertType": {
                      "description": "Insert • symbol",
                      "type": "string"
                    },
                    "lineEnd": {
                      "description": "Move cursor to line end",
                      "type": "string"
                    },
                    "lineStart": {
                      "description": "Move cursor to line start",
                      "type": "string"
                    },
                    "nextInline": {
                      "description": "Move cursor inline one position after",
                      "type": "string"
                    },
                    "nextLine": {
                      "description": "Move caret to the line after",
                      "type": "string"
                    },
                    "nextNode": {
                      "description": "Move cursor to node after",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Select parent of node",
                      "type": "string"
                    },
                    "parenthesize": {
                      "description": "Parenthesize selection",
                      "type": "string"
                    },
                    "paste": {
                      "description": "Paste clipboard text as code",
                      "type": "string"
                    },
                    "priorInline": {
                      "description": "Move cursor inline one position before",
                      "type": "string"
                    },
                    "priorLine": {
                      "description": "Move caret to the line before",
                      "type": "string"
                    },
                    "priorNode": {
                      "description": "Move cursor to node prior",
                      "type": "string"
                    },
                    "redo": {
                      "description": "Redo undone edit",
                      "type": "string"
                    },
                    "search": {
                      "description": "Search for glyph",
                      "type": "string"
                    },
                    "selectAll": {
                      "description": "Select the whole program",
                      "type": "string"
                    },
                    "type": {
                      "description": "Insert a symbol",
                      "type": "string"
                    },
                    "undo": {
                      "description": "Undo last edit",
                      "type": "string"
                    }
                  },
                  "required": [
                    "priorLine",
                    "nextLine",
                    "priorInline",
                    "nextInline",
                    "lineStart",
                    "lineEnd",
                    "priorNode",
                    "nextNode",
                    "parent",
                    "selectAll",
                    "incrementLiteral",
                    "decrementLiteral",
                    "insertSymbol",
                    "insertTrue",
                    "insertFalse",
                    "insertNone",
                    "insertNotEqual",
                    "insertProduct",
                    "insertQuotient",
                    "insertDegree",
                    "insertFunction",
                    "insertLessOrEqual",
                    "insertGreaterOrEqual",
                    "insertType",
                    "insertStream",
                    "insertPrevious",
                    "insertConvert",
                    "insertTable",
                    "insertLine",
                    "backspace",
                    "copy",
                    "cut",
                    "paste",
                    "parenthesize",
                    "enumerate",
                    "type",
                    "undo",
                    "redo",
                    "search"
                  ],
                  "type": "object"
                },
                "empty": {
                  "$ref": "#/definitions/DocText",
                  "description": "The text to show when a source file is empty"
                },
                "field": {
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "$ref": "#/definitions/FieldText",
                      "description": "The name of the source file"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                },
                "label": {
                  "description": "The ARIA label for the source file section",
                  "type": "string"
                },
                "menu": {
                  "additionalProperties": false,
                  "properties": {
                    "back": {
                      "description": "How to describe the autocomplete back button for leaving the submenu",
                      "type": "string"
                    },
                    "label": {
                      "description": "How to describe the autocomplete menu",
                      "type": "string"
                    },
                    "show": {
                      "description": "The menu show button and keyboard shortcut",
                      "type": "string"
                    }
                  },
                  "required": [
                    "label",
                    "show",
                    "back"
                  ],
                  "type": "object"
                },
                "overwritten": {
                  "description": "When some other device had a more recent edit that overrode this device's version.",
                  "type": "string"
                },
                "toggle": {
                  "additionalProperties": false,
                  "properties": {
                    "blocks": {
                      "$ref": "#/definitions/ToggleText",
                      "description": "The blocks/text toggle"
                    },
                    "glyphs": {
                      "$ref": "#/definitions/ToggleText",
                      "description": "The glyph chooser expand/collapse toggle"
                    }
                  },
                  "required": [
                    "blocks",
                    "glyphs"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "label",
                "empty",
                "overwritten",
                "confirm",
                "toggle",
                "button",
                "menu",
                "field",
                "cursor"
              ],
              "type": "object"
            },
            "template": {
              "additionalProperties": false,
              "properties": {
                "unparsable": {
                  "description": "The placeholder string indicating that a template string could not be parsed",
                  "type": "string"
                },
                "unwritten": {
                  "description": "The placeholder indicating that a locale string is not yet written",
                  "type": "string"
                }
              },
              "required": [
                "unwritten",
                "unparsable"
              ],
              "type": "object"
            },
            "tile": {
              "additionalProperties": false,
              "description": "Controls for the tiled windows in the project",
              "properties": {
                "button": {
                  "additionalProperties": false,
                  "properties": {
                    "collapse": {
                      "description": "Collapse the tile window",
                      "type": "string"
                    }
                  },
                  "required": [
                    "collapse"
                  ],
                  "type": "object"
                },
                "toggle": {
                  "additionalProperties": false,
                  "properties": {
                    "fullscreen": {
                      "$ref": "#/definitions/ToggleText",
                      "description": "Enter and exit tile fullscreen mode"
                    },
                    "show": {
                      "$ref": "#/definitions/ToggleText",
                      "description": "Show or hide the tile"
                    }
                  },
                  "required": [
                    "fullscreen",
                    "show"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "button",
                "toggle"
              ],
              "type": "object"
            },
            "timeline": {
              "additionalProperties": false,
              "description": "The timeline view below the output",
              "properties": {
                "button": {
                  "additionalProperties": false,
                  "properties": {
                    "backInput": {
                      "description": "Step to the previous input",
                      "type": "string"
                    },
                    "backNode": {
                      "description": "Step to the previous evaluation of the node at the cursor",
                      "type": "string"
                    },
                    "backStep": {
                      "description": "One step back",
                      "type": "string"
                    },
                    "forwardInput": {
                      "description": "Step to the next input",
                      "type": "string"
                    },
                    "forwardNode": {
                      "description": "Step to the next evaluation of the node at the cursor",
                      "type": "string"
                    },
                    "forwardStep": {
                      "description": "Step forward one step",
                      "type": "string"
                    },
                    "out": {
                      "description": "Step out of the current function evaluation",
                      "type": "string"
                    },
                    "pause": {
                      "description": "Pause evaluation",
                      "type": "string"
                    },
                    "play": {
                      "description": "Evaluate in real time",
                      "type": "string"
                    },
                    "present": {
                      "description": "Step to the present",
                      "type": "string"
                    },
                    "reset": {
                      "description": "Reset the input history to restart the performance",
                      "type": "string"
                    },
                    "start": {
                      "description": "Step to the very beginning",
                      "type": "string"
                    }
                  },
                  "required": [
                    "play",
                    "pause",
                    "backStep",
                    "backNode",
                    "backInput",
                    "out",
                    "start",
                    "forwardStep",
                    "forwardNode",
                    "forwardInput",
                    "present",
                    "reset"
                  ],
                  "type": "object"
                },
                "label": {
                  "description": "The ARIA label for the timeline section",
                  "type": "string"
                },
                "slider": {
                  "description": "The description of the timeline slider",
                  "type": "string"
                }
              },
              "required": [
                "label",
                "slider",
                "button"
              ],
              "type": "object"
            },
            "widget": {
              "additionalProperties": false,
              "description": "Generic reusable widgets and their generic labels.",
              "properties": {
                "confirm": {
                  "additionalProperties": false,
                  "description": "A confirm button",
                  "properties": {
                    "cancel": {
                      "description": "The 'x' cancel button after a confirm button has been pressed.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "cancel"
                  ],
                  "type": "object"
                },
                "dialog": {
                  "additionalProperties": false,
                  "description": "A modal dialog",
                  "properties": {
                    "close": {
                      "description": "The close button on modal dialogs",
                      "type": "string"
                    }
                  },
                  "required": [
                    "close"
                  ],
                  "type": "object"
                },
                "loading": {
                  "additionalProperties": false,
                  "description": "The page loading widget, before content is shown",
                  "properties": {
                    "message": {
                      "description": "The message shown in the page loading feedback",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "confirm",
                "dialog",
                "loading"
              ],
              "type": "object"
            }
          },
          "required": [
            "font",
            "phrases",
            "widget",
            "tile",
            "project",
            "source",
            "conflicts",
            "output",
            "docs",
            "palette",
            "timeline",
            "dialog",
            "save",
            "page",
            "edit",
            "template"
          ],
          "type": "object"
        },
        "wordplay": {
          "description": "The name of the platform",
          "type": "string"
        }
      },
      "required": [
        "$schema",
        "language",
        "region",
        "wordplay",
        "newProject",
        "term",
        "token",
        "node",
        "basis",
        "input",
        "output",
        "ui",
        "rules"
      ],
      "type": "object"
    },
    "ModeText<[string,string,string,string,string]>": {
      "additionalProperties": false,
      "properties": {
        "label": {
          "description": "The tooltip and ARIA-label for the entire mode widget, describing the kind of modes it supports switching to.",
          "type": "string"
        },
        "modes": {
          "description": "The tooltip and ARIA-labels to use for each mode button describing the mode to be switched to, in the order of appearance",
          "items": {
            "type": "string"
          },
          "maxItems": 5,
          "minItems": 5,
          "type": "array"
        }
      },
      "required": [
        "label",
        "modes"
      ],
      "type": "object"
    },
    "ModeText<[string,string,string,string]>": {
      "additionalProperties": false,
      "properties": {
        "label": {
          "description": "The tooltip and ARIA-label for the entire mode widget, describing the kind of modes it supports switching to.",
          "type": "string"
        },
        "modes": {
          "description": "The tooltip and ARIA-labels to use for each mode button describing the mode to be switched to, in the order of appearance",
          "items": {
            "type": "string"
          },
          "maxItems": 4,
          "minItems": 4,
          "type": "array"
        }
      },
      "required": [
        "label",
        "modes"
      ],
      "type": "object"
    },
    "ModeText<[string,string,string]>": {
      "additionalProperties": false,
      "properties": {
        "label": {
          "description": "The tooltip and ARIA-label for the entire mode widget, describing the kind of modes it supports switching to.",
          "type": "string"
        },
        "modes": {
          "description": "The tooltip and ARIA-labels to use for each mode button describing the mode to be switched to, in the order of appearance",
          "items": {
            "type": "string"
          },
          "maxItems": 3,
          "minItems": 3,
          "type": "array"
        }
      },
      "required": [
        "label",
        "modes"
      ],
      "type": "object"
    },
    "ModeText<[string,string]>": {
      "additionalProperties": false,
      "properties": {
        "label": {
          "description": "The tooltip and ARIA-label for the entire mode widget, describing the kind of modes it supports switching to.",
          "type": "string"
        },
        "modes": {
          "description": "The tooltip and ARIA-labels to use for each mode button describing the mode to be switched to, in the order of appearance",
          "items": {
            "type": "string"
          },
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        }
      },
      "required": [
        "label",
        "modes"
      ],
      "type": "object"
    },
    "NameAndDoc": {
      "additionalProperties": false,
      "properties": {
        "doc": {
          "$ref": "#/definitions/DocText",
          "description": "Documentation for this definition, to appear in the documentation browser."
        },
        "names": {
          "$ref": "#/definitions/NameText",
          "description": "One or more names for this definition. Be careful not to introduce duplicates."
        }
      },
      "required": [
        "names",
        "doc"
      ],
      "type": "object"
    },
    "NameText": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      ],
      "description": "A single name or a list of names, all valid Wordplay names"
    },
    "NodeText": {
      "additionalProperties": false,
      "properties": {
        "doc": {
          "$ref": "#/definitions/DocText",
          "description": "Documentation text that appears in the documentation view"
        },
        "emotion": {
          "description": "The emotion that should be conveyed in animations of the node type",
          "enum": [
            "$?",
            "angry",
            "arrogant",
            "bored",
            "cheerful",
            "curious",
            "confused",
            "eager",
            "excited",
            "grumpy",
            "happy",
            "insecure",
            "kind",
            "neutral",
            "sad",
            "scared",
            "serious",
            "shy",
            "surprised",
            "precise"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name that should be used to refer to the node type",
          "type": "string"
        }
      },
      "required": [
        "name",
        "doc",
        "emotion"
      ],
      "type": "object"
    },
    "RegionCode": {
      "enum": [
        "AF",
        "AX",
        "AL",
        "DZ",
        "AS",
        "AD",
        "AO",
        "AI",
        "AQ",
        "AG",
        "AR",
        "AM",
        "AW",
        "AU",
        "AT",
        "AZ",
        "BS",
        "BH",
        "BD",
        "BB",
        "BY",
        "BE",
        "BZ",
        "BJ",
        "BM",
        "BT",
        "BO",
        "BQ",
        "BA",
        "BW",
        "BV",
        "BR",
        "IO",
        "BN",
        "BG",
        "BF",
        "BI",
        "KH",
        "CM",
        "CA",
        "CV",
        "KY",
        "CF",
        "TD",
        "CL",
        "CN",
        "CX",
        "CC",
        "CO",
        "KM",
        "CG",
        "CD",
        "CK",
        "CR",
        "CI",
        "HR",
        "CU",
        "CW",
        "CY",
        "CZ",
        "DK",
        "DJ",
        "DM",
        "DO",
        "EC",
        "EG",
        "SV",
        "GQ",
        "ER",
        "EE",
        "ET",
        "FK",
        "FO",
        "FJ",
        "FI",
        "FR",
        "GF",
        "PF",
        "TF",
        "GA",
        "GM",
        "GE",
        "DE",
        "GH",
        "GI",
        "GR",
        "GL",
        "GD",
        "GP",
        "GU",
        "GT",
        "GG",
        "GN",
        "GW",
        "GY",
        "HT",
        "HM",
        "VA",
        "HN",
        "HK",
        "HU",
        "IS",
        "IN",
        "ID",
        "IR",
        "IQ",
        "IE",
        "IM",
        "IL",
        "IT",
        "JM",
        "JP",
        "JE",
        "JO",
        "KZ",
        "KE",
        "KI",
        "KP",
        "KR",
        "KW",
        "KG",
        "LA",
        "LV",
        "LB",
        "LS",
        "LR",
        "LY",
        "LI",
        "LT",
        "LU",
        "MO",
        "MK",
        "MG",
        "MW",
        "MY",
        "MV",
        "ML",
        "MT",
        "MH",
        "MQ",
        "MR",
        "MU",
        "YT",
        "MX",
        "FM",
        "MD",
        "MC",
        "MN",
        "ME",
        "MS",
        "MA",
        "MZ",
        "MM",
        "NA",
        "NR",
        "NP",
        "NL",
        "NC",
        "NZ",
        "NI",
        "NE",
        "NG",
        "NU",
        "NF",
        "MP",
        "NO",
        "OM",
        "PK",
        "PW",
        "PS",
        "PA",
        "PG",
        "PY",
        "PE",
        "PH",
        "PN",
        "PL",
        "PT",
        "PR",
        "QA",
        "RE",
        "RO",
        "RU",
        "RW",
        "BL",
        "SH",
        "KN",
        "LC",
        "MF",
        "PM",
        "VC",
        "WS",
        "SM",
        "ST",
        "SA",
        "SN",
        "RS",
        "SC",
        "SL",
        "SG",
        "SX",
        "SK",
        "SI",
        "SB",
        "SO",
        "ZA",
        "GS",
        "SS",
        "ES",
        "LK",
        "SD",
        "SR",
        "SJ",
        "SZ",
        "SE",
        "CH",
        "SY",
        "TW",
        "TJ",
        "TZ",
        "TH",
        "TL",
        "TG",
        "TK",
        "TO",
        "TT",
        "TN",
        "TR",
        "TM",
        "TC",
        "TV",
        "UG",
        "UA",
        "AE",
        "GB",
        "US",
        "UM",
        "UY",
        "UZ",
        "VU",
        "VE",
        "VN",
        "VG",
        "VI",
        "WF",
        "EH",
        "YE",
        "ZM",
        "ZW"
      ],
      "type": "string"
    },
    "SupportedFace": {
      "description": "The font face names supported. To add one, carefully add metadata to Faces and files to /static/fonts/.",
      "type": [
        "string"
      ]
    },
    "Template": {
      "type": "string"
    },
    "ToggleText": {
      "additionalProperties": false,
      "properties": {
        "off": {
          "description": "The tooltip and ARIA-label for when the toggle is in the off state",
          "type": "string"
        },
        "on": {
          "description": "The tooltip and ARIA-label for when the toggle is in the on state",
          "type": "string"
        }
      },
      "required": [
        "on",
        "off"
      ],
      "type": "object"
    }
  }
}