{
  "$ref": "#/definitions/Tutorial",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "Act<[def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135]>": {
      "additionalProperties": false,
      "properties": {
        "performance": {
          "$ref": "#/definitions/Performance"
        },
        "scenes": {
          "items": {
            "$ref": "#/definitions/Scene"
          },
          "maxItems": 12,
          "minItems": 12,
          "type": "array"
        },
        "title": {
          "type": "string"
        }
      },
      "required": [
        "title",
        "performance",
        "scenes"
      ],
      "type": "object"
    },
    "Act<[def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135]>": {
      "additionalProperties": false,
      "properties": {
        "performance": {
          "$ref": "#/definitions/Performance"
        },
        "scenes": {
          "items": {
            "$ref": "#/definitions/Scene"
          },
          "maxItems": 7,
          "minItems": 7,
          "type": "array"
        },
        "title": {
          "type": "string"
        }
      },
      "required": [
        "title",
        "performance",
        "scenes"
      ],
      "type": "object"
    },
    "Act<[def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135]>": {
      "additionalProperties": false,
      "properties": {
        "performance": {
          "$ref": "#/definitions/Performance"
        },
        "scenes": {
          "items": {
            "$ref": "#/definitions/Scene"
          },
          "maxItems": 6,
          "minItems": 6,
          "type": "array"
        },
        "title": {
          "type": "string"
        }
      },
      "required": [
        "title",
        "performance",
        "scenes"
      ],
      "type": "object"
    },
    "Act<[def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135]>": {
      "additionalProperties": false,
      "properties": {
        "performance": {
          "$ref": "#/definitions/Performance"
        },
        "scenes": {
          "items": {
            "$ref": "#/definitions/Scene"
          },
          "maxItems": 5,
          "minItems": 5,
          "type": "array"
        },
        "title": {
          "type": "string"
        }
      },
      "required": [
        "title",
        "performance",
        "scenes"
      ],
      "type": "object"
    },
    "Act<[def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135]>": {
      "additionalProperties": false,
      "properties": {
        "performance": {
          "$ref": "#/definitions/Performance"
        },
        "scenes": {
          "items": {
            "$ref": "#/definitions/Scene"
          },
          "maxItems": 4,
          "minItems": 4,
          "type": "array"
        },
        "title": {
          "type": "string"
        }
      },
      "required": [
        "title",
        "performance",
        "scenes"
      ],
      "type": "object"
    },
    "Act<[def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135,def-alias-1340420873-1436-1588-1340420873-0-2135]>": {
      "additionalProperties": false,
      "properties": {
        "performance": {
          "$ref": "#/definitions/Performance"
        },
        "scenes": {
          "items": {
            "$ref": "#/definitions/Scene"
          },
          "maxItems": 3,
          "minItems": 3,
          "type": "array"
        },
        "title": {
          "type": "string"
        }
      },
      "required": [
        "title",
        "performance",
        "scenes"
      ],
      "type": "object"
    },
    "Act<[def-alias-1340420873-1436-1588-1340420873-0-2135]>": {
      "additionalProperties": false,
      "properties": {
        "performance": {
          "$ref": "#/definitions/Performance"
        },
        "scenes": {
          "items": {
            "$ref": "#/definitions/Scene"
          },
          "maxItems": 1,
          "minItems": 1,
          "type": "array"
        },
        "title": {
          "type": "string"
        }
      },
      "required": [
        "title",
        "performance",
        "scenes"
      ],
      "type": "object"
    },
    "CharacterName": {
      "anyOf": [
        {
          "const": "Dimension",
          "type": "string"
        },
        {
          "const": "Doc",
          "type": "string"
        },
        {
          "const": "Docs",
          "type": "string"
        },
        {
          "const": "KeyValue",
          "type": "string"
        },
        {
          "const": "Language",
          "type": "string"
        },
        {
          "const": "Name",
          "type": "string"
        },
        {
          "const": "Names",
          "type": "string"
        },
        {
          "const": "Row",
          "type": "string"
        },
        {
          "const": "Token",
          "type": "string"
        },
        {
          "const": "TypeInputs",
          "type": "string"
        },
        {
          "const": "TypeVariable",
          "type": "string"
        },
        {
          "const": "TypeVariables",
          "type": "string"
        },
        {
          "const": "Markup",
          "type": "string"
        },
        {
          "const": "Paragraph",
          "type": "string"
        },
        {
          "const": "WebLink",
          "type": "string"
        },
        {
          "const": "ConceptLink",
          "type": "string"
        },
        {
          "const": "Words",
          "type": "string"
        },
        {
          "const": "Example",
          "type": "string"
        },
        {
          "const": "Mention",
          "type": "string"
        },
        {
          "const": "Branch",
          "type": "string"
        },
        {
          "const": "BinaryEvaluate",
          "type": "string"
        },
        {
          "const": "Bind",
          "type": "string"
        },
        {
          "const": "Block",
          "type": "string"
        },
        {
          "const": "BooleanLiteral",
          "type": "string"
        },
        {
          "const": "Borrow",
          "type": "string"
        },
        {
          "const": "Changed",
          "type": "string"
        },
        {
          "const": "Conditional",
          "type": "string"
        },
        {
          "const": "Otherwise",
          "type": "string"
        },
        {
          "const": "Match",
          "type": "string"
        },
        {
          "const": "ConversionDefinition",
          "type": "string"
        },
        {
          "const": "Convert",
          "type": "string"
        },
        {
          "const": "Delete",
          "type": "string"
        },
        {
          "const": "DocumentedExpression",
          "type": "string"
        },
        {
          "const": "Evaluate",
          "type": "string"
        },
        {
          "const": "Input",
          "type": "string"
        },
        {
          "const": "ExpressionPlaceholder",
          "type": "string"
        },
        {
          "const": "FunctionDefinition",
          "type": "string"
        },
        {
          "const": "Iteration",
          "type": "string"
        },
        {
          "const": "Insert",
          "type": "string"
        },
        {
          "const": "Initial",
          "type": "string"
        },
        {
          "const": "Is",
          "type": "string"
        },
        {
          "const": "IsLocale",
          "type": "string"
        },
        {
          "const": "ListAccess",
          "type": "string"
        },
        {
          "const": "ListLiteral",
          "type": "string"
        },
        {
          "const": "Spread",
          "type": "string"
        },
        {
          "const": "MapLiteral",
          "type": "string"
        },
        {
          "const": "NumberLiteral",
          "type": "string"
        },
        {
          "const": "InternalExpression",
          "type": "string"
        },
        {
          "const": "NoneLiteral",
          "type": "string"
        },
        {
          "const": "Previous",
          "type": "string"
        },
        {
          "const": "Program",
          "type": "string"
        },
        {
          "const": "PropertyBind",
          "type": "string"
        },
        {
          "const": "PropertyReference",
          "type": "string"
        },
        {
          "const": "Reaction",
          "type": "string"
        },
        {
          "const": "Reference",
          "type": "string"
        },
        {
          "const": "Select",
          "type": "string"
        },
        {
          "const": "SetLiteral",
          "type": "string"
        },
        {
          "const": "SetOrMapAccess",
          "type": "string"
        },
        {
          "const": "Source",
          "type": "string"
        },
        {
          "const": "StreamDefinition",
          "type": "string"
        },
        {
          "const": "StructureDefinition",
          "type": "string"
        },
        {
          "const": "StructureDefinitionType",
          "type": "string"
        },
        {
          "const": "TableLiteral",
          "type": "string"
        },
        {
          "const": "TextLiteral",
          "type": "string"
        },
        {
          "const": "Translation",
          "type": "string"
        },
        {
          "const": "FormattedLiteral",
          "type": "string"
        },
        {
          "const": "FormattedTranslation",
          "type": "string"
        },
        {
          "const": "This",
          "type": "string"
        },
        {
          "const": "UnaryEvaluate",
          "type": "string"
        },
        {
          "const": "UnparsableExpression",
          "type": "string"
        },
        {
          "const": "Update",
          "type": "string"
        },
        {
          "const": "AnyType",
          "type": "string"
        },
        {
          "const": "BooleanType",
          "type": "string"
        },
        {
          "const": "ConversionType",
          "type": "string"
        },
        {
          "const": "FormattedType",
          "type": "string"
        },
        {
          "const": "ExceptionType",
          "type": "string"
        },
        {
          "const": "FunctionType",
          "type": "string"
        },
        {
          "const": "ListType",
          "type": "string"
        },
        {
          "const": "MapType",
          "type": "string"
        },
        {
          "const": "NumberType",
          "type": "string"
        },
        {
          "const": "NameType",
          "type": "string"
        },
        {
          "const": "NeverType",
          "type": "string"
        },
        {
          "const": "NoneType",
          "type": "string"
        },
        {
          "const": "SetType",
          "type": "string"
        },
        {
          "const": "StreamDefinitionType",
          "type": "string"
        },
        {
          "const": "StreamType",
          "type": "string"
        },
        {
          "const": "StructureType",
          "type": "string"
        },
        {
          "const": "TableType",
          "type": "string"
        },
        {
          "const": "TextType",
          "type": "string"
        },
        {
          "const": "TypePlaceholder",
          "type": "string"
        },
        {
          "const": "UnionType",
          "type": "string"
        },
        {
          "const": "UnparsableType",
          "type": "string"
        },
        {
          "const": "Unit",
          "type": "string"
        },
        {
          "const": "VariableType",
          "type": "string"
        },
        {
          "const": "UnknownType",
          "type": "string"
        },
        {
          "const": "UnknownNameType",
          "type": "string"
        },
        {
          "const": "CycleType",
          "type": "string"
        },
        {
          "const": "UnknownVariableType",
          "type": "string"
        },
        {
          "const": "NoExpressionType",
          "type": "string"
        },
        {
          "const": "NotEnclosedType",
          "type": "string"
        },
        {
          "const": "NotImplementedType",
          "type": "string"
        },
        {
          "const": "NotAType",
          "type": "string"
        },
        {
          "const": "NonFunctionType",
          "type": "string"
        },
        {
          "const": "Random",
          "type": "string"
        },
        {
          "const": "Choice",
          "type": "string"
        },
        {
          "const": "Button",
          "type": "string"
        },
        {
          "const": "Pointer",
          "type": "string"
        },
        {
          "const": "Key",
          "type": "string"
        },
        {
          "const": "Time",
          "type": "string"
        },
        {
          "const": "Volume",
          "type": "string"
        },
        {
          "const": "Pitch",
          "type": "string"
        },
        {
          "const": "Camera",
          "type": "string"
        },
        {
          "const": "Scene",
          "type": "string"
        },
        {
          "const": "Motion",
          "type": "string"
        },
        {
          "const": "Placement",
          "type": "string"
        },
        {
          "const": "Chat",
          "type": "string"
        },
        {
          "const": "Webpage",
          "type": "string"
        },
        {
          "const": "Collision",
          "type": "string"
        },
        {
          "const": "Rebound",
          "type": "string"
        },
        {
          "const": "Direction",
          "type": "string"
        },
        {
          "const": "Output",
          "type": "string"
        },
        {
          "const": "Group",
          "type": "string"
        },
        {
          "const": "Aura",
          "type": "string"
        },
        {
          "const": "Phrase",
          "type": "string"
        },
        {
          "const": "Stage",
          "type": "string"
        },
        {
          "const": "Shape",
          "type": "string"
        },
        {
          "const": "Form",
          "type": "string"
        },
        {
          "const": "Rectangle",
          "type": "string"
        },
        {
          "const": "Circle",
          "type": "string"
        },
        {
          "const": "Polygon",
          "type": "string"
        },
        {
          "const": "Pose",
          "type": "string"
        },
        {
          "const": "Sequence",
          "type": "string"
        },
        {
          "const": "Color",
          "type": "string"
        },
        {
          "const": "Place",
          "type": "string"
        },
        {
          "const": "Velocity",
          "type": "string"
        },
        {
          "const": "Matter",
          "type": "string"
        },
        {
          "const": "Arrangement",
          "type": "string"
        },
        {
          "const": "Stack",
          "type": "string"
        },
        {
          "const": "Grid",
          "type": "string"
        },
        {
          "const": "Free",
          "type": "string"
        },
        {
          "const": "Easing",
          "type": "string"
        },
        {
          "const": "sequence",
          "type": "string"
        },
        {
          "const": "Boolean",
          "type": "string"
        },
        {
          "const": "None",
          "type": "string"
        },
        {
          "const": "Text",
          "type": "string"
        },
        {
          "const": "Number",
          "type": "string"
        },
        {
          "const": "List",
          "type": "string"
        },
        {
          "const": "Set",
          "type": "string"
        },
        {
          "const": "Map",
          "type": "string"
        },
        {
          "const": "Table",
          "type": "string"
        },
        {
          "const": "Structure",
          "type": "string"
        },
        {
          "$ref": "#/definitions/HowToID"
        },
        {
          "const": "⊤",
          "type": "string"
        },
        {
          "const": "⊥",
          "type": "string"
        }
      ]
    },
    "Dialog": {
      "additionalItems": {
        "type": "string"
      },
      "items": [
        {
          "$ref": "#/definitions/CharacterName"
        },
        {
          "enum": [
            "$?",
            "angry",
            "arrogant",
            "bored",
            "cheerful",
            "curious",
            "confused",
            "eager",
            "excited",
            "grumpy",
            "happy",
            "insecure",
            "kind",
            "neutral",
            "sad",
            "scared",
            "serious",
            "shy",
            "surprised",
            "precise"
          ],
          "type": "string"
        }
      ],
      "minItems": 2,
      "type": "array"
    },
    "HowToID": {
      "enum": [
        "animate-phrase",
        "move-phrase",
        "custom-characters",
        "animated-scene",
        "interactive-scene",
        "shake-phrase",
        "video-grid",
        "track-points",
        "track-game-state"
      ],
      "type": "string"
    },
    "Line": {
      "anyOf": [
        {
          "$ref": "#/definitions/Dialog"
        },
        {
          "$ref": "#/definitions/Performance"
        },
        {
          "type": "null"
        }
      ]
    },
    "PeformanceModeType": {
      "enum": [
        "fit",
        "fix",
        "edit",
        "conflict",
        "use"
      ],
      "type": "string"
    },
    "Performance": {
      "additionalItems": {
        "type": "string"
      },
      "items": [
        {
          "$ref": "#/definitions/PeformanceModeType"
        }
      ],
      "minItems": 1,
      "type": "array"
    },
    "RegionCode": {
      "type": [
        "string"
      ]
    },
    "Scene": {
      "additionalProperties": false,
      "properties": {
        "concept": {
          "$ref": "#/definitions/CharacterName"
        },
        "lines": {
          "items": {
            "$ref": "#/definitions/Line"
          },
          "type": "array"
        },
        "performance": {
          "$ref": "#/definitions/Performance"
        },
        "subtitle": {
          "type": [
            "string",
            "null"
          ]
        },
        "title": {
          "type": "string"
        }
      },
      "required": [
        "title",
        "subtitle",
        "performance",
        "lines"
      ],
      "type": "object"
    },
    "Tutorial": {
      "additionalProperties": false,
      "properties": {
        "$schema": {
          "description": "This is here so that when we generate a JSON schema for a tutorial, the VS Code schema property is allowed *",
          "type": "string"
        },
        "acts": {
          "items": [
            {
              "$ref": "#/definitions/Act%3C%5Bdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%5D%3E"
            },
            {
              "$ref": "#/definitions/Act%3C%5Bdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%5D%3E"
            },
            {
              "$ref": "#/definitions/Act%3C%5Bdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%5D%3E"
            },
            {
              "$ref": "#/definitions/Act%3C%5Bdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%5D%3E"
            },
            {
              "$ref": "#/definitions/Act%3C%5Bdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%5D%3E"
            },
            {
              "$ref": "#/definitions/Act%3C%5Bdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%5D%3E"
            },
            {
              "$ref": "#/definitions/Act%3C%5Bdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%2Cdef-alias-1340420873-1436-1588-1340420873-0-2135%5D%3E"
            },
            {
              "$ref": "#/definitions/Act%3C%5Bdef-alias-1340420873-1436-1588-1340420873-0-2135%5D%3E"
            }
          ],
          "maxItems": 8,
          "minItems": 8,
          "type": "array"
        },
        "language": {
          "enum": [
            "😀",
            "af",
            "am",
            "ar",
            "as",
            "az",
            "ba",
            "be",
            "bg",
            "bn",
            "bo",
            "br",
            "bs",
            "ca",
            "co",
            "cs",
            "cy",
            "da",
            "de",
            "el",
            "en",
            "es",
            "et",
            "eu",
            "fa",
            "fi",
            "fil",
            "fo",
            "fr",
            "fy",
            "ga",
            "gd",
            "gl",
            "gu",
            "ha",
            "he",
            "hi",
            "hr",
            "hu",
            "hy",
            "id",
            "ig",
            "ii",
            "is",
            "it",
            "iu",
            "ja",
            "ka",
            "kk",
            "km",
            "kn",
            "ko",
            "gom",
            "ky",
            "lb",
            "lo",
            "lt",
            "lv",
            "mi",
            "mk",
            "ml",
            "mn",
            "mr",
            "ms",
            "mt",
            "my",
            "ne",
            "nl",
            "no",
            "oc",
            "pa",
            "pl",
            "ps",
            "pt",
            "qu",
            "rm",
            "ro",
            "ru",
            "rw",
            "sa",
            "si",
            "sk",
            "sl",
            "sq",
            "sr",
            "sv",
            "sw",
            "syc",
            "ta",
            "te",
            "tg",
            "th",
            "tl",
            "tn",
            "tr",
            "tt",
            "ug",
            "uk",
            "ur",
            "uz",
            "vi",
            "wo",
            "xh",
            "yo",
            "zh",
            "zu"
          ],
          "type": "string"
        },
        "regions": {
          "items": {
            "$ref": "#/definitions/RegionCode"
          },
          "type": "array"
        }
      },
      "required": [
        "$schema",
        "language",
        "regions",
        "acts"
      ],
      "type": "object"
    }
  }
}