Maze
Games
===start\en
``A maze is a 2D grid of emoji, with some functions for checking the state at particular grid postions.
Mazes are generated randomly.``/en
•Maze() (
	grid: 
		[
			[ '🎬' '❤️' '❌'   ø    ø]
			[ '❤️'   ø    ø    ø    ø]
			[ '🐈' '😀' '💬' '🫥' '😞']
			[   ø  '👍'  ø    ø   '😕']
			[ '🤩' '🥹'  ø   '😫' '😡']
    	]
 
	ƒ cell(row•# column •#) (
		cells: grid[row]
		cells•[] ? cells[column] ø
	)

	ƒ allowed(row•# column•#) cell(row column)•''
)

maze: Maze()

•State(row•# column•# steps•#) 
(
	ƒ down() State(row + 1 column steps + 1)
	ƒ up() State(row - 1 column steps + 1)
	ƒ left() State(row column - 1 steps + 1)
	ƒ right() State(row column + 1 steps + 1)
)

ƒ  allowed(state•State row•# col•#) maze.allowed(state.row + row state.column + col)

direction: Choice()
state•State:  State(1 1 0) … ∆ direction …
		((direction = "left") & allowed(state 0 -1)) ? state.left()
			((direction = "right") & allowed(state 0 1)) ? state.right()
				((direction = "up") & allowed(state -1 0)) ? state.up()
					((direction = "down") & allowed(state 1 0)) ? state.down()
						state

current: ( cell: maze.cell(state.row state.column) cell•ø ? ' ' cell)
up: maze.cell(state.row - 1 state.column)•''
down: maze.cell(state.row + 1 state.column)•''
left: maze.cell(state.row state.column - 1)•''
right: maze.cell(state.row state.column + 1)•''
won: current = '🤩'

Stage(
	[
		Group(
			Grid(3 3 0.25m)
			[
				ø Phrase('↑' name: 'up' selectable: up resting:Pose(opacity: up ? 1 0.2)) ø
				Phrase('←' name: 'left' selectable: left resting:Pose(opacity: left ? 1 0.2))
				Phrase(current resting:won ? 
									Sequence(spin() ⏳: 1s style: 'straight') 
									Pose())
				Phrase('→' name: 'right' selectable: right resting:Pose(opacity: right ? 1 0.2))
				ø Phrase('↓' name: 'down' selectable: down resting:Pose(opacity: down ? 1 0.2)) ø
			]
	  )
	]
  	place: Place(0m 0m -3m)
	face: 'Noto Emoji'
  	background: Color(0 0 0°)
	resting:Pose(Color(100 100 0°))
)